<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class ListAccountExpiredBalances extends TestCase
{
    public function testListAccountExpiredBalances0()
    {
        $client = $this->newClient();
        $request = new Request\ListAccountExpiredBalances(
            "b3ba85b1-2c4c-4f25-a3f3-7db31c9a5f6c"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListAccountExpiredBalances1()
    {
        $client = $this->newClient();
        $request = new Request\ListAccountExpiredBalances(
            "b3ba85b1-2c4c-4f25-a3f3-7db31c9a5f6c",
            [
                'direction' => "desc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListAccountExpiredBalances2()
    {
        $client = $this->newClient();
        $request = new Request\ListAccountExpiredBalances(
            "b3ba85b1-2c4c-4f25-a3f3-7db31c9a5f6c",
            [
                'expires_at_to' => "2024-01-07T23:59:35.000000+09:00",
                'direction' => "desc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListAccountExpiredBalances3()
    {
        $client = $this->newClient();
        $request = new Request\ListAccountExpiredBalances(
            "b3ba85b1-2c4c-4f25-a3f3-7db31c9a5f6c",
            [
                'expires_at_from' => "2022-07-06T04:34:18.000000+09:00",
                'expires_at_to' => "2020-08-11T17:43:56.000000+09:00",
                'direction' => "asc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListAccountExpiredBalances4()
    {
        $client = $this->newClient();
        $request = new Request\ListAccountExpiredBalances(
            "b3ba85b1-2c4c-4f25-a3f3-7db31c9a5f6c",
            [
                'per_page' => 2859,
                'expires_at_from' => "2021-08-09T04:15:32.000000+09:00",
                'expires_at_to' => "2021-10-10T06:01:26.000000+09:00",
                'direction' => "asc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListAccountExpiredBalances5()
    {
        $client = $this->newClient();
        $request = new Request\ListAccountExpiredBalances(
            "b3ba85b1-2c4c-4f25-a3f3-7db31c9a5f6c",
            [
                'page' => 9724,
                'per_page' => 6935,
                'expires_at_from' => "2023-10-05T22:34:20.000000+09:00",
                'expires_at_to' => "2020-11-07T20:31:44.000000+09:00",
                'direction' => "asc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
