<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class ListAccountExpiredBalances extends TestCase
{
    public function testListAccountExpiredBalances0()
    {
        $client = $this->newClient();
        $request = new Request\ListAccountExpiredBalances(
            "2c546996-6018-467a-b748-cc3de0a8a155"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListAccountExpiredBalances1()
    {
        $client = $this->newClient();
        $request = new Request\ListAccountExpiredBalances(
            "2c546996-6018-467a-b748-cc3de0a8a155",
            [
                'direction' => "asc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListAccountExpiredBalances2()
    {
        $client = $this->newClient();
        $request = new Request\ListAccountExpiredBalances(
            "2c546996-6018-467a-b748-cc3de0a8a155",
            [
                'expires_at_to' => "2022-09-04T06:58:03.000000+09:00",
                'direction' => "desc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListAccountExpiredBalances3()
    {
        $client = $this->newClient();
        $request = new Request\ListAccountExpiredBalances(
            "2c546996-6018-467a-b748-cc3de0a8a155",
            [
                'expires_at_from' => "2022-03-07T03:21:32.000000+09:00",
                'expires_at_to' => "2021-01-04T17:29:51.000000+09:00",
                'direction' => "asc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListAccountExpiredBalances4()
    {
        $client = $this->newClient();
        $request = new Request\ListAccountExpiredBalances(
            "2c546996-6018-467a-b748-cc3de0a8a155",
            [
                'per_page' => 9779,
                'expires_at_from' => "2022-06-24T07:28:46.000000+09:00",
                'expires_at_to' => "2022-10-15T09:12:17.000000+09:00",
                'direction' => "desc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListAccountExpiredBalances5()
    {
        $client = $this->newClient();
        $request = new Request\ListAccountExpiredBalances(
            "2c546996-6018-467a-b748-cc3de0a8a155",
            [
                'page' => 7585,
                'per_page' => 4557,
                'expires_at_from' => "2022-02-12T20:05:08.000000+09:00",
                'expires_at_to' => "2023-03-06T06:45:39.000000+09:00",
                'direction' => "asc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
