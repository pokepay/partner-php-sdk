<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class ListAccountExpiredBalances extends TestCase
{
    public function testListAccountExpiredBalances0()
    {
        $client = $this->newClient();
        $request = new Request\ListAccountExpiredBalances(
            "805a931b-1921-4ebd-aa0b-7e7c813a841f"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListAccountExpiredBalances1()
    {
        $client = $this->newClient();
        $request = new Request\ListAccountExpiredBalances(
            "805a931b-1921-4ebd-aa0b-7e7c813a841f",
            [
                'direction' => "asc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListAccountExpiredBalances2()
    {
        $client = $this->newClient();
        $request = new Request\ListAccountExpiredBalances(
            "805a931b-1921-4ebd-aa0b-7e7c813a841f",
            [
                'expires_at_to' => "2023-09-17T05:16:09.000000+09:00",
                'direction' => "desc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListAccountExpiredBalances3()
    {
        $client = $this->newClient();
        $request = new Request\ListAccountExpiredBalances(
            "805a931b-1921-4ebd-aa0b-7e7c813a841f",
            [
                'expires_at_from' => "2023-02-02T02:45:30.000000+09:00",
                'expires_at_to' => "2020-07-03T06:56:24.000000+09:00",
                'direction' => "asc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListAccountExpiredBalances4()
    {
        $client = $this->newClient();
        $request = new Request\ListAccountExpiredBalances(
            "805a931b-1921-4ebd-aa0b-7e7c813a841f",
            [
                'per_page' => 547,
                'expires_at_from' => "2021-07-29T15:52:29.000000+09:00",
                'expires_at_to' => "2022-12-04T10:43:51.000000+09:00",
                'direction' => "desc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListAccountExpiredBalances5()
    {
        $client = $this->newClient();
        $request = new Request\ListAccountExpiredBalances(
            "805a931b-1921-4ebd-aa0b-7e7c813a841f",
            [
                'page' => 5999,
                'per_page' => 3133,
                'expires_at_from' => "2020-08-30T09:06:03.000000+09:00",
                'expires_at_to' => "2022-03-18T06:09:48.000000+09:00",
                'direction' => "desc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
