<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateUserAccount extends TestCase
{
    public function testCreateUserAccount0()
    {
        $client = $this->newClient();
        $request = new Request\CreateUserAccount(
            "e2946751-b86e-49c2-819a-12d8d322fb6a",
            "04504d93-521c-41a2-8392-1273ba5d9f48"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateUserAccount1()
    {
        $client = $this->newClient();
        $request = new Request\CreateUserAccount(
            "e2946751-b86e-49c2-819a-12d8d322fb6a",
            "04504d93-521c-41a2-8392-1273ba5d9f48",
            [
                'metadata' => "{\"key1\":\"foo\",\"key2\":\"bar\"}"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateUserAccount2()
    {
        $client = $this->newClient();
        $request = new Request\CreateUserAccount(
            "e2946751-b86e-49c2-819a-12d8d322fb6a",
            "04504d93-521c-41a2-8392-1273ba5d9f48",
            [
                'external_id' => "LfHqb1WBYt2rZRxOgwBh4CDQxxkN5B8YLc9YqHuPCDzI",
                'metadata' => "{\"key1\":\"foo\",\"key2\":\"bar\"}"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateUserAccount3()
    {
        $client = $this->newClient();
        $request = new Request\CreateUserAccount(
            "e2946751-b86e-49c2-819a-12d8d322fb6a",
            "04504d93-521c-41a2-8392-1273ba5d9f48",
            [
                'name' => "00F9TgFqxnpb5okX2eBxmylcmaCmr2qGiV9JXwnmNtmNX89CamU0sDHlx1fPxnjhTzXClPPlHfJFcYfBD750LGBNYUVIopqCkoEdfSVxpdPb8Uq6ZNQeOOVPJaRTLvdPsGNaG8spwlbozfX64sQLeXQPHdWmde1GhZ9Wh09e45Rp5TswyMit2MGRgiv4xWsVE3FmvuzQgvkmIi9cuL",
                'external_id' => "XJbAHE8TAThJw3ZhRrhg0kU04qgOof",
                'metadata' => "{\"key1\":\"foo\",\"key2\":\"bar\"}"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
