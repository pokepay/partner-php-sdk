<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateUserAccount extends TestCase
{
    public function testCreateUserAccount0()
    {
        $client = $this->newClient();
        $request = new Request\CreateUserAccount(
            "6d6e6c35-e6fa-40a7-98ab-f4747c55362e",
            "05fd6984-028c-4abc-90dd-473e300b7d4a"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateUserAccount1()
    {
        $client = $this->newClient();
        $request = new Request\CreateUserAccount(
            "6d6e6c35-e6fa-40a7-98ab-f4747c55362e",
            "05fd6984-028c-4abc-90dd-473e300b7d4a",
            [
                'metadata' => "{\"key1\":\"foo\",\"key2\":\"bar\"}"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateUserAccount2()
    {
        $client = $this->newClient();
        $request = new Request\CreateUserAccount(
            "6d6e6c35-e6fa-40a7-98ab-f4747c55362e",
            "05fd6984-028c-4abc-90dd-473e300b7d4a",
            [
                'external_id' => "dkneiHnWfRHXwaVdZ9",
                'metadata' => "{\"key1\":\"foo\",\"key2\":\"bar\"}"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateUserAccount3()
    {
        $client = $this->newClient();
        $request = new Request\CreateUserAccount(
            "6d6e6c35-e6fa-40a7-98ab-f4747c55362e",
            "05fd6984-028c-4abc-90dd-473e300b7d4a",
            [
                'name' => "ESeIYaALZlUxqYURHPXFm3hQfxaj0ju24QHRwnRSUVHvotugr8LJMEVNkjZ3sNQFUaJg40ufIYUpD1LdqVMyDMeCBBJ5iHzckauT7AhG3vOIlrnxLjcIuDg9O6tPNPcZPO0HiD1b",
                'external_id' => "0m9lpo7QFFv7Vw9XvByCUNfqDDTuV",
                'metadata' => "{\"key1\":\"foo\",\"key2\":\"bar\"}"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
