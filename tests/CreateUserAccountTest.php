<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateUserAccount extends TestCase
{
    public function testCreateUserAccount0()
    {
        $client = $this->newClient();
        $request = new Request\CreateUserAccount(
            "259c8fcb-14e5-4298-bc2b-cd253f1f824b",
            "57b6afb2-cbc0-41e8-8531-0c7d9fef596e"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateUserAccount1()
    {
        $client = $this->newClient();
        $request = new Request\CreateUserAccount(
            "259c8fcb-14e5-4298-bc2b-cd253f1f824b",
            "57b6afb2-cbc0-41e8-8531-0c7d9fef596e",
            [
                'metadata' => "{\"key1\":\"foo\",\"key2\":\"bar\"}"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateUserAccount2()
    {
        $client = $this->newClient();
        $request = new Request\CreateUserAccount(
            "259c8fcb-14e5-4298-bc2b-cd253f1f824b",
            "57b6afb2-cbc0-41e8-8531-0c7d9fef596e",
            [
                'external_id' => "Xn95yVb6k68Rq49KKsWBPQBfKDthcCOapHG95KxvoqM",
                'metadata' => "{\"key1\":\"foo\",\"key2\":\"bar\"}"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateUserAccount3()
    {
        $client = $this->newClient();
        $request = new Request\CreateUserAccount(
            "259c8fcb-14e5-4298-bc2b-cd253f1f824b",
            "57b6afb2-cbc0-41e8-8531-0c7d9fef596e",
            [
                'name' => "q7imm5ixuSEg2dBv9DOKhTWxYjqGWo8J2HECUgmUmBXnyGC6cqAwxAxJABw3kvxCsBcK4imSbi15WIGWBXFnQDVs8kNxJRxTQt7YdkmdZuoMvJybYeEujSpG1YLNVAWdYnEAU3M",
                'external_id' => "bgkVE",
                'metadata' => "{\"key1\":\"foo\",\"key2\":\"bar\"}"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
