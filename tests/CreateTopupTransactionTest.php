<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTopupTransaction extends TestCase
{
    public function testCreateTopupTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "2f89887a-34d3-4b8f-bb0f-85ef0554db01",
            "f2c54019-0174-40b4-9bac-a84871d63d1f",
            "73c373b9-1e47-4432-91d2-24c130729759"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "2f89887a-34d3-4b8f-bb0f-85ef0554db01",
            "f2c54019-0174-40b4-9bac-a84871d63d1f",
            "73c373b9-1e47-4432-91d2-24c130729759",
            [
                'request_id' => "8a7139d0-935f-47f9-91fe-1c6d721468e5"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "2f89887a-34d3-4b8f-bb0f-85ef0554db01",
            "f2c54019-0174-40b4-9bac-a84871d63d1f",
            "73c373b9-1e47-4432-91d2-24c130729759",
            [
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "12bebf52-1782-4c97-a62e-f1a86afa4fc6"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "2f89887a-34d3-4b8f-bb0f-85ef0554db01",
            "f2c54019-0174-40b4-9bac-a84871d63d1f",
            "73c373b9-1e47-4432-91d2-24c130729759",
            [
                'description' => "OHsPVjb9UCbPcYx5YXiYOW0oa5SUOR88F7Ubd6EIlmfbIWBjq1h3aM3MFSn6Z9Xp0dYAIwKPnm62HiK775FUjJKUwWsCFULHC5xu9xwKzEEFrv0p5VC2XFSxIKMXYPxeKc",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "5a76cd36-21f6-48db-b3bc-5f0e70eb8275"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction4()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "2f89887a-34d3-4b8f-bb0f-85ef0554db01",
            "f2c54019-0174-40b4-9bac-a84871d63d1f",
            "73c373b9-1e47-4432-91d2-24c130729759",
            [
                'point_expires_at' => "2016-08-20T01:52:44.000000+09:00",
                'description' => "aCEMZ2Ju8UbXHSU9E0Qlg3gebvAwjzG8UYapgA4DXNtjsg9PgQkXqYPn4dGIxCAVXu8wPFdMI0g8RX9GwTm1EaeDH0r",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "0e0f61de-7097-4407-b5ee-00699e6fdaf3"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction5()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "2f89887a-34d3-4b8f-bb0f-85ef0554db01",
            "f2c54019-0174-40b4-9bac-a84871d63d1f",
            "73c373b9-1e47-4432-91d2-24c130729759",
            [
                'point_amount' => 2990,
                'point_expires_at' => "2021-02-17T16:15:35.000000+09:00",
                'description' => "A8D7RtvLwRN8QmXijHIyMGxrgTxrmP2c2b7AqdqrRaU4tsNqOUthYSxSa5qYfKcdpEzIZoGgQ8JT7nM2XSRS8qz",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "5a2a4465-2305-4407-a68a-cbcac4f40703"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction6()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "2f89887a-34d3-4b8f-bb0f-85ef0554db01",
            "f2c54019-0174-40b4-9bac-a84871d63d1f",
            "73c373b9-1e47-4432-91d2-24c130729759",
            [
                'money_amount' => 9664,
                'point_amount' => 4875,
                'point_expires_at' => "2021-11-24T21:22:35.000000+09:00",
                'description' => "VaYua2WPHw1UTjf1quigD2l2JnK33Y2PKkmhgdj1RbwEdGAkTKdkwDZEgx5wET5OvQdZofRUOUAciXVcpzKCMcrOD6Emk2wkp2iXzqZDQWG9JIPYO9QhKjYAAaWngq9PQfQxKRvEszf3mWA",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "c3815bc5-b9c8-4e22-86f7-a4cee4d60e61"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction7()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "2f89887a-34d3-4b8f-bb0f-85ef0554db01",
            "f2c54019-0174-40b4-9bac-a84871d63d1f",
            "73c373b9-1e47-4432-91d2-24c130729759",
            [
                'bear_point_shop_id' => "3fd26cdf-3d0a-43e6-b596-ab4682843886",
                'money_amount' => 7781,
                'point_amount' => 7532,
                'point_expires_at' => "2018-01-03T23:07:37.000000+09:00",
                'description' => "7xCAyi0eUz4xXH5OLhVoB1lIuiOfxpiSD0ualUMr1aiXbRr0Yt6Ont0eqhymE",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "59acf811-bf56-438a-bd5c-f6bfb24a7f34"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
