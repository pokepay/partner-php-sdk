<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTopupTransaction extends TestCase
{
    public function testCreateTopupTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "335bba75-60e0-431e-9b35-9b3b6e0a3b1c",
            "be7bd00a-99c3-45ff-9c20-26ec46099f2c",
            "4a3bd8a9-4e9b-4742-951d-c16edd640c4e"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "335bba75-60e0-431e-9b35-9b3b6e0a3b1c",
            "be7bd00a-99c3-45ff-9c20-26ec46099f2c",
            "4a3bd8a9-4e9b-4742-951d-c16edd640c4e",
            [
                'request_id' => "5d1f48f3-b3bd-4825-b147-91091288f174"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "335bba75-60e0-431e-9b35-9b3b6e0a3b1c",
            "be7bd00a-99c3-45ff-9c20-26ec46099f2c",
            "4a3bd8a9-4e9b-4742-951d-c16edd640c4e",
            [
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "ac15d37f-fff7-4df6-869a-b5184b7af6c1"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "335bba75-60e0-431e-9b35-9b3b6e0a3b1c",
            "be7bd00a-99c3-45ff-9c20-26ec46099f2c",
            "4a3bd8a9-4e9b-4742-951d-c16edd640c4e",
            [
                'description' => "jO8SQrjpTlUKU7ix6vD3BTnNcaIv4Cy2qiGNeSDJueWNAF2iLhkB08mWoSEw4Yfnz5e3bjXKldANGzSZe49qKV1rholLnfHAgpNJKDDEjuzSmETPUL6TDRxNmjKWPDEzen9VEh9JKwUlzsxb9tQKSZdMATJHlP3s2aiyvcn732KUY",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "eacfad8f-b770-4276-b000-6f77b375fa57"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction4()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "335bba75-60e0-431e-9b35-9b3b6e0a3b1c",
            "be7bd00a-99c3-45ff-9c20-26ec46099f2c",
            "4a3bd8a9-4e9b-4742-951d-c16edd640c4e",
            [
                'point_expires_at' => "2023-02-03T11:38:34.000000Z",
                'description' => "JTv2DUcmsWBTf3SfgLVNlOhNoRUioebBno3HZhnyN",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "c3c2985a-6a35-4b19-919b-09bbae07df37"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction5()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "335bba75-60e0-431e-9b35-9b3b6e0a3b1c",
            "be7bd00a-99c3-45ff-9c20-26ec46099f2c",
            "4a3bd8a9-4e9b-4742-951d-c16edd640c4e",
            [
                'point_amount' => 4118,
                'point_expires_at' => "2022-03-04T10:25:59.000000Z",
                'description' => "U04aLs4hmy4C28WnCRfz2leovb1R7O6QOgboW2zpcaLxa2QZma6CRo8nyJO9Y3f9djMgk8QSZwJ1udEIb7zDJ6KZTEk0mDRGqd8jGihF2zo2GN3QYDG6CZS1PVe5LZzi2NmWBluHrzflOytN",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "a6e7bfdc-401f-43bc-985d-34e41fed6cb3"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction6()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "335bba75-60e0-431e-9b35-9b3b6e0a3b1c",
            "be7bd00a-99c3-45ff-9c20-26ec46099f2c",
            "4a3bd8a9-4e9b-4742-951d-c16edd640c4e",
            [
                'money_amount' => 4434,
                'point_amount' => 810,
                'point_expires_at' => "2023-04-19T10:06:51.000000Z",
                'description' => "nMfAHnX3LOs6P3dxLhDjrt4CFESWJnPCLUxGLtrgoghS3pPHE574eeX1ks",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "863896c8-5cb4-4152-b24d-c209ffa39367"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction7()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "335bba75-60e0-431e-9b35-9b3b6e0a3b1c",
            "be7bd00a-99c3-45ff-9c20-26ec46099f2c",
            "4a3bd8a9-4e9b-4742-951d-c16edd640c4e",
            [
                'bear_point_shop_id' => "e182b608-fd79-45d7-a4bf-bab626f635fa",
                'money_amount' => 5169,
                'point_amount' => 8116,
                'point_expires_at' => "2023-03-23T14:29:13.000000Z",
                'description' => "RZmQUgzecqWdDVSstoEtPVoykbtA6l7WDayqQLAKXyhWYdlIHfSBBKI1KQl4cK6HLes",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "daaeae93-14ef-4aa3-8e37-569fe6361d41"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
