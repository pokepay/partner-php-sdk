<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTopupTransaction extends TestCase
{
    public function testCreateTopupTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "0042e76b-d368-43ef-b58f-5579f184439d",
            "ee0ca6cf-d7b5-4545-8a51-1aae68e6f847",
            "f0343a27-8724-49f0-a28d-498e6a90892e"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "0042e76b-d368-43ef-b58f-5579f184439d",
            "ee0ca6cf-d7b5-4545-8a51-1aae68e6f847",
            "f0343a27-8724-49f0-a28d-498e6a90892e",
            [
                'request_id' => "732506af-7bb9-467e-85a9-e3c1825edec8"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "0042e76b-d368-43ef-b58f-5579f184439d",
            "ee0ca6cf-d7b5-4545-8a51-1aae68e6f847",
            "f0343a27-8724-49f0-a28d-498e6a90892e",
            [
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "c4a6286b-d336-4903-9546-1e3158848055"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "0042e76b-d368-43ef-b58f-5579f184439d",
            "ee0ca6cf-d7b5-4545-8a51-1aae68e6f847",
            "f0343a27-8724-49f0-a28d-498e6a90892e",
            [
                'description' => "Uyw97H5Wi0UlM5",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "9d98c068-9457-4a0d-92ef-fd8a5cb7a58b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction4()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "0042e76b-d368-43ef-b58f-5579f184439d",
            "ee0ca6cf-d7b5-4545-8a51-1aae68e6f847",
            "f0343a27-8724-49f0-a28d-498e6a90892e",
            [
                'point_expires_at' => "2023-03-27T22:34:24.000000Z",
                'description' => "q8fm3Qj",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "953e2877-b972-4fd5-a4ca-6fc40b962bd3"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction5()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "0042e76b-d368-43ef-b58f-5579f184439d",
            "ee0ca6cf-d7b5-4545-8a51-1aae68e6f847",
            "f0343a27-8724-49f0-a28d-498e6a90892e",
            [
                'point_amount' => 2102,
                'point_expires_at' => "2024-08-05T18:59:23.000000Z",
                'description' => "QIEgbGEOQG1PZp7fjd91zgh1RHHtL55R7YEprCJ0U4QnLZWmGvTqLQwaZ9vOnv67spoRoPKUgWvYVa3Gv9xbfzvgScohGvfvszFZKZ0fsirdyb8N5N4uLXeppDXZ9aq2pYugtiiL7qWoYElT",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "1ffc59cb-719a-4ced-a205-7c22cebf315a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction6()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "0042e76b-d368-43ef-b58f-5579f184439d",
            "ee0ca6cf-d7b5-4545-8a51-1aae68e6f847",
            "f0343a27-8724-49f0-a28d-498e6a90892e",
            [
                'money_amount' => 6238,
                'point_amount' => 3525,
                'point_expires_at' => "2024-09-01T14:37:14.000000Z",
                'description' => "v7OKUa8NeEnF41oUMWRj1sxtSyQgT1GkRhboXHY39x3Xs6KbKOjUQYLsphxNcJXceDU7",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "7a76de30-dccb-4f52-9bc7-25d562fc7830"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction7()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "0042e76b-d368-43ef-b58f-5579f184439d",
            "ee0ca6cf-d7b5-4545-8a51-1aae68e6f847",
            "f0343a27-8724-49f0-a28d-498e6a90892e",
            [
                'bear_point_shop_id' => "c33465fc-3087-4432-852c-d6d4f139247f",
                'money_amount' => 8220,
                'point_amount' => 3021,
                'point_expires_at' => "2022-06-19T03:47:49.000000Z",
                'description' => "3p5BruF5QOJx8zwWTQtwhgEUQrpqVtFI20RqU84wWVej7",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "2c6e76cb-397f-426a-9719-a9a7ee0d6120"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
