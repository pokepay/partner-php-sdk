<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTopupTransaction extends TestCase
{
    public function testCreateTopupTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "b7440b02-1408-4b1a-849e-5b9a8fa837c3",
            "618a4962-c1ff-4bcb-8948-2694aa62a8f5",
            "dc9d2b0c-61ba-429d-b305-64b290476a30"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "b7440b02-1408-4b1a-849e-5b9a8fa837c3",
            "618a4962-c1ff-4bcb-8948-2694aa62a8f5",
            "dc9d2b0c-61ba-429d-b305-64b290476a30",
            [
                'request_id' => "5bf802b6-dc44-40df-b172-0ee2fec86017"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "b7440b02-1408-4b1a-849e-5b9a8fa837c3",
            "618a4962-c1ff-4bcb-8948-2694aa62a8f5",
            "dc9d2b0c-61ba-429d-b305-64b290476a30",
            [
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "4304e5f7-1f14-4381-98bf-098d1f32e8db"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "b7440b02-1408-4b1a-849e-5b9a8fa837c3",
            "618a4962-c1ff-4bcb-8948-2694aa62a8f5",
            "dc9d2b0c-61ba-429d-b305-64b290476a30",
            [
                'description' => "DzAT60gkpBrGssao8T8dvyz71EbjgNQkdBq",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "fb2d4939-5f9d-4b7e-8503-85956066daed"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction4()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "b7440b02-1408-4b1a-849e-5b9a8fa837c3",
            "618a4962-c1ff-4bcb-8948-2694aa62a8f5",
            "dc9d2b0c-61ba-429d-b305-64b290476a30",
            [
                'point_expires_at' => "2021-05-01T23:23:19.000000+09:00",
                'description' => "nZizEYzfeWym0V2YMwkoiUulN",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "2e2f1617-04f3-472f-9f04-3552c16c1b2c"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction5()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "b7440b02-1408-4b1a-849e-5b9a8fa837c3",
            "618a4962-c1ff-4bcb-8948-2694aa62a8f5",
            "dc9d2b0c-61ba-429d-b305-64b290476a30",
            [
                'point_amount' => 4765,
                'point_expires_at' => "2023-02-02T05:28:17.000000+09:00",
                'description' => "Yd8vOsoLYJDKYWYfuwrkFbfcKHIlvVEKLo5xc3Imw6LxwM8",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "a592f345-463b-48da-9aa4-fed399ac6263"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction6()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "b7440b02-1408-4b1a-849e-5b9a8fa837c3",
            "618a4962-c1ff-4bcb-8948-2694aa62a8f5",
            "dc9d2b0c-61ba-429d-b305-64b290476a30",
            [
                'money_amount' => 8825,
                'point_amount' => 9626,
                'point_expires_at' => "2020-12-23T16:11:02.000000+09:00",
                'description' => "XsSN1J",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "520b1ab6-1009-4ce1-95b9-41161c7d7374"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction7()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "b7440b02-1408-4b1a-849e-5b9a8fa837c3",
            "618a4962-c1ff-4bcb-8948-2694aa62a8f5",
            "dc9d2b0c-61ba-429d-b305-64b290476a30",
            [
                'bear_point_shop_id' => "d935551a-b1a4-4df6-8cb5-49d99bc72449",
                'money_amount' => 5328,
                'point_amount' => 8127,
                'point_expires_at' => "2020-08-28T09:56:24.000000+09:00",
                'description' => "rA8YK7ixFnTKiBQt8P0ZeW7IMeuFTVECKT27UhbR2rPMT2dQlmegxYnD7W3OzHYZD",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "86ccb2c4-369b-4c01-ba59-2295657aeb73"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
