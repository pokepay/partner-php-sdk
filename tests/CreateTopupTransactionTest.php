<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTopupTransaction extends TestCase
{
    public function testCreateTopupTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "4b713e91-e8aa-4620-a87e-bdefd519a162",
            "122e609d-666a-4efa-8e18-f3a9e902a551",
            "96ce3556-f057-44b3-a814-93d060f3be1c"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "4b713e91-e8aa-4620-a87e-bdefd519a162",
            "122e609d-666a-4efa-8e18-f3a9e902a551",
            "96ce3556-f057-44b3-a814-93d060f3be1c",
            [
                'request_id' => "0fe82d8a-f51d-4ca8-9ab0-70d6a03ce5e5"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "4b713e91-e8aa-4620-a87e-bdefd519a162",
            "122e609d-666a-4efa-8e18-f3a9e902a551",
            "96ce3556-f057-44b3-a814-93d060f3be1c",
            [
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "a0b09bb0-147e-4972-8e33-c791b19ef486"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "4b713e91-e8aa-4620-a87e-bdefd519a162",
            "122e609d-666a-4efa-8e18-f3a9e902a551",
            "96ce3556-f057-44b3-a814-93d060f3be1c",
            [
                'description' => "Em7q1SjNjatjjDZX7RIKgDX3b9oA14",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "101c6b80-830e-418d-860b-4b32d4df9df8"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction4()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "4b713e91-e8aa-4620-a87e-bdefd519a162",
            "122e609d-666a-4efa-8e18-f3a9e902a551",
            "96ce3556-f057-44b3-a814-93d060f3be1c",
            [
                'point_expires_at' => "2023-04-23T06:24:20.000000+09:00",
                'description' => "kpis0qy5MfISyoLqEQKhMnAGBrL3KeptreugpuZPDhn3kvKQdinTisU7JGahMN0pspm5VBpWaMfH3OlTb5uoxVylmhf3ESdF0EHZGgpE19g89rUgV81h6fR4XXAReVSL8MjPf2nDJncUb7prKqWXHoSFTkZLdy8B9WWqNr",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "90b06f58-35d6-40a9-850e-54d86d8662a9"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction5()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "4b713e91-e8aa-4620-a87e-bdefd519a162",
            "122e609d-666a-4efa-8e18-f3a9e902a551",
            "96ce3556-f057-44b3-a814-93d060f3be1c",
            [
                'point_amount' => 1481,
                'point_expires_at' => "2018-01-26T19:28:23.000000+09:00",
                'description' => "TqwqzVsahBGWwps3iARDJTRZkOOEQFC19Wtss23YjQBh",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "9af377c8-d1a4-456f-ba2b-355c3c171465"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction6()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "4b713e91-e8aa-4620-a87e-bdefd519a162",
            "122e609d-666a-4efa-8e18-f3a9e902a551",
            "96ce3556-f057-44b3-a814-93d060f3be1c",
            [
                'money_amount' => 6617,
                'point_amount' => 1610,
                'point_expires_at' => "2016-08-28T12:11:24.000000+09:00",
                'description' => "V02y90GWowMI3ASCsApxBJptaJJRDQ6YTYkiFEIISprQ3cmpI6bh8YrVsWGSghDCw1Un7nnaTSFczRArCskatgTSAk3a8TcT02JvhzyAvEG",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "e0138ed2-8af7-412f-9dc8-881b88e6f0bd"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction7()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "4b713e91-e8aa-4620-a87e-bdefd519a162",
            "122e609d-666a-4efa-8e18-f3a9e902a551",
            "96ce3556-f057-44b3-a814-93d060f3be1c",
            [
                'bear_point_shop_id' => "d8555db1-9ce7-43aa-ae40-a2ace984eca6",
                'money_amount' => 8049,
                'point_amount' => 2062,
                'point_expires_at' => "2019-08-27T20:20:59.000000+09:00",
                'description' => "bzapcrIrLur4lrAgRY4qmYCDpX8Ny7Ex4zLyYmVuuwRZjnfSOf90ILh1FnEv5pCv1ztILSktq1cNxb1w0fAXCRcSE6z5QHSLVITcWyXkWwNeThLpKI1N6RIMY7t0u9T",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "d3935d00-b4f5-47d2-b5b4-83ab7c25dd5a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
