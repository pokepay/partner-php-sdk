<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTopupTransaction extends TestCase
{
    public function testCreateTopupTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "79bccbc0-bcc8-46ae-971f-d1953793df0b",
            "807f5134-f16a-4568-98f7-5fb470714f92",
            "20c9ec79-ea49-4759-8a12-3ef261720355"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "79bccbc0-bcc8-46ae-971f-d1953793df0b",
            "807f5134-f16a-4568-98f7-5fb470714f92",
            "20c9ec79-ea49-4759-8a12-3ef261720355",
            [
                'request_id' => "8bc76dd9-076d-4d72-ab2e-2a0b7917e6d9"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "79bccbc0-bcc8-46ae-971f-d1953793df0b",
            "807f5134-f16a-4568-98f7-5fb470714f92",
            "20c9ec79-ea49-4759-8a12-3ef261720355",
            [
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "82b25130-7820-4124-9f0b-8f1359fe82e3"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "79bccbc0-bcc8-46ae-971f-d1953793df0b",
            "807f5134-f16a-4568-98f7-5fb470714f92",
            "20c9ec79-ea49-4759-8a12-3ef261720355",
            [
                'description' => "MM9XThJB2kEtaPDt4cbfWZIsCybdiYXZnhnhWDwoyiBg21cLD9NpthCR6Tpj3DJYCTn7Mo5KJMnOCADbEPdXJNUfIMjL5LzyUaUqzXMe4TD2FXNyo8HyU4znVXTGQjhEVH4RD9h7k5Be4HyFO4dMT",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "74f00d45-821b-4329-b034-0c0621b5f363"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction4()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "79bccbc0-bcc8-46ae-971f-d1953793df0b",
            "807f5134-f16a-4568-98f7-5fb470714f92",
            "20c9ec79-ea49-4759-8a12-3ef261720355",
            [
                'point_expires_at' => "2020-02-04T22:37:11.000000+09:00",
                'description' => "UgQVLsqkNfDCKSxUm6xb7pU6qSDBqV9FE6CXuXYxZeXZ7uoloWSzExl5i2FIkR8rP9",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "287c1df9-3909-415e-95e0-9e5a650279ec"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction5()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "79bccbc0-bcc8-46ae-971f-d1953793df0b",
            "807f5134-f16a-4568-98f7-5fb470714f92",
            "20c9ec79-ea49-4759-8a12-3ef261720355",
            [
                'point_amount' => 5838,
                'point_expires_at' => "2021-08-01T05:43:27.000000+09:00",
                'description' => "XvpudC",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "1e951894-c175-495d-af1e-a0514e8ae020"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction6()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "79bccbc0-bcc8-46ae-971f-d1953793df0b",
            "807f5134-f16a-4568-98f7-5fb470714f92",
            "20c9ec79-ea49-4759-8a12-3ef261720355",
            [
                'money_amount' => 2585,
                'point_amount' => 1482,
                'point_expires_at' => "2021-04-26T16:19:57.000000+09:00",
                'description' => "evxX7LKLuMR8dRcE5F4Y20T3ptnZLK5qfnu3SDKErJlC9hpMzWb9smKtWcNLoRabEGP3vObSIN6n2gFC2zsZoGkFxzAftcSsxqeOWbzr3SfMWLTKx2eZ0uAWlfM08a3WKPcUHuMK6qMhhQKa9OdFwx",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "8cd76c97-919f-4bda-821c-6c9a2c26c582"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction7()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "79bccbc0-bcc8-46ae-971f-d1953793df0b",
            "807f5134-f16a-4568-98f7-5fb470714f92",
            "20c9ec79-ea49-4759-8a12-3ef261720355",
            [
                'bear_point_shop_id' => "c4a62177-fcbc-4bc5-81f8-e8b67da3f203",
                'money_amount' => 55,
                'point_amount' => 195,
                'point_expires_at' => "2023-07-11T17:22:49.000000+09:00",
                'description' => "DGnO5p4bMpWt1lFeJcXl4xintqpJpt",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "b7078767-bace-4413-80de-cd2eba56cc27"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
