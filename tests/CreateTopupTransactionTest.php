<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTopupTransaction extends TestCase
{
    public function testCreateTopupTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "cc6c7e42-a0be-401d-9151-32db41509496",
            "3d4731e3-9bfb-43e5-9908-52f45876732c",
            "e94ebddc-630b-4bac-bfd3-de23b94faaef"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "cc6c7e42-a0be-401d-9151-32db41509496",
            "3d4731e3-9bfb-43e5-9908-52f45876732c",
            "e94ebddc-630b-4bac-bfd3-de23b94faaef",
            [
                'request_id' => "b486124d-f4c3-4920-a63e-cf9e0f4011e4"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "cc6c7e42-a0be-401d-9151-32db41509496",
            "3d4731e3-9bfb-43e5-9908-52f45876732c",
            "e94ebddc-630b-4bac-bfd3-de23b94faaef",
            [
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "cb3a37f9-e3d0-4897-abb9-7d84b0c65795"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "cc6c7e42-a0be-401d-9151-32db41509496",
            "3d4731e3-9bfb-43e5-9908-52f45876732c",
            "e94ebddc-630b-4bac-bfd3-de23b94faaef",
            [
                'description' => "3zgCtVuIFBqhcseNikPrDgCmHG8vikmFgrytVm463lqwzMNAaG9bsltmpBg",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "c9227ad9-7566-4ade-880f-144e624f8b81"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction4()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "cc6c7e42-a0be-401d-9151-32db41509496",
            "3d4731e3-9bfb-43e5-9908-52f45876732c",
            "e94ebddc-630b-4bac-bfd3-de23b94faaef",
            [
                'point_expires_at' => "2021-02-14T19:08:05.000000+09:00",
                'description' => "ATN3QeovsGABE6S29ugS2y1GaG8ZpC0XFOMwXbpPHJpJLIu2dZND3hmZ8SK3bABOEonXWu6UAKD2mn0mbl4JlqUOJWDDckmlqOA0GEe8OUDiOMBg3a8ZDqZf55MpshKZcfl4dQPvtLE0cwqc8POqfxISdeGrtt0hjKiFldbTZYJN2VXCE7IKHdKXt",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "623872fe-1dbe-4a07-8b9a-e279957aec13"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction5()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "cc6c7e42-a0be-401d-9151-32db41509496",
            "3d4731e3-9bfb-43e5-9908-52f45876732c",
            "e94ebddc-630b-4bac-bfd3-de23b94faaef",
            [
                'point_amount' => 7209,
                'point_expires_at' => "2022-08-21T13:58:56.000000+09:00",
                'description' => "MKlAlSwi7sBOg5iCuJ7VMHWo9QjZkEZHL6X7yTYi4IQldH8YVYfYTVzqthYVqcdJqZpsWClLie8XtWLywqRF3zuIz",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "a2b9e994-0a2d-4a30-901e-0359b2ba73fd"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction6()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "cc6c7e42-a0be-401d-9151-32db41509496",
            "3d4731e3-9bfb-43e5-9908-52f45876732c",
            "e94ebddc-630b-4bac-bfd3-de23b94faaef",
            [
                'money_amount' => 1757,
                'point_amount' => 1611,
                'point_expires_at' => "2021-05-20T11:21:58.000000+09:00",
                'description' => "Fr7IEUtetulKM7ZSPEjYSpUepPA5VsVd3bq7yqDJr4vC47NH1s9ATWfHxipD2V",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "e8d0b034-b6c9-4169-bba6-ec25bdfa59cb"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction7()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "cc6c7e42-a0be-401d-9151-32db41509496",
            "3d4731e3-9bfb-43e5-9908-52f45876732c",
            "e94ebddc-630b-4bac-bfd3-de23b94faaef",
            [
                'bear_point_shop_id' => "22c182d3-31d1-4cb3-a743-a9dea43bb945",
                'money_amount' => 4550,
                'point_amount' => 8720,
                'point_expires_at' => "2020-12-14T07:23:01.000000+09:00",
                'description' => "wYe4581ka50TDJbBJyhYmpkCeVCfc9LIImeNeX4djmJxENCYUW1jeiYtdbpRmwnDRqM0MIEM1l1YZevVaN8uQlEY8xEWXP1ntU6j4UNjNm3RjXWF35emHcZuWrjyUrrTQnTmkx",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "555dfcc4-8bf9-4e39-ad83-d6f848f1e24f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
