<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTopupTransaction extends TestCase
{
    public function testCreateTopupTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "1ab63957-28f6-469b-992d-5babc333d21b",
            "e0eaf756-9705-4513-bfdd-41a01c99ea3e",
            "828591fe-a607-41e1-af1e-f1337b002d47"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "1ab63957-28f6-469b-992d-5babc333d21b",
            "e0eaf756-9705-4513-bfdd-41a01c99ea3e",
            "828591fe-a607-41e1-af1e-f1337b002d47",
            [
                'request_id' => "5bcac3a7-45f6-4f8a-acb9-2b0815fe82f8"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "1ab63957-28f6-469b-992d-5babc333d21b",
            "e0eaf756-9705-4513-bfdd-41a01c99ea3e",
            "828591fe-a607-41e1-af1e-f1337b002d47",
            [
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "44e402e2-f666-4112-ba82-a5de35a1e328"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "1ab63957-28f6-469b-992d-5babc333d21b",
            "e0eaf756-9705-4513-bfdd-41a01c99ea3e",
            "828591fe-a607-41e1-af1e-f1337b002d47",
            [
                'description' => "vgScohGvfvszFZKZ0fsirdyb8N5N4uLXeppDXZ9aq2pYugtiiL7qWoYElTKmZkEzCv7OKUa8NeEnF41oUMWRj1sxtSyQgT1GkRhboXHY39x3Xs6KbKOjUQYLsphxNcJXc",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "ef979665-ff1f-4bc4-a9af-5d55fe2005fe"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction4()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "1ab63957-28f6-469b-992d-5babc333d21b",
            "e0eaf756-9705-4513-bfdd-41a01c99ea3e",
            "828591fe-a607-41e1-af1e-f1337b002d47",
            [
                'point_expires_at' => "2020-05-07T03:46:10.000000Z",
                'description' => "70KRGU02ETtMe3p5BruF5QOJx8zwWTQtwhgEUQrpqVtFI20RqU84wWVej7KjR7PO79YOuc2btzI2HvKaIy1dRKuzOlLMmdBSZr220xtZpZdQ9ssluYJHAlylPpV6xWxt7f2oLFlgp2lLhVbHghg4l",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "9e86db5b-d725-40da-8e53-15aebae898d6"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction5()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "1ab63957-28f6-469b-992d-5babc333d21b",
            "e0eaf756-9705-4513-bfdd-41a01c99ea3e",
            "828591fe-a607-41e1-af1e-f1337b002d47",
            [
                'point_amount' => 1784,
                'point_expires_at' => "2020-03-06T06:48:56.000000Z",
                'description' => "qYiDQPFv2xIXm",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "7e33e549-d7b4-49d0-a7ec-c13a756c6a50"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction6()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "1ab63957-28f6-469b-992d-5babc333d21b",
            "e0eaf756-9705-4513-bfdd-41a01c99ea3e",
            "828591fe-a607-41e1-af1e-f1337b002d47",
            [
                'money_amount' => 1014,
                'point_amount' => 6051,
                'point_expires_at' => "2024-11-06T03:07:37.000000Z",
                'description' => "odipyOhBLvJd18F7msVClYIZ6Bq4ZCm153pAwidsKM1ZphpLhv7NIoqmlJpzKOYIsRtFF9xx8GHcZXN3Xa70o7nFXURkjCcagg1x0DCy4shXKR7nTWCyIt3Gr6ubUQRiycmsaOa8T2aG0PP6tnqHnu",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "6bdb906f-379c-4293-95c9-38904234f5cc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction7()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "1ab63957-28f6-469b-992d-5babc333d21b",
            "e0eaf756-9705-4513-bfdd-41a01c99ea3e",
            "828591fe-a607-41e1-af1e-f1337b002d47",
            [
                'bear_point_shop_id' => "94a3bb0e-d04f-4292-a9fa-197fa4d67076",
                'money_amount' => 7782,
                'point_amount' => 3914,
                'point_expires_at' => "2021-01-18T15:28:12.000000Z",
                'description' => "Trh0kbVP56HQVtzlq6MKoBezSZGJZ1h8km3mkAPAZ0UMnnwlo100h7H4BT2IdLeJZDTCEki4ZW2q7YUbIlt759XkPd0Pd9Lm5F7",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "1f313dd8-be6d-4f70-af60-17222eb9b471"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
