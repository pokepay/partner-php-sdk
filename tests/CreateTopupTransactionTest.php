<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTopupTransaction extends TestCase
{
    public function testCreateTopupTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "51c7add4-cdf1-448e-ae06-c24ed826d28d",
            "1930bc66-7b53-403e-9e02-46d25ff33469",
            "9d25f7d8-8206-4095-8c77-0d1a89f3b820"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "51c7add4-cdf1-448e-ae06-c24ed826d28d",
            "1930bc66-7b53-403e-9e02-46d25ff33469",
            "9d25f7d8-8206-4095-8c77-0d1a89f3b820",
            [
                'request_id' => "82dcfeb6-bc49-4a58-bd7d-aa785206a28d"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "51c7add4-cdf1-448e-ae06-c24ed826d28d",
            "1930bc66-7b53-403e-9e02-46d25ff33469",
            "9d25f7d8-8206-4095-8c77-0d1a89f3b820",
            [
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "eb184385-8def-41e0-a634-4d0f5c103d4e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "51c7add4-cdf1-448e-ae06-c24ed826d28d",
            "1930bc66-7b53-403e-9e02-46d25ff33469",
            "9d25f7d8-8206-4095-8c77-0d1a89f3b820",
            [
                'description' => "bX72yEerLNEKMYsRf9vriYiP8HndtLKgFWIeB413C8zcpa0a0ipu",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "9e71daad-0acc-49f4-b349-7dd154f1964b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction4()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "51c7add4-cdf1-448e-ae06-c24ed826d28d",
            "1930bc66-7b53-403e-9e02-46d25ff33469",
            "9d25f7d8-8206-4095-8c77-0d1a89f3b820",
            [
                'point_expires_at' => "2022-10-10T10:39:13.000000Z",
                'description' => "Hb",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "ddc93afc-af24-4636-a6e9-2b6bf9b56fa7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction5()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "51c7add4-cdf1-448e-ae06-c24ed826d28d",
            "1930bc66-7b53-403e-9e02-46d25ff33469",
            "9d25f7d8-8206-4095-8c77-0d1a89f3b820",
            [
                'point_amount' => 4526,
                'point_expires_at' => "2021-06-14T21:36:22.000000Z",
                'description' => "U3XBigR3jya01cL7edhmrVi5NIsblUeDquiQL8YRreNoLAWMJdywYSICt",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "cc3c3fd9-98e3-49e2-90c8-187b2cb5a3dc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction6()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "51c7add4-cdf1-448e-ae06-c24ed826d28d",
            "1930bc66-7b53-403e-9e02-46d25ff33469",
            "9d25f7d8-8206-4095-8c77-0d1a89f3b820",
            [
                'money_amount' => 2442,
                'point_amount' => 6322,
                'point_expires_at' => "2023-09-21T16:58:21.000000Z",
                'description' => "ktF16gpa54attROZcBbejZS9wdnnNKINI7vj8qEDPsdJ8JkL6K4fbUtzmymsdzvhUXmrc210VozYCz4wR9Gfv1ooHMcqzJF0zVNZ8zHF5mnetJol0g7uhhZVwBBSB9NQuG198o4cE8ye8xi",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "ad2f9e23-c243-4d70-b472-56401978677e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction7()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "51c7add4-cdf1-448e-ae06-c24ed826d28d",
            "1930bc66-7b53-403e-9e02-46d25ff33469",
            "9d25f7d8-8206-4095-8c77-0d1a89f3b820",
            [
                'bear_point_shop_id' => "a3ea2e99-cc38-482b-a858-151a624d8b14",
                'money_amount' => 2323,
                'point_amount' => 5155,
                'point_expires_at' => "2020-06-25T01:12:49.000000Z",
                'description' => "QSs9cvMVMzYpfEHHq4AVCPhpFJVl2NE9OohrFLhvABt92YjeNGkeRyZCxDwnyuzPdWfYw482S6oHFsZh",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "455bed39-19ac-4dbe-abad-dbbdeb3be4af"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
