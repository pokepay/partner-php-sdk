<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTopupTransaction extends TestCase
{
    public function testCreateTopupTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "96499986-3c2b-4313-965f-e28d00dccdb9",
            "7ca49b5d-13fc-43f1-ba69-e70e8f40d8b8",
            "1f6e3fbc-1ec8-4ac6-baab-38f8167dacda"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "96499986-3c2b-4313-965f-e28d00dccdb9",
            "7ca49b5d-13fc-43f1-ba69-e70e8f40d8b8",
            "1f6e3fbc-1ec8-4ac6-baab-38f8167dacda",
            [
                'request_id' => "c49303f4-ae0e-43c3-8fbd-5f00972e2635"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "96499986-3c2b-4313-965f-e28d00dccdb9",
            "7ca49b5d-13fc-43f1-ba69-e70e8f40d8b8",
            "1f6e3fbc-1ec8-4ac6-baab-38f8167dacda",
            [
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "3841e406-3b8e-4ca8-a079-da5e1837b570"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "96499986-3c2b-4313-965f-e28d00dccdb9",
            "7ca49b5d-13fc-43f1-ba69-e70e8f40d8b8",
            "1f6e3fbc-1ec8-4ac6-baab-38f8167dacda",
            [
                'description' => "TU2Y6m10oazOnSDRVBADkHpYoJtK8deELoxPb8vCqW8ZrqfNGAkbzmAIS",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "bc37860c-a363-4ae6-b1b8-ccca4c465e88"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction4()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "96499986-3c2b-4313-965f-e28d00dccdb9",
            "7ca49b5d-13fc-43f1-ba69-e70e8f40d8b8",
            "1f6e3fbc-1ec8-4ac6-baab-38f8167dacda",
            [
                'point_expires_at' => "2021-01-03T04:16:06.000000+09:00",
                'description' => "bwsUjFhr3NwoEyag2SfuJiolnAr0O5BazmKqHUlvI3TLRDU2wR06BrqE4xR4GA8B6QEvmEtQTqfIDfhF08aWAgYKgMRg4eijui0x4AzukqXii06wz9NdLnaFp0d8NnYZXWwwPUfmYGEVrOM4dkj0diMGxwkBMFBNKhTrr",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "7eaf27c7-d8eb-4220-ad08-edaffa658fc7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction5()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "96499986-3c2b-4313-965f-e28d00dccdb9",
            "7ca49b5d-13fc-43f1-ba69-e70e8f40d8b8",
            "1f6e3fbc-1ec8-4ac6-baab-38f8167dacda",
            [
                'point_amount' => 6870,
                'point_expires_at' => "2016-12-25T03:11:53.000000+09:00",
                'description' => "z7dW1L5JRcqWGZoB7J2SLBuVTFPFKYeglUQAESlFenRvUgW2C0Pk55puUaBmR66mDvQf3SzEAz6sFhOXUyleHUBygYLLJFfbbjnOxn1Ii4QyBabDj1sJ7k6dP6L13ja9VovumOjMgFfs83kBz",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "0a9b34d3-2b8f-433b-8fef-db01f2c54019"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction6()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "96499986-3c2b-4313-965f-e28d00dccdb9",
            "7ca49b5d-13fc-43f1-ba69-e70e8f40d8b8",
            "1f6e3fbc-1ec8-4ac6-baab-38f8167dacda",
            [
                'money_amount' => 372,
                'point_amount' => 4276,
                'point_expires_at' => "2023-01-02T14:18:11.000000+09:00",
                'description' => "9G2QRAYPymeRfFOHsPVjb9UCbPcYx5YXiYOW0oa5SUOR88F7Ubd6EIlmfbIWBjq1h3aM3MFSn",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "1417e536-7921-4c5a-a239-539d82972cfe"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction7()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "96499986-3c2b-4313-965f-e28d00dccdb9",
            "7ca49b5d-13fc-43f1-ba69-e70e8f40d8b8",
            "1f6e3fbc-1ec8-4ac6-baab-38f8167dacda",
            [
                'bear_point_shop_id' => "3c47f02f-b0d8-4198-9b03-db70e8598630",
                'money_amount' => 8164,
                'point_amount' => 9739,
                'point_expires_at' => "2020-07-14T19:10:39.000000+09:00",
                'description' => "KPnm62HiK775FUjJKUwWsCFULHC5xu9xwKzEEFrv0p5VC2XFSxIKMXYPxeKc6v3uyZaCEMZ2Ju8UbXHSU9E0Qlg3gebvAwjzG8UYapgA4DXNtjsg9PgQkXqY",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "56c98a9c-df50-469c-a90c-49fe2d004511"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
