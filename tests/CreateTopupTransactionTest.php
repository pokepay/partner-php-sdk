<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTopupTransaction extends TestCase
{
    public function testCreateTopupTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "5b6f4f4f-dc7f-49ff-93a1-8aa1e836d3c8",
            "989595b1-47fc-4a9b-9a60-81555acf2794",
            "a34eedee-035d-4e80-8b0e-e2936f1efd81"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "5b6f4f4f-dc7f-49ff-93a1-8aa1e836d3c8",
            "989595b1-47fc-4a9b-9a60-81555acf2794",
            "a34eedee-035d-4e80-8b0e-e2936f1efd81",
            [
                'request_id' => "004b06be-8e5e-4e97-b44d-50421add1a8e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "5b6f4f4f-dc7f-49ff-93a1-8aa1e836d3c8",
            "989595b1-47fc-4a9b-9a60-81555acf2794",
            "a34eedee-035d-4e80-8b0e-e2936f1efd81",
            [
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "15fca087-b4c9-447d-9ca5-492b123a3b60"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "5b6f4f4f-dc7f-49ff-93a1-8aa1e836d3c8",
            "989595b1-47fc-4a9b-9a60-81555acf2794",
            "a34eedee-035d-4e80-8b0e-e2936f1efd81",
            [
                'description' => "hfh6LdjarwH7PvsHw8ubJu5O7EgxbKfYIHXNDrejpqnr4KJB4UkNhiO2n6ZbDE6i2Bj2HpO7zzuhxiBdT3S23FQupaJP257ZY9dqx0Z3piXa1yg7B6NMLFKOYAjiEocgrQazHFjCX0f1KSudN56liYM9MTJjU9iU8RHiCw2Fn5nKIr",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "7df5fc6f-d2e7-4e65-a22d-16c2e4ff0b90"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction4()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "5b6f4f4f-dc7f-49ff-93a1-8aa1e836d3c8",
            "989595b1-47fc-4a9b-9a60-81555acf2794",
            "a34eedee-035d-4e80-8b0e-e2936f1efd81",
            [
                'point_expires_at' => "2022-09-22T11:36:02.000000+09:00",
                'description' => "P53lku2L5YQOrJK8iN0jroPiZBLMgDEsSnt9tLOkyYKfRGepRpg",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "a64ecb30-f10b-442f-bf7e-7b3955d28cbb"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction5()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "5b6f4f4f-dc7f-49ff-93a1-8aa1e836d3c8",
            "989595b1-47fc-4a9b-9a60-81555acf2794",
            "a34eedee-035d-4e80-8b0e-e2936f1efd81",
            [
                'point_amount' => 7768,
                'point_expires_at' => "2020-09-20T05:28:59.000000+09:00",
                'description' => "jP7vplsKJnhYnzS5LySWFbiBcdGcqZPYMaNc945qAmIvBQhWIiAOsrbccJXAfHuBAHGi6TWQiSo8C00RY522YDDOTOX6X7iAQsNmxyBNLmHcUPwahkHiNE1haDRd0t9anrzzbc92UEw80bjEGiXgxHuujwKqyTTM1Jgt9BIU5HeJlUdarv71",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "b06ccded-9200-4eed-8f33-51d1a34c8559"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction6()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "5b6f4f4f-dc7f-49ff-93a1-8aa1e836d3c8",
            "989595b1-47fc-4a9b-9a60-81555acf2794",
            "a34eedee-035d-4e80-8b0e-e2936f1efd81",
            [
                'money_amount' => 482,
                'point_amount' => 8490,
                'point_expires_at' => "2023-09-28T20:18:58.000000+09:00",
                'description' => "OpwkhGTN974RB9LdAY8NeyCdwSvJeY57KZDj",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "30d05097-ca8c-4c24-8815-c46212310035"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction7()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "5b6f4f4f-dc7f-49ff-93a1-8aa1e836d3c8",
            "989595b1-47fc-4a9b-9a60-81555acf2794",
            "a34eedee-035d-4e80-8b0e-e2936f1efd81",
            [
                'bear_point_shop_id' => "dbe0d5dc-bc87-4bee-9fc2-1a24fc726f35",
                'money_amount' => 1246,
                'point_amount' => 8209,
                'point_expires_at' => "2022-11-19T22:55:33.000000+09:00",
                'description' => "i2sxyNEjQVM75LH986ZljL4tTPbOxYoVO6PirYVDFwf2Wvq8zPcDYBzKBmCnrar3KkH5",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "6d74038c-fbe2-4ed3-b667-94fede3eb505"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
