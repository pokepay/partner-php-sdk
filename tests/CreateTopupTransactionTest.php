<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTopupTransaction extends TestCase
{
    public function testCreateTopupTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "fcb0bd16-6b06-4a4f-8301-fc15d32dcc20",
            "c27ae896-6555-426e-8542-e1d6c261d77c",
            "a6ae709a-892a-4c04-b1c0-11777271002e"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "fcb0bd16-6b06-4a4f-8301-fc15d32dcc20",
            "c27ae896-6555-426e-8542-e1d6c261d77c",
            "a6ae709a-892a-4c04-b1c0-11777271002e",
            [
                'description' => "l8i3xQfqNGTjhBSpAIG2GVjRLCF7S26ypTzMExe5LQXN3"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "fcb0bd16-6b06-4a4f-8301-fc15d32dcc20",
            "c27ae896-6555-426e-8542-e1d6c261d77c",
            "a6ae709a-892a-4c04-b1c0-11777271002e",
            [
                'point_expires_at' => "2015-12-16T22:34:01.000000+09:00",
                'description' => "fMMeaiTEdRlgPRLO6iu4xB9p9hHVjuFskSUixLpvflY8MFYZJvlfPZ9XRs2DjUex8FZcru468uiy2IBQsKNbECUonyUv3nTPZ701h3V5Qywi2pn04JUSx"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "fcb0bd16-6b06-4a4f-8301-fc15d32dcc20",
            "c27ae896-6555-426e-8542-e1d6c261d77c",
            "a6ae709a-892a-4c04-b1c0-11777271002e",
            [
                'point_amount' => 7978,
                'point_expires_at' => "2022-10-19T16:21:46.000000+09:00",
                'description' => "7eVHz2wOx9gOffBCzdPD5lY5ruzs73QnlHzwGBVLp2Vmg3eprOU7ktZcHWsZTpEtZX9770nlSO8H2DCl6imPJgn2XjYsZUpQvLebh65Hdtxmvs4SwxRthVVayjO1th3s3e6fayZ2E32vm3RMvvWttu1PJb3d04IfskzbR"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction4()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "fcb0bd16-6b06-4a4f-8301-fc15d32dcc20",
            "c27ae896-6555-426e-8542-e1d6c261d77c",
            "a6ae709a-892a-4c04-b1c0-11777271002e",
            [
                'money_amount' => 4243,
                'point_amount' => 8483,
                'point_expires_at' => "2020-01-11T13:01:56.000000+09:00",
                'description' => "Jqy1UyPaGHVkyMSdmemZcovbEU"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction5()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "fcb0bd16-6b06-4a4f-8301-fc15d32dcc20",
            "c27ae896-6555-426e-8542-e1d6c261d77c",
            "a6ae709a-892a-4c04-b1c0-11777271002e",
            [
                'bear_point_shop_id' => "69a5ab96-4de3-4596-b9d4-a369fe058105",
                'money_amount' => 2708,
                'point_amount' => 1492,
                'point_expires_at' => "2018-11-30T22:48:13.000000+09:00",
                'description' => "lo8JS6mIVfCl8O6XTpGUPEJOaNnRanlNyuKHWuXq7zEzVgAAIhzrVmMQ7zQf4j1Xlnx61iQEXBdwXQXBx9CjvSgZke3VuPIIBeUSxLQqoj9SXP9EgDJcoagTJNb42JvVKNsj3zA7Dw0uibv6O0nFaLFwVLIZnC6rDyYuuG"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
