<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTopupTransaction extends TestCase
{
    public function testCreateTopupTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "63089947-89bd-40a8-8f8a-9bd764d85af7",
            "079996f0-1df3-4b33-80e9-8ac1708d2ad2",
            "1d8882a3-7e44-484a-a0d4-f48757f0131c"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "63089947-89bd-40a8-8f8a-9bd764d85af7",
            "079996f0-1df3-4b33-80e9-8ac1708d2ad2",
            "1d8882a3-7e44-484a-a0d4-f48757f0131c",
            [
                'request_id' => "4f8d2d2b-117c-4c52-9aa9-0f9a520ffd2e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "63089947-89bd-40a8-8f8a-9bd764d85af7",
            "079996f0-1df3-4b33-80e9-8ac1708d2ad2",
            "1d8882a3-7e44-484a-a0d4-f48757f0131c",
            [
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "83f576fc-6cab-4995-9d8b-f86b58115da9"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "63089947-89bd-40a8-8f8a-9bd764d85af7",
            "079996f0-1df3-4b33-80e9-8ac1708d2ad2",
            "1d8882a3-7e44-484a-a0d4-f48757f0131c",
            [
                'description' => "OEQFC19Wtss23YjQBhHozeYJjV02y90GWowMI3ASCsApxBJptaJJRDQ6YTYkiFEIISprQ3cmpI6bh8Yr",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "de578e60-2bd6-4cf3-94aa-dfa1f8bce857"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction4()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "63089947-89bd-40a8-8f8a-9bd764d85af7",
            "079996f0-1df3-4b33-80e9-8ac1708d2ad2",
            "1d8882a3-7e44-484a-a0d4-f48757f0131c",
            [
                'point_expires_at' => "2019-03-06T07:37:37.000000+09:00",
                'description' => "ghDCw",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "1d340d31-5a24-4287-afd5-19ee545d2eb7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction5()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "63089947-89bd-40a8-8f8a-9bd764d85af7",
            "079996f0-1df3-4b33-80e9-8ac1708d2ad2",
            "1d8882a3-7e44-484a-a0d4-f48757f0131c",
            [
                'point_amount' => 3610,
                'point_expires_at' => "2021-09-15T10:27:02.000000+09:00",
                'description' => "naTSFczRArCskatgTSAk3a8TcT02JvhzyAvEGRwH1gqt79bzapcrIrLur4lrAgRY4qmYCDpX8Ny7Ex4zLyYmVuuwRZjnfSOf90ILh1FnEv5pCv1ztILSktq1cNxb1w0fAXCRcSE6z5Q",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "49cbaf87-79c8-4510-931f-3d3ba6afdb1d"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction6()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "63089947-89bd-40a8-8f8a-9bd764d85af7",
            "079996f0-1df3-4b33-80e9-8ac1708d2ad2",
            "1d8882a3-7e44-484a-a0d4-f48757f0131c",
            [
                'money_amount' => 3798,
                'point_amount' => 6880,
                'point_expires_at' => "2023-03-14T05:06:25.000000+09:00",
                'description' => "WyXkWwNeThLpKI1N6RIMY7t0u9TuR54ZsbCHGDImjW34z4jE8W9hhkpYWEzZLn5uyvbNkfkqdGOYba42tK1ETZVrimXQx2toEzw7",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "ef29559f-f8da-4ab1-a78b-4acd34982036"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction7()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "63089947-89bd-40a8-8f8a-9bd764d85af7",
            "079996f0-1df3-4b33-80e9-8ac1708d2ad2",
            "1d8882a3-7e44-484a-a0d4-f48757f0131c",
            [
                'bear_point_shop_id' => "82f05f66-8dde-4abd-a798-e77894a516b4",
                'money_amount' => 8845,
                'point_amount' => 5237,
                'point_expires_at' => "2018-12-16T18:30:27.000000+09:00",
                'description' => "jyIUvTVKqmlOa23scUcryj4GBWTbDzAVeKXVTyNRu",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "df3bc176-9a4e-4a41-a910-1bd5caaed78e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
