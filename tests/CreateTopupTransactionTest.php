<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTopupTransaction extends TestCase
{
    public function testCreateTopupTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "62a4dd0b-72f8-4606-b88f-9a08261142ff",
            "ac4b87bb-7b3c-437e-a54a-eea5d979c5c7",
            "d03c19a6-eadf-488d-8f7e-db658b1cb918"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "62a4dd0b-72f8-4606-b88f-9a08261142ff",
            "ac4b87bb-7b3c-437e-a54a-eea5d979c5c7",
            "d03c19a6-eadf-488d-8f7e-db658b1cb918",
            [
                'request_id' => "81383d81-4401-4ed8-a3b0-2624ec821d36"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "62a4dd0b-72f8-4606-b88f-9a08261142ff",
            "ac4b87bb-7b3c-437e-a54a-eea5d979c5c7",
            "d03c19a6-eadf-488d-8f7e-db658b1cb918",
            [
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "9eaf9617-213e-4dc7-9905-5a0dce1a4061"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "62a4dd0b-72f8-4606-b88f-9a08261142ff",
            "ac4b87bb-7b3c-437e-a54a-eea5d979c5c7",
            "d03c19a6-eadf-488d-8f7e-db658b1cb918",
            [
                'description' => "zbHRMFEFTvVJNMvpnmmszWO8x46faTjNZu04CZlTKGItTmwVU6lhrbbJcgPWXFaRBad8wyATE3s9pSBYQSwdEe70cqbQwq2SD",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "f80b6e22-982c-46db-8229-c2b728943a84"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction4()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "62a4dd0b-72f8-4606-b88f-9a08261142ff",
            "ac4b87bb-7b3c-437e-a54a-eea5d979c5c7",
            "d03c19a6-eadf-488d-8f7e-db658b1cb918",
            [
                'point_expires_at' => "2021-04-28T11:04:05.000000+09:00",
                'description' => "iW1UHBfwEMlD0KKVAP5vyP1z6TfjxrjnqMrWmvUt7EfW55RnnAw2olacqyaBjqj3hMFpBqP1errksDpECKsQZgvVB9300l5fanLjnLpxV0NH2pd5joWjlN0aIhbsvLcDbSnXxaht2yTLO591HWrIKLxjfXgnNs8fsesZyYki71mSY4ZRPWfeV",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "100b1543-e22e-4f6e-804e-4ba1f4a2d7b3"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction5()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "62a4dd0b-72f8-4606-b88f-9a08261142ff",
            "ac4b87bb-7b3c-437e-a54a-eea5d979c5c7",
            "d03c19a6-eadf-488d-8f7e-db658b1cb918",
            [
                'point_amount' => 2898,
                'point_expires_at' => "2023-06-01T16:03:58.000000+09:00",
                'description' => "jzzBM6I",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "7a554192-276e-4003-b56b-8e15ff2b2ede"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction6()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "62a4dd0b-72f8-4606-b88f-9a08261142ff",
            "ac4b87bb-7b3c-437e-a54a-eea5d979c5c7",
            "d03c19a6-eadf-488d-8f7e-db658b1cb918",
            [
                'money_amount' => 8116,
                'point_amount' => 2572,
                'point_expires_at' => "2022-09-05T17:38:01.000000+09:00",
                'description' => "nSUtXUR6HzKBMzZkDcCH4CttVwhDQvmgfGmEfB8sVC93Xu7lraPFR8Um5EizXWZAFlTKm2NnsNZZEmJ9Kp7tmNWcBhHZHeQ851FBPxty8vJdQGQbhACwdrzscvy8b8atkIO4MqAtYlTIayo2NskV6Ck8XMo8FSTrMnbIjq1",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "1b5e6d34-8e74-4a70-887a-343f79a3caa2"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction7()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "62a4dd0b-72f8-4606-b88f-9a08261142ff",
            "ac4b87bb-7b3c-437e-a54a-eea5d979c5c7",
            "d03c19a6-eadf-488d-8f7e-db658b1cb918",
            [
                'bear_point_shop_id' => "fe0d0e28-5e80-4b71-96e7-377ab28f6393",
                'money_amount' => 5153,
                'point_amount' => 1841,
                'point_expires_at' => "2023-10-02T22:38:35.000000+09:00",
                'description' => "otOlk2a4w8WTsQv92lwkRWRy6M6cUpJcrM7jZHKe2sirX1LX7BqSLBkfVhwTuUBbNYXn7QwQGV2uHGchjBm89ToR2PESzji1H9qTFLN5rn2jyV50gGyOeOIsGN7yx7ySZ",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "1b36bedf-3e47-40d4-8eb5-c1c5b34a26e3"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
