<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTopupTransaction extends TestCase
{
    public function testCreateTopupTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "e01aaeb4-e64f-4e68-9689-a32335d28fed",
            "147574d1-b884-49c1-a6dc-388b97873a13",
            "dbddc33a-ef46-480c-82dc-7b0fa9d38d76"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "e01aaeb4-e64f-4e68-9689-a32335d28fed",
            "147574d1-b884-49c1-a6dc-388b97873a13",
            "dbddc33a-ef46-480c-82dc-7b0fa9d38d76",
            [
                'request_id' => "5c372680-54d6-42fd-8813-5f7b21d778a5"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "e01aaeb4-e64f-4e68-9689-a32335d28fed",
            "147574d1-b884-49c1-a6dc-388b97873a13",
            "dbddc33a-ef46-480c-82dc-7b0fa9d38d76",
            [
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "26d7ff17-95f4-4652-9cb4-fc95855cd346"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "e01aaeb4-e64f-4e68-9689-a32335d28fed",
            "147574d1-b884-49c1-a6dc-388b97873a13",
            "dbddc33a-ef46-480c-82dc-7b0fa9d38d76",
            [
                'description' => "5En7ms3KrOq6LmEP7tafjyhKgvwh227cUJMuQ1t83oitBAmKCKeNp7Z6KeHafoOKYuUs7zf9dIsiva1vYlz4sIXfB3ep9eHnNy54z9YZjsWtY1WGlub",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "e4a7b363-40ae-48e6-9db8-4bf0feed0c6f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction4()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "e01aaeb4-e64f-4e68-9689-a32335d28fed",
            "147574d1-b884-49c1-a6dc-388b97873a13",
            "dbddc33a-ef46-480c-82dc-7b0fa9d38d76",
            [
                'point_expires_at' => "2022-10-27T09:26:32.000000+09:00",
                'description' => "5gFI1eD4xOb3KkBBLymzX1iKABzsalQh9et3sJPwGPZVdfeHb6D60qr",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "24c3c51f-5bd2-484b-aa7f-d7e3f975fff9"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction5()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "e01aaeb4-e64f-4e68-9689-a32335d28fed",
            "147574d1-b884-49c1-a6dc-388b97873a13",
            "dbddc33a-ef46-480c-82dc-7b0fa9d38d76",
            [
                'point_amount' => 6756,
                'point_expires_at' => "2023-12-15T14:44:55.000000+09:00",
                'description' => "Qf1kjgylUDTK4jhJH0jAjNW1ZH6MoDDkoySCP",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "a57f9dbd-89cb-4495-aa8e-5882b31e24ee"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction6()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "e01aaeb4-e64f-4e68-9689-a32335d28fed",
            "147574d1-b884-49c1-a6dc-388b97873a13",
            "dbddc33a-ef46-480c-82dc-7b0fa9d38d76",
            [
                'money_amount' => 3356,
                'point_amount' => 4933,
                'point_expires_at' => "2023-05-01T10:53:27.000000+09:00",
                'description' => "WYebt4RUGRqT3wcuceySCabxrgTXSxZbg1Ud9jBS9CQqv6T7eIQXHJd8SnpNPnO39WNWvjXlHUhCIHkbLQ7KL6y3Sdoxdn1tpYM1z5XMrmRY7bQCW9sPYWAKIaPAnlgG8mho7qKjeP1Vs1el3",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "a65a88f4-3f7c-4e56-9844-bd85a99c4eed"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction7()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "e01aaeb4-e64f-4e68-9689-a32335d28fed",
            "147574d1-b884-49c1-a6dc-388b97873a13",
            "dbddc33a-ef46-480c-82dc-7b0fa9d38d76",
            [
                'bear_point_shop_id' => "1f100674-6a10-4f11-bcbd-da7ac0d0e25c",
                'money_amount' => 5146,
                'point_amount' => 4016,
                'point_expires_at' => "2022-01-31T09:51:43.000000+09:00",
                'description' => "qcHqLIsXtLIzc5kRp3WnRoU2x23XKfAMBShU6I6qbRRo0KsKQjbIFpDLYbMMvlh9JCT1xGcQLRIyKzcfWhCzi1Z89pSvPCqCpyLyZq50fssjoNHBAUn0qZzCUWIZlu3nVCPUHg3HpQOkzK7LlGZ5l2",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "8cd62a63-8e9c-425f-bf96-86514a22774c"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
