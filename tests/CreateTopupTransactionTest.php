<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTopupTransaction extends TestCase
{
    public function testCreateTopupTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "5ce9f3e9-8ac1-4ad2-a344-484afe90b3e0",
            "d12132d4-f487-431c-ab7c-5c521e36d1da",
            "cc1506a9-0f9a-4d2e-bcab-6995d32b835d"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "5ce9f3e9-8ac1-4ad2-a344-484afe90b3e0",
            "d12132d4-f487-431c-ab7c-5c521e36d1da",
            "cc1506a9-0f9a-4d2e-bcab-6995d32b835d",
            [
                'request_id' => "dd046f8b-f86b-4da9-8f84-5e923cf3651a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "5ce9f3e9-8ac1-4ad2-a344-484afe90b3e0",
            "d12132d4-f487-431c-ab7c-5c521e36d1da",
            "cc1506a9-0f9a-4d2e-bcab-6995d32b835d",
            [
                'metadata' => "'{\"key\":\"value\"}'",
                'request_id' => "ccc4567c-f19c-474f-ae90-89c5cc365ed1"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "5ce9f3e9-8ac1-4ad2-a344-484afe90b3e0",
            "d12132d4-f487-431c-ab7c-5c521e36d1da",
            "cc1506a9-0f9a-4d2e-bcab-6995d32b835d",
            [
                'description' => "FC19Wtss23YjQBhHozeYJjV02y90GWowMI3ASCsApxBJptaJJRDQ6YTYkiFE",
                'metadata' => "'{\"key\":\"value\"}'",
                'request_id' => "c616b05f-b049-471f-8953-798ef5f450bb"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction4()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "5ce9f3e9-8ac1-4ad2-a344-484afe90b3e0",
            "d12132d4-f487-431c-ab7c-5c521e36d1da",
            "cc1506a9-0f9a-4d2e-bcab-6995d32b835d",
            [
                'point_expires_at' => "2018-04-01T17:51:18.000000+09:00",
                'description' => "cmpI6bh8YrVsWGSghDCw1Un7nnaTSFczRArCskatgTSAk3a8TcT0",
                'metadata' => "'{\"key\":\"value\"}'",
                'request_id' => "9a3600a5-9232-444a-b668-49bca79330e0"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction5()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "5ce9f3e9-8ac1-4ad2-a344-484afe90b3e0",
            "d12132d4-f487-431c-ab7c-5c521e36d1da",
            "cc1506a9-0f9a-4d2e-bcab-6995d32b835d",
            [
                'point_amount' => 3834,
                'point_expires_at' => "2019-11-13T00:59:25.000000+09:00",
                'description' => "AvEGRwH1gqt79bzapcrIrLur4lrAgRY4qmYCDpX8Ny7Ex4zLyYmVuuwRZjnfSOf90ILh1FnEv5pCv1ztILSktq1cNxb1w0fAXCRcSE6z5QHSLVITcWyXkWwNeThLpKI",
                'metadata' => "'{\"key\":\"value\"}'",
                'request_id' => "df87b1b1-52ad-490c-a94e-fb97f9f23903"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction6()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "5ce9f3e9-8ac1-4ad2-a344-484afe90b3e0",
            "d12132d4-f487-431c-ab7c-5c521e36d1da",
            "cc1506a9-0f9a-4d2e-bcab-6995d32b835d",
            [
                'money_amount' => 1821,
                'point_amount' => 4150,
                'point_expires_at' => "2023-12-17T21:32:10.000000+09:00",
                'description' => "MY7t0u9TuR54ZsbCHGDImjW34z4jE8W9hhkpYWEzZLn5uyvbNkfkqdGOYba42tK1ETZVrimXQx",
                'metadata' => "'{\"key\":\"value\"}'",
                'request_id' => "af9fab8c-da10-4232-96bc-2adbca638d74"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction7()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "5ce9f3e9-8ac1-4ad2-a344-484afe90b3e0",
            "d12132d4-f487-431c-ab7c-5c521e36d1da",
            "cc1506a9-0f9a-4d2e-bcab-6995d32b835d",
            [
                'bear_point_shop_id' => "908e14ef-ecc5-4b9f-a4fa-977d9d93abf7",
                'money_amount' => 6839,
                'point_amount' => 5535,
                'point_expires_at' => "2019-11-28T07:43:42.000000+09:00",
                'description' => "M6fgx4uEjyIUvTVKqmlOa23scUcryj4GBWTbDzAVeKXVTyNRuvNAUp6ljdawfubjQ03lDRu1dHypEu4pqRk9KXyywxfAsvQQw8eNXwtPfKAW4UwDxtqXzHNdytk1inQrWiktMK0FHLyL",
                'metadata' => "'{\"key\":\"value\"}'",
                'request_id' => "ee78db99-4b6e-4d1e-b6dc-5dfae699e054"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
