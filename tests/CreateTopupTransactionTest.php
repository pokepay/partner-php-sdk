<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTopupTransaction extends TestCase
{
    public function testCreateTopupTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "6da01c20-d03e-4221-b4eb-e4af22dc13dc",
            "1cdfa084-85b1-4f99-9c06-09e99f062caf",
            "a093a4dc-da6e-4260-ab2c-24d17011f9aa"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "6da01c20-d03e-4221-b4eb-e4af22dc13dc",
            "1cdfa084-85b1-4f99-9c06-09e99f062caf",
            "a093a4dc-da6e-4260-ab2c-24d17011f9aa",
            [
                'request_id' => "419e8a17-63f2-447b-9769-b7ebe2579d40"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "6da01c20-d03e-4221-b4eb-e4af22dc13dc",
            "1cdfa084-85b1-4f99-9c06-09e99f062caf",
            "a093a4dc-da6e-4260-ab2c-24d17011f9aa",
            [
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "01bf3c74-e24d-4284-9d93-789f49eab28b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "6da01c20-d03e-4221-b4eb-e4af22dc13dc",
            "1cdfa084-85b1-4f99-9c06-09e99f062caf",
            "a093a4dc-da6e-4260-ab2c-24d17011f9aa",
            [
                'description' => "K0FHLyLnvzTdFf0Y1JODoBhEEJFs7RURiJHf6mnglgKA3t551AWYy2EKxgIvudVQKM3ivlyVYA6fe68jtm2G7nC3SW8MPeFKTYT7eEYLwvHQFKDImV0W8uMWRziTXMumFeaEHdh8PePo",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "10083b2b-1dcd-4421-9c7d-1991ae9a8080"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction4()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "6da01c20-d03e-4221-b4eb-e4af22dc13dc",
            "1cdfa084-85b1-4f99-9c06-09e99f062caf",
            "a093a4dc-da6e-4260-ab2c-24d17011f9aa",
            [
                'point_expires_at' => "2022-09-07T05:49:14.000000+09:00",
                'description' => "nAEmuUL6pb761IWS7zT3jmF3XMzgKDKO5o6UqQsbMF41dYUnemzRdROKbGph7rDrumGN6tQ3vZwFKRF7w7plclcWB9bNRwQ0LABzLS5AginlSJbgCOpN21Ez",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "821be759-2cfd-4c1a-b685-959795b54598"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction5()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "6da01c20-d03e-4221-b4eb-e4af22dc13dc",
            "1cdfa084-85b1-4f99-9c06-09e99f062caf",
            "a093a4dc-da6e-4260-ab2c-24d17011f9aa",
            [
                'point_amount' => 5685,
                'point_expires_at' => "2023-07-16T11:54:58.000000+09:00",
                'description' => "3e8C68gL6nh3hboA1Va",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "c81a23d8-e551-4171-9e23-7dd933acd091"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction6()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "6da01c20-d03e-4221-b4eb-e4af22dc13dc",
            "1cdfa084-85b1-4f99-9c06-09e99f062caf",
            "a093a4dc-da6e-4260-ab2c-24d17011f9aa",
            [
                'money_amount' => 4732,
                'point_amount' => 890,
                'point_expires_at' => "2022-04-19T07:28:35.000000+09:00",
                'description' => "7H8v5OYX2Bb7kgjpYtpWxkJ26TN1VktFjJy7P4SbKkoz4u4vqNtkYjPXUyJ1V0r5CHRNT2ecfLdc33OSn94wpSCBGnb27KI1Ko9Ro9P2UOPHKcZd7kJ0a09BOfpTrIxahzBDxgf0eAPjokEVHRFLghiMn2sJjV2bGnLruRc9c27Gpu7iWb08U",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "2d043ee2-928f-4549-9858-ede60f677d61"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction7()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "6da01c20-d03e-4221-b4eb-e4af22dc13dc",
            "1cdfa084-85b1-4f99-9c06-09e99f062caf",
            "a093a4dc-da6e-4260-ab2c-24d17011f9aa",
            [
                'bear_point_shop_id' => "61542cfa-2ec9-4589-9a57-176fa045c3e7",
                'money_amount' => 4700,
                'point_amount' => 7780,
                'point_expires_at' => "2023-04-19T22:43:44.000000+09:00",
                'description' => "xJNEfM7ZphEzx62f8FNzaDel7ro4JT6XY3",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "5374f43e-5b14-4059-9db3-c8959f351484"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
