<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTopupTransaction extends TestCase
{
    public function testCreateTopupTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "8cf94e77-3e36-459a-890c-f7763cf13e53",
            "11468625-f776-4b5d-bc64-6951097d38ca",
            "4080d37f-023b-41f2-bac8-6639e47abad6"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "8cf94e77-3e36-459a-890c-f7763cf13e53",
            "11468625-f776-4b5d-bc64-6951097d38ca",
            "4080d37f-023b-41f2-bac8-6639e47abad6",
            [
                'request_id' => "51080fe3-1312-4221-9e30-f386d6442c4c"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "8cf94e77-3e36-459a-890c-f7763cf13e53",
            "11468625-f776-4b5d-bc64-6951097d38ca",
            "4080d37f-023b-41f2-bac8-6639e47abad6",
            [
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "6a404c39-129c-4ba3-9b3a-32fb25b2605a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "8cf94e77-3e36-459a-890c-f7763cf13e53",
            "11468625-f776-4b5d-bc64-6951097d38ca",
            "4080d37f-023b-41f2-bac8-6639e47abad6",
            [
                'description' => "v5xY0ZJPKTJcTJlFGxbqul3u",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "4c529c77-3c8d-4a88-a786-9b733bdb2146"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction4()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "8cf94e77-3e36-459a-890c-f7763cf13e53",
            "11468625-f776-4b5d-bc64-6951097d38ca",
            "4080d37f-023b-41f2-bac8-6639e47abad6",
            [
                'point_expires_at' => "2022-08-23T15:12:56.000000+09:00",
                'description' => "QC5rZjT71VSETl7YsUAKAccBkdMZZALMfGm6Q",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "37656fc5-aab0-46dd-b8eb-e48a383d12fc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction5()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "8cf94e77-3e36-459a-890c-f7763cf13e53",
            "11468625-f776-4b5d-bc64-6951097d38ca",
            "4080d37f-023b-41f2-bac8-6639e47abad6",
            [
                'point_amount' => 544,
                'point_expires_at' => "2021-12-03T01:49:41.000000+09:00",
                'description' => "ZY3i2u1YoPvonGBPT8SL9gpREzJ2A1oewDT0kzVcXNcROuAAOD5eGWkSQjkAQOu0yA4BjvdD90LeShtnwbfREVHtQbVEwhhaucXmO4c5KAfQ50jpTw5jjcFo0rR4z0zJiyYaTqNoxyHNTTYGmPyzW75t4VwJs8uz8IoLLM5GqoUPw6rEOyn",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "edaf9b7b-eee8-44af-83f6-7bb57aa76cba"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction6()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "8cf94e77-3e36-459a-890c-f7763cf13e53",
            "11468625-f776-4b5d-bc64-6951097d38ca",
            "4080d37f-023b-41f2-bac8-6639e47abad6",
            [
                'money_amount' => 8491,
                'point_amount' => 8775,
                'point_expires_at' => "2021-11-06T22:08:02.000000+09:00",
                'description' => "k5CHgTIB9FpL0YsYhcF06caAHB0CU7rFUzcd0jeIJxYgRKXDgRbJCaPC6E5X1B4DlTO8thJ2XIi5hl0E8y1El7CazAbg8RTyoEuh6M1FmBFmAcZUqXqqEQTV8Xa6BtbvAwPiWBOgu1Yx",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "e610258c-83ef-4d92-b2a5-0e2e2ca65284"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTopupTransaction7()
    {
        $client = $this->newClient();
        $request = new Request\CreateTopupTransaction(
            "8cf94e77-3e36-459a-890c-f7763cf13e53",
            "11468625-f776-4b5d-bc64-6951097d38ca",
            "4080d37f-023b-41f2-bac8-6639e47abad6",
            [
                'bear_point_shop_id' => "aa037693-cba2-43b2-8fb0-81b5502df66f",
                'money_amount' => 8973,
                'point_amount' => 4501,
                'point_expires_at' => "2021-04-11T21:11:49.000000+09:00",
                'description' => "clgaXNxJXMDTvJ218ZrpY9qyucV2cs0qMFY4YkGjV0EPSukBJJj5saJ8SQpT3KDepWgvlfunov4bwbKmSR1y9vdTSLzpteCfuUpl2ydOkPDYJ3QuNwPRxSf5mrN3jxNLk9vkonVuoGtAzlO2ikMy9uHqua718cA7ihmN90",
                'metadata' => "{\"key\":\"value\"}",
                'request_id' => "b9bb5c2e-a94d-47f5-b99d-3be8ffa51d15"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
