<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class UpdateCustomerAccount extends TestCase
{
    public function testUpdateCustomerAccount0()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCustomerAccount(
            "4cd34e2c-63d4-498c-b27a-aed8d308861a"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCustomerAccount1()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCustomerAccount(
            "4cd34e2c-63d4-498c-b27a-aed8d308861a",
            [
                'metadata' => "{\"key1\":\"foo\",\"key2\":\"bar\"}"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCustomerAccount2()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCustomerAccount(
            "4cd34e2c-63d4-498c-b27a-aed8d308861a",
            [
                'external_id' => "QY",
                'metadata' => "{\"key1\":\"foo\",\"key2\":\"bar\"}"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCustomerAccount3()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCustomerAccount(
            "4cd34e2c-63d4-498c-b27a-aed8d308861a",
            [
                'account_name' => "DyRb4tqKolqMgdRHskFZ317m16rSuV3GWqnvnIS00nrMnQNFRYYqQB2LOvvxaJWdM6RyNE08AoCyr23XqnSacLmBXCHDyWfJbD0iY7FmSIIJxWwKBqcUUGOv4rpZxW6",
                'external_id' => "1o0z",
                'metadata' => "{\"key1\":\"foo\",\"key2\":\"bar\"}"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCustomerAccount4()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCustomerAccount(
            "4cd34e2c-63d4-498c-b27a-aed8d308861a",
            [
                'status' => "pre-closed",
                'account_name' => "vPKHwlN5cgpKhTDjrt62aO0gTJKvsFX8pCgUNdYXQChONhwWGHDaQRstzyfCMC6r4ZI5zg9bDUlUJBBIg9Fd6Y7e4aTjbZiLOaWRsEnzqZ6lGrz0tQnP1Co4x4AXMvzQhY1JlrHqbdULcyqcFghqKIiyi3aAuG",
                'external_id' => "WsNdhyWJyqrPAKmmZGZJNC4j2",
                'metadata' => "{\"key1\":\"foo\",\"key2\":\"bar\"}"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
