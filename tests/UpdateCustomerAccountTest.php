<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class UpdateCustomerAccount extends TestCase
{
    public function testUpdateCustomerAccount0()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCustomerAccount(
            "7a37eccd-500a-46ef-92c8-e133684e0267"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCustomerAccount1()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCustomerAccount(
            "7a37eccd-500a-46ef-92c8-e133684e0267",
            [
                'metadata' => "{\"key1\":\"foo\",\"key2\":\"bar\"}"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCustomerAccount2()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCustomerAccount(
            "7a37eccd-500a-46ef-92c8-e133684e0267",
            [
                'external_id' => "KZufQbBxPYZiwM4u0ZRF7k7fOK2ahQ",
                'metadata' => "{\"key1\":\"foo\",\"key2\":\"bar\"}"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCustomerAccount3()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCustomerAccount(
            "7a37eccd-500a-46ef-92c8-e133684e0267",
            [
                'account_name' => "7sQ3kUdg5mgoWa75Y4ytp4IDDPuOQC79Vokglp5YaiuITyQMPVTCe92m1KGFFSnnJr0AKluhRSTVodKKTtnIGb0YDGd6cxWqMvH2mhOK0OK653tishJp8wSHVmgpzUAtk9CBIhGV7X4QIRfKkNHvOR3LiZzlh4PRT3ROFoesH4iU5CObZsKg3Q83cWGQiapOHjAYFHXbiTrHZlrM6F6CNThRa",
                'external_id' => "up",
                'metadata' => "{\"key1\":\"foo\",\"key2\":\"bar\"}"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCustomerAccount4()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCustomerAccount(
            "7a37eccd-500a-46ef-92c8-e133684e0267",
            [
                'status' => "active",
                'account_name' => "UZaTkRCZ5y8PJY6XsGVOPCbbUv9eVdchlwTnwGGcDqzTeZEVWxk2QfRVv1Paij5yzKazqo50Trk",
                'external_id' => "DGlylWSpLR",
                'metadata' => "{\"key1\":\"foo\",\"key2\":\"bar\"}"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
