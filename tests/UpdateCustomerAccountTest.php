<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class UpdateCustomerAccount extends TestCase
{
    public function testUpdateCustomerAccount0()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCustomerAccount(
            "43714e35-4e69-442b-9614-cfbe0b56065f"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCustomerAccount1()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCustomerAccount(
            "43714e35-4e69-442b-9614-cfbe0b56065f",
            [
                'metadata' => "{\"key1\":\"foo\",\"key2\":\"bar\"}"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCustomerAccount2()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCustomerAccount(
            "43714e35-4e69-442b-9614-cfbe0b56065f",
            [
                'external_id' => "pi9sRFfIml3aYSt3lpRaxglgDgXt4Q1YY5",
                'metadata' => "{\"key1\":\"foo\",\"key2\":\"bar\"}"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCustomerAccount3()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCustomerAccount(
            "43714e35-4e69-442b-9614-cfbe0b56065f",
            [
                'account_name' => "fWlN5IEcyvL9OdFiSRfpsKvPQzGbA6g2YR2hQwUokjq4CNqWm4wU2XWZICwiX8Vu8XTvPlsafW3tZSHCvl1FWSv5xufJiRfxQTxfgN8Ey8uf2vig2tww3AigGthsy9FDSMyBr7l5UWRt05EJZwR4APkXF8jZEmpaplXHrhF465A00Gz1MCpPYG",
                'external_id' => "LGIfkJkalVwd3AiZaxy5MrE5oHjCODqondVQ",
                'metadata' => "{\"key1\":\"foo\",\"key2\":\"bar\"}"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCustomerAccount4()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCustomerAccount(
            "43714e35-4e69-442b-9614-cfbe0b56065f",
            [
                'status' => "suspended",
                'account_name' => "YUFHHnJRWWmhXoGSYECxwtZKIfQ26X0AxuvQLEW078N1",
                'external_id' => "ZHbGcBAfb5h09hT0SwvP1DT4rS7F3fT9tBU",
                'metadata' => "{\"key1\":\"foo\",\"key2\":\"bar\"}"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
