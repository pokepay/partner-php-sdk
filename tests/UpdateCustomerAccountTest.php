<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class UpdateCustomerAccount extends TestCase
{
    public function testUpdateCustomerAccount0()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCustomerAccount(
            "2d3ad674-3dae-4f56-bbd8-f02075023b95"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCustomerAccount1()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCustomerAccount(
            "2d3ad674-3dae-4f56-bbd8-f02075023b95",
            [
                'metadata' => "{\"key1\":\"foo\",\"key2\":\"bar\"}"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCustomerAccount2()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCustomerAccount(
            "2d3ad674-3dae-4f56-bbd8-f02075023b95",
            [
                'external_id' => "AFjGW4lKSROU2q4u3DqBL9oyShV23oUr27pkotF",
                'metadata' => "{\"key1\":\"foo\",\"key2\":\"bar\"}"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCustomerAccount3()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCustomerAccount(
            "2d3ad674-3dae-4f56-bbd8-f02075023b95",
            [
                'account_name' => "8hA563nGqqMF0wC8OHgo0Dt1hf7L50I1ibMaSfSqpMmVsg1QoQlG5nhrhldy9prkAsFXQAcPbOinGKYQcLox7vDm72r4RbeZdFZUdSijhqYs4xkWRkjpPmtrBwkm05CZ0hfoUwFKxC7ZAHG7pURpDrHLfFAMu1f4oK6Su71Cb72w5X36QEQ4qb0bujAZYxdklznbNJ051LMCKaUxtHMG9ffate2ygPT6oLAXVXEz6CkKLCFtG4OQrwm",
                'external_id' => "UAh",
                'metadata' => "{\"key1\":\"foo\",\"key2\":\"bar\"}"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCustomerAccount4()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCustomerAccount(
            "2d3ad674-3dae-4f56-bbd8-f02075023b95",
            [
                'status' => "active",
                'account_name' => "XgTDGCzz5QuzejCuQ6WJssMyE6an5McLtsa4ffyJBGqy0q0nuxMV9w5mJUuIoskWZ6Ai35ObwLgT3kCtgRnqnEGJ71oVwMq4H55VRHOTYOdPLLzjf2XDMFOwu1R08AmBs3eyZ9jRbtfMgqL4CYkbqjQPcvrzHqRGYf5bPTJ82eaXSgPnPlH",
                'external_id' => "HmOcXlokuAWdL4kT58oAMWzXJzpTQT1MC6XWFLdA",
                'metadata' => "{\"key1\":\"foo\",\"key2\":\"bar\"}"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
