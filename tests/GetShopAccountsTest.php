<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class GetShopAccounts extends TestCase
{
    public function testGetShopAccounts0()
    {
        $client = $this->newClient();
        $request = new Request\GetShopAccounts(
            "47240738-dbfe-4c7e-9c20-d099928b539d"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetShopAccounts1()
    {
        $client = $this->newClient();
        $request = new Request\GetShopAccounts(
            "47240738-dbfe-4c7e-9c20-d099928b539d",
            [
                'is_suspended' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetShopAccounts2()
    {
        $client = $this->newClient();
        $request = new Request\GetShopAccounts(
            "47240738-dbfe-4c7e-9c20-d099928b539d",
            [
                'created_at_to' => "2021-01-06T07:12:35.000000+09:00",
                'is_suspended' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetShopAccounts3()
    {
        $client = $this->newClient();
        $request = new Request\GetShopAccounts(
            "47240738-dbfe-4c7e-9c20-d099928b539d",
            [
                'created_at_from' => "2021-03-26T03:20:00.000000+09:00",
                'created_at_to' => "2024-01-27T03:18:52.000000+09:00",
                'is_suspended' => TRUE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetShopAccounts4()
    {
        $client = $this->newClient();
        $request = new Request\GetShopAccounts(
            "47240738-dbfe-4c7e-9c20-d099928b539d",
            [
                'per_page' => 43,
                'created_at_from' => "2023-02-07T02:11:13.000000+09:00",
                'created_at_to' => "2022-01-16T18:57:09.000000+09:00",
                'is_suspended' => TRUE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetShopAccounts5()
    {
        $client = $this->newClient();
        $request = new Request\GetShopAccounts(
            "47240738-dbfe-4c7e-9c20-d099928b539d",
            [
                'page' => 3019,
                'per_page' => 412,
                'created_at_from' => "2021-02-03T17:10:34.000000+09:00",
                'created_at_to' => "2022-01-09T08:20:56.000000+09:00",
                'is_suspended' => TRUE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
