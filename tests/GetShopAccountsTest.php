<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class GetShopAccounts extends TestCase
{
    public function testGetShopAccounts0()
    {
        $client = $this->newClient();
        $request = new Request\GetShopAccounts(
            "1d42a654-a0e3-40fc-aa3a-7fbcf4e9f14f"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetShopAccounts1()
    {
        $client = $this->newClient();
        $request = new Request\GetShopAccounts(
            "1d42a654-a0e3-40fc-aa3a-7fbcf4e9f14f",
            [
                'is_suspended' => TRUE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetShopAccounts2()
    {
        $client = $this->newClient();
        $request = new Request\GetShopAccounts(
            "1d42a654-a0e3-40fc-aa3a-7fbcf4e9f14f",
            [
                'created_at_to' => "2022-06-12T04:46:25.000000Z",
                'is_suspended' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetShopAccounts3()
    {
        $client = $this->newClient();
        $request = new Request\GetShopAccounts(
            "1d42a654-a0e3-40fc-aa3a-7fbcf4e9f14f",
            [
                'created_at_from' => "2023-01-07T06:16:44.000000Z",
                'created_at_to' => "2020-04-03T10:38:40.000000Z",
                'is_suspended' => TRUE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetShopAccounts4()
    {
        $client = $this->newClient();
        $request = new Request\GetShopAccounts(
            "1d42a654-a0e3-40fc-aa3a-7fbcf4e9f14f",
            [
                'per_page' => 2944,
                'created_at_from' => "2022-09-24T03:29:07.000000Z",
                'created_at_to' => "2020-03-07T16:47:24.000000Z",
                'is_suspended' => TRUE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetShopAccounts5()
    {
        $client = $this->newClient();
        $request = new Request\GetShopAccounts(
            "1d42a654-a0e3-40fc-aa3a-7fbcf4e9f14f",
            [
                'page' => 8359,
                'per_page' => 5459,
                'created_at_from' => "2022-01-09T07:41:23.000000Z",
                'created_at_to' => "2023-10-26T19:54:58.000000Z",
                'is_suspended' => TRUE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
