<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateShopV2 extends TestCase
{
    public function testCreateShopV20()
    {
        $client = $this->newClient();
        $request = new Request\CreateShopV2(
            "fBmPhFEgirzAg7PesPoPDqriEUbzCuDhT0QegiufsQ9slzCj3Uf1dtrUyt2EF59WDIqMQFfah6UF2S47nDrzVWwnJkn8ta4WanFr1DWdU3DiWl2sgwRh9TtjBdDpvMIx6wThE7P3YhYxtd2t8AfyXZQSWpDmv1M9aHSyypqOBGofHLzii2RqSQy9Mpc0binctPIYewDIoHeCYa3yOrvx2GccFGznfjl5AHsZvTH1PlsX7Mc3lqX3GXSv8hGKiraU"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateShopV21()
    {
        $client = $this->newClient();
        $request = new Request\CreateShopV2(
            "fBmPhFEgirzAg7PesPoPDqriEUbzCuDhT0QegiufsQ9slzCj3Uf1dtrUyt2EF59WDIqMQFfah6UF2S47nDrzVWwnJkn8ta4WanFr1DWdU3DiWl2sgwRh9TtjBdDpvMIx6wThE7P3YhYxtd2t8AfyXZQSWpDmv1M9aHSyypqOBGofHLzii2RqSQy9Mpc0binctPIYewDIoHeCYa3yOrvx2GccFGznfjl5AHsZvTH1PlsX7Mc3lqX3GXSv8hGKiraU",
            [
                'can_topup_private_money_ids' => ["46d699f9-9d86-4517-af74-8ae2ae7aa50a", "88c3f134-814c-457d-92e5-7172f6b812cb", "473939fa-9bc4-4a37-a322-ce0aa6fee429", "0830c168-77db-43cc-8fbe-f985c4d59c21", "8ea74b1d-30f4-4c4d-b96f-a1286fad4bb1", "05ec798c-aef0-4893-94fc-5a7cfd93ebd8", "c27859c5-a8b3-4c72-bc33-b3f668a66043", "918b351c-9a98-4635-b38a-94ad567464a3", "52e6d46b-277c-4698-b9e4-07a8ed0dc38d", "91f28fff-ff83-477f-b5a8-4e549678a884"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateShopV22()
    {
        $client = $this->newClient();
        $request = new Request\CreateShopV2(
            "fBmPhFEgirzAg7PesPoPDqriEUbzCuDhT0QegiufsQ9slzCj3Uf1dtrUyt2EF59WDIqMQFfah6UF2S47nDrzVWwnJkn8ta4WanFr1DWdU3DiWl2sgwRh9TtjBdDpvMIx6wThE7P3YhYxtd2t8AfyXZQSWpDmv1M9aHSyypqOBGofHLzii2RqSQy9Mpc0binctPIYewDIoHeCYa3yOrvx2GccFGznfjl5AHsZvTH1PlsX7Mc3lqX3GXSv8hGKiraU",
            [
                'private_money_ids' => ["e1c5d5dd-4243-47a8-9cba-697194045b63", "57ff9b5a-2981-4fc2-bcc1-6ff48c07726f", "7afe636b-3028-4746-9711-1cb80860d853", "2e80ec41-d5f3-41ee-9f33-f0f35d3e237f", "fee1eaf8-8f67-419c-8e46-fbf9a65d5374", "2a50f690-fbd6-4a67-a626-d3170b45a080", "d921f799-2df8-4d98-94c2-eb7680fb4360", "a42257c8-e32e-48d3-adb2-1014e7224eb2", "1ad8c78e-cbf7-482e-835d-3735717d8976"],
                'can_topup_private_money_ids' => ["8e1fb300-b040-44d9-9f01-2db76e0da45c", "a747a602-c990-408c-b1b1-f21d39628530", "a316a1fe-8457-431a-a1dc-364cce766825", "fb91ebba-5277-4360-af63-7e8941437856"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateShopV23()
    {
        $client = $this->newClient();
        $request = new Request\CreateShopV2(
            "fBmPhFEgirzAg7PesPoPDqriEUbzCuDhT0QegiufsQ9slzCj3Uf1dtrUyt2EF59WDIqMQFfah6UF2S47nDrzVWwnJkn8ta4WanFr1DWdU3DiWl2sgwRh9TtjBdDpvMIx6wThE7P3YhYxtd2t8AfyXZQSWpDmv1M9aHSyypqOBGofHLzii2RqSQy9Mpc0binctPIYewDIoHeCYa3yOrvx2GccFGznfjl5AHsZvTH1PlsX7Mc3lqX3GXSv8hGKiraU",
            [
                'organization_code' => "5--w-wx-8--r-65e44",
                'private_money_ids' => ["4b0c7bfd-1d6c-42a4-b4bc-ec624eb89f3e", "3a296468-ae43-4d86-bf1e-a1d485c4382b", "b8a029bc-9f77-4cac-9f38-0f2705d13386", "72ba6f32-24eb-4531-aac7-d2efcb43d147", "be84f645-3de1-4d92-9c02-6727d73f38cd", "bca858d6-efc8-406d-91bd-cc82ae27853e", "8ef772dd-507a-467d-847e-05bd522eceed", "6bb59acb-84f0-4d04-98f9-bf536fe129dd", "59c500c5-cd02-426f-95c5-b3e9ec986547", "f5e2f17f-9ba1-4ba9-8c9c-82ce0557cf04"],
                'can_topup_private_money_ids' => ["b614627e-1349-4358-89bd-bee0eb242f08"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateShopV24()
    {
        $client = $this->newClient();
        $request = new Request\CreateShopV2(
            "fBmPhFEgirzAg7PesPoPDqriEUbzCuDhT0QegiufsQ9slzCj3Uf1dtrUyt2EF59WDIqMQFfah6UF2S47nDrzVWwnJkn8ta4WanFr1DWdU3DiWl2sgwRh9TtjBdDpvMIx6wThE7P3YhYxtd2t8AfyXZQSWpDmv1M9aHSyypqOBGofHLzii2RqSQy9Mpc0binctPIYewDIoHeCYa3yOrvx2GccFGznfjl5AHsZvTH1PlsX7Mc3lqX3GXSv8hGKiraU",
            [
                'external_id' => "3U",
                'organization_code' => "03f----1x-",
                'private_money_ids' => ["486e7d92-ffe6-43e2-be5b-e6df0af03cc4", "f8802b89-3665-452d-9dc0-7f6937cb6b10", "9dad6cd3-ef7e-4697-8b6d-655f443aed27", "0431a88c-fc02-4b11-9f4e-880d396714c2", "08162b9c-d75e-489f-8e1e-819b58f53549", "2735971a-1d01-46e6-9c3d-577684724bb0", "b3d055ad-9d40-4d04-9234-6128251e3be6", "ae993b76-dac2-44e5-a4b5-6c9fefd9f182", "266517cb-7358-4653-86d4-ac03b7019fc2"],
                'can_topup_private_money_ids' => ["32cc5212-32f9-4aa4-bac1-4ecad183d2f6", "d31ceebe-3bca-4312-8a76-be3c79f595ba", "a5a9a76c-1fdb-4390-92db-430b20486f54", "6825d70f-5f7c-4ef6-9c9a-38b3f1eba6b6", "b16eb9b7-368e-4b75-8f40-8bc36484f1f7", "a521eeba-b6a4-4b8c-998a-6872238b0447", "df6f09ea-7acc-4cd2-bd19-c620e674da82"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateShopV25()
    {
        $client = $this->newClient();
        $request = new Request\CreateShopV2(
            "fBmPhFEgirzAg7PesPoPDqriEUbzCuDhT0QegiufsQ9slzCj3Uf1dtrUyt2EF59WDIqMQFfah6UF2S47nDrzVWwnJkn8ta4WanFr1DWdU3DiWl2sgwRh9TtjBdDpvMIx6wThE7P3YhYxtd2t8AfyXZQSWpDmv1M9aHSyypqOBGofHLzii2RqSQy9Mpc0binctPIYewDIoHeCYa3yOrvx2GccFGznfjl5AHsZvTH1PlsX7Mc3lqX3GXSv8hGKiraU",
            [
                'email' => "RZc3VKwiqF@PzSB.com",
                'external_id' => "JCAHrRbsORO0jyZK0UZqewSEPRTm2",
                'organization_code' => "y1-04",
                'private_money_ids' => ["576d70fd-6c0a-41b9-a969-2a2c8a59e72b", "25dd80f5-30ec-42c9-bb66-53186d173039", "40aa1f5f-c413-4aa6-8183-2294638a8e5a", "c0395419-22a9-4786-a152-6da29bd9a18c", "81d8cd75-81d7-4387-8650-551004688342", "96e45047-86af-4e4e-b888-2193f4b3f5bc"],
                'can_topup_private_money_ids' => ["01ebf662-a9c0-4b9b-a045-3ef3437e762d", "cb10b068-d730-4444-af1a-d79bb348ba38", "e3f00bcd-2f5e-4611-baa0-69d34d06a5f8", "811e4e6c-67ac-415b-9604-b7c2c8d71b20", "81b9549f-53c6-4204-8195-4e9098c09fd6"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateShopV26()
    {
        $client = $this->newClient();
        $request = new Request\CreateShopV2(
            "fBmPhFEgirzAg7PesPoPDqriEUbzCuDhT0QegiufsQ9slzCj3Uf1dtrUyt2EF59WDIqMQFfah6UF2S47nDrzVWwnJkn8ta4WanFr1DWdU3DiWl2sgwRh9TtjBdDpvMIx6wThE7P3YhYxtd2t8AfyXZQSWpDmv1M9aHSyypqOBGofHLzii2RqSQy9Mpc0binctPIYewDIoHeCYa3yOrvx2GccFGznfjl5AHsZvTH1PlsX7Mc3lqX3GXSv8hGKiraU",
            [
                'tel' => "094751187",
                'email' => "JhuwpH4QTt@l4p8.com",
                'external_id' => "CiAif8PF8gUijf6cu",
                'organization_code' => "jija-zzmrzSAin3p-KhJm",
                'private_money_ids' => ["a1497beb-c25f-42ac-920d-dae49519cbab", "5aaf3968-19b4-46aa-bc84-a19f717a779b", "7fe5324f-b4c5-44b6-b331-ea83cca37fd1", "792044ea-9026-44f4-a841-203cfd0dfaef", "99b03a00-1a6f-4ad1-9e22-8dbbd6a3c566"],
                'can_topup_private_money_ids' => ["13f580b9-7d73-4e6b-aadc-5daaf570dc3a", "27a64b7e-4c1f-4494-8df9-58e9a94a43c3", "8bd1f7fa-45ea-44e2-b184-f2e19b6ac0a1", "ad27a62c-8769-4809-9ef8-32c0a57436dc", "929f16ba-3f98-468f-8deb-fb426de82719", "7734c947-5648-4339-846f-0ff4c829147a", "fc5c57eb-35eb-4c6c-baaf-0377c6866ddb", "94926089-313e-4df6-8c83-6c717ceefac6", "8950d560-cb35-435e-9f95-1a56b37eb60c"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateShopV27()
    {
        $client = $this->newClient();
        $request = new Request\CreateShopV2(
            "fBmPhFEgirzAg7PesPoPDqriEUbzCuDhT0QegiufsQ9slzCj3Uf1dtrUyt2EF59WDIqMQFfah6UF2S47nDrzVWwnJkn8ta4WanFr1DWdU3DiWl2sgwRh9TtjBdDpvMIx6wThE7P3YhYxtd2t8AfyXZQSWpDmv1M9aHSyypqOBGofHLzii2RqSQy9Mpc0binctPIYewDIoHeCYa3yOrvx2GccFGznfjl5AHsZvTH1PlsX7Mc3lqX3GXSv8hGKiraU",
            [
                'address' => "oDhnHNXXJLpfsUH4kRVuJJ2Acr4zyMrkpsrgE1zz8hivuzZgcW9wOGHTdU4pWyOiSAaNLSSHVNCkrOE5L7Vk2LmFM2pUUmX6ZI9sc2DcnWfYeGXAA7u9fPwZQsmRkmaiPOftkinyRkakIWpr4MHxSsQ7aLPhd6Thi0uWZIDXW71pDRTyucMuy1Qf4Uc7MtKiYYqyGtYSaJizFS4uSu0a4H",
                'tel' => "0755055219",
                'email' => "9G8IddeS02@WVjx.com",
                'external_id' => "HoBaievFHKiCjkKESSuDI99s",
                'organization_code' => "-0---3i8N-rOr-OE5",
                'private_money_ids' => ["d6a1dd3b-ba1d-46cc-9c0d-76d02f63e33b", "36f962b1-d981-4eea-b093-a98694a6a4e7", "6ed7ee05-9c02-443f-8e01-8c2762752e74", "6fed8127-d841-43a5-9513-6128bbcf61e8", "2046100d-a8bb-4f4a-933b-9355feb3a2a6"],
                'can_topup_private_money_ids' => ["449fd581-c3f7-4ecd-a90e-21ea7143065c", "63fbe3f9-6f68-463d-b93b-af6c42dac54a", "fce0e54d-fda4-4210-9ead-6ea5d44bbc52"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateShopV28()
    {
        $client = $this->newClient();
        $request = new Request\CreateShopV2(
            "fBmPhFEgirzAg7PesPoPDqriEUbzCuDhT0QegiufsQ9slzCj3Uf1dtrUyt2EF59WDIqMQFfah6UF2S47nDrzVWwnJkn8ta4WanFr1DWdU3DiWl2sgwRh9TtjBdDpvMIx6wThE7P3YhYxtd2t8AfyXZQSWpDmv1M9aHSyypqOBGofHLzii2RqSQy9Mpc0binctPIYewDIoHeCYa3yOrvx2GccFGznfjl5AHsZvTH1PlsX7Mc3lqX3GXSv8hGKiraU",
            [
                'postal_code' => "741-8380",
                'address' => "YlLc8o14e4b8Mwst2qtdnU9vqrilrwpbaDbzDfERfmzLOt",
                'tel' => "0152-387927",
                'email' => "LyjfhPM7tX@m9PE.com",
                'external_id' => "2J9Ve",
                'organization_code' => "zH4-aLY-73M-",
                'private_money_ids' => ["2e168336-3fd6-4174-8792-4e8f22bb9714", "43faf13e-7aa5-454e-8a26-437de14ac2b4", "2b035726-bde3-45da-9e48-3134e7d0b773", "5abf7820-4d4e-4ffc-8fe6-901faa37bae8"],
                'can_topup_private_money_ids' => ["887db00d-8dbe-4058-bf99-88c5d5493b15", "63c2fdef-6ce4-4b78-b075-a1ca11e5df12", "a39a524a-8291-4f41-a054-1845dbafb2a1", "696ffbe0-a909-4b01-87b8-6c9503c2b305", "29372de2-5fa6-497c-a11d-360516011578", "7dcedf97-9ad7-4c14-aa10-8c79f075c3ef", "dff1458a-a95f-4156-9edb-510e51dec5de", "0ce0644a-b4b2-4e8a-9153-176c2df8f0a1", "ecc73e3a-8fee-4dae-8676-587bbe8e07d7", "de72307c-e0e1-4aa4-bd2f-a89b385bd3e9"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
