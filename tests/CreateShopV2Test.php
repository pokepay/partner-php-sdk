<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateShopV2 extends TestCase
{
    public function testCreateShopV20()
    {
        $client = $this->newClient();
        $request = new Request\CreateShopV2(
            "j6JM7SeyfDggKZFYWTDKpgefC9BfLUziDzomrJc0qEFmDH1kOwkAiZkM65KBHuBCR7PH9TTXfeCV99DqZp63n1BdP39gAYn1Eag8U2vB6yxP8nxy22cM6aRcPs"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateShopV21()
    {
        $client = $this->newClient();
        $request = new Request\CreateShopV2(
            "j6JM7SeyfDggKZFYWTDKpgefC9BfLUziDzomrJc0qEFmDH1kOwkAiZkM65KBHuBCR7PH9TTXfeCV99DqZp63n1BdP39gAYn1Eag8U2vB6yxP8nxy22cM6aRcPs",
            [
                'can_topup_private_money_ids' => []
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateShopV22()
    {
        $client = $this->newClient();
        $request = new Request\CreateShopV2(
            "j6JM7SeyfDggKZFYWTDKpgefC9BfLUziDzomrJc0qEFmDH1kOwkAiZkM65KBHuBCR7PH9TTXfeCV99DqZp63n1BdP39gAYn1Eag8U2vB6yxP8nxy22cM6aRcPs",
            [
                'private_money_ids' => ["e30e61d1-6bcd-4205-a55f-e6d79101a746", "11dc7655-a486-4120-91f7-aa4caf7b3f55", "e40e8a8f-c525-40be-b047-ef5773e60597", "a1d433c1-45d5-4660-8906-dc41db3d2ae8"],
                'can_topup_private_money_ids' => ["94ee9ba1-d062-4651-86b7-0e92c102356f", "33db3981-d999-4225-861a-670962c67868", "079a080a-2926-4bec-aa8d-bea4cfaa0147", "b353e275-811f-4c54-b86d-679508858e3c", "57c86edf-38e8-42f0-b046-463c1d93309b", "fda22da3-cb73-43a2-a501-c114ca14fc41", "c5724e0d-8111-4103-a330-8d43ee72b6d3", "d275b3d4-8101-48c7-926b-999e65329eee", "17102ce0-2248-4f22-ac58-8de31ef91f10", "60a36a9d-3e83-402a-b82a-da85f82f7532"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateShopV23()
    {
        $client = $this->newClient();
        $request = new Request\CreateShopV2(
            "j6JM7SeyfDggKZFYWTDKpgefC9BfLUziDzomrJc0qEFmDH1kOwkAiZkM65KBHuBCR7PH9TTXfeCV99DqZp63n1BdP39gAYn1Eag8U2vB6yxP8nxy22cM6aRcPs",
            [
                'organization_code' => "-372-EN-h99H",
                'private_money_ids' => ["b01bd957-ddba-4734-86a3-035bd76c133b", "f10d47cf-d29d-4002-be5e-93a716b787f1", "a2db0ef3-da1a-42da-b128-063b61bc66eb"],
                'can_topup_private_money_ids' => ["a77f8743-d91e-4f14-a77e-5793a8fb22e8", "4688dbb1-c16a-41ac-a4df-ab46de81f64d", "23a22ba5-7203-4bc3-981a-ec3a13e8e88f", "e7f767db-f74a-4c6b-be1e-6135da8f1a6f", "1dff1971-7c9b-4693-840a-d375b0dd2eeb", "09a70d67-fa27-4d61-b628-bd77d197d761", "d187e376-3829-42b3-ad27-ab8aa382cdd6", "046eedaa-aba7-484a-8577-ae8943bd0b74", "3a892ff8-38e3-4f70-99b6-46525097ae04"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateShopV24()
    {
        $client = $this->newClient();
        $request = new Request\CreateShopV2(
            "j6JM7SeyfDggKZFYWTDKpgefC9BfLUziDzomrJc0qEFmDH1kOwkAiZkM65KBHuBCR7PH9TTXfeCV99DqZp63n1BdP39gAYn1Eag8U2vB6yxP8nxy22cM6aRcPs",
            [
                'external_id' => "PlNuKd2jWNzsREFcx3RxC4Pc3lLdTdXQA",
                'organization_code' => "c45--2-o--F",
                'private_money_ids' => ["6f2e6eb0-fd26-4601-96ce-187d332e8d77", "9737808d-638b-4cae-955b-ad7f25d15119", "79c41f25-9cad-4610-b5d9-6129114cf7df", "a4ec33b0-6dca-4162-a624-f20ca990e851", "eccfa38d-bf32-4b40-86fb-62fbb1032171", "6e5b35f0-d1af-4554-9395-101e9725f4c3", "d6635bba-1cbb-41b6-8229-2faecdc4a07e", "8c77ffc3-5a29-425f-acc0-d79a166411c1", "45484ebb-3394-411a-a714-e8c59405a7b2"],
                'can_topup_private_money_ids' => ["814b2ce7-9fa7-4e5c-8c6e-ffa35dc07ba9", "a347249d-088a-4bc3-9972-fdb9181d0ced", "fbf0a4f8-13ba-4a4b-b6a9-aee7e0459336", "d6c0cbaa-6938-4702-a0c7-112b7d345d00"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateShopV25()
    {
        $client = $this->newClient();
        $request = new Request\CreateShopV2(
            "j6JM7SeyfDggKZFYWTDKpgefC9BfLUziDzomrJc0qEFmDH1kOwkAiZkM65KBHuBCR7PH9TTXfeCV99DqZp63n1BdP39gAYn1Eag8U2vB6yxP8nxy22cM6aRcPs",
            [
                'email' => "9LD3XPc0p9@rgIR.com",
                'external_id' => "DQbHcFin2pytycMNCMV",
                'organization_code' => "s-L-6-",
                'private_money_ids' => ["94ddf064-5bf5-4a62-959b-4fcf362a4d28", "f39a3f0a-dd68-4d5e-8aeb-411bdb1b9a77", "284ff9bf-0a4f-4f01-864b-76e8a2fdf1ba", "f6319401-2814-49e3-bfe8-b51e6b1f573f", "02a20082-71ae-47de-b0d6-774cb5debd47", "482aeeab-7da2-47e1-a3ab-c7b6628309b1"],
                'can_topup_private_money_ids' => ["15d8544e-9540-458e-bad2-6b253deb8c58"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateShopV26()
    {
        $client = $this->newClient();
        $request = new Request\CreateShopV2(
            "j6JM7SeyfDggKZFYWTDKpgefC9BfLUziDzomrJc0qEFmDH1kOwkAiZkM65KBHuBCR7PH9TTXfeCV99DqZp63n1BdP39gAYn1Eag8U2vB6yxP8nxy22cM6aRcPs",
            [
                'tel' => "06-035-9399",
                'email' => "mVv46B1sAH@BZyG.com",
                'external_id' => "dUUpUjSLzo3JsA0NgE",
                'organization_code' => "---75-0-2--a",
                'private_money_ids' => ["d3417e3a-c6f5-45f2-9d58-b3a6a7b134c1", "de948c1f-db4e-4c9d-a3fb-0b023553b4ca", "5e9400ef-6a99-410c-8234-137e57a17b6f"],
                'can_topup_private_money_ids' => ["f177834a-acbf-463e-b2ed-f6714db255ce", "881922ca-2451-468d-bec0-223db2e32971", "7d3d11e8-6276-450a-a992-e51787d7b23b", "222e6036-9449-4942-94c0-05d1b6a44107", "8d7a1333-8cc1-4b5f-af1a-c17747483c59", "a61f779a-cc1d-4140-9ff9-e29efb143016", "84d6f330-3f77-4a8a-a2be-2b3392cbe2ec", "19848081-53d8-408e-9b2d-75d3a45fe225"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateShopV27()
    {
        $client = $this->newClient();
        $request = new Request\CreateShopV2(
            "j6JM7SeyfDggKZFYWTDKpgefC9BfLUziDzomrJc0qEFmDH1kOwkAiZkM65KBHuBCR7PH9TTXfeCV99DqZp63n1BdP39gAYn1Eag8U2vB6yxP8nxy22cM6aRcPs",
            [
                'address' => "CyGaqO4kRG6Ca8Cz3l0bADV3pXCRFFU8xX7LFJDoPoCv0rEfi7DcfGJIudrquaKKy1sptTjzasaBUizqTMXBVnYLV3IkGPzOwnMBmiU3sFm1NBvJYi2Ky6zNI",
                'tel' => "0117-14981",
                'email' => "OpikBpIEH8@p9kt.com",
                'external_id' => "A9NzffJWt04jJiK7aYqUmuM",
                'organization_code' => "t-3-Ih-MI-f-7C",
                'private_money_ids' => ["63d897d9-779b-47b7-8576-3910aa6042e5", "407bb0ba-6dd1-4205-a06d-697d28af2e42", "b7b1a050-5e00-4f26-b6c4-5a95c9cd80dd", "03325529-168c-48de-ad9c-1d0846a8b166", "2267bd70-c815-468a-8369-77b976322918"],
                'can_topup_private_money_ids' => ["bab613c2-e25a-4875-b83d-dc46418442a4", "b9cb5cc0-8554-4106-a1dd-465e4a319f2d", "43c56c65-347d-44b8-a13d-0aa452c2e9a5", "0dd3b58b-67c7-4931-8b1b-370a83bb0181", "2abb11e8-55f8-42fb-b44b-38686f485a82", "3e8db9ce-ea9e-476b-9e42-8ec5213e604e", "394e06a3-b14e-4a4c-a92a-518ec1770ac2"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateShopV28()
    {
        $client = $this->newClient();
        $request = new Request\CreateShopV2(
            "j6JM7SeyfDggKZFYWTDKpgefC9BfLUziDzomrJc0qEFmDH1kOwkAiZkM65KBHuBCR7PH9TTXfeCV99DqZp63n1BdP39gAYn1Eag8U2vB6yxP8nxy22cM6aRcPs",
            [
                'postal_code' => "7654348",
                'address' => "XVi1TJIzzJUwDUhmkRdnolbhJPU1KuY6AZNljY5EqhqTyUU3romcbPevdWEH9828GLWRgFFObxqlKikbNKzmb5ajGGVUgmKimZq2EZ0h1bFck1wXif8iXceHIYAJxGYnWMtX4HJxB8eCdLb1yyIbjeaN6ZjfnjOKPqCxMyf8MWSRL",
                'tel' => "010-4875288",
                'email' => "SJVXqoxTX1@bSgZ.com",
                'external_id' => "WjzQd7tdS",
                'organization_code' => "",
                'private_money_ids' => ["a8d6dc34-d08b-4b19-bba2-dad638d0b018", "d10a42a6-dabb-462f-b2c9-b9b14c05f332", "37f58d1f-66bd-4105-ab23-c8f6e7542691"],
                'can_topup_private_money_ids' => ["f613229b-e1c2-41fe-a3d5-e89350089274", "bfa601b1-40b4-4fb1-8055-52a577862247", "2723636d-4665-4794-aa8f-a2444a4d319b", "c3eb7c61-133d-48ef-a8d6-cfe8bde61edb", "28e6bb67-ee45-4d63-8d64-63a1c50cda73"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
