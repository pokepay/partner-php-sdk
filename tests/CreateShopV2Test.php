<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateShopV2 extends TestCase
{
    public function testCreateShopV20()
    {
        $client = $this->newClient();
        $request = new Request\CreateShopV2(
            "PQ6TFNwke2XrDVkRPl0mf4WrHqMxt8D3VQxDIeM1KaT7Yw5Qd6rhSFnVPm1vR6erRpqdH00Ppl5l4LanPpHhI4gnvYmJmqCdkdGEDHbKuQq71lYtBUb"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateShopV21()
    {
        $client = $this->newClient();
        $request = new Request\CreateShopV2(
            "PQ6TFNwke2XrDVkRPl0mf4WrHqMxt8D3VQxDIeM1KaT7Yw5Qd6rhSFnVPm1vR6erRpqdH00Ppl5l4LanPpHhI4gnvYmJmqCdkdGEDHbKuQq71lYtBUb",
            [
                'can_topup_private_money_ids' => ["387368ae-fa3f-4c96-8d77-9e294648ce7a", "0693bcff-581a-4cc1-a17e-8240d9f7d80c", "0db4c256-a8bf-4407-b4de-1ac944539e43", "b621e53d-70b0-4ec6-b7f6-31e4730d4059", "ec4e58df-36d8-475c-9a49-d2c373106f81", "7d421ec5-5f03-4f99-b7aa-12b09e750a6d"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateShopV22()
    {
        $client = $this->newClient();
        $request = new Request\CreateShopV2(
            "PQ6TFNwke2XrDVkRPl0mf4WrHqMxt8D3VQxDIeM1KaT7Yw5Qd6rhSFnVPm1vR6erRpqdH00Ppl5l4LanPpHhI4gnvYmJmqCdkdGEDHbKuQq71lYtBUb",
            [
                'private_money_ids' => ["f3235fcc-5372-4753-9abd-428153349b18", "e8cce31c-d262-48ff-a2c1-b84d09b93eea", "347dec48-7e6e-47fa-8dec-0398f8dd284f", "fd2e69ba-925e-4082-9970-93c825c4b64c"],
                'can_topup_private_money_ids' => ["29fe296d-ca40-4466-8911-0c2916351f5f", "28317e5a-df53-4592-8595-10bdc9a3814b", "cb53c751-6adc-4289-aafc-3d3dd2ec5799", "2ba0bbda-c37b-41cd-b604-6cb894825e2f", "5a47f631-9b1e-48e8-9350-11ecabc389db"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateShopV23()
    {
        $client = $this->newClient();
        $request = new Request\CreateShopV2(
            "PQ6TFNwke2XrDVkRPl0mf4WrHqMxt8D3VQxDIeM1KaT7Yw5Qd6rhSFnVPm1vR6erRpqdH00Ppl5l4LanPpHhI4gnvYmJmqCdkdGEDHbKuQq71lYtBUb",
            [
                'organization_code' => "hbnQ9w1",
                'private_money_ids' => ["8bf00369-78be-4a99-974f-46ceae0b1634", "3fb70c71-5125-4c39-ae9b-410ed23837fc"],
                'can_topup_private_money_ids' => ["936e0f86-e4df-4d12-974a-e7bd4f9e670b", "fa841fe2-c9d9-44fd-8c6d-349410553905", "9e3f114e-68a4-4038-a9f9-d1bd898130ae", "79f0931b-4d23-4aaa-9de8-64bbf2c2ac72", "90e77fcb-e27d-4253-a387-dd1f5ae4ed7c"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateShopV24()
    {
        $client = $this->newClient();
        $request = new Request\CreateShopV2(
            "PQ6TFNwke2XrDVkRPl0mf4WrHqMxt8D3VQxDIeM1KaT7Yw5Qd6rhSFnVPm1vR6erRpqdH00Ppl5l4LanPpHhI4gnvYmJmqCdkdGEDHbKuQq71lYtBUb",
            [
                'external_id' => "n9XQKvxt7f14B7Cvpu9KhJh",
                'organization_code' => "-o4K-3r9d-02Zjl-bn--s",
                'private_money_ids' => ["31204a42-0f50-457c-8a5a-510afe087f2f", "8d154fd0-fd9b-4170-b85c-2cd838e7fff8", "7cb0ceef-a436-4c63-b1b4-48275c6e3751", "bffe65cb-934f-456f-8832-47ca21832ca9", "1a876dae-0000-4a34-a60b-29d9dd2949d8", "491daff6-1c41-46a0-9137-1dd9f4260ac7", "2a72e59c-a9ee-4924-815b-17f4754c86b9"],
                'can_topup_private_money_ids' => ["817d3196-8a23-40d5-90c1-fdcae5b25790", "a882bb31-2f5d-4dcf-ba83-ed419da91655", "5b19d580-fc9a-4d04-a47a-153a35711ff6", "18194950-9f0e-4044-a7cb-f6ebaa83adf8"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateShopV25()
    {
        $client = $this->newClient();
        $request = new Request\CreateShopV2(
            "PQ6TFNwke2XrDVkRPl0mf4WrHqMxt8D3VQxDIeM1KaT7Yw5Qd6rhSFnVPm1vR6erRpqdH00Ppl5l4LanPpHhI4gnvYmJmqCdkdGEDHbKuQq71lYtBUb",
            [
                'email' => "6Hojxb2NsT@pMUi.com",
                'external_id' => "tEfkNookoLjEfKSZdKHwKOZGKQ8ve02MR",
                'organization_code' => "-B35-UQ-67tg2-8-njDDAoj-XTbO",
                'private_money_ids' => ["4b6b3dd4-2f9e-4fe8-b79a-2b79a92c5ca9", "56306004-5c25-4d24-abd3-2c40ed76bd1d", "d063398d-bee5-417a-8eb9-e95616da3b36", "99d3ef43-3ff0-408c-9c11-d4dec151d4ac", "fd020628-9b8f-43fe-b0e8-4b5f7bb47949", "1e512896-4c10-4dbe-acd2-7f1edb34eaa4", "863f4269-c9ec-4dab-b022-c61a367ce6ac"],
                'can_topup_private_money_ids' => ["bedb25f5-67e3-4864-a413-8892b6259a9d", "d2e140f6-cc68-44c7-9807-6bae21958c1b", "ee20042e-a1da-44d1-9b9d-de72a76d2896"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateShopV26()
    {
        $client = $this->newClient();
        $request = new Request\CreateShopV2(
            "PQ6TFNwke2XrDVkRPl0mf4WrHqMxt8D3VQxDIeM1KaT7Yw5Qd6rhSFnVPm1vR6erRpqdH00Ppl5l4LanPpHhI4gnvYmJmqCdkdGEDHbKuQq71lYtBUb",
            [
                'tel' => "055-89-0261",
                'email' => "u4328zKSx1@BowO.com",
                'external_id' => "w0c2gDeGB",
                'organization_code' => "3w-",
                'private_money_ids' => ["b6302aa6-7d36-4807-a508-bcc2a29cec5f", "c45a0fb5-64e2-44b6-bf4c-0c1fc82bb03e", "6d341774-6773-4839-ad4a-013b08ab4706", "0225a16e-a4d8-4e2f-a88e-2ec79ca1b61b", "a46ef191-5644-4348-a157-7dcccc8e0309", "3d3ee406-e497-4316-a427-1733a9b6ac3b", "239cd5ba-fddd-4c33-b28f-4fe53bf41e80"],
                'can_topup_private_money_ids' => ["3a49022e-8ede-4b77-a1cb-65e7427d2034", "63149ad0-4b75-4bd9-a624-65c351373b25", "90e183a5-482d-4c42-a2b3-733c7c107a3f", "bf3827de-203c-4e3e-a69e-b39580ef50d1", "f7842e4f-48da-447d-8334-c4838b9d476b"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateShopV27()
    {
        $client = $this->newClient();
        $request = new Request\CreateShopV2(
            "PQ6TFNwke2XrDVkRPl0mf4WrHqMxt8D3VQxDIeM1KaT7Yw5Qd6rhSFnVPm1vR6erRpqdH00Ppl5l4LanPpHhI4gnvYmJmqCdkdGEDHbKuQq71lYtBUb",
            [
                'address' => "xELqApROUZRfNAA6bYz80zcHVazTxyDX8Ygf5prHkRTSrm58yb4hcdjnU63cNjdb3eCxjAiFN0F428RYUiG8uEoEk3UtnDjgRNjByrxWpZ7Cp6iNev0QFmQKxXdtHV3xO67nKBS08vl4n174FhT2uleO",
                'tel' => "0060-33-461",
                'email' => "2I84aT1GGP@prvm.com",
                'external_id' => "Zm",
                'organization_code' => "d475--mKBUu4-WF7-PBqm--iHB",
                'private_money_ids' => ["3340b295-4c51-443e-9ad2-93b3acb5f057", "738c496b-8a93-45b9-b0b0-eba82d6e9093", "215f790f-ab36-4d11-a4e3-8391fa433117", "fdb6a6c3-e5a4-45ca-bab6-c7cf25b9d7f3", "d0f1ef9c-85d0-44c2-9975-4104b1c23667"],
                'can_topup_private_money_ids' => ["0347dd84-be99-48b9-a6e3-e5655e9729c4", "e86a9409-53ee-4df1-91d5-f16cf51260ee", "59150988-e655-4c36-9b64-67ab01df3959", "a3b58ff3-ce5c-4f40-b8d7-36ac14ca46ea"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateShopV28()
    {
        $client = $this->newClient();
        $request = new Request\CreateShopV2(
            "PQ6TFNwke2XrDVkRPl0mf4WrHqMxt8D3VQxDIeM1KaT7Yw5Qd6rhSFnVPm1vR6erRpqdH00Ppl5l4LanPpHhI4gnvYmJmqCdkdGEDHbKuQq71lYtBUb",
            [
                'postal_code' => "7947450",
                'address' => "pq8CGmp7Om4z3RERMEWqSHM5wY5hPFl7lMEvXHbw2q9npGx8x7NFb9lkUaclkovvsusBCOF0eawQlviqHUzPBLczFpcZBnKuR6bYJScAc6uS2WoBwQfKHjN638FQqN1DHOX9QpNDHQQ6kwbgvQslNaR1c6R9T6UMUhx1",
                'tel' => "039902-935",
                'email' => "JKfqjhEq7T@lzC6.com",
                'external_id' => "4i5Gx9W5kZWOni1W",
                'organization_code' => "-1d06---C99QRExVb12",
                'private_money_ids' => ["3ced00f2-7a2e-4422-95b5-8a0ff8256817", "4bde2235-3fbc-4ccf-a430-5f4a2684eeb6", "e0a45dc1-6b71-45d6-8ab1-793cb9cd93d5", "14429345-a34a-46c3-9833-1a15f4ed88de", "693cc60f-dfb9-4f08-a0c8-9a850b852dc7", "967ed6f4-bdd7-4135-ab32-4c1fea614d26", "41ab488b-4064-4b8e-b599-316a8d3d73d9", "b06bace1-d688-4829-9233-f6ccddf5db38"],
                'can_topup_private_money_ids' => ["36090675-2763-469d-be98-a2da360c902d", "daa39546-f64c-4a89-9069-d4713a4778e2", "c0e15770-4773-453f-b87e-ef331241f961", "445fed3c-f8a2-499e-8c69-5ad8ed6e6851", "b4306ed0-7dc6-4718-b4c8-3f58a1c3bb3d", "c4a13d34-101c-490e-afea-fc8d79f42ae1", "f5b54372-e7a5-4c06-8bb4-2f68fe15f512"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
