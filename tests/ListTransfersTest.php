<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class ListTransfers extends TestCase
{
    public function testListTransfers0()
    {
        $client = $this->newClient();
        $request = new Request\ListTransfers();
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListTransfers1()
    {
        $client = $this->newClient();
        $request = new Request\ListTransfers(
            [
                'description' => "aym5w3J4aO8c9EvyEYh9Q5U4KNyLXTIFLUbalSUxHdQFtk2hAwmajfPLeOJUWf4QqUHaHdtnKXPPyfQMQ4AH8E2TPLpOeCZ81xp3vZcfXlHlKfk2HcIqqYG32c2iOavaIUmnvcGF9w51RQ4TrSrnezZ6R3RzBlRhMaqKciBTUmrHWQMcTxbHhnXMI59DIqwNG"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListTransfers2()
    {
        $client = $this->newClient();
        $request = new Request\ListTransfers(
            [
                'transfer_types' => ["expire", "campaign", "topup", "payment", "cashback", "transfer", "exchange", "coupon"],
                'description' => "w3j6O4H8ArpdMMUkr1jQXzePmBk2q4zrWqsHAw7Uo5fTXPGpDdNvatpuoKarDPhbdzVIVrm5gTTqS57pJq5AbFRy8NxbBYs9G8p9JZ9wSNPNIKdPbdHMvyy4wQwQ7AS93OCgXZn5Q93aE56yCntBKdRcGfWRfBg1zyUs"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListTransfers3()
    {
        $client = $this->newClient();
        $request = new Request\ListTransfers(
            [
                'transaction_types' => ["cashback", "topup", "payment", "exchange", "expire"],
                'transfer_types' => ["expire", "transfer", "cashback", "payment"],
                'description' => "Cf8HzP8I2uCWgpHugJ8ClqOP0gOHrhJFZHkLmtUtD9l6mpP3Etuw67e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListTransfers4()
    {
        $client = $this->newClient();
        $request = new Request\ListTransfers(
            [
                'is_modified' => TRUE,
                'transaction_types' => ["expire", "transfer", "topup", "cashback"],
                'transfer_types' => ["expire", "coupon", "exchange", "topup", "campaign", "cashback", "transfer", "payment"],
                'description' => "rrSChN68rR"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListTransfers5()
    {
        $client = $this->newClient();
        $request = new Request\ListTransfers(
            [
                'private_money_id' => "f179c41a-b867-4757-8c2f-ca0695796aed",
                'is_modified' => FALSE,
                'transaction_types' => ["exchange", "expire", "cashback"],
                'transfer_types' => ["topup", "cashback"],
                'description' => "wrOTkO4e7etkFL2TyHzHqhJkVDX1CQG7ICJfkTHSpAfqXYKYjYQWAGJ3lDAc1g44CUyp3ZCkyul1F7u73krbRhUtbVll2a4idn"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListTransfers6()
    {
        $client = $this->newClient();
        $request = new Request\ListTransfers(
            [
                'transaction_id' => "b295769e-401e-42be-a47a-8074f0b6b672",
                'private_money_id' => "bcd6175b-9625-4cc4-a6b2-596cd500cc83",
                'is_modified' => TRUE,
                'transaction_types' => ["expire"],
                'transfer_types' => ["expire", "exchange", "topup", "coupon", "cashback", "transfer", "campaign", "payment"],
                'description' => "OGsJMedAZLiFRV3IlNtDoeMJo9Y0sQ092mOnzUsb4BK1tZqI8LkPZyd"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListTransfers7()
    {
        $client = $this->newClient();
        $request = new Request\ListTransfers(
            [
                'customer_name' => "nWDxi8EwNxUYg5S15gGH2G74XFxaKvE9toSyoqN5nciMSsEvWqWHGFNjxC6PRRIV17GWgaYcPmFSjCPWELzi886AVxQu4WnvxZd1hilRNW7a4Dfl4fZyHU5uWpJxMYDcEbXgdJdn1JESA9KiIruH22K160ZHB6RHxhK",
                'transaction_id' => "96ec52cd-d7bc-4437-bd51-80839dd09ed8",
                'private_money_id' => "eff7f19e-1ab1-429f-a9ab-6266d350114a",
                'is_modified' => TRUE,
                'transaction_types' => ["transfer", "exchange", "expire", "topup", "cashback", "payment"],
                'transfer_types' => ["transfer", "exchange", "coupon", "topup", "campaign", "expire", "cashback", "payment"],
                'description' => "bviuCan989OVkPfuDdy9c3lpMlTQ7o7W2891N7VlgaSjmhziLv9gctR8D4xdA8OZqz471da3iEzsze5OYUMXhOercin5cbogmmeepFPo5qa5Y5BKti80PpvRVU6bQVJNE30fTbFrvNLcFaT1EuNgFuQj1D"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListTransfers8()
    {
        $client = $this->newClient();
        $request = new Request\ListTransfers(
            [
                'customer_id' => "60c64bfd-23ed-45a2-9c20-977f80ff1d0e",
                'customer_name' => "V1QWUI8iUz5oSC7XwTLEXBaJQCnrK0SrGj1x2VQMDNsa40Ziyheg3QifodGuc3PQhJPabjc9f5F6lPwQCP7QggVxwk1a",
                'transaction_id' => "f8c57deb-5c74-4cac-a9a4-c54712ecd847",
                'private_money_id' => "dcfd8590-f409-42e8-bcc7-52f2f3f17933",
                'is_modified' => FALSE,
                'transaction_types' => ["expire", "transfer", "exchange", "payment", "topup", "cashback"],
                'transfer_types' => ["expire", "cashback", "campaign", "payment", "coupon", "transfer", "topup"],
                'description' => "tBB5RO0tBzfF8ng7RcRhV4Ltjkyo0xLvjYYfBgJRgyBNAvExwRDtDtscRv"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListTransfers9()
    {
        $client = $this->newClient();
        $request = new Request\ListTransfers(
            [
                'shop_name' => "verqW4lE3RQn9nJYRVMB3ggTzaKOLrwjCATiU0FGP60cjQ0JhMSsQXqJlwo8PBikTzl8sz8JYlZs9X1wCHUrsSa1O7WBqCwgrftB",
                'customer_id' => "713858d9-5ecd-4b05-b0fc-7a79537ecab1",
                'customer_name' => "WF3AGlQJI8c5GZQxig4JCz1IVSwOxoSMnzgYYcYZCT6xFb0ZiZyDkjs1PmlEjZxkYA0oL0DnGt0RPhz0LwMo8DhJNN5EZm8v8mdbTwzC6z31GnlOd2kgj7J2NwaYlq698zkCXlVzUTx9lm4wquyHWbWm3fJNDI1AkhQC5ixCLO1JBPlOKpjyjojghoeQx",
                'transaction_id' => "2ee290c3-9631-4cc5-a9ae-d2580719c81f",
                'private_money_id' => "99cc40e5-c5d3-4daa-aa9b-5f38eb4d0a05",
                'is_modified' => TRUE,
                'transaction_types' => ["cashback"],
                'transfer_types' => ["topup", "transfer", "expire", "exchange", "cashback", "campaign"],
                'description' => "AmWa2b4kIFr6aW4a7KKNo1lodAsNZVqUmJDy92H1Q4zLhgpQsUE5aqj3e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListTransfers10()
    {
        $client = $this->newClient();
        $request = new Request\ListTransfers(
            [
                'shop_id' => "f3dfb19d-5432-4db1-959a-198875604d34",
                'shop_name' => "OgRhckTgyvEhJjlwdAdpxbloz5xyaSXncYjsODjBBk5wvnSnqkOdkxAgJCTVcczxrv6lF5J1Q4UPerVMNNTefXEMIFouHmdMBVROejfXThet70vpYW8E8Nu88PpMmOLglv04yuCesBFMo5xWeqxKkNHgfQZmhYF8JpJb1QQm2Wbh7cZio9VyoMI8AvMS89nNvCQ",
                'customer_id' => "dd10027e-ee9b-4c76-acd5-9e2e5231ba54",
                'customer_name' => "1ZogOkLgF1ND1OK2jIlJxu8sDuyuhBK3AAb2TEV4SUkPgWnGyIDqOeaKUYRitrBu3USgM8JC8B1VTGrGM5dG6JmQbgdLBA5qdsqA",
                'transaction_id' => "a5edd31d-adfa-448a-b448-34c984f7549b",
                'private_money_id' => "acaab7e8-d370-463b-a824-a34794d969d7",
                'is_modified' => TRUE,
                'transaction_types' => ["topup", "payment"],
                'transfer_types' => ["expire", "campaign", "transfer", "payment", "cashback", "exchange", "topup"],
                'description' => "k6HpghOiY6ih5BidS2xsi8OOcn8FXd1jydD8MlCgHSn8gtM91RFRuTYJ222"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListTransfers11()
    {
        $client = $this->newClient();
        $request = new Request\ListTransfers(
            [
                'per_page' => 1513,
                'shop_id' => "ea8e749a-98dc-4df6-897a-5ca84ee89dd3",
                'shop_name' => "Rf03HzUF2AyZmspigAD6GlJrTdqAyOCe2diySEUzYMp7zdZ0L3FEG21qvmEPiHcJp8RhT8xH",
                'customer_id' => "6c7984ba-e3b2-4fad-a886-b989efab5f55",
                'customer_name' => "6hYaEKjULgyBWuDfy9qlOTeyi33a7",
                'transaction_id' => "1a9ca30d-f45c-47d0-ac4d-dfac339a1142",
                'private_money_id' => "d7d41fb7-a598-46c2-9738-e6eab60bebc2",
                'is_modified' => TRUE,
                'transaction_types' => ["payment"],
                'transfer_types' => ["cashback", "topup", "expire", "campaign", "transfer", "payment", "coupon"],
                'description' => "952XpO0YF3iSXkK"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListTransfers12()
    {
        $client = $this->newClient();
        $request = new Request\ListTransfers(
            [
                'page' => 8678,
                'per_page' => 4368,
                'shop_id' => "6d74d87d-820c-4183-9c7f-ca77f4eb90eb",
                'shop_name' => "IOE3XZSFIav4gjcmQP4qTLMEasvsBAGCp2KMGwoBoPrVLWEkMzXVdXGmLbJsPa8",
                'customer_id' => "199742a7-65f2-46aa-ba2f-a8988105af34",
                'customer_name' => "8x5fvwECIAeLzMUFS0qRIJcewDDpVofbgXfgrX84hBxGYbBv2ZS64EGawjewz38Sf5vEkZJTWt1u1FS1c9i8jYm4LdQRHtY143lfUQIkPMVg2I",
                'transaction_id' => "73db60e3-8a70-4459-aaf8-8b39e95e4c0b",
                'private_money_id' => "065906fa-b932-40a6-9d90-20332ff113bd",
                'is_modified' => FALSE,
                'transaction_types' => ["cashback", "topup", "transfer", "expire"],
                'transfer_types' => ["payment", "topup", "cashback", "transfer", "campaign", "coupon", "exchange", "expire"],
                'description' => "aoKLbPs78Uxxqwd6vb1xZw15E09xBpKjveFr0fKB3e9YhQQwtBLsElyqcMrH6afdhDCu0pnQO7Wn8otKfQNobpiNa3hHGT29YRHosN3qs1IDutqis8WNaQM4UPGUoG"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListTransfers13()
    {
        $client = $this->newClient();
        $request = new Request\ListTransfers(
            [
                'to' => "2021-11-05T01:50:44.000000+09:00",
                'page' => 684,
                'per_page' => 1661,
                'shop_id' => "9041a789-19e9-41a7-92cc-a5cb9ce29977",
                'shop_name' => "P2ppqoW5lAYbarBzpRhpv36GszBiqgWf5Fnk177gri60cxuCYgry4ItKQiqXyXUMvYBF37dm4A4euNxrOD6FKMkCw5v1WstnS22FF60fksUp6ng4yTqery2ReYQn6gLGiYMPyFAyApSOtb5DFbLJZgGcuZ5Vrw1v8utTiIYmtKsDnKpyHRP7lnDWkqga95IBpekXtcsGBdJxyOlxOL3djCzP8GaBLqrjmUVo8LQEs6j3WAiGwpuW6U5HSTbzMDy",
                'customer_id' => "75256246-b5ed-4544-9dfb-e131857c8734",
                'customer_name' => "VOMd1bOaYmfdVyyu6uBGCE4oXLT132PPsQcFUleu4sKRa2gHnz1OMeR1xyBfQNa7R4tlZi8wrPeDQy5ngMaFMYSaF8Xn6KPvFW9CO5bmiFyyZOOOoGAPn2",
                'transaction_id' => "72a2951b-f605-4274-bfbe-af88366d9bf0",
                'private_money_id' => "1d52e82c-f6b4-46a3-b0d7-c5ad28182d5d",
                'is_modified' => FALSE,
                'transaction_types' => ["transfer", "exchange", "topup", "cashback", "payment"],
                'transfer_types' => ["topup"],
                'description' => "ELvbxjHcJ2grAGIItXwNvL7v4vdwZ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListTransfers14()
    {
        $client = $this->newClient();
        $request = new Request\ListTransfers(
            [
                'from' => "2022-07-22T09:12:15.000000+09:00",
                'to' => "2021-06-20T18:34:38.000000+09:00",
                'page' => 5252,
                'per_page' => 4455,
                'shop_id' => "8b3eefa7-11ca-4b72-901f-382d132f8c61",
                'shop_name' => "RlcrJPg8xz5UjSlCnjJfaLd2wxb6j9J3s5F2tz7jATvc8mBWWq3PgFOySQeBUDOJLn0uPLTlikfM9HpwJ5JZLoWSGEFnHUiVTLAjopy1IMVzLYE7dPvf",
                'customer_id' => "f14cf1fa-59c5-4a74-abbb-d053a5d3680d",
                'customer_name' => "18ipmy15NcztEmNgQ85J0xkeJjeStgiA9wx73R0jFD2LjBJxmqIbMF3sIYVvyfP8hLBeRDucOh6POSzzXjaOAbGO0Jw9Ld5VU4VgceAjTmuUcz51ICJKus7qLAe06kuVzeYL3zUW3eJdom1HSic5JkYCu52p5GW3VXq6VSDAIo0vcws4UGpm1XC7UjEg6GOcwEVWZ9K0dowl38P7DFax6ahoa8z7",
                'transaction_id' => "c51f2948-832c-494c-bb87-a031dcac0abe",
                'private_money_id' => "a5aee1c9-e779-46fa-8d3e-7bde76ed2221",
                'is_modified' => FALSE,
                'transaction_types' => ["exchange", "topup", "payment", "expire"],
                'transfer_types' => ["payment", "transfer", "exchange"],
                'description' => "zc4yvCmPED4Uaj4Par"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
