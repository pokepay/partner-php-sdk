<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class GetPrivateMoneyOrganizationSummaries extends TestCase
{
    public function testGetPrivateMoneyOrganizationSummaries0()
    {
        $client = $this->newClient();
        $request = new Request\GetPrivateMoneyOrganizationSummaries(
            "168c7a5a-3c81-48fb-971e-43fb064270ba"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetPrivateMoneyOrganizationSummaries1()
    {
        $client = $this->newClient();
        $request = new Request\GetPrivateMoneyOrganizationSummaries(
            "168c7a5a-3c81-48fb-971e-43fb064270ba",
            [
                'page' => 3593
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetPrivateMoneyOrganizationSummaries2()
    {
        $client = $this->newClient();
        $request = new Request\GetPrivateMoneyOrganizationSummaries(
            "168c7a5a-3c81-48fb-971e-43fb064270ba",
            [
                'per_page' => 4592,
                'page' => 4345
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetPrivateMoneyOrganizationSummaries3()
    {
        $client = $this->newClient();
        $request = new Request\GetPrivateMoneyOrganizationSummaries(
            "168c7a5a-3c81-48fb-971e-43fb064270ba",
            [
                'from' => "2022-10-22T07:23:15.000000+09:00",
                'to' => "2020-09-28T05:10:45.000000+09:00"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetPrivateMoneyOrganizationSummaries4()
    {
        $client = $this->newClient();
        $request = new Request\GetPrivateMoneyOrganizationSummaries(
            "168c7a5a-3c81-48fb-971e-43fb064270ba",
            [
                'from' => "2021-08-12T02:38:12.000000+09:00",
                'to' => "2022-08-09T02:47:59.000000+09:00",
                'page' => 7036
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetPrivateMoneyOrganizationSummaries5()
    {
        $client = $this->newClient();
        $request = new Request\GetPrivateMoneyOrganizationSummaries(
            "168c7a5a-3c81-48fb-971e-43fb064270ba",
            [
                'from' => "2021-04-18T01:26:47.000000+09:00",
                'to' => "2020-03-28T19:06:25.000000+09:00",
                'per_page' => 4414,
                'page' => 4393
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
