<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class UpdateCoupon extends TestCase
{
    public function testUpdateCoupon0()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_amount' => 9153
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon1()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_amount' => 8325,
                'name' => "XbobD9Ki30vC5rrnazdVnK3PrJ5Sia"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon2()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_amount' => 3924,
                'description' => "9q7d0MByh1j24T8jie07UHeDFjaRvAps3KfAZfCcJF6TIEeRcrhiMDEAjwsoqC0B7Kcw0qagkhJ7wfZWTULKa8VECsBZr3IToxXjdyKGc7ZzHUV5fOm8mtNakhvcdUzoLcA59nUhEAXqtCyQcPmsvpgfmd8PIAhkngoJScrC",
                'name' => "1WRAvXHATbSrzSbRU1v2KZFFhdMjCCzsHpBmrvRb2UjrXmXby0g0KQCQJco6Fst7K2jJcCqUZTewzuJ3F92QKd3C9M0v"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon3()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_amount' => 1090,
                'discount_upper_limit' => 8675,
                'description' => "KWIUBdcBNwq9T0OG7VRzcPfWGO1YJqrl83WexbWjPBIcMUJ3obVqULs7PsxGAUAdxQTQ69L5ufP3C8GoKbqWo6okozRxG7O1lnWZInpqxewkSnO8G8BVdp2SnU56fm1ftu8RnsdeIRkNWykpBgBjKxJ1kVUP7sJk9W7sPqDCWwYS94nlMA9QMeCafNqHwyMd",
                'name' => "dwcWi3JTYLChkb6TlitzWaW4uPhPny3cB55XyFtx17QBRLdwgp38D246YReej2SSevahES9poV0ViKFLpI4REDYgLWo2Q8cwkpiTfx0K3NI"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon4()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_amount' => 3293,
                'starts_at' => "2020-02-04T05:58:46.000000+09:00",
                'discount_upper_limit' => 1465,
                'description' => "J11nkGfRQlGszH71XXMwwageqdiCUtiam5OCYCyW06FKS14FS73G8a3ijeaDjTIJss0bIT0",
                'name' => "qOXGSTVH9BRjr8phyPclxsBq9XBmkTSfhHrb5sDnsI3ZWUf9QMTgobmXveIIZc15XikWWDvoW8CZvliqF7CSsjWcuOJ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon5()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_amount' => 1552,
                'ends_at' => "2021-08-15T11:41:07.000000+09:00",
                'starts_at' => "2023-03-13T13:42:12.000000+09:00",
                'discount_upper_limit' => 1093,
                'description' => "htu4LwcLHvZh25xxfXebiI3VayaI3kTnTLIkpOXuMZobSfeWKzoEFQ5pyI5j9pCzj3hQwJJCjzGKx9aFgv0XlTl34KeRysjITa2wXz1O8xVGeOGcFlOxiVnFhvQYgTq0yLoByC",
                'name' => "mHUuVyH3cfcF8Pf92JXudRmeZmjiokTl117bHBnYglbQt4QBFDEJKi3AHyd9yQ5W9RMhIq1dhsWztxTud1TnBQZsbkdzCX"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon6()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_amount' => 2221,
                'display_starts_at' => "2021-11-03T14:19:56.000000+09:00",
                'ends_at' => "2023-07-10T09:24:46.000000+09:00",
                'starts_at' => "2020-09-18T12:16:43.000000+09:00",
                'discount_upper_limit' => 262,
                'description' => "KKWD0fiDnREQQDwR5XEyIFeG77xZhQ031Bv0fXxSyFQJeZ6rdQ8buBb1f9slLRuiYJe4XyJvTb23aa3twUxtKvikbKV7hqTJveoI19ynJs1QCqTRlC3W1MGePxsBFCAyv0dcBt87MHAdufVNZM7qsWa8JyqZo0jQRpDPE6rh6ExoxFn0c43cEW5yWSswalnNSPl4nKgIh67Gkz5WkqpvE",
                'name' => "vT4G0zj9vSzfdqnwxVoVRAJZtMnbN2adZxWSJweQkjDaZNU8iBur4dbIER6acqYlwDJKQEp9D3oXWbniSWqI7xTzr"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon7()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_amount' => 9296,
                'display_ends_at' => "2023-04-28T02:46:23.000000+09:00",
                'display_starts_at' => "2021-11-25T08:36:36.000000+09:00",
                'ends_at' => "2020-05-05T00:51:35.000000+09:00",
                'starts_at' => "2020-03-14T07:48:59.000000+09:00",
                'discount_upper_limit' => 2625,
                'description' => "XyiXMztQxtJ4M2WJmA50gKlydbRXM1sy2g1Pf0MqzXeXqK5rRDKBvomcRcTm4csmVWyjay9TthXSYCbva0t32yWLYVWM4QhXAPz9W0Mxm5OYGh3N4Z6M9NXBY9oPVgI76tvDyB2DnUym9pF",
                'name' => "mUved6upvYmgnlSSsYDRmoQAbzux2YVPLs6mqcLQO6KAfySYCh0uqCGrCwLPsZTQHaYj8b8oAQjqHWHEUSf"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon8()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_amount' => 7874,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-10-01T01:12:07.000000+09:00",
                'display_starts_at' => "2020-07-31T11:31:38.000000+09:00",
                'ends_at' => "2022-02-11T20:16:19.000000+09:00",
                'starts_at' => "2021-10-10T19:24:11.000000+09:00",
                'discount_upper_limit' => 6880,
                'description' => "FSQYVjyMJi1osniwzvMM5724wrvJulOUj4A8M3jM0zpEWete9qDkCIpsjezZ2M4DgCUcWaYN25M17e8QItVUDPdnGbbjUMIkwxnSAoHyUqS2WrdyexDJ",
                'name' => "w4m5W5NSAarqtGtlcKJp9gTWhEWSlBiVnl9lORTBFy0IWWO4H8KmbVB2M5EGOlNZgqvSi38sr7tIAdAm2GfCQqu6PVWox"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon9()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_amount' => 2523,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-05-28T13:12:00.000000+09:00",
                'display_starts_at' => "2022-12-21T12:29:46.000000+09:00",
                'ends_at' => "2022-06-09T10:39:23.000000+09:00",
                'starts_at' => "2023-10-31T09:59:08.000000+09:00",
                'discount_upper_limit' => 511,
                'description' => "TfrAqAyLdOvPV5cpp3AIIQZmW74G7CnNpvzFPpYINeb1rEwkSNbZUKM9QJifASeEjt7r",
                'name' => "gfB4dUvUA5MkBayzjLixvqernP2ia0JTvsqFBudb"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon10()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_amount' => 5575,
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-02-19T01:48:10.000000+09:00",
                'display_starts_at' => "2020-04-01T14:31:02.000000+09:00",
                'ends_at' => "2021-08-22T14:11:52.000000+09:00",
                'starts_at' => "2020-01-16T22:52:09.000000+09:00",
                'discount_upper_limit' => 6469,
                'description' => "GzzDd2lyZr3fyGm4G1h2gpnMz4EtR2vopXxSWiIg6gduAWVf9XkDSsioG64sbfbtlCMIRDD7seSSxbRy6",
                'name' => "J2yU6TRb2QsyUYaFBg0rLG7ixw8rumX9lPF6p8o2y11Yrgt4LCmHaJMs2PMcoeItTVcWkxXihexQXo312p3Wls"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon11()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_amount' => 6789,
                'code' => "sE",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-11-03T21:39:48.000000+09:00",
                'display_starts_at' => "2022-01-12T10:02:14.000000+09:00",
                'ends_at' => "2020-03-31T18:45:28.000000+09:00",
                'starts_at' => "2021-11-17T17:48:05.000000+09:00",
                'discount_upper_limit' => 6220,
                'description' => "ZQtWWfaD4rWZB2GIm3dWvJq3fHzlHa1nO6pf4h9ws9kLnk6cNbb0JJrPLyLIGGlYxmDF5NDmHAR3RBnK72f11paMW4hGPanWOZJLbDfcebA2uxdCspznoi6atFNTbrEABXoODKwUOy71jHzimbjyuBcqQnQ9Lj9uq1rjYyblkDRghHjQDZezbRZC9FxfNOIHrbpOq6mcQRKL5CG2GPSQQB1U6IjRsZr2eFWg",
                'name' => "bnzGrBQcbaSK3iX1ZFYsGd1YMLCaCs0F5"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon12()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_amount' => 1520,
                'usage_limit' => 3179,
                'code' => "oUcbMvLHG",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-04-20T15:01:06.000000+09:00",
                'display_starts_at' => "2020-12-20T23:14:20.000000+09:00",
                'ends_at' => "2023-12-18T06:50:00.000000+09:00",
                'starts_at' => "2021-06-29T09:02:00.000000+09:00",
                'discount_upper_limit' => 9519,
                'description' => "CLPQ5GJELxIJ85m7pWO5Oq5sU8iwoJ735Qje9VnUZQt0pzes3TegY2AoCAsHwCP5A6Scunsmt5agjEkUDn1nh",
                'name' => "J0PoLY33AeuLX1vt0Xc0DOPIsjoZ1AHyJKzNRcJglLKTrsJZ4L"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon13()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_amount' => 2850,
                'min_amount' => 356,
                'usage_limit' => 2687,
                'code' => "fCC8uQL5mC",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-05-12T18:42:26.000000+09:00",
                'display_starts_at' => "2023-10-14T06:27:23.000000+09:00",
                'ends_at' => "2023-10-11T02:28:11.000000+09:00",
                'starts_at' => "2020-04-04T08:37:53.000000+09:00",
                'discount_upper_limit' => 743,
                'description' => "GEM3GfsC9B0w8zKt6bQig1LgqOPtR6wzZdUh56Q0WZf8IPC7BRlPxu7PJAL2SSrdIkCx2w3UniyERaYjCV8kJefHmgXwlVomKPcnp5Z68uiRVcRs6iSVq6CAE1cykbPfFVTBynTVWrp1vTM1qsdO4ANmXuI4pjaa3jMjNf8XzKneiyaJFmKrTqfSFemIMfA7XBmcoIx81EXrZTOXzCYdtNcSc50TRhvcOBTaYtXxGHr",
                'name' => "5BD4DZSX0CKWqFPB7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon14()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_amount' => 6767,
                'is_shop_specified' => FALSE,
                'min_amount' => 8082,
                'usage_limit' => 4327,
                'code' => "K3lXTpk1",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-05-31T17:36:21.000000+09:00",
                'display_starts_at' => "2023-06-14T05:02:09.000000+09:00",
                'ends_at' => "2024-02-02T20:53:32.000000+09:00",
                'starts_at' => "2020-07-14T22:21:54.000000+09:00",
                'discount_upper_limit' => 3338,
                'description' => "MC28qImQU81piDFRyBs61QA64ubFmiSNGPB6PWeR4fjojaItl7qDDn",
                'name' => "fDz83II3SsVbGfWZSjJAztxkiC6dodh0lsFj5rFalo907TQSGuwj68ad9K1XBWVYxIt1hLKB6GROESgi9KMGwAvz"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon15()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_amount' => 6644,
                'available_shop_ids' => ["59559758-f044-4498-a085-78a5740bd92a", "9d4b96c6-614c-455c-9a3d-13e8f7e6e02d", "8d750373-4b6c-40f4-b3f8-4aeab9c75f48"],
                'is_shop_specified' => FALSE,
                'min_amount' => 9816,
                'usage_limit' => 7516,
                'code' => "AeaqJ",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-11-12T06:55:25.000000+09:00",
                'display_starts_at' => "2021-05-20T09:17:02.000000+09:00",
                'ends_at' => "2021-09-16T21:53:40.000000+09:00",
                'starts_at' => "2023-04-30T21:43:05.000000+09:00",
                'discount_upper_limit' => 6736,
                'description' => "E4BeJCcIbjYCJA60910zNdhVnyX3",
                'name' => "8KqA1fv"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon16()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_amount' => 5099,
                'storage_id' => "d6d79d86-8cf9-413b-9195-05720ad8c18d",
                'available_shop_ids' => ["a27af2f1-10e3-4f2e-acc6-2898981c2d0f", "c8d7aed5-03c0-469c-b99c-abea01f0396c", "484c236a-9bc0-4eef-b0d6-3bf238f740af", "e5471913-3ad1-4d24-94f2-4ae24f9b5156", "72629bac-1462-4d24-97d5-96f2b7cb959c"],
                'is_shop_specified' => FALSE,
                'min_amount' => 7109,
                'usage_limit' => 8287,
                'code' => "2Hhlc",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-01-08T00:55:41.000000+09:00",
                'display_starts_at' => "2021-07-21T21:19:13.000000+09:00",
                'ends_at' => "2023-11-20T22:17:31.000000+09:00",
                'starts_at' => "2021-01-10T08:41:54.000000+09:00",
                'discount_upper_limit' => 8462,
                'description' => "x8FEGzWXdbWzamEGXFO5PHpjsIS4SoPDOBVrOHFo8xzE1tgCZyMtCfVQXKeHEaCm6v4bOQPdSecOojChLhuEaRbGgSXO57u6cTOWbPpHzT8SBHVxA4uTsQXNQLVTsa7Enw9cnxOrtkyrYkFM2fsUIFcBc3xUhfvCQABU9yhdPlghv2VJu1lljCVVYSCGNIDxlSztThgX67n2PgbzVLVHAuqN",
                'name' => "KSFbkQwzExi4cSpvsggIAlYenv9bZPRWKzkKRFsQ10G0TlaGn12vl36ewyKaB6SHyKZZn5jR7G8GZiBnTaU"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon17()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_amount' => 8935,
                'discount_percentage' => 9783.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon18()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_amount' => 1664,
                'discount_percentage' => 8861.0,
                'name' => "mTLemMZeIt74bhbcXSO6mPwoW10WefOcGtzUdCSHPXTvrjAoBOkN"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon19()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_amount' => 6951,
                'discount_percentage' => 908.0,
                'description' => "5LysIScuFPNL3GzqnMP5NZDifqWbMDgjD68XvQQECUSjutOosOC5LZHJPKApv7OfARAe3RnFd9nT02p1eaStaJkR7kpHzHVrWIJ1LETykZPKAQBgMPUGbEnOIPDq2CLAbjX1Djn2XWSwjThwDAcCZY6YtawxId266BZVwZVmHyD1UpI6d83jiZ9uTzP4YjXFZyT5vOgrOJYvJ3LNaiOIeknn7RYaYRsrRINAXrIL7",
                'name' => "Vokdd5FDSOlHXvPdm6smgX4oL5ObnN7xsSw29hgwVKZ3q7f2G5Csbw765Up6rDPAv"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon20()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_amount' => 9470,
                'discount_percentage' => 4760.0,
                'discount_upper_limit' => 6692,
                'description' => "gZ3Lft7QdtUV0xBtYCY2peqF3OIROYkI2OmNuQfBQjabCuZA7I27PPKAWnF0PAVPIqlw5xHvbneEVFJO1vUShUNViyLhmVZrKtrf8fOXhtgmBfxN2mKWhxAVox0bSxOCe",
                'name' => "Mv9sV8PCVe8gGULXYHHQVItPbBIgVhkWUs64kjPOvg7oSgfBaWrA04virOZrFH9lNvZWQOhHbcPsVzudSsho4D4Vucvtqjo5Tx"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon21()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_amount' => 7144,
                'discount_percentage' => 5581.0,
                'starts_at' => "2021-12-27T23:33:50.000000+09:00",
                'discount_upper_limit' => 9032,
                'description' => "QM1DHEyhnbl8ZtFdCq3PjvYo6pCNI1mfIpJ9f4NksvlPiC4Vu3XtdH9FsNEZ86HjJPe4Lp6lJfyvAGgrUXXkhfXnecRVysjqOC6xGnpm1kxDBXzRf1f9JiZjCJBrJjt5kCWz5zMWjynyv6KSgRW4BSGACMY5nowhDUZD5IZKMp0STmYDwTtHP0EcP6hogkn6nAjgTjLkVtsanieCAlqrCK8PwmGod9YcEsgY2DC2Vj8cKXwgERagqKSGsUKb",
                'name' => "oeeiIHlMnCdyvxKvSO"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon22()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_amount' => 1492,
                'discount_percentage' => 8566.0,
                'ends_at' => "2024-02-06T20:37:00.000000+09:00",
                'starts_at' => "2020-03-13T22:24:19.000000+09:00",
                'discount_upper_limit' => 9791,
                'description' => "dFyg21jiUhByaB66BNcapTyLZWxad9qMqfjUCaVImVTzD7ogGgbbuuhXvkkv63jx716j9qYeQTBsHYxIvY8A2kLLFzDvGgwT6RWA89QL9Vp03GIkTp5cuONNVFc9v9gdz5hWfe1J2XdVSiGrZnaj14JqvayOvsUjS1TQRpGXwusKVKoDVo20K4pvhym0ixofoZrqcO9xmrGI7Yq8b7zKf4Zjq1K3jlOjYQfsbEScihoRIGPs",
                'name' => "51h35D6RqOUv7GYFIehbCx0by4HajPsFnZyPkDxfEbj7EZcJNWp"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon23()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_amount' => 2160,
                'discount_percentage' => 27.0,
                'display_starts_at' => "2020-05-17T06:09:40.000000+09:00",
                'ends_at' => "2020-09-08T06:03:26.000000+09:00",
                'starts_at' => "2023-01-06T19:48:32.000000+09:00",
                'discount_upper_limit' => 3784,
                'description' => "JtG7uLWNnv9bkjUCUVfq92VQxP0FMeHm2Gc8mWOktzQrw5GjJ8uGQSasHDUHsEK1qalHwNsBFFvhBAfKd9pYjNXINvRo8XrSFeFKEUniweS0acjh4qrH7klovo9x1qmkFFjd91zhnaGMzUdCsP1zaX0YECE0zSsUS9uGcWpU50I9EOF1CbY7DQvP",
                'name' => "yLth6tJk3Z9fxM6OljXWNCah5Q3Axy3"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon24()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_amount' => 70,
                'discount_percentage' => 3400.0,
                'display_ends_at' => "2023-08-03T02:00:51.000000+09:00",
                'display_starts_at' => "2021-01-09T09:07:03.000000+09:00",
                'ends_at' => "2021-04-17T09:39:20.000000+09:00",
                'starts_at' => "2021-07-05T12:02:16.000000+09:00",
                'discount_upper_limit' => 108,
                'description' => "L9hetKrZtdVOY5mSWLpoOzWuTFDp0xZJM",
                'name' => "mZyM3omHaaYolohp4juaWxRzzc4S4bskUY0GUghtLrKdmw4Mj2vrs21Q3QscjDt5dNl9IacbccU5Qd92Qhefxi61LsaPXprVMDsZV4dkyP5lnQ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon25()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_amount' => 5476,
                'discount_percentage' => 6459.0,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-05-05T23:09:22.000000+09:00",
                'display_starts_at' => "2020-04-17T20:27:51.000000+09:00",
                'ends_at' => "2021-02-12T00:50:15.000000+09:00",
                'starts_at' => "2022-05-08T02:49:30.000000+09:00",
                'discount_upper_limit' => 8754,
                'description' => "WwubsLa4vnCWV1QVssD1Im12VLZ8F0u3SxrrH1vjl84VkWU20DVNhF1QRXrkY",
                'name' => "NIOtHHG8yHnSu7dDAUDz3Ba7wXTCzgYCbLTAWi1ohaetM"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon26()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_amount' => 782,
                'discount_percentage' => 9498.0,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-10-25T13:04:23.000000+09:00",
                'display_starts_at' => "2020-06-20T09:15:58.000000+09:00",
                'ends_at' => "2023-03-12T01:10:20.000000+09:00",
                'starts_at' => "2021-10-05T00:47:58.000000+09:00",
                'discount_upper_limit' => 8764,
                'description' => "aonbTVSEX134CEzJmLXodVipQoaS9jpxZmBe1IVqn6l0xvjbPmp4eCBlLWO5LUEEnWeZcSGLtIalNYra2M0CMIf3qWb7LuUMWb2crh",
                'name' => "AOjAg46Wxwepf8NCoyrEsYCM3co0m5f7Zf0Wz840Yp6"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon27()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_amount' => 8811,
                'discount_percentage' => 8094.0,
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-03-12T16:47:05.000000+09:00",
                'display_starts_at' => "2022-12-23T23:47:46.000000+09:00",
                'ends_at' => "2020-04-09T01:30:46.000000+09:00",
                'starts_at' => "2020-01-05T02:57:53.000000+09:00",
                'discount_upper_limit' => 6401,
                'description' => "YbRmw",
                'name' => "vxymb30gk854pQwTz"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon28()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_amount' => 5485,
                'discount_percentage' => 6698.0,
                'code' => "QFV2uDF",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-01-28T11:04:38.000000+09:00",
                'display_starts_at' => "2023-07-06T11:07:52.000000+09:00",
                'ends_at' => "2020-02-16T09:28:41.000000+09:00",
                'starts_at' => "2024-02-06T11:01:25.000000+09:00",
                'discount_upper_limit' => 8425,
                'description' => "8EFMWMycoOxYLCK5275yaFTfZztXuQw4RaWFmQq3HxE1cttSeGuAJyXtCyfPpoPjMTr8crob004vlXwUsthEoZOk8UXfYg8fdpzyB6W0dkeo5uEqZaCFDcbEj9ISDmaB2afkehiCZS1KVArQKeygi1aTs9dwArWQhOtANqAqTESOlpuGW5FhrbDgJ77XFXl4NKb3zycQebaty6OYZVBO6i7OrH9y83Qq",
                'name' => "XgWF2opiVdC1V5KC13EYjc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon29()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_amount' => 2808,
                'discount_percentage' => 2910.0,
                'usage_limit' => 7467,
                'code' => "JwZkwVK",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-01-08T07:16:04.000000+09:00",
                'display_starts_at' => "2020-04-10T20:08:03.000000+09:00",
                'ends_at' => "2022-08-06T08:10:22.000000+09:00",
                'starts_at' => "2020-07-10T05:53:35.000000+09:00",
                'discount_upper_limit' => 6669,
                'description' => "x51AwtpZIv6uv80k2eZHBR50sHyhGa26QKgCzW91ijqwGz4iwxLvGQu8AItYv5ALjIimTwKA5k60bA481CWCvSZBvCgqCd3bRt5kX2boQlLinyfuc6vmm92pmKFDO4dzrTnN2hnl6jClpe10uHCcbxZraKIE5JV72jwXeLc5ziCQvgnEPrwn8MGASAuLD3W",
                'name' => "Jqm2LErGcclueraXSCDvzDuhvkKIoa3xl900hkmeYLn1AjsWrIn7wWX9Rc7bgZ9BG44UnK5kugEbv"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon30()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_amount' => 4389,
                'discount_percentage' => 260.0,
                'min_amount' => 6968,
                'usage_limit' => 6644,
                'code' => "i1UG",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-04-15T09:44:03.000000+09:00",
                'display_starts_at' => "2022-09-29T06:21:48.000000+09:00",
                'ends_at' => "2020-06-07T01:58:12.000000+09:00",
                'starts_at' => "2023-11-03T07:01:04.000000+09:00",
                'discount_upper_limit' => 2651,
                'description' => "dwkN30KxIK4R69fUEBg5VG6fY3BMw3LzyuQr74JtjTjvnySfqw4U7H9TvwAB8eScBfn1Rj6bF7qwsumEcO5tiAsHMCj6rQ8znpAP2Ct8CHPFNDEoS5JXEhny5IMhsG4v0CQldqzxJ6XAxrUg5QJXjIdY8iZkaSGkcJKeradqBxAYjByUEnMrrxLZOgOaoYWcJG86z8KVqUt2uzqsseXYFYKRp5jWej4Zir",
                'name' => "EPOVCpM4N6VpPYojnLWN99oUAp27dRdHXT0bu9kBbfQDVxrOePjXnEEo"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon31()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_amount' => 7250,
                'discount_percentage' => 220.0,
                'is_shop_specified' => FALSE,
                'min_amount' => 726,
                'usage_limit' => 4001,
                'code' => "Kj",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2024-01-17T23:37:44.000000+09:00",
                'display_starts_at' => "2021-04-01T03:43:21.000000+09:00",
                'ends_at' => "2020-11-03T19:38:33.000000+09:00",
                'starts_at' => "2023-01-03T14:28:22.000000+09:00",
                'discount_upper_limit' => 71,
                'description' => "xwaIDAEfbXDBB3FNIL8Usakbi9ZrjBPmCyriSuUZrqYwqtbArFxY0nh8lQ2iQavwvhDr8TNB4vIcRTpSaCV5lZtxsN8hQh23jWL68GyttBaIaA6bT2oimSP8aDw1fwYQo1a8Jvio1NlXmWokT3fCZ0aqdulZZGglvs1mmHvcGJdXuMvjofsG8E4KIFxs3y0EBuTM1S0iPJraQIMtAPJ1JN9CtWW30Uo",
                'name' => "UAg9arJ4XCMrwN15cIxDvF6fUC0OQCualYkGbJ73b3nYCrV9uDJeh"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon32()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_amount' => 167,
                'discount_percentage' => 4989.0,
                'available_shop_ids' => ["625c2211-4a23-4118-98ca-90c70e1ef0e6", "da3ae71a-721e-4d5a-8753-3b029a8f2e60", "3923f76b-1c1a-4c0c-8fa7-027898682896", "f408f17c-078b-4224-a106-a5ae84a56134", "8d1c0ca2-80a1-4412-87b3-c0ce5660bbd4", "dcab24e9-60c7-4fc5-82f6-a10ddb79649a", "0e8db49c-d324-48ca-aed0-8e2d7b640e38", "1391c184-7c2b-417b-9686-166abacf3b8c", "9ee90a5c-3ed6-4d09-9e3c-34ebca8c58a2", "c57d04e3-3207-4f07-9f95-29bfbb6f9ac3"],
                'is_shop_specified' => TRUE,
                'min_amount' => 9013,
                'usage_limit' => 6638,
                'code' => "npCpV",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-05-20T13:01:53.000000+09:00",
                'display_starts_at' => "2021-05-15T10:51:43.000000+09:00",
                'ends_at' => "2021-03-07T16:32:33.000000+09:00",
                'starts_at' => "2022-07-15T16:12:17.000000+09:00",
                'discount_upper_limit' => 1926,
                'description' => "1iEs8vFtOGvU65Sy7b45F1sYQbanmxI5u8gze9wV9utYjWSxV0PYaS2m3w11YOcIRgqxweZ1D5GDujWwLCtS0wYAR5oiTurYC7yg59bUqlzl8RTsqHpDWU8Ap",
                'name' => "dTbLUnpU1baTn5DB15m1nGHAyRImJ6G1b1LBudJBaCIrObUZ5ZC0h2jyrMS4IVkYp7d5uCmZ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon33()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_amount' => 3227,
                'discount_percentage' => 4484.0,
                'storage_id' => "1ba27847-f273-458e-803e-254450f4ad1e",
                'available_shop_ids' => ["8b16eb86-9673-48d9-8cba-0d577612f203", "be7c4712-f036-46db-84e9-e45dd8869142", "4102c354-33cf-4bca-874a-5a49d8f98b24", "17214b74-ebbb-49ed-87bb-faf629be7d34", "bc5151bb-6f5d-4dda-a24d-ce470d0447a2", "110341f1-182f-4779-ad7e-13df1872ade1", "c28cd004-5ccb-4d64-8dd7-d829b63bf684", "89f6b94e-f3a4-4cae-abb8-9d77ab0c1911", "4fa09505-7774-4255-baae-ec8ccdc98cc5"],
                'is_shop_specified' => FALSE,
                'min_amount' => 2191,
                'usage_limit' => 9350,
                'code' => "6S98QQghH",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-01-19T05:26:34.000000+09:00",
                'display_starts_at' => "2020-08-13T01:25:40.000000+09:00",
                'ends_at' => "2020-03-03T19:24:14.000000+09:00",
                'starts_at' => "2020-12-11T07:03:47.000000+09:00",
                'discount_upper_limit' => 4907,
                'description' => "iLlQ9W3XgJB2NaMYnzVdH4lBEl49jCEcrfCIMQObL3OoO8rAUeIJBL5bUAsdaXhLa6DeYgow42MLUfdk8XuchSqSbTRRUD8SLFRBVzctWtyXmcrdg7VkR4X33FNwVK3ZsilsWVKactBtuAItB6ycarokvOGbxOtjjILQMz1SYbigi3uqGy9JaET7yaI77xfyzjZfk3Eg446tN2eZbvNHRDlrWw9qEb2",
                'name' => "szC"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon34()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_percentage' => 7776.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon35()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_percentage' => 88.0,
                'name' => "BkkHRCtXprtOEGF7FA7qtYAU5XoCNIUER98LHSRVry41mwGLHNUS9ycac0Neld0xGYOxpvYgvz5c96ZecqU3VE5SiDh8XYp2Sb6qswUL8UZ6V9wGI85BEYoVTObCbA"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon36()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_percentage' => 5158.0,
                'description' => "B9ZTLlBVIhK6pPNqnVaACzTnU4fw9nHGh382d4IcuvP4sfykROqGA2kGIKWn7WmxLFKf1vULaBahAeJdLNgTdHrnXru0CK861yZBwzeoylnePV0HOJ5Mg4Lqjra9od5pOMZG0Q1epC2P9o6ZPNLGB22OwLCnaLili3chmVxHdB9QfCurmIpiTiNJmdhSFJZDo3oq9jSUkc9PdtCnJGKBJDfwGwTHxDL2bOdXfkEBpMjbp",
                'name' => "PBsioaYW8Yi4hZj4xdPTFTA02UZKecENyKp2Io7TZBqCIqL4rp2EFrfcK15LTb24Ur3n"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon37()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_percentage' => 5242.0,
                'discount_upper_limit' => 5129,
                'description' => "NHJH0RK2HZRZXaO0yBwCPt9KlGpQkqx0Eg2tYlbUkqmQv60CMZa5pywmhrY89J06nrffjpXgwax0yxzxVt1fgZx65QyqRA0ErxUFPGG3NtnfgRNPusLiOWBNvfaPU20jqHqD7fumjHr0s87ojVjQllJBsdX8PqB5vj6KZvk9I14B0wJjv5PZV8BzD6xxeVZJr6fOg9zsFZTThoFxk",
                'name' => "xW9hiLZrgw5GsDKhgqi6fonQRpg8o6w595UPezcgZED4PiUtNnp74WiiOwd8iyY6Z0zhmmU4qjfXM0iaeCNkqwEBU16Jq12CxO1vOYhEe55St2TiyraOemZR"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon38()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_percentage' => 3561.0,
                'starts_at' => "2021-01-25T06:47:49.000000+09:00",
                'discount_upper_limit' => 410,
                'description' => "chwL6b1jB1Cg1nBSU78Sxgo6Taagdxx1mLakIn0CpIISvuAWSZZfn8krGsRTJuHW0p1Ch4TRpHb3xaMjpGa8gaJHdl18J3d41BsVgtiwJjEQgl2khqccOMjuNbV7gJFoloels8545DuKxo1Vi0yj9LZ0SyJWAaPdTI8GQRoTVVLo6s0iJqu2Tp6qxM61gVY0GH",
                'name' => "358hWkV2Uf2KtDFhJ8HG79vPf61T8wOYbBgjhnixJKbS"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon39()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_percentage' => 9304.0,
                'ends_at' => "2021-10-05T09:06:44.000000+09:00",
                'starts_at' => "2021-12-03T04:59:12.000000+09:00",
                'discount_upper_limit' => 1630,
                'description' => "CrQ2sJdGjdCNpP7vZgP6rij5EfD6DtnR73iSkAgC1lY6yupHUdfLL0DHjlwSaRnmrgoUZ8HPu",
                'name' => "G9MGiaGFzsfWWWy9Im8UxT025mhbVLEYZVZOefO3wRMVsdsI7UYvxBYHMaYiviU38jqbyVWH5DFcnmWcaw5XgZyYFJIld"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon40()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_percentage' => 6375.0,
                'display_starts_at' => "2022-09-27T05:19:39.000000+09:00",
                'ends_at' => "2023-09-04T06:25:50.000000+09:00",
                'starts_at' => "2020-07-11T03:08:44.000000+09:00",
                'discount_upper_limit' => 2811,
                'description' => "hDa91EmSrsQOnBNxdurOw7gkjQ3wpef72Il4E5ZWsSecp",
                'name' => "Iqr43pcjq1LwdcVMUb7XEBzGNu"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon41()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_percentage' => 6031.0,
                'display_ends_at' => "2021-02-07T10:05:45.000000+09:00",
                'display_starts_at' => "2023-10-12T06:27:06.000000+09:00",
                'ends_at' => "2022-06-14T11:06:54.000000+09:00",
                'starts_at' => "2023-10-18T12:03:03.000000+09:00",
                'discount_upper_limit' => 5804,
                'description' => "1ThKXaIyaVVhfSd3BmnZxBBpR9nxMbDW2Wv9nIAuvJ07T9KHTjKX",
                'name' => "9sc30nVHddo9MOLvGZ61adHIt"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon42()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_percentage' => 1399.0,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-03-15T09:46:55.000000+09:00",
                'display_starts_at' => "2021-11-15T02:30:39.000000+09:00",
                'ends_at' => "2022-02-27T06:51:01.000000+09:00",
                'starts_at' => "2020-05-17T21:53:00.000000+09:00",
                'discount_upper_limit' => 9028,
                'description' => "j8FvTz5QBGaQdIsgWXQM5x1yXUhp2cjgTiUn5rz1pVqBgYfePziyv4mtwf363wthBO4FjlbNSGHxbjuEMAeQokaUOBkEJMomGEE3qtgKMvjDsKXEFhYl0BRpqUDYmqwBJzhV6dtn",
                'name' => "maJHCLyhHLjUCzekHgQwDCfsWS6JXTLuG14K9HQGpPICoaRhYRcaR59QCffGIaaiPRXQUB9KSDwnfHx9gXjCberbb7S8DARwQI05I6eJLYrFtVTc8XF6"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon43()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_percentage' => 6857.0,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-06-19T11:55:44.000000+09:00",
                'display_starts_at' => "2022-11-26T08:03:03.000000+09:00",
                'ends_at' => "2023-03-01T18:32:09.000000+09:00",
                'starts_at' => "2023-02-21T11:17:28.000000+09:00",
                'discount_upper_limit' => 257,
                'description' => "e5QYfhFsP0lBKY5Zym6qbNd5Gezpxyuuv2alBrKWaTbSFgzh7CQVHCWblj8QDbDxzNolTpcO7N2cnroE2RpkIIvh8Erjcl3cz1nNJcHwHlXpjEUxFP9ZbCN8RnV7Q3f92KNkDfzWRiioT9QYFPklAn30gj1CmaOUBeCZvfeO7Sgh2QcnuYHCBxXNgm1qjvh6lwQ5YfQRfoj2wOYmg9391o91QzyCQzu6",
                'name' => "PMATfONJfxW9vGUYm5paU0VcU72VDfrMfAvz54ATPoiAdZgkLgRvu594uUs00"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon44()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_percentage' => 6839.0,
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-09-13T10:22:07.000000+09:00",
                'display_starts_at' => "2023-03-14T09:50:19.000000+09:00",
                'ends_at' => "2023-09-24T12:32:53.000000+09:00",
                'starts_at' => "2021-02-14T03:12:17.000000+09:00",
                'discount_upper_limit' => 5875,
                'description' => "oKdSFtNkw4qjPQJ7jTB834RHyBZkwsIjZ1p1bmTMaDirN4G2FVcRAILTPQLxfz7QYzqiXv1dBYjUZmnwyS1mAzTO6PEOOvujUYEjG1bsd93HwfuPWrouBgDOWBAyx1cuEYpTU2CQDBEdrTGpzQaoH7roprIUCAGYbFfz98qEY",
                'name' => "3fTBqIMEk6UFEGcRCIsN4Zfz8ZjlCqkGEh1KM2WnPd3zzJU6PO3sdcI8PDT08v74BI2VPe8qds4I2MEA4gJjHtGd0BbRBDVeSYn8uvrsJwmXqAKgViXf"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon45()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_percentage' => 8754.0,
                'code' => "eJi",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-05-14T15:52:50.000000+09:00",
                'display_starts_at' => "2023-01-19T06:31:09.000000+09:00",
                'ends_at' => "2020-09-03T07:42:28.000000+09:00",
                'starts_at' => "2022-10-17T20:06:38.000000+09:00",
                'discount_upper_limit' => 1844,
                'description' => "XCU5aG5xcoPdJ6AA1qyCCpsvposWm2l4",
                'name' => "1CxysbDiZ7jcWk9v3rFUsJH0jVcUr5HWJNhtXiY"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon46()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_percentage' => 1685.0,
                'usage_limit' => 5022,
                'code' => "5phVTxCRdi",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-11-27T11:51:28.000000+09:00",
                'display_starts_at' => "2022-02-14T14:36:45.000000+09:00",
                'ends_at' => "2023-06-30T14:38:40.000000+09:00",
                'starts_at' => "2021-12-09T08:55:57.000000+09:00",
                'discount_upper_limit' => 7589,
                'description' => "EvBgW4klcH2ny0NUmrDOqBFYNnMLa09HShYwuBZNHwHLuF2sQorRpPsZtE76w8OXjsudRpCiPYzaozDVed5HY97wwuPUMWYXfSOYkBqdKQHMj0xj5uvmLIH1QsPN0PjhwTGf2mN1F2zk6ohGQXXOWGMzSPyYX4Gz7T7Okc8H49W9k1eK7Preq8n0M5cjWnymvcVzayJGxdq",
                'name' => "zoO9uXS4XBDN0o0Mu7ieKvzIZjqj"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon47()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_percentage' => 8000.0,
                'min_amount' => 8623,
                'usage_limit' => 9270,
                'code' => "iQDb",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-05-09T17:57:40.000000+09:00",
                'display_starts_at' => "2021-07-11T18:42:18.000000+09:00",
                'ends_at' => "2021-07-16T23:27:16.000000+09:00",
                'starts_at' => "2021-01-24T01:57:48.000000+09:00",
                'discount_upper_limit' => 6641,
                'description' => "f5I0WmQsV3ZqnN3F5j5hei5eenuWOLqxpAqKhr1PiatJCFbxFePHe8fLp7pWtBDbGEkzsRtHz3ymmInXbIX7AIIYKuFyd9WkOS8uJqFVIWZBtq3jnfd5KTcWHD2AadOYe9kazoxyRuU9Z8Q2HvADi2W3bSFZd",
                'name' => "xGhm9VbcZgOZ4yYRMkHKY2yx9gLKmBFLvqK55BnlHTaFsTxQXtMZL6XWg"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon48()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_percentage' => 8584.0,
                'is_shop_specified' => FALSE,
                'min_amount' => 6237,
                'usage_limit' => 6253,
                'code' => "ak1eol",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-07-16T23:19:40.000000+09:00",
                'display_starts_at' => "2021-10-01T01:00:50.000000+09:00",
                'ends_at' => "2021-07-10T13:05:32.000000+09:00",
                'starts_at' => "2023-01-23T07:50:30.000000+09:00",
                'discount_upper_limit' => 229,
                'description' => "Ur35I7ta0sw71srL0z9GEG3PXvnl3BKAcPvmXPfih5KNNjURd2N8Uca7AszKQRtnK9OFQAZk8lWFzl04cFD8UrQW71JWWTZgcCuDt4bOl52Y9Vo2q3PiHBjRUpdSYSIHe7WRd8QgrTh5gg3jBLh2J3dK297uJriMdLcWHclyy16UsYQYNNbAndnytowLyNOYLTsHdNmWw0EndFxsvgPufRhkZS",
                'name' => "PkBFVSotgyldVmaPxxkTqOmFrFIeeAGW6tZ8ccBHHSscpO2n832d6dquF6eiZ3Dd6WSyHdflPL"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon49()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_percentage' => 1304.0,
                'available_shop_ids' => ["724c19f8-8058-459d-a3cd-f79f88fe7a23", "47c48d4e-331e-49a0-b171-7a0a33e35ec1", "483428a3-95ff-404c-90f7-3def80289c47", "20da6157-a160-4476-9efd-5d4823b47c65", "31812109-b289-43db-acee-539447e8f4fb", "67620068-c260-4391-81c3-d93f7f5cd92e", "78da0776-6b64-4a79-bb01-03cf1c24280a", "a8781f35-1e68-4d25-ab4b-611015e7d889", "5363b2e9-4ea0-4db9-955d-e0baf2952c23", "230c104f-2027-4a9f-b2a0-4e3cef87922f"],
                'is_shop_specified' => TRUE,
                'min_amount' => 1309,
                'usage_limit' => 8703,
                'code' => "jiZ6u3x2",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-12-29T15:41:04.000000+09:00",
                'display_starts_at' => "2023-01-14T01:49:49.000000+09:00",
                'ends_at' => "2021-11-27T14:11:06.000000+09:00",
                'starts_at' => "2022-02-25T01:39:38.000000+09:00",
                'discount_upper_limit' => 535,
                'description' => "Z5a5g6qUYzSlCDa2sGdGVrQ24o4nKCzYGzzQTWE3lYOg9rxxthyfXlSvfosPd1dV4mUaevGo2T7nnwUuCJVK5LAGSeliWWE3p7BNebn72rKlC8xS0lGxuRh661U82b0yeYo5zfOAgdSLVNb11hZJnWEH9hNdPtUfATWqt0PIkhoWI2jo5XiCGDGRUSQL1ViXus5xn7MbZoA",
                'name' => "GyvC5m86vU4CTunlo9FHcvhpXn1f9WUvYvDDo3G7amxcKXWGa0ExI5ea"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon50()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "df9721ab-74a9-4382-be1c-ab7c916bc553",
            [
                'discount_percentage' => 8124.0,
                'storage_id' => "8b1b66c7-0285-4ad4-9a09-c1cab862d4e5",
                'available_shop_ids' => ["f97af61f-5a53-487e-bd6b-faf3aa24a441", "b384f520-3dc5-4f6c-a2dc-425c66d0e134", "e266b207-af81-4fe9-a7c1-e66cbe772123", "1a648dd1-353c-4d1b-85fd-018d2c05646a", "7733f0cd-d38c-420f-b06d-1a2e10ba2dde", "dbbee486-51ba-4049-b674-f112b7c65675"],
                'is_shop_specified' => FALSE,
                'min_amount' => 3369,
                'usage_limit' => 6987,
                'code' => "A8G45",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-05-17T00:24:06.000000+09:00",
                'display_starts_at' => "2023-01-20T00:40:43.000000+09:00",
                'ends_at' => "2021-12-05T23:56:33.000000+09:00",
                'starts_at' => "2023-06-25T05:35:13.000000+09:00",
                'discount_upper_limit' => 7278,
                'description' => "lQmTFdCRQoNs8we7kw42AF3DTjcROuetQ8zFdMo0VY4tUGROiwu8g5jegd2tDc5SvOZdXc2AVLuF8gaKQ0OEhkP9BLs49M6H6epGVtu0HPhsCKuI2bJUy",
                'name' => "IRN5hatVHvQNYn4X1Qj8JOhaftsXxsjd7rD3p3viKfIPkJsUNb1al7E8GagW"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
