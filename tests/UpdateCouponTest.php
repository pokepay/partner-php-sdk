<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class UpdateCoupon extends TestCase
{
    public function testUpdateCoupon0()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_amount' => 1929
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon1()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_amount' => 4939,
                'name' => "hmSz"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon2()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_amount' => 398,
                'description' => "kijVCZU3lKGhLtQREzYwJu81cCpg3RoZBvi65KnSxqF9cGWJBbouI6ACMPo4HWZ3S4bpsOBlCCJFoEPWjF1v5MqD8CxgF5lk6Iz6y7y75WY7LofuNnUNCiHXNuptnfG0kQWV7O7o0QjucKGAWC1dW4DKTVILqYrqh0tnedzULV2YvQ2toO18V",
                'name' => "jzD04Xs9s9Im92GxZPPNilhGXk1yP5EAgrZoG1NJZg9fN15OkpyJPIjYSUmhv3irKPKkYvpOzr1BqmARGqHnpBCM"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon3()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_amount' => 7637,
                'discount_upper_limit' => 6345,
                'description' => "kwWbuoBEs77XsvtZ8UVjP9MxqrS6z73vGySVVHsuWuO2Jd2FMvjefBphco6IYxIZZ3qYI5BRnYYoH3kYNHxffPTt7zMnG9ixDfPszO9xkNT87sFYN8gJVFJL9KwakQPZkAGahbOwIwcA5czZ66qvCZZPgX0sMRkYVpDRHGqodWD5OUuYOYnYkD7gzsil3glcEgVGtS7mIrzk3xvclVUnT",
                'name' => "KptRaAnhP1MBrmVOchcCeWLTLlYhg76W"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon4()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_amount' => 4648,
                'starts_at' => "2020-10-27T14:39:58.000000+09:00",
                'discount_upper_limit' => 9873,
                'description' => "BIUlAUq2mhLoeJupXBhWxYGB5uMF3otBF1qZ7YIFkea7CpHQZF6OTsgGXO1bx9jaboIiwVqpbRKVS2HCm3ImphZMySPkUjwQ5dA3cxLE0u2X5k5G5GnCj7YJFkBm60",
                'name' => "fy12uPpjTmsaGIqcMwYzUXtZxVYpLVhT041UL66HKPvkLaXmUHNUzBNRFlFGFvGs7sUz"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon5()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_amount' => 3457,
                'ends_at' => "2020-07-03T23:46:18.000000+09:00",
                'starts_at' => "2020-08-22T16:02:14.000000+09:00",
                'discount_upper_limit' => 8542,
                'description' => "FBocxGQdC9LTcq7Vs277bN9KQf8zBnxanZynms5nFheareSJ5lGBUiBEdvrSGrWdN3",
                'name' => "ou1GhIyAm8JsYralYfI1O0IbVZX7GwPZyKVYZdZIE2CtouAHCx8WWv75aWyGdB5hyNsRxGEhQZArjjbBvW0eTDuDwA1DQU4aWFM1dgulT"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon6()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_amount' => 7824,
                'display_starts_at' => "2022-10-31T09:25:00.000000+09:00",
                'ends_at' => "2020-07-14T02:06:58.000000+09:00",
                'starts_at' => "2020-05-26T08:57:40.000000+09:00",
                'discount_upper_limit' => 7776,
                'description' => "g42YmECP18333vgeMq97U4OOfJvB8E7X41ci6MLdzWvOy1YzP1WuEh6FMfcNeCp9nXxdiNzzZnRwU5zkbobaqTvWJSDd3sor9PtLqrF1rMlLjg8LzqOa25I11qoetf1HKUUjLoNtV8DjJJEQwIClTysMfMrwGZ",
                'name' => "QCwQOeu3jsVi8eytx8RTqvmP8wh59Dg0bE5YWheP6a3kzxKKt"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon7()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_amount' => 1603,
                'display_ends_at' => "2021-07-01T23:21:56.000000+09:00",
                'display_starts_at' => "2023-07-11T03:02:29.000000+09:00",
                'ends_at' => "2020-06-07T19:14:17.000000+09:00",
                'starts_at' => "2022-11-07T04:44:25.000000+09:00",
                'discount_upper_limit' => 394,
                'description' => "f3fHpjYEnmvobDUeWdE4mdljxHuAMNuiW7LRVNjubabqHDUlTr0PK67dgbN2X2Ddx2tk37Y7liXXBzxLNZeoEHRL5dVOCs56YaGmraaY4FdfafKsjCFCKuMMHw6nUSNYATzOsVapXItBncuaAcAERkunkbu7PRbVKuun38h3KtaeJDrj3FnmLblBciu2415TfLvnwc7eAh7ZuXV3uKQTqMetNcXsSxnj1PPK",
                'name' => "l7llHwUiTz9RkGj1zYE0HUgqwmYMIXh01wgvQslTLtQjOUfrDv0ah0zxYrJ6gZ4Vd0FLITC8vNaAI5btyBKaa1tZGtSvcR"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon8()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_amount' => 4805,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-06-16T10:58:18.000000+09:00",
                'display_starts_at' => "2023-06-19T04:50:25.000000+09:00",
                'ends_at' => "2021-07-24T10:35:11.000000+09:00",
                'starts_at' => "2022-05-12T23:52:35.000000+09:00",
                'discount_upper_limit' => 1512,
                'description' => "6GAwkTf1hSXAZWuafxCczhFxWh6WqV5jg1GsUXLsIIbvMXP7Eg09zN6mJvFojCS2Vx60IG4C8WcaGxbzmz9EsgdMmhURxbK00Xc0",
                'name' => "rFa8KRghhKo6"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon9()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_amount' => 8653,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-01-03T15:37:21.000000+09:00",
                'display_starts_at' => "2022-01-13T10:17:15.000000+09:00",
                'ends_at' => "2022-06-19T16:08:32.000000+09:00",
                'starts_at' => "2023-04-27T10:09:17.000000+09:00",
                'discount_upper_limit' => 5415,
                'description' => "vArbdbZk19e7VJ1pqHZLuiRw89OMcwytVp5KaclSrQoDB0ZurESeKqnbbq4ByOhGy2P3I7hSvujFLbqhcS7uwBjkfOM2fiOvqWyL91oO4b4cAOEf6hELlo2HKzmn33UYAIJwn7FquAt4y6wYwRptM70N6O0CG1UGyw98jJJUo0ejFzzSErPCH8utZzY5cxniSTbd2YOt5DCsCJuQ1VKhjOQ9j1dTVCVZ",
                'name' => "utYFtpHqrmNAwpbH7xg84zD24z9B5iMtP5Mdx9TiUFZRBB4H2WMN3dx0RhAW1A41KlXFGNo84lZhcfkT4Gnqoif59oAPAVik75eL3qzL0X4Qy6v"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon10()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_amount' => 9384,
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-06-23T00:48:52.000000+09:00",
                'display_starts_at' => "2021-05-09T04:14:55.000000+09:00",
                'ends_at' => "2021-06-20T10:09:14.000000+09:00",
                'starts_at' => "2023-03-05T03:27:33.000000+09:00",
                'discount_upper_limit' => 48,
                'description' => "wEBlu5jExEXLFEIGufmo2P1mmgANaqKffRNx7KYqOxUD5kBG8tcjEOFHyegu31rbt9IT9QjWw9k2hpBShUmBMJdda7Mo4kdcQNoYGA0xDYkojodofsuDvehpINVGxEXMLckN5j9AbaoQxKASdp8rj7cFpi5",
                'name' => "istUVz2NUntW2LsC0EAfEPJDhVRyJ1TQGNFXI3IiLxup60EdVrLgx5Cs6ml5ZQJpTgQd4d16qlZOTAONJERRiI8pd0F1IUcIVsbQccEJp54FnagZ1PjQWd"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon11()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_amount' => 6927,
                'code' => "WhRcZ",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-08-20T21:09:43.000000+09:00",
                'display_starts_at' => "2022-07-26T11:47:04.000000+09:00",
                'ends_at' => "2021-12-20T04:03:31.000000+09:00",
                'starts_at' => "2022-01-26T22:27:58.000000+09:00",
                'discount_upper_limit' => 7758,
                'description' => "cKq4TllQhLVflaX4eUFJlJjKo2T8PNQO7WuL519ok9IFeOK9JqXwVUc8DwymZQ5tJhEfBOc3a3e7L5Ria1QQYuLXeh53CcoEBuHsl6zC9MPZ7mAlHPdtXu4NtMlEcElx4EqnyfcBGYAeZGfeegnF0Y028OhO8miam2AhtUw5xutIv1sTq7p3WpjG5Ao14zahwUoSoTZUzF8ZLz83FFy3scY22Y5GLnW0jX",
                'name' => "dSdqajsTvLIHnn77SWBes4AUVFodBDXWwML9PILa9tZE5W7disljJtN5WIIVVcKLaUbuHR12BJ3tlQ9AzChVSKOm"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon12()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_amount' => 1684,
                'usage_limit' => 9990,
                'code' => "TWv",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-02-22T08:22:54.000000+09:00",
                'display_starts_at' => "2023-11-18T23:33:43.000000+09:00",
                'ends_at' => "2023-04-17T13:23:34.000000+09:00",
                'starts_at' => "2022-09-12T18:37:21.000000+09:00",
                'discount_upper_limit' => 7247,
                'description' => "Ao8FIf6SRLPhfUQQwuultSjkUMrxzOcBxWb21QZug05F2Njqg6nh3EPOzwuvEw4ji7WXenUKE9jbv9YWN1j5GW3d0fQK204iMLEWI3OQAAVjHTLHW5VLp2qvqZkKZ2jLAetpYoEuUMsDj09qCHMPCk7FH91acfxmXWmYZ9wnGOdA8k2FP0gRhZKJUhaB7g9sYuaOmX7HH9cO1kIhZELb2CJYNHyizS3uOGyKvsq7Cn",
                'name' => "I6UGhTmot1Viqmd52S377Nj87l5YDwCDBdI0Uk7ErtU1e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon13()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_amount' => 1714,
                'min_amount' => 3078,
                'usage_limit' => 2960,
                'code' => "vGY",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-08-11T17:58:38.000000+09:00",
                'display_starts_at' => "2021-06-03T07:15:39.000000+09:00",
                'ends_at' => "2022-01-17T12:20:52.000000+09:00",
                'starts_at' => "2020-01-17T02:52:26.000000+09:00",
                'discount_upper_limit' => 6639,
                'description' => "RSgSqIuqZFyJkxgeCKUAssiL7jAVHwqHSYz1mPVCCwyTxt4LmhrkoK8j8wC8C1qFNHHX4NTYuBMMWgiG3cSGj02fKRSg8gOJ63zmKXeG87ZHhWgZgxDom1mmgnF",
                'name' => "HZ6yMu3JZcfdg1NdTy3951JQGYkaGr9FAP9lIpKACeZCKwzo56fFpMSmO2fgWhSdhyQ5L7lhXOnLdExFO3hhI"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon14()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_amount' => 6689,
                'is_shop_specified' => FALSE,
                'min_amount' => 7893,
                'usage_limit' => 3818,
                'code' => "nyI5RG",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-03-06T10:06:28.000000+09:00",
                'display_starts_at' => "2023-09-01T13:58:04.000000+09:00",
                'ends_at' => "2021-03-02T22:15:33.000000+09:00",
                'starts_at' => "2022-10-17T11:13:26.000000+09:00",
                'discount_upper_limit' => 8914,
                'description' => "1CWmI9W8UEK5C1xiv37mYJEinw3zkj0hPcF7TKhrky9DwE1Gf9Ufdw9HyQjo91BHW24cBtjJKStfX0mexw3fueHYnlu",
                'name' => "YN2UYLm7AJ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon15()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_amount' => 9081,
                'available_shop_ids' => ["cb0c5eb2-4287-4a70-b81a-2c474fb960bc"],
                'is_shop_specified' => TRUE,
                'min_amount' => 9179,
                'usage_limit' => 9212,
                'code' => "OXB36cg",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-05-24T02:05:36.000000+09:00",
                'display_starts_at' => "2020-09-23T13:28:11.000000+09:00",
                'ends_at' => "2023-11-16T18:23:55.000000+09:00",
                'starts_at' => "2020-11-02T22:37:42.000000+09:00",
                'discount_upper_limit' => 3967,
                'description' => "gHl1GYO3dRt4W4RCnbU9eSAIzXVNe2OBAXQOdjTgcQ3bAdXPVyqT0wOzrxTcdboXsriS8p8HzIchQIJlCq32qi9YLtAVq1pG",
                'name' => "eeS5MiC2bTrQdDn2pakC9ZCvs4l8hPNbtaV6740oc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon16()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_amount' => 5204,
                'storage_id' => "f050657e-0310-4fd7-9dc1-4a3ef1cdae21",
                'available_shop_ids' => ["4f41217e-4247-431d-a1e4-3c0de13a812e", "463cbcd7-a1f6-4f0d-90b2-1e3c23cb89e0", "4f81ca1b-00f8-4599-9521-648929bef1a5", "8d2cff08-9f52-422e-b784-0a6b8f49a433", "182337b0-2eff-437a-b1e5-081c3ad094a6", "bbb3f659-cd61-4cac-a249-1cacff2f2d69", "745c475f-1f28-44a9-b675-77db61468740", "50f65d86-d13e-4003-aa23-3325a79ae0c7", "f2fe0435-13b2-435e-af71-ecbbc5ed6976", "128fd06b-2618-4d80-afc6-9091abc60b76"],
                'is_shop_specified' => TRUE,
                'min_amount' => 3819,
                'usage_limit' => 4987,
                'code' => "f7obaIm",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-06-08T03:00:22.000000+09:00",
                'display_starts_at' => "2020-10-11T11:04:52.000000+09:00",
                'ends_at' => "2020-05-05T07:14:36.000000+09:00",
                'starts_at' => "2022-07-04T13:39:34.000000+09:00",
                'discount_upper_limit' => 2060,
                'description' => "ApVCVQErucmbSbF6pCgAb3wJb1ukU6fLQdqNaNawC49Y8GSSrgb0RqD3L",
                'name' => "RBzwMbIy8l9ExCafGsaLzjsXTsdxflTCRC61H1KhkglFx9BFV89bTswPpHiGXGWlgCtV6Guej03OD"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon17()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_amount' => 4912,
                'discount_percentage' => 1971.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon18()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_amount' => 5961,
                'discount_percentage' => 8136.0,
                'name' => "gRiNuzditNFJRKYqep5tEHlJ5A1RM8lpV55CaINJPdAtIDsPzlt0bGn6Ea7lvHJbXI1utKnQNV5hRoGCiffO1dubvBp2ubMryjmHfQXEbcT0V"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon19()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_amount' => 7324,
                'discount_percentage' => 123.0,
                'description' => "uwwxZ8x4DtSFYUoKwdpGUAwUVpDEuSFKGYghbPJJaZGoQhz5nbvPdYeSP0gNnnirFvzJ3b6XEKnVaQ",
                'name' => "KRDUMRHHaXbpYUFhrebFkxMFjKzUS7IFcKeHzHORaf0kASA8zmyZcHAzLysTqOh1Nable5P8DnHaHp6zqn4QC"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon20()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_amount' => 1930,
                'discount_percentage' => 5435.0,
                'discount_upper_limit' => 4278,
                'description' => "K8jzAYw3a2Rf3YPVhQIQVYdrJpOO1ZkHk0RFqBKquWfqBmhlB7fbmt2i6VCYXHn9CGbQlmxpKKNwwHXTYj9FolLU6MOWkf1Ug3iA4L13LaGtM8AhrxjQrrtTXQww0MP",
                'name' => "FKMZcNfbuwZFw7lcEdM53DHYMzhr2Gf1FT9TcEgn1XQuSsVyQeCH8A6zTJOWlvbLcApwBI99qM1CczQLOuEQfT9GHhS0KRyd"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon21()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_amount' => 9332,
                'discount_percentage' => 828.0,
                'starts_at' => "2020-12-07T01:01:19.000000+09:00",
                'discount_upper_limit' => 1222,
                'description' => "qy9ASVZnIH9OutK38i5Qp5QH0aVrv0EEzhw3t6mZXQe0dYCl7bcjvDdj25DPpm4rrvw5kg7hSIvmgSTRn7PkbaqTzHBQNsJjkYGBO4f7NVBkWfu1iOf089MbJ2zl7TqabCJioJ8OMYCQgRt1dlevpnRXYo7NBbpQWQKt0VatbPF0UnF4BIq1ALjxzLBsTLR5iwaRhMfSHke9NfpR4LK",
                'name' => "M8ao79JhLIenJLxAR53SAiMDLBDgjY7mtKTb6JFgOJqQlIcoWSwli7Xrqg7HywQS3OJwDk7IaJktY3uBGY3UXWP3Y62UCKk8o6u5swLTI1N2fIZVIij6u3VHtVqMj9Y"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon22()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_amount' => 7191,
                'discount_percentage' => 9002.0,
                'ends_at' => "2021-09-18T14:17:51.000000+09:00",
                'starts_at' => "2022-06-10T06:18:37.000000+09:00",
                'discount_upper_limit' => 3427,
                'description' => "WIdnOPw7zsdHaG6vnUTf7LwepjCPIlZQ4d7YtSseAIRwjgHMVhsafv2B9xu4",
                'name' => "yFW6UismxsbOanYfYQ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon23()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_amount' => 1178,
                'discount_percentage' => 2265.0,
                'display_starts_at' => "2020-08-20T21:02:49.000000+09:00",
                'ends_at' => "2020-09-08T18:26:23.000000+09:00",
                'starts_at' => "2023-01-17T07:54:57.000000+09:00",
                'discount_upper_limit' => 3882,
                'description' => "QPGEyroIa8GwemxZMSqmgL0CUdD0ixv0M2MqB",
                'name' => "UGz3opZMNqHZhF54ImkIGRCc3psJIO7PmfsLsM1jzL0l2KKnQD4GZsOxH"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon24()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_amount' => 9149,
                'discount_percentage' => 5331.0,
                'display_ends_at' => "2022-08-19T01:38:37.000000+09:00",
                'display_starts_at' => "2023-07-12T16:51:54.000000+09:00",
                'ends_at' => "2021-01-06T16:43:58.000000+09:00",
                'starts_at' => "2020-02-03T21:54:10.000000+09:00",
                'discount_upper_limit' => 4854,
                'description' => "tEM3BMQvGTgVF7z6vbskAN9KJRMiOPePDM7vBIsw9aEWqs2NPo6xnbkGqgEdpD8R72xeTYhm5jUmbWLFLHXPcIL31IYBdBjqsIUI7opIWQx8O3pxWG96Us2EIxMQmnvvNuCEYW81fBev4nQzzprl176TLw4DDGI8M3MKTer7ys6JiXdNh0Fp8AY5E96aRGnlzkd",
                'name' => "uCpAui9IgvS1XheKbKW4C"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon25()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_amount' => 3603,
                'discount_percentage' => 8097.0,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-10-09T18:35:20.000000+09:00",
                'display_starts_at' => "2020-12-31T18:11:41.000000+09:00",
                'ends_at' => "2023-12-11T00:56:49.000000+09:00",
                'starts_at' => "2024-02-10T01:01:27.000000+09:00",
                'discount_upper_limit' => 8606,
                'description' => "oCZpeiWcDubQl4gh64ZGHMXumMkisneap7XOHxY1nNVAWmq22OL3ym8QUMFrZtoc04D718GiAYj1hZ8qB71e4b5frRxszdxtzsCR0nEhD9ydmxPzrdwTpbvhAXBpbVOcnLj2YwWeIAis9WRUMXp59N2I26oWv8XmkyOysH",
                'name' => "MnAVPXBZh8gKAjb3gB8Nd0v4JNcw5qIjwRnwUvO7OmLgcpEGoiN4xK5E5VpiG2Jo5D4GV7hhIKHAjWJYCUlMhQtwUoXpcQxDZjzRvzNXpH"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon26()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_amount' => 1540,
                'discount_percentage' => 6288.0,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-07-30T15:33:15.000000+09:00",
                'display_starts_at' => "2023-10-16T18:38:36.000000+09:00",
                'ends_at' => "2022-03-04T11:44:50.000000+09:00",
                'starts_at' => "2023-08-06T03:03:43.000000+09:00",
                'discount_upper_limit' => 4841,
                'description' => "pBdgrqVp2N8QYj0ZmCBDwM6zLbHR5V0s4NjmnCkqN4XQ0ga3RSvnC8jHIMkn9fVqRNkcPpV",
                'name' => "O"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon27()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_amount' => 6114,
                'discount_percentage' => 9270.0,
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-11-26T02:21:01.000000+09:00",
                'display_starts_at' => "2021-07-27T03:37:43.000000+09:00",
                'ends_at' => "2022-04-23T07:32:25.000000+09:00",
                'starts_at' => "2020-04-15T02:26:42.000000+09:00",
                'discount_upper_limit' => 6424,
                'description' => "eat7Ys1E01DXtN7kxfIYjFQbnLReWrUKInJLmid4u9TzwRA84VRaI",
                'name' => "XZY1XF0"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon28()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_amount' => 8798,
                'discount_percentage' => 3457.0,
                'code' => "d",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-04-06T00:57:06.000000+09:00",
                'display_starts_at' => "2021-01-28T18:18:49.000000+09:00",
                'ends_at' => "2021-09-06T12:52:25.000000+09:00",
                'starts_at' => "2021-01-24T13:06:07.000000+09:00",
                'discount_upper_limit' => 4371,
                'description' => "WG85ri7qz0VIbXSmH4UHqGPRPvRpIiMOWtoGAQhzIWx3WvUKPawYyIf4iE9GLLcVVgcmnkxM6hlJcNlcmAN607k8GaZP3MgvzgwwL2nlzCbcvWetokhlPcSdNkOrguln7CX23vMJbLKyNZpEVFNS264Tayl",
                'name' => "WcOGtEBWEpuwVflavSpmTgkifXJitc0vVLf5Rz82z6xgvw9BdiRNo5u4lq4cb85PsN99SZvwnMRblNoqzMeDzbYczT33nRkH26t4QM2oHzXVQekCzs8nEapVKB"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon29()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_amount' => 9683,
                'discount_percentage' => 3185.0,
                'usage_limit' => 2848,
                'code' => "QFpxBv37OU",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-05-19T22:21:02.000000+09:00",
                'display_starts_at' => "2023-08-18T15:43:40.000000+09:00",
                'ends_at' => "2020-10-18T14:39:44.000000+09:00",
                'starts_at' => "2021-05-11T08:46:27.000000+09:00",
                'discount_upper_limit' => 443,
                'description' => "BHfse",
                'name' => "uqxnGtz2VkNocN5Fw"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon30()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_amount' => 5468,
                'discount_percentage' => 2344.0,
                'min_amount' => 6124,
                'usage_limit' => 5434,
                'code' => "Gl",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-09-29T08:55:30.000000+09:00",
                'display_starts_at' => "2020-02-23T13:42:24.000000+09:00",
                'ends_at' => "2024-02-10T18:43:55.000000+09:00",
                'starts_at' => "2020-07-29T14:37:18.000000+09:00",
                'discount_upper_limit' => 948,
                'description' => "gZQ701ic3l48NuAgJRVAMFDBYmssA3bq1Tg3D8ETeNtXVsfQmQqEZ6PGZxlVUd3ShlNL0Y9XxxdHGLNPPjehHACs9F89HR8RMbCbWCWObxQazDfRDTTPfilPEfM1Yk39o7NF983Gwe0tMdMKO3F199IKgseWsKpIBTEKWGf04BE1WekLdL60HJBT4tkR4Pv6HI2Jq3koT48",
                'name' => "UvhhhAOAS3mmYijbhxfVDlATTdcBM7HhamadWGE9PVT8tCAEqwxCbwfWcnttMfViJ6R5JHOHXy72poXKFqLweLwgbVOE"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon31()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_amount' => 8266,
                'discount_percentage' => 9431.0,
                'is_shop_specified' => TRUE,
                'min_amount' => 4260,
                'usage_limit' => 2028,
                'code' => "e6p4e",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-12-02T22:18:15.000000+09:00",
                'display_starts_at' => "2022-07-22T23:59:10.000000+09:00",
                'ends_at' => "2021-07-17T01:31:01.000000+09:00",
                'starts_at' => "2022-06-03T17:45:39.000000+09:00",
                'discount_upper_limit' => 1505,
                'description' => "8x9HxsiiQA13F7UrF23w5QxjmGZOUE661cn4pvdXVUoPHGe8VpYFEsCAZxvmzUlCQ6j",
                'name' => "XUvpBi6eFbQ9VerLFfGYUdjDv8bdvOqPJHRSJwZywPczme"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon32()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_amount' => 7684,
                'discount_percentage' => 1661.0,
                'available_shop_ids' => ["8f7162bc-d9e5-403c-890d-89868d91ad9b"],
                'is_shop_specified' => TRUE,
                'min_amount' => 4195,
                'usage_limit' => 5280,
                'code' => "TWQpvnFv",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-02-07T11:01:31.000000+09:00",
                'display_starts_at' => "2020-11-19T06:07:14.000000+09:00",
                'ends_at' => "2023-12-26T10:01:01.000000+09:00",
                'starts_at' => "2023-08-04T09:32:41.000000+09:00",
                'discount_upper_limit' => 5980,
                'description' => "ua6yj28VdekzRBcFNLhJxrUKm0lyB3eeJ978DosW6Hk9ErWSg9POKUlcfVM7o3Pc7ce3PdjaBiIyYOfhlQ7Vs61lgX6q4dgGRVbvGTRQ4k8TlBsFFC5ZB6RLswBhJ4Rob3wdkEL6MqqvAtXVq5e9OXe",
                'name' => "t0GXMVM77jiyzsbzlYLL3F0lKzdJuHKMEXiR5QFoU0p5TYPvQI9MGCsnd9pk2k"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon33()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_amount' => 7623,
                'discount_percentage' => 9567.0,
                'storage_id' => "64b726b6-63d4-4f9c-bef5-a6fe3af61138",
                'available_shop_ids' => ["7a56e589-5526-4568-9bd2-45c4396a8b6b", "96818635-bb7f-4281-8069-76a77acf8a0d", "cab2623b-72eb-4bcc-9a6a-42bc6bd1fe32", "e6cafe48-d53f-4832-9d7b-c54bc2a459ce", "c33c4376-6538-4833-b649-40036a798190", "68b8f12d-e595-48b4-99be-9cba7f447be0", "36c73467-8b1b-400c-8225-96cd50a9bdd2", "1969d8db-4c67-4d95-9d38-55b38019e14f", "e7833e8a-0bda-4920-bd48-76e3bcbf9109"],
                'is_shop_specified' => FALSE,
                'min_amount' => 5178,
                'usage_limit' => 4209,
                'code' => "hTgM3eNaJ",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-08-27T17:49:00.000000+09:00",
                'display_starts_at' => "2023-06-18T19:56:20.000000+09:00",
                'ends_at' => "2021-06-27T20:20:25.000000+09:00",
                'starts_at' => "2023-03-26T00:47:07.000000+09:00",
                'discount_upper_limit' => 8296,
                'description' => "Y2QV5YapLiK3uaGOkXLK6VV9FNme9J3074gV7vBrNPpUSwwOZjZ6r1JcKQOOam0P7aiDNO554jvgwtrH6f4dyqsCN0ToFbOTs77EkPylPUMct1PSPGYkLs7XuysOZEgP8RBseW3x0CQhwnUaaEvba4IHnm8fSoU0qkbhd4XK0h9SZImvY3DSuv1omO3Ei2Hpd5JfGNVsANKaqTPRPUKAWKKLWW0dFVAaDAsJGi6Gdz9lz9llAua5K42CcIuptOn",
                'name' => "Y2nlNaI8sGd"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon34()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_percentage' => 6784.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon35()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_percentage' => 4956.0,
                'name' => "vYA0WLStsX7DoyaHJsHVDdXB3538EZc9Jw8nLQPkmEVW2RrRlDE0L6spUMTa1qN8piIbC9PoxwxPoc5miYs4LzG1URnCh12Vp6ec3qnulZKmeQrbP0GKsWnfDrI"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon36()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_percentage' => 469.0,
                'description' => "67lHJicDWbAKkHV3nXTyKjAPd2H4Rmz4jnal6MngNKVOgj00exHo5jSbNsVcwuQCF2Oe2zlUvcbRGIl4EvX14kxK6IeL3dd4j63Pl1XCW7vZIRGIBsWEdcLpjhu7oiuR",
                'name' => "D2ehY02lZcAL8B6eRQjuHSWxu84TINwavqnc5jGMBK6CF3gfhNgOREC7InVBBlAfNcZlpQomYCClXRAUqBPKG"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon37()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_percentage' => 954.0,
                'discount_upper_limit' => 3666,
                'description' => "retQ1dwgD1Tm3CE2IWbmfyoTjoOObiDljyTGfeCs7wOUjf7cHtUt7Q7KDyTIT7nevlUiLs9BrvhX9ZH8AvoAdAmOCoHdrV1JHDaItV4QsTUTAZNuQRuaFi5T0Y9RWH6gn8dr450YCYTSLMHPnkKzj18BmC8SoL8QQIleTvFwLlVpV5kzwsRuN0xnGbGfy9mNFY8",
                'name' => "9GXzh0ijIIEXjZf1vINAnGd4zAadFJXSM"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon38()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_percentage' => 383.0,
                'starts_at' => "2021-01-19T22:58:39.000000+09:00",
                'discount_upper_limit' => 1072,
                'description' => "1XN4V4Sa5s0OLVUmbuBlhEUAMHun3JkZxpzKrpsLflEzbSGmjiuie6DuhBsePe9KWTNEM6qLSCh35qTV4P4eGhTx3oHdOEN270lED7DlSxnJKsGz7SokQIfO6BtR0jUQOLqnRS1Trw8GN3zyoHMFwqk",
                'name' => "t7kAr1X9cwfvbwkgPhsolgx01DfmGHEMDO6Zs1RK1LKdDqKeU9tkQ3SIA4HCH4yEqBWJMFuc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon39()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_percentage' => 8294.0,
                'ends_at' => "2023-06-05T20:38:33.000000+09:00",
                'starts_at' => "2020-11-03T01:56:48.000000+09:00",
                'discount_upper_limit' => 5788,
                'description' => "XemEsI1F2JZBUUavBrwmjIE3ftYbC0ZOSHZJBo4GFnxHkdTt9sh8ysXd7nl8X1a62ayLHIJhK497jmS22AwebCwsGCK8H2HwbBGf5VgokPpfYDTNEkQLNrmxT8hIF4aq2NErIgSPlNlib0BOFjSjAFKP9eOjTYOyguKaqOPKsvVvQNhmfZAV39vSjbKlAZQb1a7gKUWNrDxl90zvMAzItoQmGoApuuKUDS4",
                'name' => "GigQmIaEXBGKL"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon40()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_percentage' => 4060.0,
                'display_starts_at' => "2021-09-15T04:33:30.000000+09:00",
                'ends_at' => "2022-07-13T02:24:44.000000+09:00",
                'starts_at' => "2023-10-07T21:26:16.000000+09:00",
                'discount_upper_limit' => 763,
                'description' => "7ebng9jxLDMY4es4Fu93QiF6xRkvRKNRDMCgEXxwbcVuBztBg4sZlUkiZwLs0CSVaHRIzsHeGAPXssRdmEt2NWN50CK30hf1GnwgDXI91ZrYH3OtCy3uULs8zvstT1TRD7SxC622qcCMKehmt3Ja2Kb4UY7FQsrbyD7OgjJzqJDKw1XTLYuXwzvw8mIJZc8Mkm04vOkJyvWqb",
                'name' => "xtEXp"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon41()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_percentage' => 9351.0,
                'display_ends_at' => "2022-04-05T10:26:54.000000+09:00",
                'display_starts_at' => "2020-02-02T05:20:35.000000+09:00",
                'ends_at' => "2020-05-26T18:27:32.000000+09:00",
                'starts_at' => "2020-11-17T03:56:49.000000+09:00",
                'discount_upper_limit' => 3244,
                'description' => "KYelK5jlCXsQlsYQkiZwlXgZVx3",
                'name' => "ioWQIi1p7FncNElIxeKCZh3szdhvkJiBT73n4tYzZKbmLtSfN8aW1mXe7fk5b3"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon42()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_percentage' => 9150.0,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-04-10T13:32:38.000000+09:00",
                'display_starts_at' => "2023-11-19T07:28:05.000000+09:00",
                'ends_at' => "2021-05-31T05:28:25.000000+09:00",
                'starts_at' => "2020-12-08T15:19:39.000000+09:00",
                'discount_upper_limit' => 9933,
                'description' => "SoN",
                'name' => "izotcgVara18urhL7VmUq7npk"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon43()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_percentage' => 4095.0,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-10-27T06:52:30.000000+09:00",
                'display_starts_at' => "2020-03-14T19:03:02.000000+09:00",
                'ends_at' => "2022-03-08T18:03:52.000000+09:00",
                'starts_at' => "2023-12-12T04:08:15.000000+09:00",
                'discount_upper_limit' => 34,
                'description' => "9O0YDnVXs0ComaOna4eStl4WCIjCYDaZwKwSDMCCjatmn5OtebGXuCeAfxzcBlbzC40eJCOia68vk7DUpjkAVJwZb9mSLIueCNSjqyYSrE4n5WIWBASb2Zfvzqoxqqb22keIa6vqEwUEHcqsvxDZ1Lcori9MHYMVv1ZLTgajYaiv4uVd7FM7VjIB44rF0PBUNgrv7KsvfassvRBk2q2JejN9dXeEfK6KnHOI48r4Wn37LJLJOzm",
                'name' => "jLUKVz5TSzaAlrmUVbhyPspN5zpSihez3LWuGJO5z8NjxffD36pAaR5DUGdPRt4c8ofwRIVlHlbmwDckHFHjZ66jReSwbuMXsfhaLK5wI"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon44()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_percentage' => 5574.0,
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-08-31T07:44:23.000000+09:00",
                'display_starts_at' => "2021-11-27T10:53:55.000000+09:00",
                'ends_at' => "2020-03-01T02:05:26.000000+09:00",
                'starts_at' => "2023-11-07T06:40:17.000000+09:00",
                'discount_upper_limit' => 9215,
                'description' => "h17vIHfrF8mlyKq4Zjk0jsQMAlRWleTNNZcu3zYQ7S2PNtppCk8pNJPiQA6RitgDDwDfEXGEXdg3Dl4IenoKyxRKuvyeYJ8mOFtZ3kAkd3WfWs0xHNjn39jjdPrbBGw50uIzzbW1UI7PEvGJBhLvRr1n8GJPcJ9pUpceVw180Wqd9PXNXjLXigvyNvr9ExjZvAlxMyK6aT3uLEAHRCL4jMQSTef5nWfoCAaIV",
                'name' => "v9rQ0xNstq0nWRi9Ad1kvzb2imibT5KvAXZbx7AAciiXlv2p4vLjlCgt2VBKPfIQdETBGLFwf2z3e1QeSLNSQhrmGvYV1ahz"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon45()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_percentage' => 1898.0,
                'code' => "YbgNw",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-03-12T11:26:36.000000+09:00",
                'display_starts_at' => "2020-03-05T14:10:51.000000+09:00",
                'ends_at' => "2023-12-18T22:57:36.000000+09:00",
                'starts_at' => "2023-01-17T16:26:41.000000+09:00",
                'discount_upper_limit' => 3445,
                'description' => "Ju4uxj12CPSselkOtjsd2ipdm94YP1RVwnIzTQuvolOHxeLUSaNlU0YXJLkKyDfDaVcPnA5OXHs4JkkXGdKwMCmCwj31IzfLwswnwCsebd36IEk8CNVy7RxO6lBb9AdvTSfizZTkTvNBaDrWABByVZ3KkTycJRB1SESfQMlWk0SBoODe3HTGD6qBdGTpgVtmmRK750cH9XQPbmMUODa0iPzubtQWNV09Omo",
                'name' => "4VMv0eyrhW6y6bkKXlSOJGckGq9mgAS6ky3DZdkksyYZwKw61Xbk0AmC4sBsYoLw1p7pf76Di9LwboSNpwRLZbYu1vb"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon46()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_percentage' => 7724.0,
                'usage_limit' => 5978,
                'code' => "a7zcccm5I",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-12-02T03:14:20.000000+09:00",
                'display_starts_at' => "2023-10-24T20:21:42.000000+09:00",
                'ends_at' => "2021-05-15T02:06:09.000000+09:00",
                'starts_at' => "2023-04-07T13:48:01.000000+09:00",
                'discount_upper_limit' => 4814,
                'description' => "CpOkYL2GukSIftaZw1sFhnGQ9lU00UrTfGgHE60ssXz9Dl7sKAFT2LPOwNrZzXOR0zTXzfs0HiItvFbbQll4IkVsxI8Om1HB7xoK7PmF4TR96By1JkKWXWvPBzLZNjQ9SFfKdmd3Ze25WfxjOrbFnZsdi8RRKIi7046AMqoYs",
                'name' => "i0ltnwjukJou0lvYPrUh50KEakaXnbv9hiEo3"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon47()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_percentage' => 1952.0,
                'min_amount' => 5069,
                'usage_limit' => 4135,
                'code' => "tmDN3",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-03-26T12:33:13.000000+09:00",
                'display_starts_at' => "2023-10-27T22:12:06.000000+09:00",
                'ends_at' => "2023-07-23T02:52:59.000000+09:00",
                'starts_at' => "2022-02-09T09:29:26.000000+09:00",
                'discount_upper_limit' => 6825,
                'description' => "q0pefc29Oxzw9VadW41X0RKAOBkCxjCYu8wroeVrRlhIiLs7m9bRF1rZ47l2Nw84tM5raTsaDPfUGMzYMQOnTfe7YF1YzpG8PXUdgOCrQYrG88OX9Y0qT4CzuZqY79ogfCwglxkHIElfnB1NBB4cwYfCnd3RSmFXd7tgGPupfq2gnfgvwQBQcjNTVoQHRrNxVR84iLfiV0LG9D7A4ZGEf93RBWX2",
                'name' => "bdToaWmz3LkoLi4Ly3PgOOnrRGau94YtT9UIr6Xqj3atDSUoCblS9uDZY24E"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon48()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_percentage' => 14.0,
                'is_shop_specified' => FALSE,
                'min_amount' => 2384,
                'usage_limit' => 371,
                'code' => "Ot1xdTpZU",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-02-23T10:14:12.000000+09:00",
                'display_starts_at' => "2022-01-23T19:50:31.000000+09:00",
                'ends_at' => "2020-03-08T11:25:49.000000+09:00",
                'starts_at' => "2022-12-29T01:19:31.000000+09:00",
                'discount_upper_limit' => 8714,
                'description' => "MEtz8qlK9SEU22DhJCqIS0Go58yLV",
                'name' => "TtTwdqSvdUqlqg4y"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon49()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_percentage' => 7363.0,
                'available_shop_ids' => ["1e1c3b6c-d698-4715-b4ef-ce35608ff306", "146ebb4d-05d2-477a-a897-32cc6cbcc405", "03c4ef2f-ea84-4e3b-a6c5-9559262114b1", "255c15b9-faf0-4e8a-9129-68404e7b1a3a", "50298e7f-fcfa-4e58-891b-f5b09bddfafd", "12dad825-65e6-4060-91f8-84b0da3339dc", "a2993d3b-b162-402f-99e2-ff7a1e88e5fe", "79f2385f-fc82-4c08-8194-9909a388061e", "7ae98c15-ac12-4a8b-accb-9268675b0a2e", "bdc5add7-27fe-4578-910a-c2733fc3ada8"],
                'is_shop_specified' => FALSE,
                'min_amount' => 8172,
                'usage_limit' => 3347,
                'code' => "Vm",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-05-21T14:25:17.000000+09:00",
                'display_starts_at' => "2023-03-27T19:58:30.000000+09:00",
                'ends_at' => "2021-05-07T11:37:47.000000+09:00",
                'starts_at' => "2020-12-17T09:17:58.000000+09:00",
                'discount_upper_limit' => 8575,
                'description' => "q2eN0rN59IC9sVNIoSspA9jp9jyKXrsIjuTHzhay9ELGV3zeftGaLINqNov9EsaUyNNDyEpYZwOjCEKhCSFo0fZC3dhb4tfKfdX68G8gWRGSRKvq6wttehylP24BKDMWj6WB7AjABlTo7LMXH5KvdGwfA3sBytlEfnKmpDTGdciIfeNjygSJQ0lx825RCwCOtlN",
                'name' => "91yJVh1GaM6riKD9FFGUCW9bpamuwaJJ2HkuWDWFPBwuDWetAAlMcAbuqGKlzOfP9Y9OlI4z1"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon50()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "d99d7829-97d1-4e4e-9ac5-25b2d8a3c87a",
            [
                'discount_percentage' => 1750.0,
                'storage_id' => "307671c1-d99c-4b9a-bd8b-3b5df8dfbb4b",
                'available_shop_ids' => ["de5bdb9c-12d0-4cfd-9c19-4a4b1ba414eb", "9092a019-614d-44f9-aaf8-8ba2a3c86a1b", "0cd31f20-9043-45d6-8ea6-27a2c31383de", "725f3150-d900-4b6b-8f10-4f22f1d6c7b4", "99f5a8e4-15d8-4230-ab23-0632fd3812ff"],
                'is_shop_specified' => TRUE,
                'min_amount' => 6259,
                'usage_limit' => 9268,
                'code' => "P9BXtee",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-03-24T22:44:10.000000+09:00",
                'display_starts_at' => "2020-03-13T02:45:30.000000+09:00",
                'ends_at' => "2020-07-20T08:20:38.000000+09:00",
                'starts_at' => "2021-12-03T08:12:30.000000+09:00",
                'discount_upper_limit' => 3501,
                'description' => "SQjPDd9iSu5aUbvLyRVobLf35ghCvbPfNBmbn7fWztTWzKUQKvprnk1Hh1cCmkYlj02QSp2DOeawxklH0YPsfBxcPZmkdQ8ZhGTOi8jQmHk6bc9vjbWHPc4Ra3Hp0qty3wq8XGQIzAgAFYpQMRSorJ2wicjUpFfSXIolj5PuSuOdc4xgc3lxbprUpujJLf3ZwcWj79EKWSRu2GCQCWGFQBKqu9xkZ0I7nbLs5SgTUubyIXPia",
                'name' => "g2xNL4oPRJ3AzWA4NJ7Mhg78TsezhhviDfFIzhVsV1f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
