<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class UpdateCoupon extends TestCase
{
    public function testUpdateCoupon0()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_amount' => 5428
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon1()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_amount' => 5597,
                'name' => "k8MY0QnGwkOQow"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon2()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_amount' => 3335,
                'description' => "J2BDIC7UdTLlJhitT2LqdP9EpIRqtNkgiiTRsyGVlkXuMgln8vsgpimOeW5Fh2NhETnolKYIA7wMdfebGeymGpbbd9mOWvrCNbubH4DzigQa4VJg04Mi0hs93B08u4vPk5MK5CsSbNqpA4z4vp95ybR8xP",
                'name' => "ThoSnB2WhMwyNvdEpE4cO8C9MGl5WKr9Bmu7AwO1svjiovUWPLK2X4JsVNi4mDMyubPmc2uleFP7deWchTsoAWYWWMGKDJAKRgw7pwuJJ1"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon3()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_amount' => 9399,
                'discount_upper_limit' => 9640,
                'description' => "0rdRZw9KkoUwghO2gTqTvz8Yuiopf4QMNdge3qjY",
                'name' => "Iio88e0ug9macPDeOw61Ejs3VFwpDpUZGYpOp3BmD5DsZntFHhCOD7448V"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon4()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_amount' => 1690,
                'starts_at' => "2020-02-08T06:12:08.000000+09:00",
                'discount_upper_limit' => 2058,
                'description' => "AHrqo8IkZVr3g9HfGBopAXNHCOSuMtPfXgL0JeDdB35HTvcLB39FX9FSb9peJv1aQW1StLthgQ0zl",
                'name' => "09aPunIxOEUZ82XehU1rYyk1wFrGqNbZJtgMeBb3y0QiqwDmNlkf7njIuGipFaK5o2iokmrUc8AdMnDKlrSG4csYPvPNKVetZjORveZs7CIODmYEA"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon5()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_amount' => 6640,
                'ends_at' => "2020-04-08T07:18:25.000000+09:00",
                'starts_at' => "2020-10-24T09:22:44.000000+09:00",
                'discount_upper_limit' => 2025,
                'description' => "aHJgpHG6UQQDXqznFkpdGercGoNnh0GaOgWMrybnBftCjMS3RrUz7xzIEJEwxdWKyBJoslo6BaQPE1euSQwCrYYbuhS4SUENCUIvXojgtzLjfIGI0QwUnY0VZk5A9eVveL45e0AtqKdSklHy1",
                'name' => "1Q2elwnrbGLuUU1LNfrASmtoa5huMvcDJd04O2q73hHtoObpY0E2Imq4WLoHajWDnRcVkaroDFzgQeV7R5X5QdcTiPYd4gTpZIipNoO5iXX3Op5MNr522b4JUBvvkO"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon6()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_amount' => 8963,
                'display_starts_at' => "2020-02-02T00:21:48.000000+09:00",
                'ends_at' => "2023-04-09T14:40:28.000000+09:00",
                'starts_at' => "2020-02-21T13:35:02.000000+09:00",
                'discount_upper_limit' => 5471,
                'description' => "UqLjk2D6nQbmLyi9dZf24aLqLpYhFbEyRv2RmB2FrslXFx526c3ARXXCzJJkuujIOs3XMQF0xPuyUOGlsAQuC3sW",
                'name' => "ZQf87eXmWDxevUM8AKbssQ7T4bJqJNU0pndYaO7rnrDkZlyZ9nPj5HF80YImvHKAxzIsDtGf4KT6MTGleVuKmZhZAwOzWsTncW2t4GrBnRZ6GO"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon7()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_amount' => 1225,
                'display_ends_at' => "2021-01-13T14:28:11.000000+09:00",
                'display_starts_at' => "2023-07-27T23:30:03.000000+09:00",
                'ends_at' => "2021-06-10T11:19:04.000000+09:00",
                'starts_at' => "2021-09-20T09:49:24.000000+09:00",
                'discount_upper_limit' => 9668,
                'description' => "Q4MZHyZcvTDtlK83I0BtP8S4it2RQoZTMmiN42rveAb0nhEK4FjPbpCrNLzInWzRDR2pRriWzKu7h6T6t9P1IoEhJ7iyqvw7QWKqBj7PUO95VAYtj3sFVPxSvBDSrc8NIIzGPfqgkBvlJLXWmSAZ4RSOGu0sw9N8gwpZ0y45AWR3aqCAU2VU9JC",
                'name' => "kptrOv6FNglZK6VPxVcTsvD6rsf9gzKxfrk"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon8()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_amount' => 7202,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-10-18T08:36:24.000000+09:00",
                'display_starts_at' => "2023-08-30T10:25:31.000000+09:00",
                'ends_at' => "2021-08-21T11:34:17.000000+09:00",
                'starts_at' => "2020-06-28T00:35:22.000000+09:00",
                'discount_upper_limit' => 4225,
                'description' => "6sJXy33oZ5hZOKsSXHuYyN1lac3DigA7mdK0tI5IMAvVilYxjmEimAxdzKQphR8mlyVqaT0mbAxYVAfxmPlvY4gm4AyS4wSAfc6KlSw4mo82ldM35uvYzzMEN669tLk4sffhdC6jqZbkGV4w9aAvc4iDYrIuEiaNhe0hCC6BnLSncNoJgLciwZFC5kpMd1vSC",
                'name' => "pbDaSXpS5oxBUg3E5PT04FJnH9p1olhEWfDo29DrBTaavFmKN0SHUMY0KBJckv3GgNDnKxIG0YG13VfovjLnvpIr"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon9()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_amount' => 3086,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-11-10T10:11:06.000000+09:00",
                'display_starts_at' => "2020-03-19T08:47:31.000000+09:00",
                'ends_at' => "2020-06-28T15:12:07.000000+09:00",
                'starts_at' => "2021-07-18T21:06:19.000000+09:00",
                'discount_upper_limit' => 3694,
                'description' => "XBWP9nrsGdwGRrynTleS40Jd5NFKAxz4ygxFvLl6NN3UjXQzepu7bypxBbeLOpq0zodWEuJDcs0QQuybCUPokoxzPeMeMjdr6SJ8oOwDu0g8KqBBg0jU7bf5I6yacXrpaTyo",
                'name' => "tv6CZuxzrl6IuXgRQqBQ3UNs8gVvG4bq8Sdn7wBN58kQiBRhzvXW8V"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon10()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_amount' => 4462,
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-01-07T09:03:44.000000+09:00",
                'display_starts_at' => "2020-04-28T15:29:43.000000+09:00",
                'ends_at' => "2022-04-10T09:47:34.000000+09:00",
                'starts_at' => "2020-05-29T16:25:20.000000+09:00",
                'discount_upper_limit' => 3186,
                'description' => "wOSCx77qf93slV2BLfp8zDESMrd0SDhYgbelaDDM9JdUzM5QQ1DQhxv5",
                'name' => "iMUshmvwHxIaOb"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon11()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_amount' => 4843,
                'code' => "SP8",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-01-21T04:29:47.000000+09:00",
                'display_starts_at' => "2020-09-24T05:28:04.000000+09:00",
                'ends_at' => "2023-12-22T01:12:42.000000+09:00",
                'starts_at' => "2020-02-27T09:29:16.000000+09:00",
                'discount_upper_limit' => 5433,
                'description' => "g7We4LRm8deyTyxd3fMbJjuNYenpUp2tSySxD47gZPWg2pvz9pc0baIGXjEGeoeXQhoLsYUiQ0csAEZj2n78tCVbqgMx5QCNKSQEQFbQH3q0tad3g0IqfJOaRo2MxkK7i6NqndHmUH8vPVFxRQBw2rF3",
                'name' => "6QNvhKpF7LWvB1L4EWy0zuydBtyZTfR47jaQO3l1fvkLTPiBZY0JIPX"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon12()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_amount' => 789,
                'usage_limit' => 7909,
                'code' => "QGXI",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-06-04T20:49:52.000000+09:00",
                'display_starts_at' => "2024-01-23T01:50:08.000000+09:00",
                'ends_at' => "2023-06-12T13:03:39.000000+09:00",
                'starts_at' => "2022-03-18T21:23:23.000000+09:00",
                'discount_upper_limit' => 8283,
                'description' => "DSsVn7SR0z9OAP6tBpUf7LQuzVoXducbe9FvgoqONufdCZuEqbprlwABrYQZJpTp2nbzejUmxf2EJu2zH8RgFKm8Iomhn8rIfDSWOSr32fUqyfReGLKiRRctXPzpPgiPpgo726ddEByPk3haRi7Y5oIoukMN5AhFzWzvzOqby1iutc5ycDu79YOtfpMZAiwZKsR1",
                'name' => "UdcpRu8zF4bhP3VCchQ7tMMaZyZknfijMcZnupyZ5LXfiCd4bQEgUwwodSrOX7FK9whbXlUZnHWcYeWUhs5"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon13()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_amount' => 4341,
                'min_amount' => 4422,
                'usage_limit' => 9120,
                'code' => "tJxO3Ye",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-01-28T07:13:38.000000+09:00",
                'display_starts_at' => "2022-03-29T14:14:01.000000+09:00",
                'ends_at' => "2023-05-15T00:28:07.000000+09:00",
                'starts_at' => "2022-03-25T08:54:10.000000+09:00",
                'discount_upper_limit' => 7487,
                'description' => "6YWRZAp73l8qLVr2A7JNoFmG2Nq8PiIy36aB7914QQdxL0dVSaQ1SLzvRVLr6Drn0vgoNpyxlMWbYp4KjliL0MgzmBpjrRjbd9UoqBK0aWsuowlCACMor8rgylpnse3CzRh7JMpnTAaFjfk8upLd1YZzVb9N7VBgnFB2YNEHPjyKJu2r0MBRJtKHcMooIES1fxYQUqG4J4VcVTHTisok7LDDZSl4frtFd1abWrpPl3NOgAMY1B",
                'name' => "K5tMDXcjZHlhwUmFfRDXCOMmmCvVUMXXKtlrCmEbwCweHX"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon14()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_amount' => 3774,
                'is_shop_specified' => TRUE,
                'min_amount' => 2879,
                'usage_limit' => 9075,
                'code' => "fe",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-02-01T15:52:07.000000+09:00",
                'display_starts_at' => "2023-07-18T12:04:43.000000+09:00",
                'ends_at' => "2020-10-18T12:33:28.000000+09:00",
                'starts_at' => "2023-07-26T13:37:51.000000+09:00",
                'discount_upper_limit' => 1529,
                'description' => "ni2uXZ19uIL3z1wDKBiwmjXHtHoSK1j0VUccfE3gkwiAQy2rB7lSM1J3ftDm6DEClSzQ0LovBRIKt06HIZigh5ZQRx8Z3Jeb2v5aGelov0AHNezdgZj4vI5tQEscO6IXHfVkuuNIlCDF6Zuk3l9xgQKz1F6bSFw0Ul46wkvzqmIAvlwO9EvckArdHv5HEL1kvJrc97IBWC7AW3SDe1R3ZdL8S93DGzHUcMNRcC1fJtFrnEGVMXX7ani",
                'name' => "hEdkEP5mhbb3sFBehpu8iQENnjG8NQnsLIGqvZ17NTXlEertsj7BWOOss4LgR0T10Augt1lu8HMyOIV2r2n35370wqgjP8cKOjvo4QX4"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon15()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_amount' => 2436,
                'available_shop_ids' => ["a880927b-2d56-427b-8070-05f6a2a180c7", "19de12f1-9761-4aa1-9fe0-38d794118050", "420a328f-ba10-4e8e-96fa-6300c7fa2005", "8544df58-eacb-4299-9b75-51a937d0dbd1", "e53267bd-7aff-47da-9c5e-93a3bcd318cb", "13c3e5e0-b05e-499e-898e-1446ef5163b6", "2e841ead-1e94-417a-ae4a-650e022c40dd", "674da6dd-4bfd-4830-b32a-bec952d663dd", "06186643-ed67-454d-9fee-aef596def94e"],
                'is_shop_specified' => FALSE,
                'min_amount' => 6079,
                'usage_limit' => 9467,
                'code' => "dJZ7ush0",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-07-05T18:37:39.000000+09:00",
                'display_starts_at' => "2022-04-24T20:56:21.000000+09:00",
                'ends_at' => "2023-11-29T10:29:54.000000+09:00",
                'starts_at' => "2021-10-17T14:09:22.000000+09:00",
                'discount_upper_limit' => 7846,
                'description' => "zE5xYW2FwpYuelWJH74LDFYoORO7WvVMNnXwTZoKwpQJtnhGw",
                'name' => "DKuv7me5V4tPUOt2EJ3kAdrtkc9R4GyT535rMRVADBHxb08r9KwC7pWcHxaZv2drGgjX4jyt"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon16()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_amount' => 6043,
                'storage_id' => "14b00a3f-5243-40fb-9abf-6a14d89481d9",
                'available_shop_ids' => ["bd4ed292-f297-458e-a280-dff26178b013", "944b3b51-1240-4f36-9208-9a307ce491a6", "c1d857e3-4934-483d-843f-0b9ebd04781e", "0ab7f63a-6348-41e0-ab79-7af5b054e22f", "3999d37f-c42b-47e4-a715-5460edbbfcf7", "7d8dc439-1644-4278-bf5d-354a9f301d82", "b1d13f84-7d98-423c-b8f7-76abf84fb5b6"],
                'is_shop_specified' => TRUE,
                'min_amount' => 8340,
                'usage_limit' => 2761,
                'code' => "ddeh",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-03-22T01:38:26.000000+09:00",
                'display_starts_at' => "2023-03-23T21:11:49.000000+09:00",
                'ends_at' => "2022-07-16T02:02:48.000000+09:00",
                'starts_at' => "2021-10-30T00:46:19.000000+09:00",
                'discount_upper_limit' => 8205,
                'description' => "b4j3IKw8GJk5iRkhuc2wi1d0mM5Xc110RwuOwNzIU72GdczTZs542l75vct8sJxqtzqrvWTCQlboZu3O2weA2FJSCkrad5SZGLnp2PASWs3ZfNnhMjFMJpWYFnB9U6HavZwwkL6hQCkmUa0kboA7cJa21hjQW2LMLW0B3B0wVm91BbgPKpAg3ZyypeaZ7hTYvFkYG8PVWzbSjLedmxyDOOrP8gCfW03R2BU43lqpCjimHf",
                'name' => "XsXhlSgw"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon17()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_amount' => 1876,
                'discount_percentage' => 8287.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon18()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_amount' => 5291,
                'discount_percentage' => 2097.0,
                'name' => "wclLX5ztjhKGWggxNpVCrxhMRJbrTHJ8punYMQluz0j7wJa9QQrueirqphyu6T1fGYXrcx07ifQqN12uE0S1zV2aVrN0g"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon19()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_amount' => 837,
                'discount_percentage' => 5807.0,
                'description' => "bD94kjFiqtXsfDhnoYGjsRrlVFRAslKWvB8EKfFBtJCdf2ZJc20s40omDcektkz86li5fLU4E96auZAjYviVPM40IeC4ghjPN0v1EIYSgO5LXjpIIYN7m3ovHkcLbQmPZhKnt",
                'name' => "TRYNDyc3BRwtDFHi3ZzJp3x0f6z8Uv1pGaw1AAsEWR7wrKRUCfxBnQGQ8JZD6H9E7n4GdL3s5aYy"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon20()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_amount' => 5386,
                'discount_percentage' => 1536.0,
                'discount_upper_limit' => 1417,
                'description' => "HgIHzDRPYgNlmn0bKlk9yGN3xdtkmPna1MimjuZVywiOciHXCwCNozzVTkUaFwodJRLLGFYBYv6tRFjl1NpEKobW4IEPaSPp2wg1DhEAcUBAJxmf3kpxzCScdzsM7HcYEPvc",
                'name' => "LBISS6U8QLNcp86auGPtj6zQInA3mz1EC1Zo59taUeAw8IK"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon21()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_amount' => 7763,
                'discount_percentage' => 9132.0,
                'starts_at' => "2020-01-13T12:37:52.000000+09:00",
                'discount_upper_limit' => 4541,
                'description' => "z30SoBxNXQSJp8hflJK8vMqanM0cLtuIH2Z4vYZbJtApzCVCCDX6IwZ",
                'name' => "ePx745Ery4LkQNCun2B37gXzv6sVRccHEEMiw572fCM2xnG"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon22()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_amount' => 9919,
                'discount_percentage' => 7919.0,
                'ends_at' => "2020-08-07T23:39:21.000000+09:00",
                'starts_at' => "2021-10-07T05:02:30.000000+09:00",
                'discount_upper_limit' => 1854,
                'description' => "09bhHzg7BySDOz1qxGJ27DURiMornx4GD61uHyBSgYAZjvM6CwKk1QhTUohXoXGGojqiV5L",
                'name' => "5lBSOa6"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon23()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_amount' => 3564,
                'discount_percentage' => 849.0,
                'display_starts_at' => "2020-01-04T16:25:25.000000+09:00",
                'ends_at' => "2021-05-01T15:24:17.000000+09:00",
                'starts_at' => "2020-08-30T00:55:39.000000+09:00",
                'discount_upper_limit' => 4567,
                'description' => "0mt7HH4eRq8wh1f2gcvFT0FZBzPqmdhWwaNIc6BZoOPe831ptsEsj7HAiH2sifZcg6XPJmNRcV0Chlt1WmgnmjW6vTuhCEPlptPoPb3O1ZCPwKkLI",
                'name' => "KjQS0CwpgXKSOedt5sKdbL"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon24()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_amount' => 9169,
                'discount_percentage' => 8974.0,
                'display_ends_at' => "2020-03-01T09:53:28.000000+09:00",
                'display_starts_at' => "2023-07-20T07:16:51.000000+09:00",
                'ends_at' => "2022-02-11T21:23:29.000000+09:00",
                'starts_at' => "2021-04-27T22:15:14.000000+09:00",
                'discount_upper_limit' => 2190,
                'description' => "q554VYaq7DHZSQcWBOcCwbalZSAW9fck4GqM72qIEaPADQBuKPtSzALoZGsQqgf3O4Lw5xl0mE3SpIwGHMgwQD5",
                'name' => "Chsue6j2eQQonv754uHjBKMkXlNCdA4rEqZnKQ9ereXD6Noh52sJuQ8LT74SeM8MpnjFOsrAF5BVSp8qo5"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon25()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_amount' => 8799,
                'discount_percentage' => 5218.0,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-02-14T23:53:48.000000+09:00",
                'display_starts_at' => "2020-09-30T10:12:54.000000+09:00",
                'ends_at' => "2022-07-16T21:53:32.000000+09:00",
                'starts_at' => "2023-02-12T20:01:02.000000+09:00",
                'discount_upper_limit' => 4913,
                'description' => "CXPB34UqaY4GblclhDsWduA9iQgPrAKM9hHgTu7lxAyv",
                'name' => "EGgcFhP8IU6c2YfoNKgaH4NlRTP8ZVVksse4M8G0a6vRqHaiLSTtiJkprdEmT0iibsvIO1BKr"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon26()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_amount' => 6525,
                'discount_percentage' => 9391.0,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-03-14T07:22:33.000000+09:00",
                'display_starts_at' => "2020-04-17T04:09:25.000000+09:00",
                'ends_at' => "2021-10-31T13:02:47.000000+09:00",
                'starts_at' => "2020-04-22T19:44:31.000000+09:00",
                'discount_upper_limit' => 2034,
                'description' => "Q3wiT1z0wEbUFjJCJsejCRGdQTFzwog4Lu5wXL0B5bqUd62b77fA3MxTmGj4aAANBPDn2uZRarV3egowwyH76ZFcL8Wbxspe8wyKiFDZHlXvGtqc1TaIPT2sEDt32gWWh1cmvO8vn7Zml6oBAFRCUfYRv3Timh2UzEyPhabme7tqG3VNWStMXyU45klC0ohZ2JgirSr431m4C3OokyS8x4NJn5075MRIJZXkE8eSGKJv",
                'name' => "NGk90x8ZRoUnNZ3xMlIXJpRLPmvez1yIWsXKCR4RkD22QL53s7oLYLhu5a3pFUagNAhBmz9tzRuavRkQDl9HI9XSiYgTN11hC5saITDfDiscsia9EdG0SraM"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon27()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_amount' => 3566,
                'discount_percentage' => 4871.0,
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-05-16T01:33:52.000000+09:00",
                'display_starts_at' => "2020-02-11T16:31:22.000000+09:00",
                'ends_at' => "2022-01-31T07:18:00.000000+09:00",
                'starts_at' => "2020-02-08T03:05:04.000000+09:00",
                'discount_upper_limit' => 5375,
                'description' => "23gPrCeCIXEtghJiwOF38eNhQcL0SHTOTdEStiIHmRwRza5jzOcEiljVlox4y4ajtkS3nCBi02ZxHS50r5MSN6uhdqjSJsMf6iWT1DV3GBRSjRvzSpziYmM4lIjUGA9FVqe4gfq2d51NGvbrjDNbf8ydLbGgrMAJE2EYMKUXdQQrDc6OXS3kGl4",
                'name' => "eCB710x9x1JOPeD8CpmklTIxZYjlptT5iBwe8CdfV8E6e1yHCb7xS9IPrAwfrbBwFFtxK59rwsa7ARqThJCY"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon28()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_amount' => 8534,
                'discount_percentage' => 7604.0,
                'code' => "cgbYAmAl2",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-03-06T00:58:47.000000+09:00",
                'display_starts_at' => "2022-04-27T00:39:22.000000+09:00",
                'ends_at' => "2020-05-21T19:46:56.000000+09:00",
                'starts_at' => "2023-08-12T10:51:54.000000+09:00",
                'discount_upper_limit' => 9156,
                'description' => "W3xN9oHHZQwYLXJWPaYRv7VcBncroAbiSpHfGhH9jUvIq2wLcqAeUWUzADjk6",
                'name' => "ksLZrBsfoV3J6"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon29()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_amount' => 1467,
                'discount_percentage' => 7836.0,
                'usage_limit' => 7634,
                'code' => "i",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-08-09T15:27:06.000000+09:00",
                'display_starts_at' => "2023-11-19T13:35:46.000000+09:00",
                'ends_at' => "2023-05-01T17:50:32.000000+09:00",
                'starts_at' => "2022-06-06T12:02:39.000000+09:00",
                'discount_upper_limit' => 2034,
                'description' => "6GlfFDLXEmhWDOaaJcMMURR31fr1YKGE9p5pzNPzgZmHhesSQ4qRMt9K6YOPhFzYoZrRc3Iolo9gVL9Ltea7ZNszGI21QQUARjxtjVm4GlFnxBJuqoUdStyLocnE0GCT3Ciohkba0qEy4wFlVkKJgRmf5WkPwKY9DbXAZ0EHb",
                'name' => "w05A4SwJMhRccaEB8SwaBYzQJh821OBRPM5HzKgnYzioUK7Ci1qPhirQ8c6waEe2FcvdYi7YIEb"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon30()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_amount' => 1716,
                'discount_percentage' => 9633.0,
                'min_amount' => 1386,
                'usage_limit' => 5383,
                'code' => "t",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-04-11T09:10:03.000000+09:00",
                'display_starts_at' => "2020-02-01T08:33:57.000000+09:00",
                'ends_at' => "2020-06-08T07:29:34.000000+09:00",
                'starts_at' => "2021-01-25T18:01:38.000000+09:00",
                'discount_upper_limit' => 2846,
                'description' => "SHohP3B6xd2SVM5gxtg3QX2TiYUb1MIEuUUXCaFLTwU0nbIvcPwZxoQpr92zU49jUui7NQEhj0m6dWSYEIwG5mVAyAw0gCSzS47jV5YEhODPwFoSNSuKkMu5awX3HJ9zs63GLlZNc2LBnreHK1UyXTeLfTP9QUnFs4esHofxOrwgAsRKTgAommrn2ZOx39L9",
                'name' => "PBGS0S9kFERT83WfUL3MuLWI6yUOiZv8"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon31()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_amount' => 6936,
                'discount_percentage' => 6338.0,
                'is_shop_specified' => TRUE,
                'min_amount' => 4482,
                'usage_limit' => 6716,
                'code' => "vLJiM3",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-08-13T12:28:20.000000+09:00",
                'display_starts_at' => "2021-12-23T22:46:06.000000+09:00",
                'ends_at' => "2021-03-22T19:45:51.000000+09:00",
                'starts_at' => "2020-07-14T16:35:12.000000+09:00",
                'discount_upper_limit' => 8102,
                'description' => "OFEOL8SoLExg5b6UqbonmmTGkS1NhGxt7KPitnB6Qp03VLs2L11cBBA11OpMERRR9PPtf0S4f9159f71dUOrnOZO4EcacLokeZ3DXOLsTmoDBC0XTu3ml2lgl3Ftqw4dC02quk0mfY2XK91Amp0E9TPK515VZkEtbSwbvH26dxJgwyj2tWeUJt1T5RjzbhKV4XwFra6",
                'name' => "23L"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon32()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_amount' => 325,
                'discount_percentage' => 6848.0,
                'available_shop_ids' => ["dc68745f-bcfc-44d6-a63a-c6b6df2808f6", "cdc694a5-faf6-47c7-93d3-ea54bf11b2cb"],
                'is_shop_specified' => FALSE,
                'min_amount' => 5941,
                'usage_limit' => 2563,
                'code' => "oo",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-09-11T21:39:03.000000+09:00",
                'display_starts_at' => "2020-12-16T11:04:30.000000+09:00",
                'ends_at' => "2023-07-08T22:56:36.000000+09:00",
                'starts_at' => "2022-01-19T20:10:50.000000+09:00",
                'discount_upper_limit' => 5526,
                'description' => "w7IiG4t54Wzbr2CJfnRherxEcoT4K9Gsvxs64Eau0HaT15fZF0XhztC7dV1nv25bDg1mULsdqJx5Re1Jj1HDIXuQPLWY8RpX9IKp43JT2IsCEMlCVFrdP95iWSWZPWJ0UZjUA4KAAL9UxE5O73XoEjID8xclRMfrsbOFZ6d3Lhty55xRpDg8ZQRy54oQtwDTz6n5INx7nh6KnXH1FPj5kx6W60AOpyc",
                'name' => "f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon33()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_amount' => 6062,
                'discount_percentage' => 7536.0,
                'storage_id' => "72922143-1081-4ce0-9f69-a666a19dacb4",
                'available_shop_ids' => ["4bc01ad3-a470-44cd-90a3-1352b0613b21", "9d68b010-588f-4c5e-bbd7-a7cd0f993a82", "f36c813e-323c-46fe-a5de-495326f45687", "dbf6724e-a4ac-4d48-a98b-cf9d00c0148a", "e905723a-6501-4998-bf4d-3f179bf7a0ec", "12068b4f-8843-489c-b255-8b05ea7d65aa", "0cde1ae9-7106-492f-8894-5f55151a48bb", "1210fc7b-8e6e-40a9-9e24-6e467e5a50ac"],
                'is_shop_specified' => TRUE,
                'min_amount' => 6332,
                'usage_limit' => 8055,
                'code' => "2IuaLWIe",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-10-21T02:19:03.000000+09:00",
                'display_starts_at' => "2021-12-26T17:35:34.000000+09:00",
                'ends_at' => "2023-12-17T03:02:58.000000+09:00",
                'starts_at' => "2021-05-13T10:02:26.000000+09:00",
                'discount_upper_limit' => 8721,
                'description' => "179jwFmxHW5R6lje2oBN8r9aXqgpLK3RUH58ppL3Jtm5ck6S6e6azl121s1KhzGIdF0viNsTKbxHI9dipVxnOkcLSsnUjqPs",
                'name' => "d8V7ta7F4XPuSL4yyK9yrC5bq3j"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon34()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_percentage' => 6624.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon35()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_percentage' => 2614.0,
                'name' => "dDOv4cAm7YxQC0RhTAOTSVDwcyjVpwbocL1ZVd1Fby9YZJUhYoajkF5vep4GwexYyvA7cXKTv68WVJYB5hNYkphlfNIxckZIUfBUnMq"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon36()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_percentage' => 9660.0,
                'description' => "e2QROnq53iXNOQmJC6dXXZJviajS4n4M0ArGVZprGe2WkCiyBtMOrKlnk1OUUjV4kvFjiWdV8GkueyPWC5tCjdpeKVe1jRHowINX2Nqlm3BRtTUKjN3a9uoixUiVgDEOybk",
                'name' => "ArzadPihWE7sOcTQvRy4TK1NqeY9joDp0uVgCMPPMlQ7TINnywnMefTg5ZQ3xMr7XTflUSTTknBNCP4Q3ox"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon37()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_percentage' => 8223.0,
                'discount_upper_limit' => 4224,
                'description' => "oLwiLTWqpmpAPols2waO15C3QLCyr4R2fDMezRRSm13v46q1TNk42w3XNcbcGVziiUpvzgMCUWpfLLteo1APjFxLxI1YR864aaBdo1TK5epGMgfOkv18cjEzqv3VeKoQthSfA9LIvz0d5W3CHdqX8DfmbMd3R8JFZSAmRKvjPx7WkBYlaB4QkcLDknY20JWPMWbnBR4aiakEZLAWEBu0nCHGpdFX",
                'name' => "lgNS3osJyIpphQ9y5lTvP7CpI8HSK7Fqu2AkaayKdo633YDXOOBzlesc6MHL3mrV44bJqBS4O1"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon38()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_percentage' => 1379.0,
                'starts_at' => "2022-04-07T23:35:50.000000+09:00",
                'discount_upper_limit' => 7444,
                'description' => "XPF2NzDydGrKMrzjntgtsCVSC",
                'name' => "XbP"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon39()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_percentage' => 9946.0,
                'ends_at' => "2022-02-21T01:11:02.000000+09:00",
                'starts_at' => "2022-03-01T18:21:26.000000+09:00",
                'discount_upper_limit' => 6301,
                'description' => "tURA2wXjKeqlIr4wvKTJPXa1Rdshv3Dgv88WzadgFvmbwrkTjRz6bZ2FwfSxa616GOkXkkFfdynRv3ZeMLZhc3lFD",
                'name' => "IaBiKF"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon40()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_percentage' => 5677.0,
                'display_starts_at' => "2022-09-02T23:15:27.000000+09:00",
                'ends_at' => "2020-05-26T17:48:32.000000+09:00",
                'starts_at' => "2023-04-10T14:57:26.000000+09:00",
                'discount_upper_limit' => 6822,
                'description' => "jTGhcm5XBNLw79ZK1h4sGaQDgNjYDd7LyIBfqZna0C18t4AxPaHsp8BItMZ5xN8XF3UjAZGhyGT1nxchE7SA87oCYF9cw5oh13KECcLDTh6GlAU8Wlxk2LXarQ3IBbBCi5TZ",
                'name' => "BDGz0WtpvhMi0sjBNmSJRfTiGPJPWWLeq8e8Kc5D0"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon41()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_percentage' => 1778.0,
                'display_ends_at' => "2022-04-26T10:22:55.000000+09:00",
                'display_starts_at' => "2023-04-06T02:17:15.000000+09:00",
                'ends_at' => "2021-01-16T01:26:08.000000+09:00",
                'starts_at' => "2021-04-18T19:28:25.000000+09:00",
                'discount_upper_limit' => 2381,
                'description' => "6",
                'name' => "vkpQLTxeBjMNRLqaPzFmxJhrrT7gNIsPwJ7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon42()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_percentage' => 4606.0,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-08-17T00:57:10.000000+09:00",
                'display_starts_at' => "2023-06-07T16:41:44.000000+09:00",
                'ends_at' => "2020-07-24T14:57:34.000000+09:00",
                'starts_at' => "2021-03-30T19:44:16.000000+09:00",
                'discount_upper_limit' => 3141,
                'description' => "Qj63iEMRexlw7ECJjZAz3G5nn8WN3SWSEBy",
                'name' => "MWy9nIPLME03Lim"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon43()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_percentage' => 7079.0,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-12-03T15:24:46.000000+09:00",
                'display_starts_at' => "2024-01-14T11:45:46.000000+09:00",
                'ends_at' => "2023-06-23T18:32:33.000000+09:00",
                'starts_at' => "2021-03-25T19:17:50.000000+09:00",
                'discount_upper_limit' => 1232,
                'description' => "dqXiZYtTxoUfOSm1X34hSuXxmCPzHK18DACtoC3iKJLEPnEdgZEtygJoGeaaIgnyE6jaE47dzupGfPB4xRwPYiKhrv65JqpGvO78DPxqB67rG84rfFdFvPpce8cNz4gUVK7UvjPjdBZlmZ1gFW3IPN0BYTkt7i2A3aO1vZ7cImvkjYKDvKKrmsGl",
                'name' => "HAXtgAbWCNtkPxJZ9anpepXjUhinJErMAIWGUu7WGIkYXMu3tTliZijlBxb0N4Wkw5PfiFHURR6CgTkmuheo"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon44()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_percentage' => 9981.0,
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-12-21T03:35:49.000000+09:00",
                'display_starts_at' => "2022-09-05T14:27:40.000000+09:00",
                'ends_at' => "2023-12-26T06:29:55.000000+09:00",
                'starts_at' => "2021-06-06T18:42:50.000000+09:00",
                'discount_upper_limit' => 1635,
                'description' => "jhjFCwE1FhaC02J5eI6cFrtm9pGdldpVR3vhvLATvNI6eZxR24c40JIDpwKldimht0PbNghvCtu3iutfEEr27Tx8My7QB5z6e2mhfQJZLPgbralG27nmFZfHrjSZmaRyi4IOItrVpMqRuM7HrRzFMGknZymSgMlFYXAtOqu09Woh5tfieu5FyP6GXCOibg4Z6cfUGWjbjsthRubRUV3rZrpndNJSDH5GbpZhutDm5xUzmKgpR7w",
                'name' => "jZB3imtz2CZSUFROO3K0iUTZVDdqRyxiKBQvvJkgQM"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon45()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_percentage' => 3768.0,
                'code' => "aV",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-04-08T02:51:40.000000+09:00",
                'display_starts_at' => "2021-05-09T16:34:00.000000+09:00",
                'ends_at' => "2022-03-08T09:16:12.000000+09:00",
                'starts_at' => "2023-04-24T17:47:09.000000+09:00",
                'discount_upper_limit' => 1985,
                'description' => "MeVzbHR7OgK8CvK4ocEtkbuFgAyp3qGKgHfBD5zd4u5AAsJyEb7s5uB5tvbFQUuar46ZuFKeSWyWa6VI7Sh48c8ejeK61VcUZ5C28",
                'name' => "4s9vzL5yZ3btF96J3E7RBX3Qg"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon46()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_percentage' => 2009.0,
                'usage_limit' => 5259,
                'code' => "RrbSNh4aH",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-08-18T14:27:50.000000+09:00",
                'display_starts_at' => "2020-05-17T13:54:46.000000+09:00",
                'ends_at' => "2021-02-07T00:12:59.000000+09:00",
                'starts_at' => "2020-03-25T14:43:29.000000+09:00",
                'discount_upper_limit' => 6887,
                'description' => "oYVYdw5RKB6AEhx6Ri0urqqCUlFYcJDdpttMYx75FjTJMsD5Ogoh9dgTwHnYyWrHPJTBB8Wii1ueGV8jS5nPMxWlEF21Pc9GUbReEMcxzl3x5pk9ji2MbgX5gyo5QJPKijR77tLPAnCjvWmbBxOOx0devwsrC7k7KHCh9yHU4F8MmzWpQeve0R8qtfc7Vxn4rW9cNCwG09mlODVCKuxR",
                'name' => "4nffo3HV7GGBSUa387aqUOZGJISTImSfM066AJVXGBlX3MNY1Um8Cs8pF6qsfHOgDjN7sw8veoyBQq5YhDvgONuwJJjZHzYF6KscsFoE4P9"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon47()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_percentage' => 8043.0,
                'min_amount' => 8535,
                'usage_limit' => 2043,
                'code' => "Ps3u",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-05-07T20:12:15.000000+09:00",
                'display_starts_at' => "2023-03-11T05:45:08.000000+09:00",
                'ends_at' => "2020-04-29T22:40:35.000000+09:00",
                'starts_at' => "2022-11-20T21:05:34.000000+09:00",
                'discount_upper_limit' => 2468,
                'description' => "x6EbNVUg07DXZmbHoJ31DEEXCNGwjvmKdvkWl524GhjxrLBFNxVm5Iad5VXa1J0tAx84MfkSkug5WZ",
                'name' => "PEq8bVedFDZRACQegupPVCwofrq8LJNINY8TbEpg6Hl9k64w5Awmk1o77ppQpYTljwMsABG1wuF2OWwcq5kv9HJIBh2JPlROUwP"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon48()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_percentage' => 4530.0,
                'is_shop_specified' => TRUE,
                'min_amount' => 4048,
                'usage_limit' => 3907,
                'code' => "q08zXY",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-07-08T15:54:01.000000+09:00",
                'display_starts_at' => "2022-09-04T09:35:29.000000+09:00",
                'ends_at' => "2022-01-25T05:51:51.000000+09:00",
                'starts_at' => "2021-08-16T13:11:03.000000+09:00",
                'discount_upper_limit' => 3657,
                'description' => "Q4HwuSP5yH3Y7SX5POu13LUZjDNSitprLHXRkDfgGOMh9DXXseyz02mySLDUIxEuZsxQsY0raWnlT54n0O2fjzPpclMOX1gegmbAR2kV8tVnDJZMuhByqjjWW8tEGbRRBZjhkOYX8EfCwnWVGfDBYp6llMJ3XGf6SnJZ7uLkprz52yuaF0zTgSPz8qe1",
                'name' => "ZDcuuei3db8C"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon49()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_percentage' => 5396.0,
                'available_shop_ids' => ["cea88373-c31e-4f3a-aae2-4649873f15e6", "67cbd3ee-6b32-4e58-aa92-e40bfcd7f722", "3ede1c7b-8f8c-4070-b975-41226b8ef7cb", "323ac370-04bd-4423-8398-cbfa6693b67b", "7d0b77fb-8210-4c2f-9b8c-c5b25cdf969a"],
                'is_shop_specified' => TRUE,
                'min_amount' => 5019,
                'usage_limit' => 1109,
                'code' => "zuMEfz",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-12-27T18:15:22.000000+09:00",
                'display_starts_at' => "2023-09-25T01:12:14.000000+09:00",
                'ends_at' => "2024-01-17T10:05:46.000000+09:00",
                'starts_at' => "2020-09-19T16:31:52.000000+09:00",
                'discount_upper_limit' => 2750,
                'description' => "pbZXGPuA6oNbKUJvf46c5LrqiBhc2PUJQCDwBuOesMFo4illDZyJHzvuKOOB5CE0yEROakJFciviCyW6QnsHh6b2Udt4UIi1gGDlYS3yIIpAl1PZyl9eKTVUPCxPqA5vKOE68Fh7yO00A58UFSml96S3tqrlvnR5kmZvBaT2VUULItCohcJTUAoSUkJ6jrEMAmqen9h3PzR0WdZu6jXNv0vF6j3f8stzvvPAzd4o1pSYkbi",
                'name' => "dIxjBR0eLMMmg8UZKxmXsmC2xtVjgtDqti1odbEgBD6nESP99fh47zcUkjCv3QQm"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon50()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "bad78de1-71b3-43c4-aed4-38157e8a9a93",
            [
                'discount_percentage' => 6209.0,
                'storage_id' => "68117af5-97d4-4914-9dad-e282761ce419",
                'available_shop_ids' => ["30e86cd3-576d-4a3f-9b5b-620554f82a8d", "2c3ff415-c0fe-4583-9b2b-96bd33cb9207", "65901927-2d23-41fa-ba53-de8bf8390013", "719dadab-4654-4e59-8c91-84c1b640466a", "2f316e48-5a3a-48ba-81e4-df2dcc56f1b6", "2c8fea83-9705-42ce-a30e-0bf30ffd53ac", "32fa41cd-f4a0-4fe2-a247-5b84a0bc0b4c"],
                'is_shop_specified' => FALSE,
                'min_amount' => 5146,
                'usage_limit' => 9420,
                'code' => "zaBH",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-06-07T15:47:04.000000+09:00",
                'display_starts_at' => "2023-06-18T16:43:01.000000+09:00",
                'ends_at' => "2020-05-18T20:43:21.000000+09:00",
                'starts_at' => "2021-04-30T05:13:24.000000+09:00",
                'discount_upper_limit' => 268,
                'description' => "GSaW0PPiry7FFn4SyWJpWhbQLB7zXqe7Ie3duxPbXxyjw5WMTpeQzE2pnfqgUyFhVnQHaIb0GJit0HCJbxu0VhliL41mhBQPkXsLLNiAUu2F1ZB2yro5qieimgNAJTjLOznoP2P7FrpFt9wBhM5j82nRIOFjpl2UQJWaXoOAe1X7d0X1LwDykfYGDCs9ZCL6z",
                'name' => "eTalFw40IwhF3vLE1Om6b7uRq9iyeJUw5T4PZn7C65sJz7JMDoMCRbcZ1cKd7jjbfBjYdxp8wSS"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
