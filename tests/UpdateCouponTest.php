<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class UpdateCoupon extends TestCase
{
    public function testUpdateCoupon0()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_amount' => 2187
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon1()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_amount' => 1448,
                'name' => "buQwKeaQ4HWfPuDn8vtLGTKy9baAXpUrNxQgJv2d1RjRDvxxlQFhM2eopmIlmvqzqnGOYbg6rdqjemTbEPE7it6nxw8V"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon2()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_amount' => 8927,
                'description' => "zyCNbz8zcALV0qfahEqSWpbWk8lIjmXf3crokuVBQQlsA8T5nZUMuDqspHuPmGiUoPteza9Foxx3GETJuunMNM7JUVu7YgDI0zSm63cU49za1",
                'name' => "QJALcpDZJ7YKoaGZqFQRMYj7eI0Oi"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon3()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_amount' => 5671,
                'discount_upper_limit' => 3028,
                'description' => "gfPr68fP2A8RCqVjIMZulltZtjgMfuDxn3Q",
                'name' => "gsidEuf2NvBHeZX8hYKnrzJWptMhyWUi64YZbGeyCSFHt3mcrCB8tq8q2IVY2UPx"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon4()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_amount' => 8075,
                'starts_at' => "2022-10-15T03:57:57.000000Z",
                'discount_upper_limit' => 4171,
                'description' => "8mwHnigIC2xte",
                'name' => "LEmOps6u4P22rjT4dupT"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon5()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_amount' => 5913,
                'ends_at' => "2020-02-13T11:08:06.000000Z",
                'starts_at' => "2020-01-29T08:42:26.000000Z",
                'discount_upper_limit' => 1783,
                'description' => "lYmSqD3jh0KtoQaeaW3v7wYe7b9HTOawWBmOJlSRN9rogVZwJO2xNcltqUbvpNyoJI0vqJ8n0oU",
                'name' => "QYsKaRMsrJUacY2rYQO4gmGHCfbUV5BkcqYiSNlDYC6MEWefziiHI3EykNpjwCPjAkzyY2kmUe2JJ53U3N6F0e26pbO3HttlG4eyiatMI7V"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon6()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_amount' => 2814,
                'display_starts_at' => "2020-11-15T17:26:11.000000Z",
                'ends_at' => "2024-05-17T14:49:52.000000Z",
                'starts_at' => "2022-06-15T06:29:56.000000Z",
                'discount_upper_limit' => 4865,
                'description' => "tugJSz1Q3vovXNsgFsW05W19",
                'name' => "aXuGVVRQlUVJv9CZ2ZsBhmJB"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon7()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_amount' => 7300,
                'display_ends_at' => "2020-07-27T23:27:01.000000Z",
                'display_starts_at' => "2020-04-16T06:52:34.000000Z",
                'ends_at' => "2020-04-24T22:24:40.000000Z",
                'starts_at' => "2021-11-09T23:02:08.000000Z",
                'discount_upper_limit' => 6322,
                'description' => "LnPueitIaB8AWaFb8JKCZbl1FLUJSG0fudQ9bvTSzMBL1Qigyh82R8yfv5oZ1A8LucSTZwJytxSEpRfXYxFxMDsqe8",
                'name' => "NITOunWJGeGMfsCgwJoSsvq0p2vMuqT6yOdp5xmnGGOh83wDY3YT1DlU5jqTh"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon8()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_amount' => 8044,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-04-21T14:57:01.000000Z",
                'display_starts_at' => "2021-12-20T03:52:12.000000Z",
                'ends_at' => "2022-04-26T22:27:13.000000Z",
                'starts_at' => "2023-04-01T18:06:36.000000Z",
                'discount_upper_limit' => 9009,
                'description' => "xsypKPTUBVqh1Y1karSx9kbbfwykuboyLPrrY2btuxHx9YophvSLqEzRt6XTR3oDpLSuhWGSp4IuNXEvAYv341undTljbWPhfpiwPMjupC65xVDnAJbsKD6b895iftqbY67Ut2zsAKH6lKT6gJXbaEKAddoUM0CRdaSDeoQ9lXXELG9oQdgpEse81VvpXr3HeuSevupI3Lg6cydG4CQY3zROLCcC3cDzGwCmJXHiF5C2aKJupg0H",
                'name' => "ph0EUCWBeCDLYnE6HiVXoG09ihrRj4aejWMyEn4Q3X3BDxBJJ5t6h3IPcBKQDcagEkitF8iACEva8PGaDArnv6F3HhJclpv"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon9()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_amount' => 3525,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-04-28T17:40:27.000000Z",
                'display_starts_at' => "2024-02-08T17:56:16.000000Z",
                'ends_at' => "2021-08-20T03:51:26.000000Z",
                'starts_at' => "2023-12-11T09:27:08.000000Z",
                'discount_upper_limit' => 4366,
                'description' => "kBLWjkCR0Mj5I3Hqz506kx1IdZKDkCNCl989Inr9h5bKrK2A0mcFTtdvdsEkzDVoxJr0lAnMovtOnbZ68JstsOcxw5PoatcF0TU5W5omYIqjFLKdIYieVX7m2aCCypluKCuWAlkVHsDkHFJvihW5VcQOv2mc2ISnCuuu6HEZICTUsFd55",
                'name' => "cysKpzPw06buTFvYo4vEubGw6jV"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon10()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_amount' => 3144,
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2024-07-26T06:22:27.000000Z",
                'display_starts_at' => "2021-10-22T12:20:11.000000Z",
                'ends_at' => "2020-03-10T15:06:45.000000Z",
                'starts_at' => "2022-08-08T23:08:26.000000Z",
                'discount_upper_limit' => 163,
                'description' => "NyPqoWcQPdnYsCcbQIY2KFXsspdkpVkTBJa3OTrsXs88kJNoIZazm0lWPTZ7efHVp4Du6bqVzq0H9hNDIpWOGRlL4QDCIWrLzYwdZH6RYisLngmui2yyfAvCUPPfC6gPSyCF",
                'name' => "nlF5wS89FXtStGksuJSc3uI6YbNMb4YSuPWKo7xO0kav9UABs7zcSSckrHrP7zrKa6Deu24AbEENpv2mR4vcFbZYPGyrsGLqJFlRMGfDCis"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon11()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_amount' => 3006,
                'code' => "e5qHDsM",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-11-14T13:12:39.000000Z",
                'display_starts_at' => "2022-08-12T09:36:28.000000Z",
                'ends_at' => "2023-12-04T15:41:23.000000Z",
                'starts_at' => "2023-06-20T13:14:40.000000Z",
                'discount_upper_limit' => 5367,
                'description' => "TKEpXzySqqc4sXPad6xuwUqi64YRTYtsOeEN9XbwlgwBy5OkIYkbdAf4PBqh2Y5zV0C85Vn4l2htJKp8EeWwIbRZU73CECtq6YH4jkVjZI7iaSuegvmESb5ZkkQma0HXRKUqv4lzkwZFtSWx4aRECgS2Rzs2ylIq5ZtrGXVCQUhbREfojZVoiIjURbvF5cuoyvA3tbiunsY6SNRraYwc8QDfAEfV4F8XUQw",
                'name' => "7FOCvHUkEBp2Lx"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon12()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_amount' => 7923,
                'usage_limit' => 1524,
                'code' => "HBe9EWUoT",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-12-07T14:32:07.000000Z",
                'display_starts_at' => "2024-08-02T16:43:13.000000Z",
                'ends_at' => "2020-12-11T05:05:17.000000Z",
                'starts_at' => "2020-06-23T00:58:15.000000Z",
                'discount_upper_limit' => 9099,
                'description' => "CBY3rucfBues",
                'name' => "6uHoyn0kY9tu08AkjC0WPK"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon13()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_amount' => 6370,
                'min_amount' => 5119,
                'usage_limit' => 665,
                'code' => "vYow",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2024-10-17T09:15:59.000000Z",
                'display_starts_at' => "2021-09-08T00:28:56.000000Z",
                'ends_at' => "2024-03-05T05:29:23.000000Z",
                'starts_at' => "2020-05-21T21:33:20.000000Z",
                'discount_upper_limit' => 3834,
                'description' => "7SQmRuyNCMpGLgUAKK4AYXStTHGYGCT6FSvry2ciGzpWdg5yn158N5eaT1YQUtPEMBFK5",
                'name' => "CvbOFISTKPBIbnB4IlVfzKQeAZtwqv4AGYkQ5YWzuO0mrMzlLTVYxU13omHKmdh2ng7xlmB0D7qlClsr3pe"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon14()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_amount' => 1816,
                'is_shop_specified' => FALSE,
                'min_amount' => 8978,
                'usage_limit' => 8336,
                'code' => "1RPsdDZ",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-02-21T04:39:25.000000Z",
                'display_starts_at' => "2024-08-31T22:08:33.000000Z",
                'ends_at' => "2020-10-19T19:11:16.000000Z",
                'starts_at' => "2022-08-03T20:48:53.000000Z",
                'discount_upper_limit' => 8254,
                'description' => "sfv5Au45ikmQzjXEIrL5tEVsPccciqGzpCuGxgjotbAnDFm6nBFTBcp5MgKi6djde9q9Gx06zspIhW3gmaN6JcrvmX5G7cBGoNqTURH3hLLIVR7Y",
                'name' => "cRrTeQOsLdvK2PUyIdpshyxjFJxJ7Fcj7Ywb40WRFS5iP8DHnWS95dKYCDWj"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon15()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_amount' => 3104,
                'available_shop_ids' => ["33bf04a9-9129-4cf1-9426-5f582f0b0555", "c04c3f46-109f-40c7-8f2a-3f6f1c488701", "d89dbc01-4080-47bb-8ffc-ac1b26dc15fe", "7e02fc52-79c1-4bb4-bf27-985828e48d8e", "81102a88-1c28-4276-a986-761d467e9127"],
                'is_shop_specified' => TRUE,
                'min_amount' => 475,
                'usage_limit' => 3894,
                'code' => "Wv2",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-03-24T15:04:36.000000Z",
                'display_starts_at' => "2022-12-06T09:33:57.000000Z",
                'ends_at' => "2022-01-18T14:20:40.000000Z",
                'starts_at' => "2024-05-29T10:24:10.000000Z",
                'discount_upper_limit' => 19,
                'description' => "fcwBDpLTRN1a0lar5cvmWk6HP3Edv56q9t5VGuIJJqB3hC6IgJljp1y8KOJgfu4WFT3sPLKGiMRgfz5jiMdvRW63Z9043h9SU3fTD5o4Kn6TQ5PsH9YtmnNiOZyV9AO3DnB1YRES4xlc6449ibwy8gDnWqdIP3eIh1PycrJFKeRKa6OogwkyZYeik5qw2qVOD7lJwoEqJ4uimGtF4vDevDABoV1497oKjy",
                'name' => "plKXUyju"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon16()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_amount' => 6950,
                'storage_id' => "6e5298fe-0711-4cef-8164-7ea6eb81e8da",
                'available_shop_ids' => ["5ffa3be1-aa5b-4169-9502-8d9e2e2bd887", "6f71fe53-e1a5-49e8-bc23-18178182aef3", "9df7106a-01ef-4da5-ae7b-b0a79147273b", "009ffa4b-ce65-4216-adc4-2304f346fa85", "7ac68389-35b9-4d1d-89ca-e38adf73b896", "14aab756-36ea-46aa-9669-bdb33298b3c5", "ac58f7dd-9187-4f7e-a868-0a17396a61d1", "b712ecde-62b1-4ab0-95bf-9d6e2d828305", "fa21f5bb-7ea3-4d0e-a21c-1a253513c8e1"],
                'is_shop_specified' => FALSE,
                'min_amount' => 1482,
                'usage_limit' => 2520,
                'code' => "x7BosawhL5",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2024-02-20T05:53:28.000000Z",
                'display_starts_at' => "2021-07-01T23:01:04.000000Z",
                'ends_at' => "2021-07-22T08:58:02.000000Z",
                'starts_at' => "2020-08-11T05:50:27.000000Z",
                'discount_upper_limit' => 5688,
                'description' => "yBqdUl09HCPEoMCgQwCdLCVxkfS7LC09h1a33P4feIw8rNkq1IJcIVXzbXoLITUciADNRcm8cr7h7uvpVmJgh2hspBOtxaFVpQwu69vaYb020lVhpK1uj",
                'name' => "AV4SIGQkIPmfa5YJsZSIV5H0hKFZRjFJsBJwxE5ymHkkfvwj75uGxXyxLiKv"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon17()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_amount' => 2589,
                'discount_percentage' => 8953.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon18()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_amount' => 8667,
                'discount_percentage' => 9025.0,
                'name' => "HQ0Cmh0GR2iNpQgbrTS2HEffP70DHCUohTMu269OO6DIw88j"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon19()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_amount' => 4147,
                'discount_percentage' => 6096.0,
                'description' => "x2M6UQ20lAXsAZIDxFXqpctZUoXMEwvfZIhfCcdWRRWKBpAMRk3KT9aHDvn680BNVo61whu52VEWHzeXnCqnnjKe2ZokcQxt9okwN5c4Mkgq5YYKEEntoCEiLAHJ2sW9FitjutUJJsIkCXGENUTkzcX2ykkKJlN107OaiUpqdHMS0B",
                'name' => "QNQ8yntRPdiO7nDWAmmXsETvex6EwUtMqxtCSMEZWLR3IYMZqZQp71KYV2dqAhSRH0jBaTj6CKr7da3Hc5MrDSrYQmTFD8MK4LhwIRladKEnUCU"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon20()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_amount' => 4779,
                'discount_percentage' => 8898.0,
                'discount_upper_limit' => 3156,
                'description' => "sHjSLXQWZdqZHX",
                'name' => "OS9NchMxuvMOV5pE0ThIcNVnpd1n04Fvafo"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon21()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_amount' => 1180,
                'discount_percentage' => 4789.0,
                'starts_at' => "2020-12-07T05:35:24.000000Z",
                'discount_upper_limit' => 7187,
                'description' => "lXygJfyBJl1nws6Ne3S7kdpHli9FCf9vj51iwXi5vVkai7fMidPllBkchJ2ELHNBkuEPtWGn6U1tknXv7iBjpuz8kXfTQVtq7nYSMGg",
                'name' => "A5q48d0VvhbqvZRxaI0AVDH5phIrM988xOpACBuWehCLI5Ithzpo1sb"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon22()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_amount' => 4029,
                'discount_percentage' => 6519.0,
                'ends_at' => "2022-12-22T01:15:05.000000Z",
                'starts_at' => "2021-12-11T12:14:40.000000Z",
                'discount_upper_limit' => 4408,
                'description' => "fl4MiezYuuDN5NO2HkiJUlQ4dKgR3uo3pyHQKCLEzAV2HW0T6wtgFowhjkpuax7inTCKJlAlkDX0z9k4WtlP60t1pGDCB7WpLioRLUylhwp3jBXylmnzTDYQPTQEhEDpiIl88uXhFr9tzNaCFLhrW7Qg63LOoyDRk2frbKYDtHXRSpeSviFk4W1qsOLMcNwe8KEeqmGGreSt4nt1ybC0Y",
                'name' => "m3a7y1jkUDzYlQVbUnnRBBQRDsGnvgO2bodBPeKpRFsQIEwGMkEBFs4OKbpkXgOJ3P1nM9riBWugVW8sRaEhx8aJkSJHuUfzU3cxqLSG8S4aP0CNMNfb6Vow"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon23()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_amount' => 3168,
                'discount_percentage' => 3262.0,
                'display_starts_at' => "2021-08-01T16:14:19.000000Z",
                'ends_at' => "2022-05-05T16:44:07.000000Z",
                'starts_at' => "2021-06-17T00:28:02.000000Z",
                'discount_upper_limit' => 9429,
                'description' => "VfzovzP7VL5ebcijLtVhmlM6kBu7DCNg4aU7BlWsNECFWA4hHlvtcjGtIPadSKiVX8t6IuP7AfSh1iSdnomWlXA8y2vwAsTNYaeLyV7CWdrmk7DRyx2nAdRh4U2Gnj6HilrfsKlPIExrXeCFOu5KxrV4xhz7DzBywKIciMlN0S7L0N0uBHj0xIlmI7crwj",
                'name' => "iJmBq8x2BMoiejWmPY8qwKCFWRUhTWJtrSHM5KvGCx3jvLeQXqJ7fOtRApW564YK0LvLN69VHlYJhXH6cUQL7XLfiXA0zUZ8WIiKSeWU"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon24()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_amount' => 6906,
                'discount_percentage' => 822.0,
                'display_ends_at' => "2024-04-25T20:32:44.000000Z",
                'display_starts_at' => "2023-05-23T07:58:30.000000Z",
                'ends_at' => "2021-08-30T16:31:25.000000Z",
                'starts_at' => "2022-10-12T03:49:21.000000Z",
                'discount_upper_limit' => 8674,
                'description' => "D3wpFlmsWusC8RGaBKUJdHLf9kwaxRbmzAo5vzrqC43kvR5VzS4JSx7Qk5qYm8EJV1By6vGk0FuWZ3ptkSyNBcc9paWacdvlF8sKq6M8TMch0t9MLsXgvG8EYKbsPpBkO0z5h9VDX3NEhsO0rjGagOIQ6x9sSfu0zX8zdCniT7rbp4Rd",
                'name' => "F8jzLLX07kGwmRZR89QJDyeQCnprhi7qh3KP4T37Wi9g"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon25()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_amount' => 3385,
                'discount_percentage' => 494.0,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-08-21T03:08:05.000000Z",
                'display_starts_at' => "2021-02-10T02:18:02.000000Z",
                'ends_at' => "2023-02-28T03:35:04.000000Z",
                'starts_at' => "2020-02-28T01:47:14.000000Z",
                'discount_upper_limit' => 643,
                'description' => "iq9TM1kLnMOaPoayQ1SL4LwXctk2uyuazqzFpngLk90ZBFe71DIECbUavopCer6amUqWii2uDVrmTki6pqO0f8cnptMkBRjmpnnbeCg4xumOoxK0oT4F795unttA065Yr03Qzj1SYSblk7QSMdkkKPrtzfsCSKaR3OFn1WKJz5hhBZBCZgSERTDaoK9IqITw9RXh5VLaBXSS3Ezs",
                'name' => "Mpj8GBIyJaRyweuGKy2nXN4UBPwGQ9mhvxLr7QQxCiR4LJ0VAGQ0LknXBVXV6IePzMvb8rIAKhBAUImOpB9NJd0FGb0jOdIa2VbV1E7pIBf60ZOpXb0"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon26()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_amount' => 5035,
                'discount_percentage' => 7157.0,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-01-15T08:42:36.000000Z",
                'display_starts_at' => "2022-08-09T17:40:55.000000Z",
                'ends_at' => "2023-06-14T05:41:33.000000Z",
                'starts_at' => "2020-11-08T04:37:06.000000Z",
                'discount_upper_limit' => 7547,
                'description' => "W5FEq6VpVqu1DpFd0JaBsPBEjjxsN82R5",
                'name' => "V74h6MclFLskpVJhF8OvhWGp3gTZC60RTw4fZ8zWBqSC3vDIMcnooU2vsEkhFzbMP7H4x70jy8CyXSjsNQfhm4JdiSR8LU0sAxV"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon27()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_amount' => 2622,
                'discount_percentage' => 8101.0,
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-08-22T07:25:55.000000Z",
                'display_starts_at' => "2020-01-28T02:58:55.000000Z",
                'ends_at' => "2021-03-03T19:27:06.000000Z",
                'starts_at' => "2023-11-06T20:32:29.000000Z",
                'discount_upper_limit' => 5758,
                'description' => "r8tnCR4b3VVcnR7ySaTJSLXaRbjFaOCY9HY0faJMcRsZ3tfn14pqdpY2gOVzxC2AMFcqtkzhdfPKiy9SE",
                'name' => "DVnpaYhOvVB8b8Y5rPTIoQafvlfkuyBchbjOVFfaAmwoPiUeFs2qGGZk77FXigkPx1NC7bcdhHDyq2Bmegm"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon28()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_amount' => 2126,
                'discount_percentage' => 2531.0,
                'code' => "V0UA",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-11-23T21:44:06.000000Z",
                'display_starts_at' => "2020-08-23T17:23:20.000000Z",
                'ends_at' => "2022-06-09T05:29:13.000000Z",
                'starts_at' => "2023-08-08T05:40:02.000000Z",
                'discount_upper_limit' => 904,
                'description' => "j42XbKSjWX0mczdG92I3EQWa6MviKhzgN1WE1E9QE8I1WOtKGTOoDsggK2zV",
                'name' => "vIrNmjPyMt7JZTknlcSLOAfgHki7iEUUEZsYB8I8w6YX9AjYRSoiU1BYQYTGkBMdZ9gxwOlUDOeBSRiyqeameMaY0bgN8gTUkelv3hkGmk4iWQZAVafOlabiOcEnlo"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon29()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_amount' => 6504,
                'discount_percentage' => 9778.0,
                'usage_limit' => 8616,
                'code' => "Xft8Z",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-04-29T09:01:19.000000Z",
                'display_starts_at' => "2024-05-15T17:23:12.000000Z",
                'ends_at' => "2022-07-31T15:25:18.000000Z",
                'starts_at' => "2024-05-17T19:26:01.000000Z",
                'discount_upper_limit' => 1027,
                'description' => "5H8aSOl3MDXnG9yHqEATh",
                'name' => "wDuq1zewsMIx1hpzHiKxcCexEPrWNcD1BCJ2Q7A3"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon30()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_amount' => 8072,
                'discount_percentage' => 8512.0,
                'min_amount' => 9337,
                'usage_limit' => 505,
                'code' => "qUS",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-09-08T17:44:13.000000Z",
                'display_starts_at' => "2021-01-08T15:21:59.000000Z",
                'ends_at' => "2021-02-23T02:27:31.000000Z",
                'starts_at' => "2024-06-30T16:44:29.000000Z",
                'discount_upper_limit' => 6521,
                'description' => "f158jbodxUJxcIS6QwIFvAWCZsB1EYOxuNXsb8K4XyQ60l6nZCLpElUd6iH1X66E0nqBBGmKnZ6uDI",
                'name' => "3iuFQrrgeXzyNXNrNkeWa9hWsLSo6RhlRrNdmMatyDW12s5SKsd06fYHa9pHdUJ2NkpD9XRln1g4q1AmzenaBAIYsPX5BEVEkSwN7Jl7UfMqNeI"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon31()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_amount' => 8535,
                'discount_percentage' => 2585.0,
                'is_shop_specified' => TRUE,
                'min_amount' => 9169,
                'usage_limit' => 8925,
                'code' => "5mYkDBp7",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-04-18T09:50:55.000000Z",
                'display_starts_at' => "2022-09-23T18:31:36.000000Z",
                'ends_at' => "2022-01-14T05:33:00.000000Z",
                'starts_at' => "2023-11-14T02:07:12.000000Z",
                'discount_upper_limit' => 8222,
                'description' => "lz0WyF7I2Snzg812cd0lMhCHFE2kwBpeHri",
                'name' => "IaXxYmUfeD"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon32()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_amount' => 8742,
                'discount_percentage' => 7425.0,
                'available_shop_ids' => ["968e7833-8842-4c4b-8fd4-e2c313f148bd", "62b10e08-682f-49da-8fd0-073f04fa99cb", "414762a2-1be8-47ae-929e-776b9628c0b3", "ce0a3ff7-fa09-42b9-ab5f-8af2af4bd132"],
                'is_shop_specified' => TRUE,
                'min_amount' => 2893,
                'usage_limit' => 2730,
                'code' => "S5qnBpe",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-05-03T01:40:37.000000Z",
                'display_starts_at' => "2021-05-13T19:05:55.000000Z",
                'ends_at' => "2023-08-17T00:14:32.000000Z",
                'starts_at' => "2020-04-18T22:19:14.000000Z",
                'discount_upper_limit' => 862,
                'description' => "NKIGuoyWD3BHeU5bcdtREmG3PoPoUnVURoRDP0303M0EUzCR0XC7UBINwESq7hPy7a3F5MBC2C7VfANu3p62KDWO8TDrLXiDq8ZM4HpSJ7ezaoKVM6PG4nVxadlDXYh8F3jX5Rw62VEObOlMsiJ",
                'name' => "l1b2ESaJKCDCVaIjvXY9buv1PGDaqpxNAcB7XJ2PMH0HA7mMCxlziaJ1nphI9ySRxw6pdyrj7YEb5BIbPwZ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon33()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_amount' => 2647,
                'discount_percentage' => 6946.0,
                'storage_id' => "9553f41b-a2f0-49ae-ad8b-c22486918774",
                'available_shop_ids' => ["43af59e5-90d7-4c1b-82cd-e9a2aed4cb2e", "7ebdaa17-bc8a-48c1-af66-ad6afcc4e396", "62aa63d4-d28f-4b10-bae8-d5933d83e925", "ba8ed01a-4c3c-42ea-8f21-9531e0946f24", "46c7ca17-9db0-4226-8a26-7d05edfab2c0", "91e5e0e2-26d1-430d-b7fd-09f926f871a6", "6b6fefd4-5e0f-4607-958a-bd7c64121036", "bc520b06-4ba9-4409-9ad5-871dde5c37e8"],
                'is_shop_specified' => FALSE,
                'min_amount' => 6180,
                'usage_limit' => 4210,
                'code' => "Op8",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-08-03T04:47:27.000000Z",
                'display_starts_at' => "2022-03-26T11:32:07.000000Z",
                'ends_at' => "2020-10-24T01:25:18.000000Z",
                'starts_at' => "2023-12-06T18:21:24.000000Z",
                'discount_upper_limit' => 3916,
                'description' => "IcD579HHiydYwYbStQsIHShYuqMOfry8huKLaun9q8fRCMt2pzYekawpUouvYHKlj0GUL0Fcnz7fEngR6pF3m54Vmw",
                'name' => "rgFgT3RyUt1Kexb2ZIYN08OgDDQYpUk9QvTpwbva3X3fUufQzzx2hzebS68SpNEGkfmS3Uyy5Zn41VzLKUg3om1YNf"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon34()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_percentage' => 6570.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon35()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_percentage' => 3806.0,
                'name' => "eKoLdFE8Hmt9R8Bv1AJsBz3l6W699PQnfTErfIkmiU4i2bFcYt3zvnnQAgg6WKGNaTc3A08bOic61u1yVQPNCQEFIkbwhO9RJiR7mxn7kYGzShazSiZH6DDfNqfsVR"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon36()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_percentage' => 4713.0,
                'description' => "zxzsVzVJLxpF9uCjOUSNMH9fWh27PiOpr3HMMXsb4Lh4b0Gko8iE",
                'name' => "P3Cu0AOaTlKzyVFYYoK00acoGlEqYYGWZUMgU5LJ8nedbEkL6"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon37()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_percentage' => 163.0,
                'discount_upper_limit' => 7894,
                'description' => "CbZlYCZFu0",
                'name' => "jXrvick1kbCzvMElblaTUskxDWTi4syFdijXYZ6Fkp0v2rObj5KP7CaX5R9O7hnOQMfDj4u8or1Z5ajnFBytvfCWU5"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon38()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_percentage' => 3220.0,
                'starts_at' => "2023-01-14T20:11:13.000000Z",
                'discount_upper_limit' => 382,
                'description' => "sIan6Df8qsq2k3ETquM3SQujWFDE153B47G8gAIFr9zY1ABG4Q6S1AZ81ee9F1zaeUGprRtPpZgZzOhvmvIjVKe7aM7QiN4LuTtB8ZF5mN9clYyKl8cUsYw8CW8rHVcmWZsjKlFT0f7did2pSfVDNNjekhaUaqNZOry7pQcwkQvvHfTZTUiaSBniTvgiFcfFWfXoobW27D2zSsjxSJQCC2TKE3m70u",
                'name' => "0i2E7e3WC"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon39()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_percentage' => 653.0,
                'ends_at' => "2020-05-10T09:02:19.000000Z",
                'starts_at' => "2020-11-30T00:52:03.000000Z",
                'discount_upper_limit' => 297,
                'description' => "knLhb4mGHjaX24jJAlJFQ82MhyQQoipgFNSux0jeobdQD1VXjUggH7qMtHhSfZdXUyjb1NxKa8yAWf3eI4rn2GKxT8MfsHveV88627AlMJYf8MI0c9iCp3raZonaiDazAfoVN5ZcNoMxEFE11voG9m7gWIlidcsFhnnSlOPQSKVW980GqQVfPuvUPiEFV6mDyiAjmPC8F",
                'name' => "IFplNkUQpOFZAAuAkdYYYV8q02r77ePIgPu4dPH7ImSF7bIQ97lNoNEqqi11P4GN23Eb6NlDd7BTwpYu4Valw5xiIJ7Q1Cipp2CPMRifb"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon40()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_percentage' => 5106.0,
                'display_starts_at' => "2022-04-13T14:51:14.000000Z",
                'ends_at' => "2021-09-02T20:51:58.000000Z",
                'starts_at' => "2024-09-11T22:19:28.000000Z",
                'discount_upper_limit' => 8744,
                'description' => "zSSSsJChBCfGVrTTzFEA3cEkuniAENmbJtM74yoK3yNaovdjb7urlPo",
                'name' => "ndGWEfVzKMwihh3UCJATPnnGfbSAjt8y1"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon41()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_percentage' => 6682.0,
                'display_ends_at' => "2023-03-27T12:55:40.000000Z",
                'display_starts_at' => "2023-07-13T16:01:52.000000Z",
                'ends_at' => "2022-03-01T03:43:14.000000Z",
                'starts_at' => "2022-08-25T20:27:12.000000Z",
                'discount_upper_limit' => 6872,
                'description' => "9w3aEMSDM7H6DKpMVCMs6AqPF1N4VGIihJYcZH1yqyLKdrb7VdvBferrdPPsgFTBp21GVpuNthlN8cTNxtClPPAh3ydu7juMaO7kqGjaASQkqyw2Q45pim16jWY8Li2yJuAILC9WmiQzTAP0hsvY",
                'name' => "k94ECXfwyrT6FNWSeiPJDkaNGUUFy37fVBCxguWkgEaSRxikajDhky1e9MUM8ZY9eEBDTjFI18oRpgCoDiEOfsuO3LMtzPm5pmHiztzTLcjSeNyveotr1SbLY9f9RM"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon42()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_percentage' => 5811.0,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-11-17T07:50:03.000000Z",
                'display_starts_at' => "2023-09-29T11:12:50.000000Z",
                'ends_at' => "2021-12-20T11:34:23.000000Z",
                'starts_at' => "2024-07-16T20:21:37.000000Z",
                'discount_upper_limit' => 8257,
                'description' => "m6iMSYVoPQWfV62UhTGJS1L9KLOsA2Q2Z23Mwd98ipOldTUQCXPcZtLDZ6t1d7NhS3tIbiaQ9UqJHQZFkEmVia7WMZwoONY9mYcjUD3BWfN3hpObBbd0WPCuqh90wnUEefdvvGn5",
                'name' => "6xgqcI"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon43()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_percentage' => 5443.0,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-03-29T07:18:08.000000Z",
                'display_starts_at' => "2024-03-02T08:23:49.000000Z",
                'ends_at' => "2024-03-01T15:27:18.000000Z",
                'starts_at' => "2024-07-24T04:50:02.000000Z",
                'discount_upper_limit' => 8365,
                'description' => "YUS4YiFzadS1dG4VhCAXdvLcusNkP92lEHAtBr5uMSg7mI2h9L5UgNjF9pGXPoR6V6EH9oG2E8mJwg74",
                'name' => "JdyJ5Llab29gfUQ6hTQL306GhITMLHDmfb2965KcWooPsLAa0LofoeILq2j1JbokM11iel9SifEKQQKEl5jTOYEn550ChTMJy5Ri4zQipR66DYXbWwtCB"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon44()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_percentage' => 2397.0,
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-12-10T12:58:44.000000Z",
                'display_starts_at' => "2022-11-06T03:26:49.000000Z",
                'ends_at' => "2023-09-01T19:04:41.000000Z",
                'starts_at' => "2023-03-31T22:35:35.000000Z",
                'discount_upper_limit' => 7095,
                'description' => "uIn1DQefV0LKmn0D6u1aqXUgLXLPq2aRw08aQ0rfHosccmXhG1yeE5aq4GKVSCfP0aoPIG5NuiBMU7rfLf6FhpORYw57l88LjJn33RIRSOmlXSQfzzTwn3Dxt4Xew7YzDaZ1J9OdsQM2IVUV93tsgTE0JEew3ek7732woVpaWAn4e207OnXy1NWRJfp7ZK3WimQaowti0F0S2aIOKkN5iwpVUwFU1amkd1FBZBysFgH8TiyAaF4",
                'name' => "dUSAbqyi68iyJ302sQl2"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon45()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_percentage' => 4403.0,
                'code' => "CftoqwC",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-02-14T04:20:04.000000Z",
                'display_starts_at' => "2023-05-19T18:29:13.000000Z",
                'ends_at' => "2022-08-07T11:53:12.000000Z",
                'starts_at' => "2020-03-20T08:53:01.000000Z",
                'discount_upper_limit' => 911,
                'description' => "F1K23X2uYu46ypSW9PxtiaID1SUCfz9yEelMoF9a26c2RLHzQWOO42l0o0g8SXRzZ3pUKHHeXuuwg12Ygg3AsTOryINKyRmJ3gWCDcmsuvkMrJePtGFhv4aIw1aGtGR3fEQezBo8XnXONHGXDMcl8tuhVdB5KkP8PHvZEmmcBKkGsr9sdEDTBkey7pr4d2jpaf36YY6mrG9Y2ztoKUUUx5B1bSO8xEgnoe60dnWTCVmm3x115QsBZT6",
                'name' => "CGgqZsePkl6iY0bdXM6Nza2rTctUJQmh0gNd3qkWY4lVW5zCUF3zWzIdrHm6OsiyHBxsWBtx4G7cLViMByCBNzcDCX5bbsPzVUGeD"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon46()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_percentage' => 3089.0,
                'usage_limit' => 4146,
                'code' => "B",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-06-06T02:47:14.000000Z",
                'display_starts_at' => "2022-02-17T01:55:21.000000Z",
                'ends_at' => "2024-05-14T06:43:51.000000Z",
                'starts_at' => "2022-08-26T03:30:05.000000Z",
                'discount_upper_limit' => 7100,
                'description' => "UNEsAtEjlivj0NhalsavWYZduuXynvh05rJdAnnKPkjJzRbGyuQYyb8948tP6VkRaNaNdjmk2wkclkjGIdrGdF8qpLKYfd3JbJX5QcdKyJ1DmsToKu4w1tRUaP7awM87Mt7bWysOyzqkBrGaMjb1sugqjEeek3DeIDBfKsRBbYLkU2TfJXzuBqGFPReFsmxaxT8Xwuc649dznjsqwxML0aHpi",
                'name' => "uFL917lUTrE8EACTMWkW53gnqE0TT1OD00WYy85d5RKAlbrPQ0st0t7yJcv8GqBqgGEHafl1jNP9k7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon47()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_percentage' => 9717.0,
                'min_amount' => 637,
                'usage_limit' => 1639,
                'code' => "A7an27PrVx",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-07-20T10:22:33.000000Z",
                'display_starts_at' => "2021-06-15T16:43:49.000000Z",
                'ends_at' => "2021-01-04T08:56:25.000000Z",
                'starts_at' => "2022-04-16T21:20:25.000000Z",
                'discount_upper_limit' => 6410,
                'description' => "o8xjmzBGJVwTTanAXyFjLag3gPPvlq0FFntKGY10p27NPGQTdAXKNGuLNgDO4Ma1ptA22IkyjkgPuZUMAq2NjJoc",
                'name' => "YKTrm2m1ssPqyT3XyCFCrR8uZnHFgU1ZOwuoeukDxIIOg9CcbCgtxt4qQAP06TDLYKBc2zPf6wToG8l"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon48()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_percentage' => 6731.0,
                'is_shop_specified' => FALSE,
                'min_amount' => 9315,
                'usage_limit' => 5979,
                'code' => "MPi",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-07-19T04:59:39.000000Z",
                'display_starts_at' => "2022-05-06T17:33:48.000000Z",
                'ends_at' => "2021-11-04T13:55:22.000000Z",
                'starts_at' => "2020-05-28T01:09:03.000000Z",
                'discount_upper_limit' => 1248,
                'description' => "3LNKTomMc8wnROYRP673oHx5N3DOO7AdxANDE2ea2N2bsCqxQkk2AG5TTqX05IlCZ5tUdSwXVRIVCnlZj6NtOwX2F",
                'name' => "8Wr1369uaTF42abkgSmtEHAWzKVmwmqN4ax1Q1Fha0o1JxRbdO7sJMkOiIt9zNKCX0VzisXLLi"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon49()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_percentage' => 1733.0,
                'available_shop_ids' => ["4e279455-dfcc-48e9-bea1-8bf4223c58a7"],
                'is_shop_specified' => FALSE,
                'min_amount' => 4104,
                'usage_limit' => 808,
                'code' => "I",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-06-24T01:14:37.000000Z",
                'display_starts_at' => "2020-10-26T03:21:25.000000Z",
                'ends_at' => "2021-08-02T03:26:22.000000Z",
                'starts_at' => "2022-01-11T21:08:12.000000Z",
                'discount_upper_limit' => 2383,
                'description' => "hS8DsZfAQRFK6oTTeP8tTTuInowX2TMHi2vDKbmu86aUF4jypKaAY4yQaiw0JpUpNfjrUKaUC",
                'name' => "U4cuncfOgZgC0vnz9vdHX3zI21M9POKUqk"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon50()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "b8e6ded4-b567-4487-bcdc-ad93dcd8cfb0",
            [
                'discount_percentage' => 4996.0,
                'storage_id' => "47b867dd-8ba3-457d-b49b-b14116dd65e5",
                'available_shop_ids' => ["6849cabe-832d-48d2-b184-6600d6dcecd8", "bd9001dc-ccb5-4b16-a1e2-c5adffe939ba", "15d866ba-92f7-4e87-84d2-0d4f27008c0a", "6e949574-0cc0-46fa-8362-1ab29833af23", "7248b71d-2f11-48e8-a9fa-7e946e14bb71", "6898d089-6d65-49e1-8381-58f95b5fec21"],
                'is_shop_specified' => FALSE,
                'min_amount' => 3212,
                'usage_limit' => 1198,
                'code' => "A4kt1s5I",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-05-22T06:53:49.000000Z",
                'display_starts_at' => "2020-10-25T07:44:38.000000Z",
                'ends_at' => "2021-09-16T00:33:56.000000Z",
                'starts_at' => "2023-03-01T01:28:46.000000Z",
                'discount_upper_limit' => 7209,
                'description' => "CeiOWbpouk4VaYSYsKX6oU3L46cfTNsJ74FdhPrGorQztiuURWZ5r1OnryKkdpmMzmoITgipjScgSjEKEvn9tkKJsfEeEirDJBvMOLUpWvpkfaBwAHAugbJ1KgmPImdwaTBcNwqaqeRCH16a6zzUqrHdosHdbmLywqukvEUDGTtuu5mLHhGQ9yekqoyNLKN2h7BNq3rRMob2yqEg",
                'name' => "sKX0DNjA5LloLW2ZGwTADg0EGo2tY0BvAArU4c3Hcr3rYtMZs1YhEQlphw1DkmThPoIdPA7X1r8JTPyIk7mw82VAI"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
