<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class UpdateCoupon extends TestCase
{
    public function testUpdateCoupon0()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_amount' => 6955
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon1()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_amount' => 3048,
                'name' => "j5HLJcSNTCm30y"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon2()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_amount' => 2,
                'description' => "3y8WItCe9VYgMydEalG76qE4T1vOrKA4IwgS5AgijWRyxneekV8cIDT0hnm8h8evW68NKpdkq0PM",
                'name' => "o6iR11TAHpgNTXOxFwqhkpZVaDhpFPp5bfKVt9DPYJAVzV6vyI6ywfpyKilj5zg8pn57kF0DYbPLXjuwrpeD"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon3()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_amount' => 5021,
                'discount_upper_limit' => 5538,
                'description' => "A9IDYP4sAiFNwaac9r9GBqh0SVIl9M1spjv4mKXU1rVLf6U0K44BovHKqYzk7GBG1DZKj2tBRFerhSuL22gGga7pF0nmLMfnIYTQdqHJZ8WnDHEVfpIBtEOMP2U7IkYygmkkDxd3MzpkzvPsPo2vcZvKaf470Dw5YI6SeAOBDBgRAgmjx",
                'name' => "ZGGCqaBwJ9iXjXSEf"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon4()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_amount' => 354,
                'starts_at' => "2022-07-01T01:05:47.000000+09:00",
                'discount_upper_limit' => 5085,
                'description' => "svlfnd1NOUEcUOGTeYua5DveJsn8lhIUcgIkY0oNU4ZtZZObHmdr0N6vylnlZRhGDMxuj8A7eDOAWeoDpeF6vcSyg1N9plx7jjHK1E1PUQiuVzdT2YVVNgkhGiOaJk8HWWbXOMsyMVL1Y0FzVGqOKFoU3xJNKmuaDr4cMSAgHDAlLlP6Lo5yS1v7L6lCM4yrq4lI3mHyvfAo1Zkwkd2ADoyNq2PW9ePZH1V16",
                'name' => "DlcE5mr4I9qCPq1klPYIi4fgZ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon5()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_amount' => 3294,
                'ends_at' => "2020-09-05T00:27:28.000000+09:00",
                'starts_at' => "2023-06-28T09:30:35.000000+09:00",
                'discount_upper_limit' => 3270,
                'description' => "f9vCRDU8J59OtcokEMMVhmKz2iBoGU1OxUmIl7jlWxrfEKMQ8FCs062PLb59yfzniw8Z7TrjWh0BQdrr7bOC0AUfJnZnSogxeCWxbc4wl0P2Dqh3DSK23Mk8m6Cln0nexx5CEw583J2WEBiiOFuwneTfWH1pqql",
                'name' => "IhFK"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon6()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_amount' => 6991,
                'display_starts_at' => "2020-08-24T10:35:26.000000+09:00",
                'ends_at' => "2020-05-31T11:38:56.000000+09:00",
                'starts_at' => "2022-08-20T00:49:31.000000+09:00",
                'discount_upper_limit' => 1362,
                'description' => "e3g3OqYMD6Y7flopJpL06wRO",
                'name' => "Z33dSb51CrQZVorM80jAnbL9pF2AijYf8ydTws4HIQ4AniWPzD9CM0oL6ak44VafBlkQEtaE8xbTpd0PiI"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon7()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_amount' => 1956,
                'display_ends_at' => "2020-04-17T22:56:47.000000+09:00",
                'display_starts_at' => "2020-12-20T18:24:30.000000+09:00",
                'ends_at' => "2020-08-18T15:55:10.000000+09:00",
                'starts_at' => "2021-05-12T00:02:23.000000+09:00",
                'discount_upper_limit' => 4108,
                'description' => "S54q66i2nXWkvfusE3magRZXBvYQN11diTIPMylP78XJI2fkoYuaeWPZ92K6Zt1zTkBm5QsUJIx79pUjuQLW3JQAlc0mxfIBEGWMOeqgVzvGmf46VZC1gROo",
                'name' => "yDwwPoswLPrFl08abqydMndg7MmFsD2bCpZf9Kmzx2cSvcsgfp28NPWq"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon8()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_amount' => 3567,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-02-22T17:39:36.000000+09:00",
                'display_starts_at' => "2020-05-14T07:33:14.000000+09:00",
                'ends_at' => "2022-06-14T21:28:17.000000+09:00",
                'starts_at' => "2022-07-09T06:27:56.000000+09:00",
                'discount_upper_limit' => 8962,
                'description' => "rR9lgptmz4nyVSUDS2rGPI8RxpE3teEPiaYEeN8ncoL5boSBHerEtGhFgJdxHlskgg6LM7DHhWIQ2aljg7pW5tLDSL3EPYXvMXdIXxGA8eOtdDg4em",
                'name' => "Zxxvv3UzyZmkPPeL3QSeHszKal8UJ7mvj"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon9()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_amount' => 7049,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-08-13T04:12:43.000000+09:00",
                'display_starts_at' => "2023-02-27T19:45:25.000000+09:00",
                'ends_at' => "2023-08-13T19:42:40.000000+09:00",
                'starts_at' => "2022-04-28T19:56:39.000000+09:00",
                'discount_upper_limit' => 4860,
                'description' => "Mu89mD0TpxWczQUyWaVgBaLWMWptjgf0FiZZDEEO2PZA9bioQMPG1E81jCARXbk7MR17C6RF6LyMxBAxNrASDj9VGr6rQWfEP7s2f7f5rT4gnJZ2Cz81XNoucyBbEpxFX7PDggrznNWBV0p9BBTTp6AGpMMO3btHYGiB4Qalu6chDV2Pcj2ctvmZzuG53qZWTY",
                'name' => "zGouuBX6LUUUBENz9R18rNQjTARxcKWcb1nyLLVIf7PJ4PKIYRAl1UCuQycWgFlQrGdRqVd3CIlE3dO8Hdi7PJayBT5IgAK5b9hyZhcZh8MuSlVRKgCSpIL13YYuGN17"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon10()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_amount' => 2674,
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-12-25T23:13:44.000000+09:00",
                'display_starts_at' => "2023-03-20T01:42:58.000000+09:00",
                'ends_at' => "2023-10-24T06:09:08.000000+09:00",
                'starts_at' => "2023-02-27T21:09:02.000000+09:00",
                'discount_upper_limit' => 7835,
                'description' => "tCiuSxp7i1rcacR4EWmJRYE0vgLGn2OdxgxwF29eViuwKtjsRjzvb8XUneGNN0gcbjHE0ykOW2yVlHnd",
                'name' => "MAdWY9HjN"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon11()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_amount' => 264,
                'code' => "OF",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-06-28T05:10:28.000000+09:00",
                'display_starts_at' => "2022-01-18T12:06:08.000000+09:00",
                'ends_at' => "2022-07-07T18:50:14.000000+09:00",
                'starts_at' => "2021-04-16T07:43:46.000000+09:00",
                'discount_upper_limit' => 7202,
                'description' => "rlwLb9YSbpNpmMET9MPbipC8utokXPq016coqfiAUWXxFRzN5EfouqVIJ",
                'name' => "mWFeGJqYbyf9xqeV9Lg6T4ooRxK5KRr3h8egFMYUCN7QJ0QWlqwtDL88aLfgCd3mseLQBXIUiYpTv"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon12()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_amount' => 4517,
                'usage_limit' => 7758,
                'code' => "gfaK3Poowp",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-11-09T21:14:13.000000+09:00",
                'display_starts_at' => "2021-03-22T20:33:55.000000+09:00",
                'ends_at' => "2023-11-16T12:05:35.000000+09:00",
                'starts_at' => "2023-12-07T05:41:51.000000+09:00",
                'discount_upper_limit' => 7951,
                'description' => "fA31wXd04SY1O8gGOF1kRrye61uzmBIXdnENF",
                'name' => "s3jBlwZrD72DB37CRt8Pxi"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon13()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_amount' => 4304,
                'min_amount' => 2302,
                'usage_limit' => 3913,
                'code' => "ClGZ1KOG",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-06-15T14:22:42.000000+09:00",
                'display_starts_at' => "2022-01-12T10:39:47.000000+09:00",
                'ends_at' => "2021-01-15T04:09:14.000000+09:00",
                'starts_at' => "2020-10-01T07:17:34.000000+09:00",
                'discount_upper_limit' => 2045,
                'description' => "7Hu6WK5M7npguch6",
                'name' => "s2J670P8hn4Wh"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon14()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_amount' => 5193,
                'is_shop_specified' => FALSE,
                'min_amount' => 1997,
                'usage_limit' => 5254,
                'code' => "n521m",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-10-12T06:19:49.000000+09:00",
                'display_starts_at' => "2023-07-09T07:30:08.000000+09:00",
                'ends_at' => "2021-10-15T08:10:48.000000+09:00",
                'starts_at' => "2020-07-03T07:46:45.000000+09:00",
                'discount_upper_limit' => 9737,
                'description' => "5QEBdCZJtrUa6Fgp7ym0hYqDUAWMYxWfGNC0wV3aBOX1Ig8hROFB3MljHGXrpVSkSdQBQzqXHWCk88yAdkNbUUlXp2sT5T809AbvtJaUy",
                'name' => "K5oRI2Afv57nsS8pT7iwNl9CKN5yCsDMuuaWg6vjoZFJU5quw"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon15()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_amount' => 5976,
                'available_shop_ids' => ["c8cd5b6e-fe26-47ba-8ab5-a745ff866e9d", "9d4ea160-3e9b-47ac-a271-c803c9300a36", "fb9ac197-b6c7-4ce3-8e50-81ae6a6efdc3", "7fdde820-6e12-4d9a-8556-e0dbbb4e75fb", "75a3800f-3250-413e-a4f1-d4b4ecb94336", "ddf2bc40-05c7-4b64-8950-5625d9aec62c", "6e5e684a-58ed-4023-b8e1-8cdca9f24063"],
                'is_shop_specified' => FALSE,
                'min_amount' => 7208,
                'usage_limit' => 9305,
                'code' => "z4K",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-12-15T05:27:20.000000+09:00",
                'display_starts_at' => "2020-02-11T12:18:10.000000+09:00",
                'ends_at' => "2022-04-01T05:58:21.000000+09:00",
                'starts_at' => "2020-01-13T16:32:44.000000+09:00",
                'discount_upper_limit' => 7744,
                'description' => "UILwDYHWq9h3ayYxNgOJ9lz7HMs7r8Mwpfor2g0yfZY1uTlDfXz0uDeov2GaxLjZM7ftEliKPQLWJArPq3tph1c8gK",
                'name' => "wadNnw5eCqfZdksVLOzbmWJa8YkV10V05hf8W"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon16()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_amount' => 9388,
                'storage_id' => "1b71a17f-8af4-4fd1-87aa-4bc8edccfea7",
                'available_shop_ids' => ["c52a4dba-158c-4a29-b633-7578bebc6ad0"],
                'is_shop_specified' => FALSE,
                'min_amount' => 6394,
                'usage_limit' => 592,
                'code' => "NZMa3c",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-06-01T03:23:22.000000+09:00",
                'display_starts_at' => "2022-09-29T12:01:20.000000+09:00",
                'ends_at' => "2021-01-06T03:47:32.000000+09:00",
                'starts_at' => "2022-09-17T04:08:31.000000+09:00",
                'discount_upper_limit' => 8253,
                'description' => "TDHzq00PkzT3rjRscSaTDEUxwAJXNLOLDUjAEUO9KUSGzbSRmda66Hxc4wf0VsciZqVg9CY4JyxUqm9QYX9eOR0RPX1REGDLSjexe42N6h2JP",
                'name' => "SKXOz8JwoXWD3OcRqlTHYwOestfQFumGQVfUsw4hfYXr8Tws7k48pGfLa44NJMCeJ8jlsCf1ZGfe6gS6x1DqMOxCGU3f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon17()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_amount' => 5887,
                'discount_percentage' => 8118.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon18()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_amount' => 9537,
                'discount_percentage' => 5837.0,
                'name' => "PJnByO8IAY"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon19()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_amount' => 7687,
                'discount_percentage' => 969.0,
                'description' => "KOHAMaB7ZxbhLpAG3vIRMVqbJVgHdPhvPKwzwzrbVYcpu84LTKQxDTzMnM7RDpI6DZ",
                'name' => "TPfIajSBmWzFbVfaL5LT2cPjctfArtA5QzauCKeqrCHLOb6c1NzcpMx2l8O1vhN74ziDPGC2ST6zTd6xVd"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon20()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_amount' => 4179,
                'discount_percentage' => 6550.0,
                'discount_upper_limit' => 2027,
                'description' => "j4Z4gR5YjMfLJAECo2gNDDCrV3PxozvlpngWpA6xbZMfc0uwppINu3aeeMh7MwqqZDhOobPpK6TParuulg11gUrgWq51AuUounyHv57rDbvmuL7BqYd28Ylq4PTRllx603bU9utxlgE1LKaCgZVizYnvZve6TUWFWHy2b",
                'name' => "Vs5gPuvHuA5HWIqhNUoMi9wNIaJyI2pADs2B4yB1GZTk4B1PKHR2EW"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon21()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_amount' => 7656,
                'discount_percentage' => 1676.0,
                'starts_at' => "2024-01-23T08:30:28.000000+09:00",
                'discount_upper_limit' => 7763,
                'description' => "V8nScTvJ4VHpUajLmD9cCimPwC97LHWaSOnICBJimGKiopraV9Fu47WiDgn9VJjED17kjNr295nMRl2EDxJjIsLyTAA5MEWhdNFDbX7fss0ltmaJnxslaUL",
                'name' => "RrxqbBxY5tCbxb35FzAfmkd3pduwUBkrqrvJ3GVs6GsJ8XiLApVwNY6z"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon22()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_amount' => 3306,
                'discount_percentage' => 7499.0,
                'ends_at' => "2022-04-28T01:38:47.000000+09:00",
                'starts_at' => "2020-08-13T19:55:53.000000+09:00",
                'discount_upper_limit' => 197,
                'description' => "qTZCuDots6oOpUnX5paeprWtPSGZrL9UrmNU3vFgZ69vwXIbJ7yB2uIbdTxo63tcXPzmao0EWnRVCjlgZcfxXnQfXvfoocz3td7BZ",
                'name' => "N78kqzJ0Us2fGr"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon23()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_amount' => 2762,
                'discount_percentage' => 6265.0,
                'display_starts_at' => "2021-03-14T15:19:27.000000+09:00",
                'ends_at' => "2021-08-20T07:07:56.000000+09:00",
                'starts_at' => "2020-07-19T18:43:23.000000+09:00",
                'discount_upper_limit' => 8715,
                'description' => "sRHFPpRHSTTSFxnvRwj3O",
                'name' => "3urFP8R4bhOdaBwGLVVHwtN3AFb20DhVqIxWOmhxrSYnMI0dEOIqOFLqn2ZuLk5GF2FUuyDVUpZnC5UYez0zM0cPoxe0DGq4e7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon24()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_amount' => 7044,
                'discount_percentage' => 3232.0,
                'display_ends_at' => "2022-01-24T06:44:43.000000+09:00",
                'display_starts_at' => "2020-03-28T06:52:17.000000+09:00",
                'ends_at' => "2022-09-01T08:19:10.000000+09:00",
                'starts_at' => "2020-06-11T23:36:23.000000+09:00",
                'discount_upper_limit' => 1487,
                'description' => "c8GIqj26qcMQ423OrAYOyd21L95eAaG4JW0HS70OJOUKjKLeGCgLyc3XcFOYpAAHYYK9z73uxDP2ictixYSW0An",
                'name' => "lJyQ4ogjQgbj8PRfNm4vkTJ8joyTSHmI2see5qGgNKlkv5vE"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon25()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_amount' => 4751,
                'discount_percentage' => 8671.0,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-04-05T07:41:47.000000+09:00",
                'display_starts_at' => "2022-11-27T00:08:41.000000+09:00",
                'ends_at' => "2022-05-06T13:08:21.000000+09:00",
                'starts_at' => "2020-07-31T16:43:14.000000+09:00",
                'discount_upper_limit' => 8397,
                'description' => "jbT4VP8",
                'name' => "lZF0AhpuShoXCly79fXYfw5LEwfbe5dxC9nFb6EnR37XI7b090WiBtRh0avWom7iSFIO4uZdtJGn6HWLBVq7JKL8IsIw17"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon26()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_amount' => 5583,
                'discount_percentage' => 6583.0,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-01-04T16:46:49.000000+09:00",
                'display_starts_at' => "2021-05-26T05:29:54.000000+09:00",
                'ends_at' => "2021-04-09T21:59:10.000000+09:00",
                'starts_at' => "2024-01-28T22:17:32.000000+09:00",
                'discount_upper_limit' => 1143,
                'description' => "bRgUy7vFea5WeBAkgIciVn",
                'name' => "YB9t75iPCouDaOPQZR4UpdKmspN8b2gkMcSPrmt0hjIJu43wB7scWlYirrj6XmXYoqVEvKvw3AdEs5hGDL"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon27()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_amount' => 4233,
                'discount_percentage' => 2683.0,
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-09-16T15:43:02.000000+09:00",
                'display_starts_at' => "2021-02-07T07:26:17.000000+09:00",
                'ends_at' => "2022-06-29T23:08:17.000000+09:00",
                'starts_at' => "2022-02-19T08:41:55.000000+09:00",
                'discount_upper_limit' => 9534,
                'description' => "Yl1TGEiugglxJJBGt0dcPbtQc4uSkk26uSRwX6Rx7fOEoFSQiDYpTTgrywklVD4mELe2edQd6Mwu12UeT7ThuLLgJ9PT2zGkxOOzhTpPLnUQXea3eTBlP1za1n7IcWMlrV1ey0F13qC7iArhwm76E35ql4XfUae14Wbt93t26LiQAMBYx057AoBwLeryNecuIhUBXRQRCvkSHsmDbMU34aVyZLcCNEj4KngWmPwy7k0E27omW",
                'name' => "ruIWs4TAGfq9ue8TvZwYbMntyIPzqAGarjc22UJafoQs8oM8ozozHv7pSUjn2"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon28()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_amount' => 4777,
                'discount_percentage' => 7670.0,
                'code' => "wi",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-03-18T00:02:25.000000+09:00",
                'display_starts_at' => "2023-02-20T23:51:37.000000+09:00",
                'ends_at' => "2023-10-07T10:13:24.000000+09:00",
                'starts_at' => "2020-05-03T11:50:33.000000+09:00",
                'discount_upper_limit' => 3903,
                'description' => "GOrsaIKsQ11QA0zf5QFhEcKjjKztGRK6K9KAPEUIedziHih60rhQZO78Ysa8FmX0ccAumcgyg",
                'name' => "4cqEaxSmm8kmOYz37PEcPNNiKvN"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon29()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_amount' => 2485,
                'discount_percentage' => 9607.0,
                'usage_limit' => 5108,
                'code' => "RLA9ghACT",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2024-01-05T06:47:31.000000+09:00",
                'display_starts_at' => "2022-09-08T08:12:14.000000+09:00",
                'ends_at' => "2024-01-18T08:25:53.000000+09:00",
                'starts_at' => "2020-10-04T14:13:43.000000+09:00",
                'discount_upper_limit' => 6098,
                'description' => "DSXhb0oNXnX7lDuTKN6ygQ5h7kN0paU2HC64wcGrUcdcRO2Sa3zE9qA6JlqvTos7",
                'name' => "SrIAldP5taDahvoqIf3H7H22Xm9qyhmrKIzglEahNrgMO9grD73ccOw2h3Fa222"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon30()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_amount' => 9947,
                'discount_percentage' => 6344.0,
                'min_amount' => 4930,
                'usage_limit' => 5272,
                'code' => "N6",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-01-28T08:32:49.000000+09:00",
                'display_starts_at' => "2023-02-19T15:27:30.000000+09:00",
                'ends_at' => "2022-06-03T07:32:22.000000+09:00",
                'starts_at' => "2021-12-10T22:07:08.000000+09:00",
                'discount_upper_limit' => 6815,
                'description' => "HdVRRVqtJb7GLA5jeThW5qr3yEd4dXuL0rYsAz43Mmx6hv0Ug3INp6i2B7flubMg8I3PFzXHSWu8scihqWwWKLIsgxoxZCQ2441blMtSOZHoWLqvzthoXVcLebdhYmokN15vn0WBXfGwW2mMW1f9b8gICLPqqow4qG8fKRsijZT9ACbFhSbUnXdQpmPpnHFqiJ",
                'name' => "OHOlQFLdxOm16oejI9dat1CLgQoRlzuyxB2QGrCPmQ415Et2SGqgy7Wowcm3CmFfxpyCPpsziVloAtynLsPgO9CFz87kImOLWynZ7sTqSkOWWDLZmiyY4qS"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon31()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_amount' => 4932,
                'discount_percentage' => 5475.0,
                'is_shop_specified' => FALSE,
                'min_amount' => 1457,
                'usage_limit' => 2446,
                'code' => "6GC4wPtLk",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-04-01T23:30:59.000000+09:00",
                'display_starts_at' => "2020-04-05T00:04:54.000000+09:00",
                'ends_at' => "2023-06-17T02:45:47.000000+09:00",
                'starts_at' => "2023-03-31T16:12:31.000000+09:00",
                'discount_upper_limit' => 8986,
                'description' => "4mk88yYjRj6ppJLnlec8JObXuRsPVeFJcsOCB9dZH0k0NKC7bYH6IQhPn4Xu22OkprhqhwvNpMEMbpSnLulsX8V7SnJwOTksCozm6o1k9oepRB7yq0Oa1SzxnfEtxAkEm7sWqtjzoUhtWxAFotkA3GwpJ6pUWjvsxF7sC23pAVbXivHZtrIAyP3B3n1m451mPU8dTD7bnX1r8l3hCw6Snm9mfcT5cLUh34lWYk1AXf6CZiEJmgnIHDOUd6m8",
                'name' => "hlpqS572AEF2Ig4ik"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon32()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_amount' => 8016,
                'discount_percentage' => 9899.0,
                'available_shop_ids' => ["4ad2c045-9d89-4951-8b74-29e66adec518", "41aee2e8-7918-4bee-95a3-9d2bcdfc0e96", "8e5d4e88-b6e0-4a2b-8c7e-c4665a57b6eb", "59745290-ad21-4c2c-93c2-1e38081ef30b", "555d6ce8-8bd6-4dd6-92e8-b9a61933a15a", "932cf485-0f0a-42e7-9173-ea1886415a21", "3d10d3bf-822b-4686-b07b-02d33bbe0868", "cd415c44-9b25-40c1-b1a0-3591ca6492d4", "ce894394-449c-4926-9fac-21227de663be"],
                'is_shop_specified' => TRUE,
                'min_amount' => 2667,
                'usage_limit' => 3336,
                'code' => "Bhv1AOy0n",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-11-02T20:32:29.000000+09:00",
                'display_starts_at' => "2022-02-23T03:39:36.000000+09:00",
                'ends_at' => "2022-08-10T21:45:27.000000+09:00",
                'starts_at' => "2021-09-17T16:06:23.000000+09:00",
                'discount_upper_limit' => 2319,
                'description' => "XXsopchwGQjGjB8p2sVlc1F7AjO7bJtO7Dnnc0m9rCGM5hvlyZ4zlX8tOl1gapEcvHpCxJHTvEJuFQdQk10O1BigovU99ROsTZK65zQOhilbvDcAlCpIpPo9knGna2qU0GmaUmeizgJ6BwqETnaq5BggeTTsTdXg3gtXl8b4nZOZsr1VPBj7ivp8ue6C3vcL7BXf3IHjK0XiCg0zcQRlonr1N4IocuKCcZ1hdXCgyALhLsPZ4xEZBaL9gPo",
                'name' => "5PnOxSYIBQUZMwQEKQp536z2WYA1sx132uYplZstFpjBFQy9bZmz7mGiFtXmRSje5IwYSI"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon33()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_amount' => 7153,
                'discount_percentage' => 452.0,
                'storage_id' => "d590b7d2-13d1-41a2-b86c-180c1844b33a",
                'available_shop_ids' => ["b5f3afbe-fbe6-492c-9fb3-3e6c95a8f538", "d6f4662e-ad48-4951-ab1e-a9516c7b7f75"],
                'is_shop_specified' => FALSE,
                'min_amount' => 1270,
                'usage_limit' => 3181,
                'code' => "Ptk",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-01-11T01:54:34.000000+09:00",
                'display_starts_at' => "2023-04-05T06:29:55.000000+09:00",
                'ends_at' => "2023-11-17T06:28:53.000000+09:00",
                'starts_at' => "2020-11-06T02:28:34.000000+09:00",
                'discount_upper_limit' => 4332,
                'description' => "i1kcYUjdKenDW",
                'name' => "LTaaBosz7aBykLG1RzGMmx1hSkje9X0kmePd8GXi22Jw1idAxcQ9RQcA93jzkpVE1oN8GZytUXsp14vePeJl09h1SmSe7z9uXJe9aRBNGFi"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon34()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_percentage' => 7806.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon35()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_percentage' => 3473.0,
                'name' => "om9IOMRvPLFSPNSfRkv8Et2jCeNHdXqCXUrpWRIEnGneOjH6PTi68jf1Ll0O4t8yu2YY3amcbZRFCGWEFlMAhGqMbfoqHBJlao6arWtW2Kf2i4IAcwQjuFWx2kNI9"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon36()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_percentage' => 3933.0,
                'description' => "Hm3gWQVGMbEKu4AfuwweTMrw4f2dzO7lqy4kEKJ1Q7c8C0SZpOWKljojyXNatscwZjWuBesyFuc4sWKFJnLD7m3pQpjDhF5ByJUZoKtqULctVH6JYk9cBHdXfv4mxi0ybLSzTGhHvgOYEOxJ03xV3nSGPvtC19a5RpyBdhfDtmpMgxIW5ljI6yfgW8zOoaul3ISoLlGYqCoXoGAustVKiyGKg6I2c4vjJ0uuFNk5xEatUCGYnU",
                'name' => "IhqAnDQImUocNLmlkEs1s3oajWUDkb"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon37()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_percentage' => 8790.0,
                'discount_upper_limit' => 3810,
                'description' => "4dhcQmTjATi4FvTByqrSIzi26MGgpQ9DKPsTX2x6llLqyqxLBzmQKSHklP2GNjfKFk3xSPN2EauZcekm4uUHwCvLyAybYYI1PTnYt6AX3ZMraJiLHRNzuStDZHp5MvhzfbMCo9qyaARxtZqgB5ft0k4jfS4r5kfrLJkZytv5gO2QqNTMBVQz08laq2",
                'name' => "iuqoxBaoCNpyYWsiSLe8XgZiLcB9lkuwUmt5gGSX2SbBRPaYeWynmUQkGZMrt25VWYHR7PmuYOuy85eAINi4DCh9E1piomvY0y0"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon38()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_percentage' => 9381.0,
                'starts_at' => "2020-06-14T23:00:41.000000+09:00",
                'discount_upper_limit' => 105,
                'description' => "gYmahsEfLajE38CSizXaYXCbSM5b6xxCi9aS7pUn8sHDE4F3kcf0hrQ4a3rPgThS8KkZCOZQxeSP2z9qxNvFrLUebeM3qu8knhRZPaevJazOcUuFHzOggogIb0heOl2hQPfOiPoRxRiCop5Q0A",
                'name' => "gBKU33EhyGU9Sc7TWphUCFQOlhJCzSIu3L4oB0QKjjVXdg6wCnP4F0PUy8"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon39()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_percentage' => 5194.0,
                'ends_at' => "2023-10-15T08:08:25.000000+09:00",
                'starts_at' => "2022-12-03T13:26:48.000000+09:00",
                'discount_upper_limit' => 5596,
                'description' => "q3ofPUU0rY2rRd10bnDEPKoSGRnM40Adb2lsHFBNfL0ieognilvSR4pMoCwkxpSpqKLDrvgRvBVvAYQP0NP5o8oIbQ6bcvTH9",
                'name' => "KRHlq0w"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon40()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_percentage' => 1469.0,
                'display_starts_at' => "2022-04-12T08:17:00.000000+09:00",
                'ends_at' => "2021-04-11T16:45:06.000000+09:00",
                'starts_at' => "2022-11-16T14:30:21.000000+09:00",
                'discount_upper_limit' => 4465,
                'description' => "M01LRxPcYJN00R6J1knyJeLDqePaGS57qQUn9QotexnhecBro7jHBJHSTWF",
                'name' => "K0aJRYTfxgM2RajM6sQRgc1VEyXHM"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon41()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_percentage' => 9048.0,
                'display_ends_at' => "2020-11-19T01:47:46.000000+09:00",
                'display_starts_at' => "2023-06-04T10:51:06.000000+09:00",
                'ends_at' => "2023-01-24T08:45:13.000000+09:00",
                'starts_at' => "2022-03-20T12:41:59.000000+09:00",
                'discount_upper_limit' => 4140,
                'description' => "8otEAcFy5ooXoXuzlRpCyCoZoaTfbTmVX0XqqL2DDCdNGv9QaNMmxX2S2fPh6fy135I5DGGggnvkdWrHaspAw5Vcp7CE78JSe44PvWgrDof",
                'name' => "fEic8syvxPXUni"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon42()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_percentage' => 6206.0,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-12-07T18:11:59.000000+09:00",
                'display_starts_at' => "2023-11-09T02:00:45.000000+09:00",
                'ends_at' => "2021-09-27T00:22:19.000000+09:00",
                'starts_at' => "2021-04-20T12:38:16.000000+09:00",
                'discount_upper_limit' => 295,
                'description' => "HA7lWY5GLHqITj0UgJwxmfaF0gGfgNlG67XOfGi887nNv1eh26ZZWkeJQym7n7CGmjd25iFSdny2rQSPU5",
                'name' => "tCjVy8COfDZrZRHs0hjVGtY7fDHExM6iUcBW9LD"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon43()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_percentage' => 2517.0,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-07-02T16:27:22.000000+09:00",
                'display_starts_at' => "2020-06-30T05:54:16.000000+09:00",
                'ends_at' => "2021-02-28T14:46:00.000000+09:00",
                'starts_at' => "2021-06-24T20:59:54.000000+09:00",
                'discount_upper_limit' => 4069,
                'description' => "laTFkcJAyP9v3lR5fJ1SCFuFJVqCc62CsLVYKPyOwySSjaFxy00IG",
                'name' => "XmzsObY8JjUm176PqMxSejYJwKQkQhcSsOlDNZZsSWHBkBrsiXhCnZzamORmWcssL2FF"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon44()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_percentage' => 3763.0,
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-10-31T21:00:42.000000+09:00",
                'display_starts_at' => "2023-01-20T11:54:16.000000+09:00",
                'ends_at' => "2020-01-06T13:33:52.000000+09:00",
                'starts_at' => "2021-11-06T01:08:04.000000+09:00",
                'discount_upper_limit' => 8763,
                'description' => "8u7MooUueVWo8T9dRNvfu3qkwBDNVzugQpgEVipsMl1opS6XVL1U8vfTPgZQoGXLb8hT5vzbbFysLVW03Q8sgkwbt7bycdIa6s2OiS448zYYuSerVgt5xpThqkxWuN4OkYmUnkAFHrW518DEhvGfJFhBLPIWgGXu2FRRBCtapsc2OJEtIY",
                'name' => "HTkPMCnHWRhGK3T2O4zTKZrpJNYtglnu99Onqaf5iTxaKHt4HXxpMz5eg3TFJnOMX"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon45()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_percentage' => 2412.0,
                'code' => "crSM",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-07-24T15:35:27.000000+09:00",
                'display_starts_at' => "2023-01-18T00:54:38.000000+09:00",
                'ends_at' => "2022-03-08T10:22:29.000000+09:00",
                'starts_at' => "2020-10-20T17:12:28.000000+09:00",
                'discount_upper_limit' => 210,
                'description' => "ShSKYnhr8JJ6rqJ58uKWhjJEVfg4kmmGr3fEZnBlmzkrtoyKm38BDyuj1U15iB0VVURHNCTBSkvCAJURQ0xc8v3XGoxNYBzQF26RRnLKM2va",
                'name' => "jHzuhk8mM7y90MUBMqpZFx6CyPOvMtoUIDYTTb9YLUK2ZY6omFZc6c5lAiaH7ksth"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon46()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_percentage' => 6802.0,
                'usage_limit' => 1052,
                'code' => "2q",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-04-03T18:49:21.000000+09:00",
                'display_starts_at' => "2023-06-15T06:06:30.000000+09:00",
                'ends_at' => "2024-01-15T07:35:37.000000+09:00",
                'starts_at' => "2023-07-13T21:42:43.000000+09:00",
                'discount_upper_limit' => 4450,
                'description' => "LQ2IGy7A4O5EuFDi3ep7E8KTwqzGZlqsrJTtHeL1jl3TaroJ97KS7PIYmqHtFEvZxOLgNEFPzTNAeMR2CvVgTRCY2rEPprVjpNeaYJXDFnN5l443TmOvQLPfQxkSjhKrHXePF1aNsQcGEPe2hgvk3yuDeTC8XzXR9jncya31KgghsgYe3TbLJN21a8hZtm5so8Mz8sE9uDm",
                'name' => "dcukVhdalQqRPyTvG2tPeRbQcNODGa3IhebkRxi8kuGoSk8mmCPAG5TaOSJrFwT6IMSTQQD3a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon47()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_percentage' => 7130.0,
                'min_amount' => 7244,
                'usage_limit' => 1366,
                'code' => "5",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-06-12T12:01:39.000000+09:00",
                'display_starts_at' => "2022-04-11T01:06:51.000000+09:00",
                'ends_at' => "2023-10-22T12:20:06.000000+09:00",
                'starts_at' => "2023-01-03T08:35:41.000000+09:00",
                'discount_upper_limit' => 8506,
                'description' => "sCMKR5EbTWV4WWsRyRXgRYVg4CYuzSBW4stkoPc7UXRyRiV8Pax53IDmwuQOCWjbIPmFGWkh7DMCSqp4SWi3zPKlO0ubMaaWt2sfRwBothNvTY3vFr4ELRXyBW70oqJ1JP1EYwzYF5YE8jQgUzmyBkd9RsSiJlXzLN5312aQsa",
                'name' => "khCQuI0KxC45PIbfMDQsr0pTvhXVGg9hnQlyenzuwrO3gGQmGe09"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon48()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_percentage' => 4111.0,
                'is_shop_specified' => TRUE,
                'min_amount' => 5876,
                'usage_limit' => 6096,
                'code' => "gq",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-12-12T09:43:33.000000+09:00",
                'display_starts_at' => "2021-05-11T05:02:10.000000+09:00",
                'ends_at' => "2020-07-16T01:04:33.000000+09:00",
                'starts_at' => "2022-06-19T18:26:41.000000+09:00",
                'discount_upper_limit' => 5534,
                'description' => "Gz46vIiA4hbe1yI3CGp5lj6m5fgOCupwcIPxBzhbkfELKrUPd9GpW6Q92PXWpLmGFM1PrngLs4Zq6rjFKNHUPj8OaHLD3inc4333SWlp4s7jMjS5PtJzYsdA5qhl1QGqEwjgkrGn0uAn0iqI2b5rxtz",
                'name' => "OZhKJMKwzvYsbBzTdo6bpAqcWNJrNTsv2Llex1ejGQ2ugzGxu81Sx50Yf2M71M8zENOSGlzU"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon49()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_percentage' => 3180.0,
                'available_shop_ids' => ["9d8ce454-2ffa-44b3-bb33-9e0b67c67615", "d60d3c90-d05d-4f96-8350-e5b2ea1b2d72", "d847354a-5631-4734-bb59-a848d3f590e3", "eac1cc2e-0541-4e87-8a4b-4b3cedd01957", "1e0599c8-0ac3-40a4-a631-83b1d26a65ef"],
                'is_shop_specified' => FALSE,
                'min_amount' => 2126,
                'usage_limit' => 9580,
                'code' => "hx",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2024-01-07T14:01:39.000000+09:00",
                'display_starts_at' => "2020-03-18T15:29:56.000000+09:00",
                'ends_at' => "2021-04-01T00:19:59.000000+09:00",
                'starts_at' => "2023-04-02T15:31:29.000000+09:00",
                'discount_upper_limit' => 7098,
                'description' => "oWt3KCnkWzy38cC0E7gsSEITDei3yOkB642y5M6ZGKLNmOSXPLkVgGHidiNxSMbU65iFGAAyuGpPep5MlLDDmy5H5WNxLWXFOkEFZiHMkNkDC4XjAgnNgPyTasq1IFexxHoOs",
                'name' => "Y3XmfSCMMI0hPIOcfptkB"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon50()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "7ca10515-38d1-4432-866b-af884efcbd9e",
            [
                'discount_percentage' => 7914.0,
                'storage_id' => "8bd5f6af-4728-489d-abe6-5c16d3470e66",
                'available_shop_ids' => ["7f06cbbe-6af5-4f59-8b8e-f2553bfd780f", "45e9ddc5-17ca-49b4-ba72-b22eddf54cdf", "6152aa4a-9cdd-4c14-a5f0-f73c99c5b77c", "b580bcdf-2963-4ecc-8e6a-5bbd8c023165", "059d8b50-76db-4676-bd0a-d56d4cddc1e2", "2f057615-4173-4a16-8a84-ac20abee2ce0", "c63092b6-e5e1-46c1-8213-31ef71afab23", "8c69e964-4125-4cd8-87b3-3a6cd0722e8f", "40afb44f-8ff3-4f06-931a-c87ae121cc65"],
                'is_shop_specified' => TRUE,
                'min_amount' => 5204,
                'usage_limit' => 4236,
                'code' => "XuUhrzy",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-05-23T05:39:22.000000+09:00",
                'display_starts_at' => "2021-10-19T13:32:10.000000+09:00",
                'ends_at' => "2021-06-24T02:22:06.000000+09:00",
                'starts_at' => "2022-07-17T15:30:58.000000+09:00",
                'discount_upper_limit' => 7551,
                'description' => "IpvZDbUGNbf92zGejiy7b3srgm7LVnhxTyAZfZDkQ2r2xXuIalmcupP8PaFubqXmo0h47ayHi8sXxsnC42wCpyAiBnUBLAV97YftKTMpHhWMUK3SCmPb9BXoLZ7wKHtX23HwTLkUG7zxtQPL0ebUOhv3B3t2DzpE8",
                'name' => "reI7vFyo7eM4dNHW25nKJYDvzM004QSYdkecoFJzr3brOZ5f3RQvkhtySJKYRUQ3N"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
