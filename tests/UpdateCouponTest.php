<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class UpdateCoupon extends TestCase
{
    public function testUpdateCoupon0()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_amount' => 1804
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon1()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_amount' => 1240,
                'name' => "jzo73nRTh"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon2()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_amount' => 7254,
                'description' => "gVwZYgwV5uSFZqyRBeHNEaOxddBisqgGZUMVszB9N0nBi6VGR8yrFLLCFSu7RUTi3pBUtov7cDCl8RlKFFFHaTKqCDJaPSiFYeO7IKmUCtsTsKlgzvxOvoMOf9A7GxkDRmYpP2NuQUVr8M9GaOcNlpWwOlPAy0ISs2kCaqp8HC0b5i5n6lb1dGYYDRJ",
                'name' => "hCLGAMSpPmK7Sv5UoxeNp"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon3()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_amount' => 5674,
                'discount_upper_limit' => 8534,
                'description' => "v7YvRBTlVheVWQ5mclBfJfyZbf3YFKHzp0",
                'name' => "f8GFwpTNg7Fzt8myyIHbwkDOYlMhZyW5OhG33EtS40xLQvx2DLavjiZKen5wirtFOX5WP5VWq12unBT"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon4()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_amount' => 5098,
                'starts_at' => "2023-10-08T06:02:21.000000+09:00",
                'discount_upper_limit' => 2362,
                'description' => "jDLdoKJuatM5zRQUkLucvZWF0nwJ7xXJsUJmupk3VEKD65bNNcvmWMzjt074P2zVcn5pje2QW1Rf1FLDHCWbo68hWwupNntvOvnj8ApZTzd6dOJ9V2VMoVuuMeLFqO1ONA96emywMXYFM0OSSaaIvef7nVJCbopRTFHAkmKZ2G0Zr7wChdIiXuksxuhiY",
                'name' => "nEMiLkFRSmQUfq3O6flZg5eTj2rR1nxwryxJxpysbAt8hx1b27CPdEi3EdbtDz7tk1ZprOCj3LlimSKjmjEsLrWMXyBSa4QHhLkRt7dYRpyGwv2CQhsbPfuFpnvs4WId"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon5()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_amount' => 8118,
                'ends_at' => "2021-05-29T04:50:03.000000+09:00",
                'starts_at' => "2023-02-05T20:03:53.000000+09:00",
                'discount_upper_limit' => 2424,
                'description' => "b5In9z6EieB8phsNJkF3pWBZNqyqeCf1S6QtGRcqmqJ9hpMtsAlKgibPn9mMGdISUsEa1zl0qZePbjthU0fwcei6Npeyg6hll6FGMfAfWRtgBcU75dHQlpZaUkEeg8ejtEvPpdq1mA90FV9ln76lNnznRULCL5oaWtScTHkIBW0SpvFReoaF",
                'name' => "gXWCXOahGWjsN7kPPuIVk1jcUTV6A5ZdwEHYPKtB9BpaZFMkLXc3WVYI4tU3scAUt"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon6()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_amount' => 1846,
                'display_starts_at' => "2022-01-05T00:02:41.000000+09:00",
                'ends_at' => "2020-02-10T00:31:13.000000+09:00",
                'starts_at' => "2021-03-24T02:31:28.000000+09:00",
                'discount_upper_limit' => 9958,
                'description' => "Ij90Dy9f2XsFSmoTt0B3O07jB9U9BkQhqPzEtOPUmV7pT6zILNeMEyCvU2FNl85XZxSpuFJBJ4N6DLCBlbTo2xY8cxSXSdfwkKzScRg4Oa8sYKyaAlVWc782Gl2uipOpzMqugtIl1b0DpVnf7RCCw53ZyqRvgCwUyl7B90bz3rNNMEZzAsTLkadpvP6pX44rlOt79VvISOfcnSQxdFf",
                'name' => "frbnpNmh8OUlO3QL6iuVBQaUes5vHsjXTRkJSJvx0UOjNh5qUw1NbUk"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon7()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_amount' => 3343,
                'display_ends_at' => "2022-06-26T19:52:24.000000+09:00",
                'display_starts_at' => "2022-04-26T15:20:07.000000+09:00",
                'ends_at' => "2022-06-15T03:33:54.000000+09:00",
                'starts_at' => "2021-09-09T08:28:02.000000+09:00",
                'discount_upper_limit' => 3819,
                'description' => "cxRQ3cn780YCWyumThHm9aITYK9EDgZIzQA2EN9A0H9H2bRcm62YszLR7D1AqjrrP1pPK0JElnn0yu77Qa9OrvaQKuvD3RAZpnrzH1eebBwhnfnHi7ALqTOtu7ncACy443Y7BHxhzcjy9xFuLN8W9X1Q6X7zuvYjwOilsDwsIG",
                'name' => "mQT4"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon8()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_amount' => 4517,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-07-23T07:28:08.000000+09:00",
                'display_starts_at' => "2020-05-07T22:51:09.000000+09:00",
                'ends_at' => "2020-10-10T15:45:11.000000+09:00",
                'starts_at' => "2023-03-05T00:06:37.000000+09:00",
                'discount_upper_limit' => 1939,
                'description' => "mblgmO9EvqWcuNKDaev0ggf4myF",
                'name' => "gDRbpmcZaZwxbulCQKoLwfllsZvUvTbspWiW"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon9()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_amount' => 682,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-01-30T23:30:26.000000+09:00",
                'display_starts_at' => "2022-02-23T09:09:40.000000+09:00",
                'ends_at' => "2021-07-20T23:44:38.000000+09:00",
                'starts_at' => "2020-11-07T04:02:34.000000+09:00",
                'discount_upper_limit' => 5940,
                'description' => "vIUS1SPhBrSHpQiNDxe53SkesOKpdYqJ62tjnzjvokxbqCbPTnFLg0eg1FxDEH5NuYp8uUXkpAsoQTB8Jsjo8UvYfWO2GRrPZNnLe4f0AsWC7f7euEn86WEUVI9h8P1qgkcQWWCdhBUbFyQ7Ups8wQDFDXGe",
                'name' => "lLXW5EciFx1KMbjbdMc8TGvNcnv34MGK65k0RH5phZhVa7LqfGK98YdTF6GDc5fFAjcgIDm8BIUUJDNlAhpt6a6tbtNzPG"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon10()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_amount' => 1893,
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-04-08T19:32:41.000000+09:00",
                'display_starts_at' => "2021-12-09T02:00:48.000000+09:00",
                'ends_at' => "2020-06-16T18:09:26.000000+09:00",
                'starts_at' => "2020-07-30T23:28:58.000000+09:00",
                'discount_upper_limit' => 2620,
                'description' => "jU4xIfGEaCWbsp22BbqRdweK5bpmhN7N67yCYrSRkKaPwR2h8p1bZGccyz3",
                'name' => "oMFeOqEmxyXT6NiQJtqOE61"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon11()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_amount' => 5520,
                'code' => "t",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-10-20T12:05:15.000000+09:00",
                'display_starts_at' => "2022-02-09T03:52:15.000000+09:00",
                'ends_at' => "2022-05-18T09:08:17.000000+09:00",
                'starts_at' => "2022-11-13T03:23:00.000000+09:00",
                'discount_upper_limit' => 6070,
                'description' => "CprG4Wc5V2Yfv1scAhCsW0DzhZR56ysnHkyWJ7R4FPXkZkEriupX5xG2jxP",
                'name' => "zxgDPk8sGA4R7nm0gBaOuhn31D1j1fdr52H4EAs81u4PEOBFKlkgvOvQhkwnB81OITcAB9rRaxLV9N7kwgURcxfpNt2gfAv8pCgHR7VITozh"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon12()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_amount' => 5221,
                'usage_limit' => 7612,
                'code' => "qL",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-03-10T07:30:26.000000+09:00",
                'display_starts_at' => "2024-01-23T11:16:45.000000+09:00",
                'ends_at' => "2020-06-26T00:59:12.000000+09:00",
                'starts_at' => "2021-01-12T00:10:35.000000+09:00",
                'discount_upper_limit' => 9873,
                'description' => "xeGj5I10HFtkzreYWtPIf9rJqR3KZmfch1GTZW3v1bXe7yXw2xAnIkDiXCnw58E6hZO7eH7hOuJ4oEWwsV6yEmA6ReYVqvR84t4ysS1k8uVOU9HlKoaO4rl772x9JWxrxYJV814irhw6Bo4GI86OPMmhEuwUT5BHk6PxOQAmVdT4KLxEsh5f6kxO39AHTZsI0wMUG",
                'name' => "oKu2dHzLjNDOixdMWhvLJZhvcAiRTRZU2aFDWI0iuex2H2od3by3KJOp2GA9Y7XrSTFrUfela5r4Os0QNFEwxDsyafaA1iUS8MUr7tvtjcyHKdxMgYtqz0"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon13()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_amount' => 6065,
                'min_amount' => 8975,
                'usage_limit' => 5098,
                'code' => "i9veR",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-11-03T20:00:21.000000+09:00",
                'display_starts_at' => "2020-08-14T02:00:59.000000+09:00",
                'ends_at' => "2020-09-28T12:48:21.000000+09:00",
                'starts_at' => "2022-07-31T11:55:52.000000+09:00",
                'discount_upper_limit' => 7921,
                'description' => "UQwy54G7Kvgnkx87OWdh3pNuQT2kDuoIqZZftZXlj0rJMuePlh8p2frrSflppyjcOSH4F5mqsCVZZtDHNQUzRgZ509gqZ04QkqyKkKc6XCiHy8xYPxJ9XJtSMvZ1hp1bNC2uy5hzIO3YT0",
                'name' => "TlRmqiQeO0poyumMa6gw1hZw"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon14()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_amount' => 7597,
                'is_shop_specified' => TRUE,
                'min_amount' => 4885,
                'usage_limit' => 4141,
                'code' => "43KuMBgWq2",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-12-20T02:43:08.000000+09:00",
                'display_starts_at' => "2022-02-17T01:54:22.000000+09:00",
                'ends_at' => "2022-02-19T20:37:19.000000+09:00",
                'starts_at' => "2021-10-25T05:44:36.000000+09:00",
                'discount_upper_limit' => 2300,
                'description' => "qwWVF7KAZCXRHZpzXdJU0Fqlfb7raHoKzV775CSG60wEBcHBHT0tzytS01YDgrozCiA6c9KppsjMdafu9zRYfKxFgj4G48jSrdjPUg3EgEL9Ch0rxSRHH8jQ9yBW0xVynTXjWlGJt6UwCV9lzmDzxliPMl8IGnuEjcXLhluYHlgOzHj",
                'name' => "kjnUQ0Z0XVS0lM2pPe45HxtNrJ70Ei8zYhobA9bhdSOr63qp4CMFzcjaVnV97PivyCZa5NcNid8BiYWoZwvlHW1"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon15()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_amount' => 2009,
                'available_shop_ids' => ["9b95bd85-3155-496a-be8f-34ae5b201bb6", "3f16f3a8-d66a-4560-a7aa-0fa4159a3e2d", "c37e8f54-d7f9-4f1b-911b-189ac3e27683", "bd06f763-9294-4f8d-ae0e-7e8230210c9b", "308e429d-82f5-4dde-935e-4a2c37f9a4d5", "a6faf424-a9b7-4075-91bd-edb271565e6d", "83a7bff8-5f0a-4fe6-9b54-eb8e252581a9", "4389d754-4d52-4aa9-abcc-e99a0b8c655b"],
                'is_shop_specified' => TRUE,
                'min_amount' => 2117,
                'usage_limit' => 5372,
                'code' => "bQ",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-09-11T22:53:46.000000+09:00",
                'display_starts_at' => "2022-07-13T18:07:00.000000+09:00",
                'ends_at' => "2021-03-23T11:48:42.000000+09:00",
                'starts_at' => "2020-05-13T23:59:07.000000+09:00",
                'discount_upper_limit' => 1368,
                'description' => "q08hfrrjhYU9yCIjRxdIRLndbca76kJu2Bh3McGbQUkLDuWnFiCF4HvJfQo4QPuoBCWQC2f8aq3QEwd43J3E9sZAVeay4TinHifDiaiMmsvGhggMxm8Yepwm1I2KXmsuEpOWoZpjeVFiyYDCvqRbuyZCR61WcyHV4",
                'name' => "f0zKgANqVN2CmZH4hz00XC0JLd7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon16()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_amount' => 7432,
                'storage_id' => "bca80e15-25be-4611-86f7-82008fab7d2f",
                'available_shop_ids' => ["ff5a6177-f0c5-4295-8430-6de09a1dc0b8"],
                'is_shop_specified' => FALSE,
                'min_amount' => 143,
                'usage_limit' => 9682,
                'code' => "M",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-05-15T14:48:05.000000+09:00",
                'display_starts_at' => "2020-04-12T09:01:16.000000+09:00",
                'ends_at' => "2022-03-29T03:24:15.000000+09:00",
                'starts_at' => "2020-01-27T20:21:11.000000+09:00",
                'discount_upper_limit' => 3542,
                'description' => "1JvlDiFN9vnUqBBMX41yjMRhEoi3OnpF2ymhKJBdkyI4VcKnvL2FoFj37FuSVEEtHToGFo6qgEfS0sKxT",
                'name' => "yx22RAwX7sgJoGy8r0gr7yhP01RcKfkVnfq4gQGjmxpdLzEFPVqKcs1NCoNWJDi2BOxbWZvlGdtkspO6Kfs5AGP1PoYG2PYhEH"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon17()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_amount' => 4072,
                'discount_percentage' => 2441.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon18()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_amount' => 3785,
                'discount_percentage' => 7997.0,
                'name' => "ZNYmCzadMfvBX6ucmpS5Rfqd3KswCGkztwqBOLVjbNVq4Nu7a4DVnLqu1CHW7CTwCJwFYymQfzps"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon19()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_amount' => 1811,
                'discount_percentage' => 499.0,
                'description' => "TmuOB51D8iQrO4QivCWuwj29GCvG0FBpbQLOImXhwOSPW3CYRB7f1TSpfJX8PdQdWfaJPGxFXNjuQWxtOLsYj5Iv0nsA5TxjDSzEl3l0HPOmTGk1fRL0ltghm4ZebqzaKLZ0ptQyw18eoA6iU5T10wzA8dg9Pd3RURHiK84Hv1JnWZXLf0T4F511",
                'name' => "vhSjvydh094gmEt8BQP2oJGIDwFzyVI0P4GWceRKwBecCjPYT5T3qoE4ChoubpjhnecsYYtyocTv0fBbmPlYDM0ucm2ssTqtEX1XgTfa0W"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon20()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_amount' => 8751,
                'discount_percentage' => 5998.0,
                'discount_upper_limit' => 2539,
                'description' => "r5otWWgfKZFypAluw6zCXcFuAJuPRWo4ca0HXLVUrGQhD1zUnB5mkyNTg0fRV62VCCbfzDVgbYFnC7VUUWbKtHvS6Fxru9gvFRHFeHzStys1FetiXVzID66wZnMkXHKrWEYzCP2PB4rSGp9UmsQlLVqw2ma0bEXBSytjL0sso8PwV9tHzIDLdZtCwcK",
                'name' => "miyMe5o2noW3aqLyRMZF4IzojL3iyij4bDJ0Do7PLgi3OVEVMPkOSSUJ81AhmIC3EQXfH"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon21()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_amount' => 825,
                'discount_percentage' => 6602.0,
                'starts_at' => "2022-01-26T23:32:35.000000+09:00",
                'discount_upper_limit' => 1812,
                'description' => "2kEkjxBMJ1GHcJmyjgHl49LTIUnTXBCHDArKQQnGccbg1Ldbwig6kOGTKA2AtHzquRBgBB43XZ28ypYUotncFYz2Sj2AVbLSqgMQgzqRImnDz8aawSXnqnvzMAdfloOQqu7gJpo",
                'name' => "nm3ABwhNGzzAmK0fKnkpMlHiO17NskR2dHw1UVlawAYTKYFrQcuBTwnGGXo9U05OpU7nNibuw9eRT3aqiaSc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon22()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_amount' => 2082,
                'discount_percentage' => 9060.0,
                'ends_at' => "2020-07-06T07:24:12.000000+09:00",
                'starts_at' => "2021-04-25T21:44:33.000000+09:00",
                'discount_upper_limit' => 564,
                'description' => "f07CrtBOvZTRyfWsdDJmCpBSMrCPbZq",
                'name' => "0CL3sF5rrl5Nq9ks9H4kbOgTzBbTY2RhHOYq7D9tB5UhHK3niknV9IssNQGHX5R7elyXOjk9lB3KjGDvv8FWsRTYvaQFjDZ8ZO"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon23()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_amount' => 8313,
                'discount_percentage' => 7535.0,
                'display_starts_at' => "2022-07-16T07:46:49.000000+09:00",
                'ends_at' => "2020-02-12T02:44:38.000000+09:00",
                'starts_at' => "2021-10-26T19:22:21.000000+09:00",
                'discount_upper_limit' => 9764,
                'description' => "ds2ozjkjHOgJ1jgiAf5T1UmUwnzqqCAPuxD8QZe5tppIoXDryc4CBaBedBBfa9g4mjH8tbI8foM0STKudm",
                'name' => "FtI0X2DUNdF0P5tYKJdfSo433NtUQSCpxCiQHMt2s90iewJfQNJUmhR"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon24()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_amount' => 8064,
                'discount_percentage' => 7433.0,
                'display_ends_at' => "2022-06-05T23:21:52.000000+09:00",
                'display_starts_at' => "2020-09-11T02:31:37.000000+09:00",
                'ends_at' => "2020-05-25T18:30:17.000000+09:00",
                'starts_at' => "2022-01-02T11:38:09.000000+09:00",
                'discount_upper_limit' => 5693,
                'description' => "hZ9PgrbMoO3MPzzD4N5QYO226I2tLLzSNaC1W24O8sBzjB9AnXigE5aim4K96DwXTTuWFejJGUmrRLTgtbFf1JKxeYciZwrRqQpLLEnbFquLDDYyGkCDENrDoVDC9rdNOtBcj5jPGk1scHST53prcvzM9L8ZNVmgfOhDJ7gafIYwOcdDEQDKtj1ek",
                'name' => "rpZK3GG8OEc0AOsT6EUV9Enu9pPph2ppg9s8WB600wNjPar9x0C7H1QNGRIfgzj"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon25()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_amount' => 1567,
                'discount_percentage' => 995.0,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-04-24T12:53:33.000000+09:00",
                'display_starts_at' => "2020-12-21T18:41:13.000000+09:00",
                'ends_at' => "2021-02-14T12:32:36.000000+09:00",
                'starts_at' => "2023-03-14T21:39:10.000000+09:00",
                'discount_upper_limit' => 8912,
                'description' => "mrhkTQOuwTOxOtyxuS5D8AGRQDx3WWrxgRsS5Z51b2xSkLits6EE2EAn5cB4KIJuWY4czFHYQUGTJrGBM2RhYJvaNNJKIBkjFCHleqUlYocS9vv8FCrbtefikWr4bNg1A1FEbHyxuZkQ99BXJ87RUsdZuNyomlDuc8NP5H93",
                'name' => "nj7BcYCJq6Xx47YDiMj7uiY"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon26()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_amount' => 1394,
                'discount_percentage' => 5707.0,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-01-04T10:31:43.000000+09:00",
                'display_starts_at' => "2022-10-22T22:24:11.000000+09:00",
                'ends_at' => "2023-02-28T07:13:08.000000+09:00",
                'starts_at' => "2020-05-28T23:24:15.000000+09:00",
                'discount_upper_limit' => 8395,
                'description' => "zPs8MhNmOWR9aF",
                'name' => "uhNpGcBb35SMAkrnEiDCqdkwl7tfIivo0CwcEet3TyXSF9s7pDg5szGQkC0yRXimy3EEgBaQgRHntzmkz0FIfXSLLA64lYnL1nkNYgrgBZ1Wp"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon27()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_amount' => 9409,
                'discount_percentage' => 6173.0,
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-09-24T15:20:22.000000+09:00",
                'display_starts_at' => "2020-02-18T11:25:12.000000+09:00",
                'ends_at' => "2020-04-09T10:49:15.000000+09:00",
                'starts_at' => "2023-11-28T06:02:11.000000+09:00",
                'discount_upper_limit' => 5272,
                'description' => "wT7jVgoKQXLDaWIsLYnMWi2pTRU1DhIlFD8FLZ99u6FJHzJwvmn8b7Luk8nUK9l2Y7056rjnQ0eBtiUjsqTcuYYIn3H4fdvkp87al8tzShaOl4wExendBxmpum3qEvAv9AFg6QS2L36rZeXSUPgU",
                'name' => "NkzS6lnHqtWBOs5t5vUawt6"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon28()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_amount' => 6111,
                'discount_percentage' => 3151.0,
                'code' => "FBZrzJj",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-02-18T14:02:40.000000+09:00",
                'display_starts_at' => "2022-07-11T04:40:40.000000+09:00",
                'ends_at' => "2022-12-04T17:47:21.000000+09:00",
                'starts_at' => "2020-05-28T14:30:12.000000+09:00",
                'discount_upper_limit' => 7721,
                'description' => "1GGHKi4KhOICz7SfEwJlPQZtYdnf69WfcSEobGYvSYF1GyKwCliz4tc1PAgzipjM6AyewOcWKkLcOskmBiAaRXjJH968DQl6k1KMFWA4QMGveReY",
                'name' => "Fxz61ds8Jp9o"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon29()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_amount' => 6960,
                'discount_percentage' => 9170.0,
                'usage_limit' => 2348,
                'code' => "qpfjYni4",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-04-11T12:10:23.000000+09:00",
                'display_starts_at' => "2023-12-05T18:15:26.000000+09:00",
                'ends_at' => "2021-02-13T00:34:08.000000+09:00",
                'starts_at' => "2020-11-12T05:56:54.000000+09:00",
                'discount_upper_limit' => 5198,
                'description' => "rmU1QiK6ITD8Ip10TzWoDcVN14gSvsuZ0I1UfCwZ9EX3iyCZ0Tasnn0RlxM1FHtdfg8NDbpqUTQqfVMM8SrJSfClZYg8ue1ftPplnZNK9zQJcSp1pHQLqHjaQEYWU2Qi5NkhLufdGKGgV7chNSVumzIrzAGIpSVmxAzsRm1oYcyCpAbMuRSvlz06S16tF7T1oCZ8tHaY4evVwIWyuTf52mkp4v1yQ",
                'name' => "BGQxaBZyDNK809BjIgL1gbHL8bvWrCKvgGVQA6A0HrlD3k2wWQ5yyBjQcgehwfhT44XWLp3UYiF4WkWRAEk2LExyUAsJYnwqR"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon30()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_amount' => 7062,
                'discount_percentage' => 6794.0,
                'min_amount' => 5610,
                'usage_limit' => 7560,
                'code' => "9SD5K9Eb",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-08-03T13:36:53.000000+09:00",
                'display_starts_at' => "2021-05-03T07:58:12.000000+09:00",
                'ends_at' => "2020-06-28T21:59:12.000000+09:00",
                'starts_at' => "2023-08-03T08:56:50.000000+09:00",
                'discount_upper_limit' => 8906,
                'description' => "8GvrWskO2D4Qi0c0TN4NOXdAO8cPi8PH2pAhseBKPGPUE6O7c6fwfgS1YI3gFprWYI7Brpt1miBqzn2KyFKTYZAm1x0tnSJ6Guf4",
                'name' => "dwuOv20VZLcMDr"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon31()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_amount' => 5078,
                'discount_percentage' => 8698.0,
                'is_shop_specified' => TRUE,
                'min_amount' => 4765,
                'usage_limit' => 1999,
                'code' => "MMRGdNmEs5",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-08-25T04:06:47.000000+09:00",
                'display_starts_at' => "2021-12-14T01:00:21.000000+09:00",
                'ends_at' => "2022-11-19T07:48:39.000000+09:00",
                'starts_at' => "2023-01-13T02:15:57.000000+09:00",
                'discount_upper_limit' => 7779,
                'description' => "gMsR9m1uFuu4j3vN5PcMKXZ40vW2EhyarGt0E0tJd7DK2chnKqx1JbjyMS3LGXHd3966zoEdQ3DU2Ou2Zj6wZlnoKObIvNgCtLflg7eSkHY2hGMrWBz1T1NUgTCTkG6gMh6GLh3k1tlT7mZPT3g8I7",
                'name' => "smxVbHzLpU0ZMkjmNjGs2ltM9Axq8GqDipOx75U83l0pTNMA1AIV0VvxmT5BBsojarhkPUdCNWsZ4gQPhotwJ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon32()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_amount' => 145,
                'discount_percentage' => 9492.0,
                'available_shop_ids' => ["c2a245f0-8137-42fa-a74b-e0c263967b4f", "f8df87e2-9328-4642-8f8d-1bc3af243b03", "a4206efb-c725-47f4-b641-c2c654bfeae6", "8814191c-ee09-46ff-8f62-a51840073758", "d24a33d5-d36f-4a2d-80ee-c2b9b5a60a12", "4ffacec3-f0b8-4e91-8c47-0889902aad2a"],
                'is_shop_specified' => FALSE,
                'min_amount' => 1087,
                'usage_limit' => 9905,
                'code' => "aSfN2Yx",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-07-09T22:28:08.000000+09:00",
                'display_starts_at' => "2020-06-01T22:58:03.000000+09:00",
                'ends_at' => "2022-03-18T19:08:55.000000+09:00",
                'starts_at' => "2021-10-31T15:09:40.000000+09:00",
                'discount_upper_limit' => 9328,
                'description' => "ZTv9kf1KxhYgpJvlDB9sEJk7eKz2sKBtESlkx",
                'name' => "UH8xSpLfD7vsmKkUTF5rZMj7rlwVlzCo99KTRkutBwxJ6AP31Fj98a8tb0zI22WMlO11yb2BmAtkmOegDNMzdwMkIjytaApHamIC67d"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon33()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_amount' => 5575,
                'discount_percentage' => 9061.0,
                'storage_id' => "10470c87-1030-4130-aafb-2ff1c1d45f4e",
                'available_shop_ids' => ["2c318801-1002-4648-b02a-00508cc5e3dd", "8a45ea0f-dbb4-427b-90c2-3ea0d952b089", "000cf5d3-f7ac-4a17-b615-f55fe31abd3d", "98937291-12e3-4a52-b8d4-592303921eb4", "e4ddd7de-dafe-4e06-aa7d-a4423f3021c2", "7844f8ec-de38-4c51-9c33-ed87a88df23c"],
                'is_shop_specified' => TRUE,
                'min_amount' => 5499,
                'usage_limit' => 493,
                'code' => "NjKQs6QX",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-05-21T22:01:44.000000+09:00",
                'display_starts_at' => "2022-08-16T06:25:06.000000+09:00",
                'ends_at' => "2022-08-16T12:47:04.000000+09:00",
                'starts_at' => "2022-02-17T07:13:20.000000+09:00",
                'discount_upper_limit' => 3416,
                'description' => "UtS3fr",
                'name' => "8vm0TCdJwFH4g6JiSbH9uiz5XfizYGcTHj5ncmoRe4WDjUvTlpNOr0qSVCWpzpVIp62Y8SgAO2nvbXedFPCwHKAIZGP9zNQ1d2fXwOpO"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon34()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_percentage' => 9997.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon35()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_percentage' => 1403.0,
                'name' => "yZ767RsAmEBI3QfEl241pi0gJfYzld5L5ASVAyJZomLfv5AYHm6OaNmfas7RLNE20w4awXKAeYqDL2SjGUU74ZvS2ni9"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon36()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_percentage' => 9670.0,
                'description' => "wpRqkU4jA85u1srKk38rLeErCP7GQ12po2updjjo2LPIQuIITqF9D",
                'name' => "A6zXurCje6ztbQKjMsaXE8JVXDw3d1sK15wTaJRfMlNCdVRe0qm6WMn1758cQtM0D0ESiF"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon37()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_percentage' => 3519.0,
                'discount_upper_limit' => 3794,
                'description' => "ru8ZWcUxnliugxDMwOIAZLkNxk6RyHPE7FKnrxNRRP7pUKJy",
                'name' => "Fi33iJvTBh25G70Pf0or0MjOcaEuHuXQLoKzwM3AmVK53g3E2sK4NOkvvAr4tTpgDjjtfcQTxMxWVx9JrwJbDtAAteqedeMd9P0WTsXjRhubSZVIY3ryJbopeEcqmEV"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon38()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_percentage' => 9542.0,
                'starts_at' => "2023-03-20T23:25:10.000000+09:00",
                'discount_upper_limit' => 1952,
                'description' => "G3Wl5GPH3f89tN2GXqefyFy0LOaerakiCJDYV0pXZXLZFrFesjLEtHsNjAsWW2w3HUPeMLmJPiQljKJWuIX9qfZwbnxyyIN0QKqmm0pflhCze0oJShEj3bFGVcTBPBZ0q5TqTB2EIFkWr05d2wLPx4LGK9K0GdD8VBd5pHuKFVswCHp",
                'name' => "ZHHonHajQ0hXizwP8mUnqrlkCGLg35hkToovCALr8oYBC2AM6FMvuMkmFklTMoIA0dZYbjktnqKhCBn"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon39()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_percentage' => 8932.0,
                'ends_at' => "2021-02-02T18:47:11.000000+09:00",
                'starts_at' => "2023-11-16T04:43:54.000000+09:00",
                'discount_upper_limit' => 4079,
                'description' => "Sgy5lNKB5AWfSKYoY4vgqKstqFlE27abXs6RPSDb0iJVkvR6IaBNfGQ9StcSK7T6QbmDLV4UMjABO4eMVBrxBdC5PhamIYOM2W4DH59VpzZA6KbFusjdPLeva2QInFDZkA1Z6aL5",
                'name' => "zK9oj8iN8s1cPxRxvicrS5hmfOHNeiK43V3vEefNrkqCSaOpJgCCskFlxwNk1s"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon40()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_percentage' => 8343.0,
                'display_starts_at' => "2023-06-22T11:51:55.000000+09:00",
                'ends_at' => "2020-01-11T19:55:37.000000+09:00",
                'starts_at' => "2021-06-05T16:12:36.000000+09:00",
                'discount_upper_limit' => 8749,
                'description' => "GM3Om3vJqyOCv8f6I6GBe9ERlvjzjkAT5PvvQkbGpjwOcMDs",
                'name' => "Q6F8fVJfMFQBG2j0jZzbwf56cwtZ9fbnnkiNFQLpm172iai7CJhE6kZA0ByMEpD3M17pSkk5Qo7W"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon41()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_percentage' => 4585.0,
                'display_ends_at' => "2023-07-13T10:45:28.000000+09:00",
                'display_starts_at' => "2023-08-07T15:20:30.000000+09:00",
                'ends_at' => "2022-10-21T19:04:51.000000+09:00",
                'starts_at' => "2021-05-04T22:05:23.000000+09:00",
                'discount_upper_limit' => 2328,
                'description' => "DVUNldi3J2ftlhVm9a5p1jIS9BdeCCX7XXTzXHfaulLR",
                'name' => "3FeKXgHnu5AdZTx"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon42()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_percentage' => 5339.0,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-02-04T10:38:52.000000+09:00",
                'display_starts_at' => "2022-10-07T08:56:25.000000+09:00",
                'ends_at' => "2022-04-30T02:35:33.000000+09:00",
                'starts_at' => "2023-07-30T02:37:50.000000+09:00",
                'discount_upper_limit' => 3126,
                'description' => "h6FT8lCy8e304gppiXzBgxv6GFNhIMOYojk3oic23VsalyRNK6tniY82lvCOU5NDbBt6APemcsh7jDkLPcxgUO7A142IB1CIYomiqraxiRUtYJ38KUbF3nog9vaWn6E38NZEjXh5PNBJ5vT7qX753eTgFqj6YT6lk6E0UMvADqE0uzv7cY6Nhp17HLA1j3HRluUZBZBuXEcHY8PTvfphZwnpp4K3lNPpRq",
                'name' => "pqLCZB2F4xFjt9OILc7TuGfbtjVgm7wFFSPMMBsdPWlTU"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon43()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_percentage' => 1657.0,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-03-21T21:50:12.000000+09:00",
                'display_starts_at' => "2022-03-10T16:55:29.000000+09:00",
                'ends_at' => "2020-07-29T02:31:12.000000+09:00",
                'starts_at' => "2022-07-10T22:29:59.000000+09:00",
                'discount_upper_limit' => 4249,
                'description' => "JJR6unWRTDZRj60rpA0muuI787WM2wFvMFkP53iiIpgfzpCSqH4TuNFWdDFd1TeYYG5ftqN6Xi3m2aDKj5HjWZpAttoDWULkfczzj4CAR75JrmOjjmtTxkAbY8aRt0I5hcQ52kMfsrz8ezRoZUpDMTCW0zE9F",
                'name' => "owA53GVQnoDl1cmXgqIArmEaAQbgxSJPB37QcEV1vE3JrUhJSjJQPLHTe4ce0MiCfMlS3AQjuA6Z7cHDIP4wwLdfZh"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon44()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_percentage' => 8358.0,
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-09-19T10:34:05.000000+09:00",
                'display_starts_at' => "2022-03-13T04:32:35.000000+09:00",
                'ends_at' => "2020-03-31T21:07:06.000000+09:00",
                'starts_at' => "2023-03-04T22:04:00.000000+09:00",
                'discount_upper_limit' => 9142,
                'description' => "tXX6Y9YferDjslEvXKliPx8giyPaBNVCIVlBQpSEK1JiFfc10Np3i2ZFlYCRTimlr",
                'name' => "ZIyT4j2KIY4Wqj5mgy0BqREOY13qd0fm5p5zxyp8I0FL1KPQMlH6x8Jvhpuy3e6Ymnwla4eixc1HHgUyESSVPzAAiXuqXz2IszaCE3zHuaQ1GX10nGMECADoo"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon45()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_percentage' => 3744.0,
                'code' => "30a",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-06-02T02:59:10.000000+09:00",
                'display_starts_at' => "2021-07-11T12:08:08.000000+09:00",
                'ends_at' => "2022-03-08T17:13:11.000000+09:00",
                'starts_at' => "2020-07-12T07:26:57.000000+09:00",
                'discount_upper_limit' => 6316,
                'description' => "UaVo0OKSEHMBjGwr72r6VX6nMD1dNIGazhCnJFQKXjtbyHZZQ1OdBT2FFjPoiI4KEqE9NdeMDnf8lzQgwtXRRPnVFFBO2Dk0xH3LzN6XTxAldup2mxjfurOtKH6NoWggoaNGNg34JqPwSxWbajAIcmmlUV0uGfdYx3rAJf6MEs6eK1SdBFy6T95KC46aTZwq",
                'name' => "26AcJcHxVWgcyYcdhLz3AfoJwRYP8AvkpPK31YBxmSPqqZsRqOTIL4SMALbA8EgilOshGqGLx9vTc90AzWYclM2kzcyvj2BoefaT0dChe6C3MCM4dcA7l6Wespe"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon46()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_percentage' => 6093.0,
                'usage_limit' => 9050,
                'code' => "s",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-12-03T18:48:21.000000+09:00",
                'display_starts_at' => "2020-04-13T23:45:27.000000+09:00",
                'ends_at' => "2021-07-20T16:45:28.000000+09:00",
                'starts_at' => "2022-07-17T08:03:08.000000+09:00",
                'discount_upper_limit' => 557,
                'description' => "s7nAap0PMdx7f2Zmu7tQK47HqxuI5HcDdMb8THDFOVi26D1SO3duFvaFvNwtiEO84d37C67F3WvLqrm2fCo2h0SmbaX9lDfZGynCw2WAcPlAH7yvAvSrBOXPRzt0juQqT4kCshzbhXOXYvrWbb8F77xsHFObV8J7xD1WNRi0FCPNPTzO5yzynqAxndvM",
                'name' => "QM1CT9VlqYS4ndbJQ5cIz4BWnYgySBIHNNWX1kCG932zfWf1xU4Ol7LH1idM6zpatnFOEfxHBTZmMhdpgTZaVr1vXXgaPAKWRCsKUPYmSAu"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon47()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_percentage' => 2938.0,
                'min_amount' => 6599,
                'usage_limit' => 2751,
                'code' => "N3RVLE9NFL",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-12-13T00:45:26.000000+09:00",
                'display_starts_at' => "2021-10-15T00:42:31.000000+09:00",
                'ends_at' => "2021-12-21T11:55:47.000000+09:00",
                'starts_at' => "2022-06-30T14:18:46.000000+09:00",
                'discount_upper_limit' => 1524,
                'description' => "WefB89aTjEGnbuNtMR16oO5UaXIP8QBVuhAv0d9dCKiEQgmV0E8n1Mj1x9p5bB6DKH99pPorPN2D9X2tvhwrgGq4hKiR0PrgrMdrv2zaAAKjq4CKZpRLrz98kVqxSPHNZubgcPzQjaN9z9rmQt5jvIJTSrScyTtAbkXzthBOGd4cwz9WODsy1BgjMbiI96a1E7RlwK64n8GH6QjxEXes0Sbdi1Bt9wABiA",
                'name' => "gCYWuY1E32bEkMxSq3UBrn39nPKtKniCtN0A0fzf0Snpl5dKU75ZPFX6Z1VC9ICWLvqNSZ0ykc77f74k3BrHk70dyZ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon48()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_percentage' => 7081.0,
                'is_shop_specified' => FALSE,
                'min_amount' => 8750,
                'usage_limit' => 9060,
                'code' => "OoBhLfT",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-07-13T13:54:03.000000+09:00",
                'display_starts_at' => "2020-07-17T04:00:14.000000+09:00",
                'ends_at' => "2020-09-02T05:50:16.000000+09:00",
                'starts_at' => "2020-03-09T11:58:07.000000+09:00",
                'discount_upper_limit' => 1775,
                'description' => "s0Rqf9BVq",
                'name' => "vtbVFenGcmEpvTPh18WlaCj3QIGqUD6GaHvD8q3Xp1V5Ioptq3o"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon49()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_percentage' => 6836.0,
                'available_shop_ids' => ["27643a99-f266-4ecf-a562-6e3628666e51", "1f260f00-29a9-41a9-ac98-b54d5268e8f8", "34f10bec-04d0-468f-a4ab-1e5e532fbb23"],
                'is_shop_specified' => FALSE,
                'min_amount' => 6698,
                'usage_limit' => 8293,
                'code' => "n85kgjVx",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-06-28T00:35:42.000000+09:00",
                'display_starts_at' => "2020-08-05T08:28:35.000000+09:00",
                'ends_at' => "2023-04-29T21:12:46.000000+09:00",
                'starts_at' => "2020-03-06T04:12:23.000000+09:00",
                'discount_upper_limit' => 8841,
                'description' => "xdvuUx8ZspaBVrlxfEKW03yvMo464UasMqCXObFDqIVcXctUVeKLnLQOtQ70oJ0yYuG2OKOSajpRcgN206YyMLCrvW9",
                'name' => "Y3pynPfgwNQvT46OsoxlAnMuEm4MwtpX33Lo8c"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon50()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "179f6927-517b-40b5-b217-f3ffea9f458c",
            [
                'discount_percentage' => 8284.0,
                'storage_id' => "2d4ae248-1cec-476b-8c3c-36eb96de30d5",
                'available_shop_ids' => ["47e9e1cc-8f01-4faf-b676-5983d190203d", "196e5ede-d22e-4abb-9fa1-0606e5414510", "54922a38-34b7-458e-a0a4-f7fea635eab9", "3a0b8659-de66-4fa0-97d2-506e9cdfc240", "42f9f796-1750-4ec5-b41f-a69b632b7bb2"],
                'is_shop_specified' => TRUE,
                'min_amount' => 5278,
                'usage_limit' => 1298,
                'code' => "ho6wx1LtrY",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-06-24T06:07:46.000000+09:00",
                'display_starts_at' => "2020-05-04T10:27:00.000000+09:00",
                'ends_at' => "2022-05-08T22:35:02.000000+09:00",
                'starts_at' => "2022-11-25T06:42:00.000000+09:00",
                'discount_upper_limit' => 5573,
                'description' => "1e8TKpRyqOj5HLbDuAC6Zhkz4NCzhJ1N5ORrcSjbsE3kIly901Byo77yjSamSe1Hb7dDX1qdUW54FAfUr0",
                'name' => "Ui8nBf2NQWdYfBblaGfljX6ZHT1SNWgCkzCf8AY"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
