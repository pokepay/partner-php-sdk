<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class UpdateCoupon extends TestCase
{
    public function testUpdateCoupon0()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_amount' => 7078
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon1()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_amount' => 9174,
                'name' => "afBlkQEtaE8xbTpd0PiIwS54q66i2nXWkvfusE3magRZXBvYQN11diTIPMylP7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon2()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_amount' => 6200,
                'description' => "JI2fkoYuaeWPZ92K6Zt1zTkBm5QsUJIx79pUjuQLW3JQAlc0mxfIBEGWMOeqgVzvGmf46VZC1gROo7yDwwPoswLPrFl08abqydMndg7MmFsD2bCpZf9Kmzx2cSvcsgfp28NPWqo6XqlqrR9lgptmz4nyVSUDS2rGPI8RxpE3teEPiaYEeN8ncoL5boSBHerEtGhFgJdxHlskgg6LM7DHhWIQ2",
                'name' => "aljg7pW"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon3()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_amount' => 7868,
                'discount_upper_limit' => 3486,
                'description' => "tLDSL3EPYXvMXdIXxGA8eOtdDg4emZxxvv3UzyZmkPPeL3QSeHszKa",
                'name' => "l8UJ7mvjTFU0wWAMu89mD0TpxWczQ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon4()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_amount' => 7545,
                'starts_at' => "2023-02-12T20:35:36.000000Z",
                'discount_upper_limit' => 4055,
                'description' => "VgBaLWMWptjgf0FiZZDEEO2PZA9bioQMPG1E81jCARXbk7MR17C6RF6LyMxBAxNrASDj9VGr6rQWfEP7s2f7f5rT4gnJZ2Cz81",
                'name' => "XNoucyBbEpxFX7PDggrznNWBV0p9BBTTp6AGpMMO3btHYGiB4Qalu6chDV2P"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon5()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_amount' => 5603,
                'ends_at' => "2022-03-03T10:05:30.000000Z",
                'starts_at' => "2020-11-08T00:25:49.000000Z",
                'discount_upper_limit' => 2068,
                'description' => "2ctvmZzuG53qZ",
                'name' => "TYzGouuBX6LUUUBENz9R18rNQjTARxcKWcb1nyLLVIf7PJ4PKIYRAl1UCuQycWgFlQrGdRqVd3CIlE3dO8Hdi7PJ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon6()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_amount' => 9593,
                'display_starts_at' => "2024-02-21T10:23:58.000000Z",
                'ends_at' => "2021-09-04T12:03:53.000000Z",
                'starts_at' => "2023-03-13T02:47:37.000000Z",
                'discount_upper_limit' => 5607,
                'description' => "AK5b9hyZhcZh8MuSlVRKgCSpIL13YY",
                'name' => "GN17rfT9nOtCiuSxp7i1rcacR4EWmJRYE0vgLGn2OdxgxwF29eViuwKtjsRjzvb8XUneGNN0gcbjHE0ykOW2yVlHndMAdWY9HjNAOFWD0f28rlwLb9YSbp"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon7()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_amount' => 9422,
                'display_ends_at' => "2023-10-08T08:17:01.000000Z",
                'display_starts_at' => "2020-02-04T08:38:38.000000Z",
                'ends_at' => "2022-03-18T09:49:29.000000Z",
                'starts_at' => "2023-07-20T05:52:32.000000Z",
                'discount_upper_limit' => 8827,
                'description' => "ET9MPbipC8utokXPq016coqfiAUWXxFRzN5EfouqVIJLmWFeGJqYbyf9xqeV9Lg6T4ooRxK5KRr3h8egFMYUCN7QJ0QWlqwtDL88aLfgCd3mseLQBXIUiYpTvNgfaK3PoowpKAx3kfA31wXd04SY1O8gGOF1kRrye61uzmBIXdnENFs3jBlwZrD72DB",
                'name' => "37CRt8PxiPIwCl"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon8()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_amount' => 4380,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-12-06T06:46:50.000000Z",
                'display_starts_at' => "2021-02-06T03:34:09.000000Z",
                'ends_at' => "2021-04-12T01:13:51.000000Z",
                'starts_at' => "2021-07-18T09:01:27.000000Z",
                'discount_upper_limit' => 9157,
                'description' => "sj7Hu6WK5M7npguch6s2J670P8hn4WhIeMSn521mnmeh5QEBdCZ",
                'name' => "trUa6Fgp7ym0hYqDUAWMYxWfGNC0wV3aBOX1Ig8hROFB3MljHGXrpVSkSdQBQzqXHWCk88yAdkN"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon9()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_amount' => 4128,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-11-25T07:03:22.000000Z",
                'display_starts_at' => "2023-05-01T07:54:07.000000Z",
                'ends_at' => "2021-05-11T04:30:26.000000Z",
                'starts_at' => "2022-07-24T05:13:39.000000Z",
                'discount_upper_limit' => 1749,
                'description' => "UlXp2sT5T809AbvtJaUy0K5oRI2Afv57nsS8pT7iw",
                'name' => "l9CKN5yCsDMuuaWg6vjoZFJU5quwxFBXnJ5Eq6GcNPCEVPq46GdIPJm8acYbz4K3IA8JYUILwDYHWq9"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon10()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_amount' => 7431,
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-08-04T10:32:30.000000Z",
                'display_starts_at' => "2021-05-15T22:02:56.000000Z",
                'ends_at' => "2023-01-12T10:59:04.000000Z",
                'starts_at' => "2020-08-20T16:38:19.000000Z",
                'discount_upper_limit' => 5284,
                'description' => "OJ9lz7HMs7r8Mwpfor2",
                'name' => "g0yfZY1uTlDfXz0uDeov2GaxLjZM7ftEliKPQLWJArPq3tph1c8gKwadNnw5eCqfZdksVLOzbmWJa8YkV10V05hf8WtQGHpv3xPQzPNZMa3cTmTslTDHzq00PkzT3"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon11()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_amount' => 7450,
                'code' => "scS",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-04-26T22:54:50.000000Z",
                'display_starts_at' => "2022-08-05T00:50:13.000000Z",
                'ends_at' => "2024-01-14T09:08:15.000000Z",
                'starts_at' => "2021-06-18T15:20:53.000000Z",
                'discount_upper_limit' => 5111,
                'description' => "AJXNLOLDUjAEUO9KUSGzbSRmda66Hxc4wf0VsciZqVg9CY4JyxUqm9QYX9eOR0RPX1REGDLSjexe42N6h2JPSKXOz8JwoXWD3OcRqlTHYwOestfQFumGQVfUsw4hfYXr8Tws7k48pGfLa44",
                'name' => "NJMCeJ8jlsCf1ZGfe6gS6x1DqMOxCGU3f6AMPJnByO8IAY8ZIAKOHAMaB7ZxbhLp"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon12()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_amount' => 5703,
                'usage_limit' => 5811,
                'code' => "IRMVqbJ",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-10-16T15:33:36.000000Z",
                'display_starts_at' => "2021-10-23T10:09:44.000000Z",
                'ends_at' => "2021-02-28T15:59:57.000000Z",
                'starts_at' => "2023-01-14T02:45:36.000000Z",
                'discount_upper_limit' => 9005,
                'description' => "zwzrbVYcpu84LTKQxDTzMnM7RDpI6DZQTPfIajSBmWzFbVfaL5LT2cPjctfArtA5QzauCKeqrCHLOb6c1NzcpMx2l8O1vhN74ziDPGC2ST6zTd6xVdSlQkj4",
                'name' => "Z4gR5YjMfLJAECo2gND"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon13()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_amount' => 6365,
                'min_amount' => 1476,
                'usage_limit' => 8050,
                'code' => "V3Pxoz",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-06-05T02:10:36.000000Z",
                'display_starts_at' => "2023-09-17T19:01:04.000000Z",
                'ends_at' => "2021-03-21T02:48:14.000000Z",
                'starts_at' => "2024-02-22T15:55:19.000000Z",
                'discount_upper_limit' => 3031,
                'description' => "A6xbZMfc0uwppINu3aeeMh7MwqqZDhOobPpK6TParuulg11gUrgWq51AuUounyHv57rDbvmuL7BqYd28Ylq4PTRllx603bU9utxlgE1LKaCgZVizY",
                'name' => "vZve6TUWFWHy2b5Vs5gPuvHuA5HWIqhNUoMi9wNIaJyI2pADs2B4yB1GZTk4B1PKHR2EWhPZSvV8nScTvJ4VHpUajLmD9cCimPwC97LHWaSOnIC"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon14()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_amount' => 6693,
                'is_shop_specified' => TRUE,
                'min_amount' => 7178,
                'usage_limit' => 8890,
                'code' => "BJimGKiop",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2024-04-25T12:34:58.000000Z",
                'display_starts_at' => "2020-07-24T06:27:09.000000Z",
                'ends_at' => "2023-10-07T12:21:53.000000Z",
                'starts_at' => "2020-01-05T11:26:56.000000Z",
                'discount_upper_limit' => 1977,
                'description' => "u47WiDgn9VJjED17kjNr295nMRl2EDxJjIsLyTAA5MEWhdNFDbX7fss0ltmaJnxslaUL7RrxqbBxY5tCbxb35FzAfmkd3pduwUBkrqrvJ3GVs6GsJ8XiLApVwNY6zjKIEdqTZCuDots6oOpUnX5paeprWtPSGZrL9UrmNU3vFgZ69vwXIbJ7yB2uIbdTxo63tcXPzma",
                'name' => "0EWnRVCjlgZcfxXnQfXvfoocz3td7BZN78kqzJ0Us2fGrJyLKsRHFPpRHSTTSFxnvRwj3Oa3urFP8R4bhOdaBwGLVVHwtN3AFb20DhVqIxWOmhxr"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon15()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_amount' => 1875,
                'available_shop_ids' => ["4893587e-a0d9-456e-8d49-1430ff40b6e4", "ae9ec8ff-29c5-49a8-8f92-10271208b93e", "f131a284-cd80-4a1c-bb49-c4bc595b4e25", "539e4b17-9b22-4ff1-8fa3-bfc66b9fbe87", "9f38494c-5371-4c6e-8cb2-f6a0929a205a", "8905f6de-9c17-4f75-8c2f-92eb57d9f297", "41ca25de-97b5-4fc7-a6a8-e14695d66932", "8965d846-7006-44d5-b579-d77bebeca844", "b8d0a8d6-3d07-4a11-bb55-b6f0d1b92092", "337c9a5b-5dda-406e-a7c3-7f35113e71aa"],
                'is_shop_specified' => TRUE,
                'min_amount' => 4441,
                'usage_limit' => 6501,
                'code' => "z",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-04-21T18:38:31.000000Z",
                'display_starts_at' => "2024-04-17T15:06:11.000000Z",
                'ends_at' => "2023-02-12T14:39:57.000000Z",
                'starts_at' => "2023-03-10T14:55:43.000000Z",
                'discount_upper_limit' => 3320,
                'description' => "e0DGq4e7wXOOVc8GIqj26qcMQ423OrAYOyd21L95eAaG4JW0HS70OJOUKjKLeGCgLyc3XcFOYpAAHYYK9z73uxDP2ictixYSW0AnlJyQ4ogjQgbj8PRfNm4vkTJ8joyTSHmI2see5qGg",
                'name' => "Klkv5vEcEoMjbT4VP8lZF0AhpuShoXCly79fXYfw5LEwfbe5dxC9nFb6EnR37XI7b090WiBtRh0avWo"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon16()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_amount' => 493,
                'storage_id' => "90ec9e37-fe03-4c2e-9b69-f3532eeaed92",
                'available_shop_ids' => ["9767518e-da5c-4c7c-869d-6fc90f5f5081", "2b2979cf-14b4-43f5-9a64-c8903c7ec724", "c3692774-170b-42ca-8047-776eb50d44b6", "40333d48-00bc-4d5c-a457-4791911dab9b", "3d3e1a25-6ccc-419d-bcab-7c42ce9424d6", "c1d82671-9082-4d37-8acb-7fcc47640b1f"],
                'is_shop_specified' => TRUE,
                'min_amount' => 9874,
                'usage_limit' => 7807,
                'code' => "Iw17",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-03-01T10:36:53.000000Z",
                'display_starts_at' => "2023-01-04T16:46:49.000000Z",
                'ends_at' => "2021-04-09T21:59:10.000000Z",
                'starts_at' => "2024-04-10T03:14:29.000000Z",
                'discount_upper_limit' => 1539,
                'description' => "RgUy7vFea5WeBAkgIciVnQYB9t75iPCouDaOPQZR4UpdKmspN8b2gkMcSPrmt0hjIJu43wB7scWlYirrj6XmXYoqVEvKvw3AdEs5hGDLuaSpYl1TGEiugglxJJBGt0dcPbtQc4uSkk26uSRwX6Rx7fOEoFSQ",
                'name' => "iDYpTTgrywklVD4mELe2edQ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon17()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_amount' => 1252,
                'discount_percentage' => 2826.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon18()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_amount' => 5137,
                'discount_percentage' => 9037.0,
                'name' => "wu12UeT7ThuLLgJ9PT"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon19()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_amount' => 5554,
                'discount_percentage' => 8843.0,
                'description' => "GkxOOzhTpPLnUQXea3eTBlP1za1n7IcWMlrV1ey0F13qC7iArhwm76E35ql4XfUae14Wbt93t26LiQAMBYx057AoBwLeryNecuIhUBXRQRCvkSHsmDbMU34aVyZLcCNEj4KngWmPwy7k0E27omWruIWs4TAGfq9ue8TvZwYbMntyIPzqAGarjc22UJafoQ",
                'name' => "s8oM8ozozHv7pSUjn2vqwiu14DVHGOrsaIKsQ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon20()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_amount' => 5390,
                'discount_percentage' => 9773.0,
                'discount_upper_limit' => 3265,
                'description' => "zf5QFhEcKjjKztGRK6K9KAPEUIedziHih60rhQZO78Ysa8FmX0ccAumcgyg4cqEaxSmm8kmOYz37PEcPNNiKvN5Ht8RLA9ghACTJRDSXhb0oNXnX7lDuTKN6ygQ5h7kN0paU2HC64wcGrUcdcRO2Sa3zE9qA6JlqvTos7SrIAldP5taDa",
                'name' => "hvoqIf3H7H22Xm9qyhmrKIzglEahNrgMO9grD73ccOw2h3Fa222nHBaN6510bAHdVRRVqtJb7GLA5jeThW5qr3yEd4dXuL0rYsAz43Mmx6hv0Ug3INp6i2B7flubMg8I"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon21()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_amount' => 9129,
                'discount_percentage' => 1759.0,
                'starts_at' => "2021-05-15T12:41:43.000000Z",
                'discount_upper_limit' => 7120,
                'description' => "FzXHSWu8scihqWwWKLIsgxoxZCQ2441blMtSOZHoWLqvzthoXVcLebdhYmokN15vn0WBXfGwW2mMW1f9b8gICLPqqow4qG8fKRsijZT9ACbFhSbUnXdQpmPpnHFqiJvOHOlQFLdxOm16oej",
                'name' => "I9dat1CLgQoRlzuyxB2QGrCPmQ415Et2SGqgy7Wowcm3CmF"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon22()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_amount' => 5478,
                'discount_percentage' => 3885.0,
                'ends_at' => "2021-05-12T01:50:40.000000Z",
                'starts_at' => "2023-03-03T10:46:17.000000Z",
                'discount_upper_limit' => 4263,
                'description' => "PpsziVloAtynLsPgO9CFz87kImOLWynZ7sTqSkOWWDLZmiyY4qSDce16GC4wPtLkv3o4",
                'name' => "mk88yYjRj6ppJLnlec8JObXuRs"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon23()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_amount' => 5989,
                'discount_percentage' => 5702.0,
                'display_starts_at' => "2020-02-26T01:40:40.000000Z",
                'ends_at' => "2023-08-21T15:27:06.000000Z",
                'starts_at' => "2024-02-12T19:22:27.000000Z",
                'discount_upper_limit' => 4927,
                'description' => "OCB9dZH0k0NKC7bYH6IQhPn4Xu22OkprhqhwvNpMEMbpSnLulsX8V7SnJwOTksCozm6o1k9oepRB7yq0Oa1SzxnfEtxAkEm7sWqtjzoUhtWxAFotkA3GwpJ6pUWjvsxF7sC23pAVbXivHZt",
                'name' => "IAyP3B3n1m451mPU8dTD7bnX1r8l3hCw6Snm9mfcT5cLUh34lWYk1AXf6CZiEJmgnIHDOUd6m8hlpqS572AEF2Ig4ikrPHEQKtfhnULfkSB8hVVRhZg"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon24()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_amount' => 5393,
                'discount_percentage' => 371.0,
                'display_ends_at' => "2022-10-06T12:33:28.000000Z",
                'display_starts_at' => "2023-04-29T15:43:29.000000Z",
                'ends_at' => "2022-05-06T18:04:27.000000Z",
                'starts_at' => "2020-06-05T02:27:07.000000Z",
                'discount_upper_limit' => 723,
                'description' => "DA1T4kxBhv1AOy0nxwzXXsopchwGQjGjB8p2sVlc1F7AjO7bJtO7Dnnc0m9rCGM5hvlyZ4zlX8tOl1gapEcvHpCxJHTvEJuFQdQk10O1B",
                'name' => "igovU99ROsTZK65zQOhilbvDcAlC"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon25()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_amount' => 4297,
                'discount_percentage' => 5504.0,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-09-19T03:55:01.000000Z",
                'display_starts_at' => "2024-04-30T12:42:35.000000Z",
                'ends_at' => "2021-08-04T10:55:26.000000Z",
                'starts_at' => "2021-09-20T03:16:00.000000Z",
                'discount_upper_limit' => 4957,
                'description' => "Po9knGna2qU",
                'name' => "GmaUmeizgJ6BwqETnaq5BggeTTsTdXg3gtXl8b4nZOZsr1VPB"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon26()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_amount' => 8216,
                'discount_percentage' => 9846.0,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-10-21T05:52:47.000000Z",
                'display_starts_at' => "2021-11-26T12:29:26.000000Z",
                'ends_at' => "2020-02-22T14:07:39.000000Z",
                'starts_at' => "2022-10-08T13:08:53.000000Z",
                'discount_upper_limit' => 6238,
                'description' => "6C3vcL7BXf3IHjK0XiCg0zcQRlonr1N4IocuKC",
                'name' => "Z1hdXCgyALhLsPZ4xEZBaL9gPoE5PnOxSYIBQUZMwQEKQp536z2WYA1sx132uYplZstFpjBFQy9bZmz7mGiFtXmRSje5IwYSIqDR"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon27()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_amount' => 5073,
                'discount_percentage' => 3512.0,
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-09-11T20:48:49.000000Z",
                'display_starts_at' => "2023-03-01T17:51:58.000000Z",
                'ends_at' => "2023-06-28T22:54:36.000000Z",
                'starts_at' => "2022-04-17T21:03:27.000000Z",
                'discount_upper_limit' => 9774,
                'description' => "QkQuvmK2Ptks2ZcRpli1kcYUjdKenDWjLTaaBosz7aBykLG1RzGMmx1hSkje9X0kmePd8GXi2",
                'name' => "2Jw1idAxcQ9RQcA93jzk"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon28()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_amount' => 6128,
                'discount_percentage' => 1300.0,
                'code' => "VE1",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-03-01T04:36:08.000000Z",
                'display_starts_at' => "2024-03-04T18:18:02.000000Z",
                'ends_at' => "2023-08-02T23:44:57.000000Z",
                'starts_at' => "2022-04-11T21:17:12.000000Z",
                'discount_upper_limit' => 2784,
                'description' => "sp14vePeJl09h1S",
                'name' => "mSe7z9uXJe9aRBNGFiXbom9IOMRvPLFSP"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon29()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_amount' => 8019,
                'discount_percentage' => 9378.0,
                'usage_limit' => 358,
                'code' => "kv8",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-05-22T21:54:55.000000Z",
                'display_starts_at' => "2023-08-30T22:00:31.000000Z",
                'ends_at' => "2023-11-03T14:38:28.000000Z",
                'starts_at' => "2023-02-23T14:31:09.000000Z",
                'discount_upper_limit' => 3592,
                'description' => "CXUrpWRIEnGneOjH6PTi68jf1Ll0O4t8yu2YY3amcbZRFCGWEFlMAhGqMbfoqHBJlao6arWtW2Kf2i4IAcwQjuFWx2kNI9qHm3gWQVGMbEKu4Afuww",
                'name' => "eTMrw4f2dzO7lqy4kEKJ1Q7c8C0SZpOWKljojyXNa"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon30()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_amount' => 1071,
                'discount_percentage' => 2548.0,
                'min_amount' => 2733,
                'usage_limit' => 6259,
                'code' => "wZjW",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-02-09T06:36:21.000000Z",
                'display_starts_at' => "2022-09-22T15:32:32.000000Z",
                'ends_at' => "2021-06-22T20:08:31.000000Z",
                'starts_at' => "2023-01-06T18:33:29.000000Z",
                'discount_upper_limit' => 9286,
                'description' => "c4sWKFJnLD7m3pQpjDhF5ByJUZoKtqULctVH6JYk9cBHdXfv4mxi0ybLSzTGhHvgOYEOxJ03xV3nSGPvtC19a5RpyBdhfDtmpMgxIW5ljI6yfgW8zOoaul",
                'name' => "3ISoLlG"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon31()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_amount' => 3002,
                'discount_percentage' => 3289.0,
                'is_shop_specified' => FALSE,
                'min_amount' => 349,
                'usage_limit' => 2087,
                'code' => "oXoGAustV",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-09-24T05:30:17.000000Z",
                'display_starts_at' => "2022-04-09T11:33:13.000000Z",
                'ends_at' => "2023-09-28T13:12:14.000000Z",
                'starts_at' => "2020-04-15T22:44:55.000000Z",
                'discount_upper_limit' => 8960,
                'description' => "I2c4vjJ0uuFNk5xEatUCGYnUIhqAnDQImUocNLmlkEs1s3oajWUDkbVb94dhcQmTjATi4FvTByqrSIzi26MGgpQ9DKPsTX2x6llLqyqxLBzmQKSHklP2GNjfKFk3xSPN2EauZcekm4uUHwCvLyAybYYI1PTnYt6AX3ZMraJiLHRNzuStDZHp5Mv",
                'name' => "hzfbMCo9qyaARxtZqgB5ft0k4jfS4r5kfrLJkZytv5gO2QqNTMBVQz08laq2biuqoxBaoCNpyYWsiSLe8XgZiLcB9lkuwUmt5gGSX2SbBRPaYeWynmUQkGZMrt25V"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon32()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_amount' => 9360,
                'discount_percentage' => 4823.0,
                'available_shop_ids' => ["d0a11059-cda9-4e0f-a3dc-cfc8b1ec8822", "19a49052-961a-48b7-906d-911f9d84571c"],
                'is_shop_specified' => FALSE,
                'min_amount' => 8537,
                'usage_limit' => 2056,
                'code' => "y85eAI",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-06-25T14:18:17.000000Z",
                'display_starts_at' => "2022-04-23T01:21:08.000000Z",
                'ends_at' => "2021-11-21T00:42:17.000000Z",
                'starts_at' => "2020-10-10T19:23:32.000000Z",
                'discount_upper_limit' => 3519,
                'description' => "Ch9E1piomvY0y0iLigYmahsEfLajE38CSizXaYXCbSM5b6xxCi9aS7pUn8sHDE4F3kcf0",
                'name' => "hrQ4"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon33()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_amount' => 993,
                'discount_percentage' => 5171.0,
                'storage_id' => "ac30d872-7850-4089-a754-b1e8c0563320",
                'available_shop_ids' => ["3be0a59b-bba4-4b53-b880-6eabd1866a9b", "dd23054b-746b-4b5d-9a43-cf4f7f9efc0e", "d576862c-0b5a-4c3e-9178-01df71d455e5", "fc54b020-6a53-46d0-b21b-0b8d3397e0be", "352aacfa-e039-418f-b195-83df48817e3b", "71cf4e78-e283-414e-aa9d-b11e5c79267f", "4bee7df6-7546-4a06-8e72-15cc6066ee19"],
                'is_shop_specified' => FALSE,
                'min_amount' => 8037,
                'usage_limit' => 4322,
                'code' => "M3qu8k",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-07-08T05:00:24.000000Z",
                'display_starts_at' => "2020-04-19T13:07:58.000000Z",
                'ends_at' => "2023-02-16T00:31:22.000000Z",
                'starts_at' => "2024-04-06T23:14:24.000000Z",
                'discount_upper_limit' => 3472,
                'description' => "aevJazOcUuFHzOggogIb0heOl2hQPfOiPoRxRiCop5Q0A9gBKU33EhyGU9S",
                'name' => "7TWphUCFQOlhJCzSIu3L4oB0QKjjVXdg6wCnP4F0PUy8JyZq3ofPUU0rY2rRd10bnDEPKoSGRnM40Adb2lsHFBNfL0ieognilvSR"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon34()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_percentage' => 5679.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon35()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_percentage' => 6878.0,
                'name' => "4pMoCwkxpSpqKLDrvgRvBVvAYQP0NP5o8oIbQ6bcvTH9KRHlq0wqM01LRxPcYJN00R6J1knyJeLDqePaGS57qQUn9QotexnhecBro7jHBJHSTWFK0aJRYTfxgM2RajM"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon36()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_percentage' => 4234.0,
                'description' => "sQRgc1VEyXHMXBj8otEAcFy5ooXoXuzlRpCyCoZoaTfbTmVX0XqqL2D",
                'name' => "DCdNGv9QaNMmxX2S2fPh6fy135I5"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon37()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_percentage' => 452.0,
                'discount_upper_limit' => 5642,
                'description' => "GGggnvkdWrHaspAw5Vcp7C",
                'name' => "78JSe44PvWgrDoffEic8syvxPXUni2oM8QHA7lWY5GLHqITj0UgJwxmfaF0gGfgNlG67XO"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon38()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_percentage' => 1059.0,
                'starts_at' => "2020-07-31T12:48:36.000000Z",
                'discount_upper_limit' => 8007,
                'description' => "887nNv1eh26ZZWkeJQym7n7CGmjd25iFSdny2rQSPU5tCjVy8COfDZrZRHs0hjVGtY7fDHExM6iUcBW9LDUejJe4laTFkcJAyP9v3lR5fJ",
                'name' => "SCFuFJVqCc62CsLVYKPyOwySSjaFxy00IGCXmzsObY8JjUm176"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon39()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_percentage' => 3661.0,
                'ends_at' => "2020-09-03T05:22:52.000000Z",
                'starts_at' => "2023-12-05T14:15:06.000000Z",
                'discount_upper_limit' => 8571,
                'description' => "YJwKQkQhcSsOlDNZZsSWHBkBrsiXhC",
                'name' => "ZzamORmWcssL2FF3HAzhtt18u7MooUueVWo8T9dRNvfu3qkwBDNVzugQpgEVipsMl1opS6XVL1U8vfTPgZQoGXLb8hT5vzbbFysLVW03Q8sgkwb"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon40()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_percentage' => 794.0,
                'display_starts_at' => "2020-07-09T22:04:56.000000Z",
                'ends_at' => "2022-01-12T15:04:27.000000Z",
                'starts_at' => "2022-09-18T15:39:39.000000Z",
                'discount_upper_limit' => 8119,
                'description' => "bycdIa6s2OiS448zYYuSerVgt5xpThqkxWuN4OkYmUnkAFHrW518DEhvGfJFhBLPIWgGXu2FRRBCtapsc2OJEtIYHTkPMCnHWRhGK3T2O4zTKZrpJNYtglnu99Onqaf5iTxaKHt4HXxpMz5eg3TFJnOMXlccrSM4NeRkShSKYnhr8JJ6rqJ58uKWhjJ",
                'name' => "Vfg4kmmGr3fEZnBlmzkrtoyKm38BDyuj1U15iB0VVURHNCTBSkvCAJURQ0xc8v3XGoxNYB"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon41()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_percentage' => 6944.0,
                'display_ends_at' => "2023-10-19T15:22:57.000000Z",
                'display_starts_at' => "2020-05-21T02:41:10.000000Z",
                'ends_at' => "2023-03-21T10:21:38.000000Z",
                'starts_at' => "2022-07-10T17:30:30.000000Z",
                'discount_upper_limit' => 2734,
                'description' => "RnLKM2vajHzuhk8mM7y90MUBMqpZFx6CyPOvMtoUIDYTTb9YLUK2ZY6omFZc6c5lAiaH7ksthq2qt1fISbJ",
                'name' => "LQ2IGy7A4O5EuFDi3ep7E8KTwqzGZlqsrJTtHeL1jl3TaroJ97KS7PIYmqHtFEvZxOLgNEFPzTNAeMR2CvVgTRCY2rEPprVjpNeaYJXDFnN5l443TmOvQLPfQxkSjhKr"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon42()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_percentage' => 525.0,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-05-06T19:46:10.000000Z",
                'display_starts_at' => "2022-02-24T00:37:36.000000Z",
                'ends_at' => "2023-10-31T11:36:28.000000Z",
                'starts_at' => "2022-11-27T22:03:50.000000Z",
                'discount_upper_limit' => 9249,
                'description' => "1aNsQcGEPe2hgvk3yuDeTC8XzXR9jncya31KgghsgYe3TbLJN21a8hZtm5so8Mz8sE9uDmHdcukVhdalQqRPyTvG2tPeRbQcNODGa3IhebkRxi8kuGoSk8mmCPAG5TaOSJrFwT6IMSTQQD3aZSLuV5KvsCMKR5EbTWV4WWsRyRXgRYVg4CYuzSBW4stkoPc7UXRyRiV8Pax53IDmwuQOCWjbIPmFGWkh7DMCSqp4SWi3zPKlO0ubMaaWt2sfR",
                'name' => "wBothNvTY3vFr4ELRXyBW70oqJ1J"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon43()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_percentage' => 8481.0,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-04-03T05:27:04.000000Z",
                'display_starts_at' => "2020-11-09T08:02:32.000000Z",
                'ends_at' => "2024-02-04T12:30:24.000000Z",
                'starts_at' => "2020-02-16T05:18:54.000000Z",
                'discount_upper_limit' => 3745,
                'description' => "wzYF5YE8jQgUzmyBkd9RsSiJlXzLN5312aQsa3khCQuI0KxC45PIbfMDQsr0pTvhXVGg9hnQlyenzuwrO3gGQmGe09eXlKtPgqSA0ERaGz46vIiA4hbe1yI3CGp5lj6m5fgOCupwcIPxBzhbkfELKrUPd9GpW6Q92PXWpLmGFM1PrngLs4Zq6rjFKNHUPj8OaHLD3inc4333SWlp4s7jMjS5Pt",
                'name' => "zYsdA5qhl1QGqEwjgkrGn0uAn0iqI2b5rxtzGOZhKJMKwzvYsbBzTdo6bpAqcWNJrNTsv2Llex1"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon44()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_percentage' => 2533.0,
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-05-14T05:27:35.000000Z",
                'display_starts_at' => "2021-07-22T17:27:26.000000Z",
                'ends_at' => "2023-10-23T01:56:33.000000Z",
                'starts_at' => "2023-07-06T22:19:40.000000Z",
                'discount_upper_limit' => 1330,
                'description' => "ugzGxu81Sx50Yf2M71M8zENOS",
                'name' => "GlzUlDTz33P2rJ14YHcAJKWHCf11oIN1lhxfCtQoWt3KCnkWzy38cC0E7gsSEIT"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon45()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_percentage' => 4668.0,
                'code' => "i3yOkB",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-05-23T14:48:04.000000Z",
                'display_starts_at' => "2021-12-22T11:58:49.000000Z",
                'ends_at' => "2020-11-12T14:18:29.000000Z",
                'starts_at' => "2022-01-20T14:01:49.000000Z",
                'discount_upper_limit' => 9107,
                'description' => "6ZGKLNmOSXPLkVgGHidiNxSMbU65iFGAAyuGpPep5MlLDDmy5H5WNxLWXFOkEFZiHMkNkDC4XjAgnNgPyTasq1IFexxHoOsY3XmfSCMMI0hPIOcfptkBjffHuYKUEJ4zrJepcLNjePvmbsJ6aAod",
                'name' => "X3lOsSzeTfXuUhrzyKZN2IpvZDbUGNbf92zGej"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon46()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_percentage' => 1641.0,
                'usage_limit' => 5113,
                'code' => "b3srgm7L",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-02-22T13:28:14.000000Z",
                'display_starts_at' => "2020-10-31T11:09:44.000000Z",
                'ends_at' => "2020-09-24T01:03:53.000000Z",
                'starts_at' => "2021-04-05T05:45:32.000000Z",
                'discount_upper_limit' => 382,
                'description' => "ZfZDkQ2r2xXuIalmcupP8PaFubqXmo0h47ayHi8sXxsnC42wCpyAiBnUBLAV97YftKTMpHhWMUK3SCmPb9BXoLZ7wKHtX23HwTLkUG7zxtQPL0ebUOhv3B3t2DzpE8reI7vFyo7eM4dNHW25nKJYDvzM004QSYdkecoF",
                'name' => "zr3brOZ5f3RQvkhtySJKYRUQ3NzIgBoxko0Q38viglT3j7uK9FEO8wpTMbUo34OhjcbIFy00bHf"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon47()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_percentage' => 8237.0,
                'min_amount' => 4304,
                'usage_limit' => 628,
                'code' => "Dr",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-06-03T08:53:13.000000Z",
                'display_starts_at' => "2020-05-27T15:28:47.000000Z",
                'ends_at' => "2024-05-05T08:14:58.000000Z",
                'starts_at' => "2023-06-06T09:45:30.000000Z",
                'discount_upper_limit' => 444,
                'description' => "QhJIvCWpCXLp2gUnx8oHUCw9IDU8v5tebk72bnq5V1PYuyQsrCeZvlknHwyCYeoTGD6IVelM1xkQHIURZCUVG9E4BcH9vh8Qcd9Qr1jGxJh75seT2MlMasdJCSgZ4nn16A08HMuzRKVjoY87iExdEHTNDtgEpdMlXJAKinvVKW5jNBic0lbP5i9pPDb3qItRRs3FY6lAlrydgPmYNQmdCCS",
                'name' => "Sb7PeqbGNNyGMxdwCiRwJpoUBZS7wM2sjFT50Pr6H3Lr5Vqadi7ItSc4oUdi9EYp8oXZ4d1DU"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon48()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_percentage' => 2417.0,
                'is_shop_specified' => TRUE,
                'min_amount' => 7235,
                'usage_limit' => 5898,
                'code' => "UD",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-12-07T09:57:05.000000Z",
                'display_starts_at' => "2021-08-15T13:24:55.000000Z",
                'ends_at' => "2020-05-17T11:48:24.000000Z",
                'starts_at' => "2021-11-07T14:45:23.000000Z",
                'discount_upper_limit' => 7629,
                'description' => "9IYmurAkMd4wDsAO01hvmpIXnG4V",
                'name' => "dq7gNAtqrqKm6uKQNQH3PDcRwUCecSBjOParYUfATbi"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon49()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_percentage' => 970.0,
                'available_shop_ids' => ["728553eb-2898-46ac-bedd-e980344025f8", "c758e900-2ed5-4b45-b784-cd27e583417c", "10392f8b-16d4-4033-997e-e698b3b10ccd"],
                'is_shop_specified' => TRUE,
                'min_amount' => 7329,
                'usage_limit' => 4153,
                'code' => "1XjHrTG7f",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-10-23T20:06:16.000000Z",
                'display_starts_at' => "2020-05-15T18:47:13.000000Z",
                'ends_at' => "2021-11-30T17:47:54.000000Z",
                'starts_at' => "2023-07-26T01:45:12.000000Z",
                'discount_upper_limit' => 80,
                'description' => "uSHXTmEReE1YV9ebnUBpzD7d9DsGnOvPtZOQ7wRQgMzlEQYhb78oA0LE9nGzsoBIqSCZEncCQxjIhrUeBMFsGSoFMs14cvovqZ6GQpcxkL1iWim0Xpy9XRR4FHqayBd9Y6naDnCaj1IshUK5sOcLMoSdluvLDw0rIOalhSCHrt5J1YKxmhpIQaAHuF1XqBsQEc2YHzb0v51JNexx20",
                'name' => "lobdlTY6n3LbK6Vu4m4rhE7PkEzPYVXfzwtjxI8n9Z0CQKMUdsLKbKLcaV6nH18WcZi"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon50()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a3fdb404-ea20-44bb-beeb-54b4480d0db4",
            [
                'discount_percentage' => 8292.0,
                'storage_id' => "70111e2b-c8f6-4dbb-9aaa-aa359e5ad535",
                'available_shop_ids' => ["4d22c1ed-ce41-4f0d-a7bb-54cfda6e83c5", "65e2647e-9d8e-4384-b17f-132dd30e3f8a", "cc834a36-b61c-45c1-aeed-7cd951562862", "753fddfa-da5b-4143-8cc8-bf8a0778abd9", "a33eea0e-8794-405d-973e-8103834d71a7", "3162f61c-32e3-4b6f-8c9e-f0ee39e4ed56"],
                'is_shop_specified' => FALSE,
                'min_amount' => 4620,
                'usage_limit' => 7004,
                'code' => "iJFwo",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-05-20T09:03:06.000000Z",
                'display_starts_at' => "2021-10-14T19:22:16.000000Z",
                'ends_at' => "2022-11-24T13:06:39.000000Z",
                'starts_at' => "2022-07-28T02:52:35.000000Z",
                'discount_upper_limit' => 9649,
                'description' => "1kk2Z65xpUZ28FCmVx3QLXn5K0ujHfTEebumDwnUvtTuwE1P6w3jvuc6WVynWZlMwTGtLKHNv0GHMA8YNVctqn0HylBEaWFtKmGqTMRGGhLK4md8CvDRXJmyMUq3nONdNUldEzZzYqTFGHLldYwHPZ5GyoYYcgPPK3Dchqik562nQJ7JN9nEMDfH9ZULXMKOjFu2f",
                'name' => "iShoySflnRPKvTH4Qb4HK1DE5zpHipftSBuuUyajKD4UG1MO97nrik73QyiaNKms0iFYGrWx"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
