<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class UpdateCoupon extends TestCase
{
    public function testUpdateCoupon0()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_amount' => 2712
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon1()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_amount' => 2493,
                'name' => "ZzOm1K14bBmY95yoUzkkyEaKTY6mKvboUXGEXQlj5bngjn2wWLVZiGxGwEG"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon2()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_amount' => 3475,
                'description' => "XLE563MHrBTs2YlocxnEbjj4IQpxBG3ofOpDPlVWPSHrcG3lRG6KOhOaIgysjiOdcZw91ijvF1S6gA5MclrhHvoIdRH0smYUuC1MxjQlcLidAg5ARWKUfTOfYdZE7Ujcfi5PElGn0qAauXTP10EL9tIDmJ25DsjxAISjsHvexLaJDwRmXOtCAjZE",
                'name' => "NAAGhtWZnPwPfgINM6RyDDIqFyyszHNCgjQNGgu7oVTTmFf6LzRyekURe8l9rMrWWzDeKDC8SqTjUF9PJgob2j7Q2oFAYg16f8y5q78038VBVEoul5RlcFTp3Oc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon3()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_amount' => 7053,
                'discount_upper_limit' => 3492,
                'description' => "LsJ1veNDKxd7RVoi4Ef44kh8LmhOFKkoOpDHomk9oBYorH8YalKnb75XBxiTkKVyGGBPG6AUJEub7BpMR1EjhCHN7GcFcNj5vZ7OM2KAvTg6X0FVR0kBN2U",
                'name' => "19d6uGGRhRacXAHjTvcfMRp6z8yjpBfTAa1NfUTbrI6XtbUjjLexSTYcNpphk3nEKJZiXUePtoRxIC9qWdKC"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon4()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_amount' => 577,
                'starts_at' => "2022-08-31T06:26:51.000000+09:00",
                'discount_upper_limit' => 7627,
                'description' => "gAukLJrDABMlb3syClxCl9xBGwwUKlUfytPQqcTSz03QbpKcT5ds92Pg8eBK2joJuum5XS276eVHk9VXBgjvM0gn",
                'name' => "RGZmcC9A8vnfyOVH"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon5()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_amount' => 9731,
                'ends_at' => "2020-09-27T20:08:16.000000+09:00",
                'starts_at' => "2023-11-21T22:35:20.000000+09:00",
                'discount_upper_limit' => 8880,
                'description' => "0prRjllfjQBfScYvjfRiY2mnrT9fYLnQskOYlnqN0dQDbLmQ8FFyOF8B99rR4etRblyfBXpirL1IVj0Ga0hb2n3KiU6dCt6ftksVHfy7uSjPZTeXpy3F2tEiJW3S8ZbrGDbSbqcbodCihrQtePJ1m0frzW1Szts0gAY39VFDhgzvdTzWoopqlMXczoXy8XKUATr84C9i6d",
                'name' => "chGx9ztC2cKnyXFk1qlTtbGctgiomwfUawtcmFzbQt9AsvF7h0ZO01RvGnGdCr1FU6gD20swPgx2mXSEh6OC1OZvBX9ma2lxkJhfJ8txTeOA"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon6()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_amount' => 8581,
                'display_starts_at' => "2023-01-17T01:26:04.000000+09:00",
                'ends_at' => "2022-01-22T17:37:30.000000+09:00",
                'starts_at' => "2022-03-06T20:33:51.000000+09:00",
                'discount_upper_limit' => 317,
                'description' => "jVVmyukqLIKYpFVGkAi6q5EbC52A4p9gv3UGRyf4zNAgXFXUqCC2u372gCUEfCbuYb4Li4mSNNx3mVgJmlBLXbqp",
                'name' => "0Pa8UGLZ07dRlKBwUEX8jqXR5BIIMqrIdBwvkhiExy2pNOObnXehYIfNF3CbPR0ICon98Gnm7rKgI"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon7()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_amount' => 1518,
                'display_ends_at' => "2024-01-13T20:03:14.000000+09:00",
                'display_starts_at' => "2023-09-10T21:55:04.000000+09:00",
                'ends_at' => "2023-03-04T01:47:29.000000+09:00",
                'starts_at' => "2022-06-27T07:54:37.000000+09:00",
                'discount_upper_limit' => 3694,
                'description' => "Q00hVSQhcJ1phGbXKkK70CLsBc3amyPHOR9QgSAvF8ErhjuS4S7GmNSOiJSuK9j26PaATVN35kDlVJFF7FrILSsDEOrLfzqAygwTRgOqpqHbvUaX34S1jwr1z7ZMAz6lNm6HSRW9GL1LqTUo7ucn",
                'name' => "Teil0MVtyYbR2TG54BIPBVoq7l6axgTMm3EVMEVrO2s2ZX0JjVgrt9XDN23ex4Grk6yauZlZEDU6JislHM"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon8()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_amount' => 1307,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-12-30T08:43:42.000000+09:00",
                'display_starts_at' => "2020-10-13T10:24:30.000000+09:00",
                'ends_at' => "2022-12-29T18:14:21.000000+09:00",
                'starts_at' => "2020-06-13T02:56:14.000000+09:00",
                'discount_upper_limit' => 2215,
                'description' => "QgVMWZJIBuByt4cgnlA8rlFYkEGYAhkSQt0ClxrJ1KRZEpZ5yeucH1Qu0aZclj9YD2WK0nRIBWB6cCHhp9J6pWso55JJac0LmzQIinuvrMKfC9U4cRh6KCSYYUxI3wfHmRkbdVHFKFNlS4mVUgvTN7k6D6HmVzkHyDHX4M6duIuDcSFncG2",
                'name' => "cyQpnT08jsMRvhS707qsysPRCqqbnMuF5WFG4HPzERqIr0AcPWSZ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon9()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_amount' => 4398,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-04-16T23:07:42.000000+09:00",
                'display_starts_at' => "2020-06-17T01:47:29.000000+09:00",
                'ends_at' => "2022-12-03T17:00:56.000000+09:00",
                'starts_at' => "2020-02-04T18:41:22.000000+09:00",
                'discount_upper_limit' => 997,
                'description' => "40dUZMNRja1rLMifsEXfTIduJPgUmkmDJEwOGmcIxOcYLuEE",
                'name' => "5um"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon10()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_amount' => 3924,
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-12-09T04:47:51.000000+09:00",
                'display_starts_at' => "2022-02-12T17:55:17.000000+09:00",
                'ends_at' => "2020-09-30T13:01:53.000000+09:00",
                'starts_at' => "2020-04-02T00:27:25.000000+09:00",
                'discount_upper_limit' => 490,
                'description' => "scijenBg9pST4MQOSczf10NWqOksvwMNOcezv1YjRU57ERkQRxdGziIctqUWtNh311WiH8wp43PYWjqDhvBqxtytlSo2lDqeOy3CK8wbK3lqCumKvSkjcLBLjf1DZAB1qqjWffsuWRSSMmASFRV124RYDvisOtfmhxI6Y3Z8FNQjs69QjLM",
                'name' => "CitQVrZ2joeq2R2BjttErsE89rSh4sKZs535sk8B0fBUINmwxoRJ000nGvkPRur3hFa3lK4ORoFY2qzYaiRb7SBhIGEy3R5Or0Pw"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon11()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_amount' => 826,
                'code' => "8oHgk",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-10-19T22:50:59.000000+09:00",
                'display_starts_at' => "2022-02-21T03:54:49.000000+09:00",
                'ends_at' => "2020-09-30T22:52:26.000000+09:00",
                'starts_at' => "2021-06-21T18:30:13.000000+09:00",
                'discount_upper_limit' => 8981,
                'description' => "XNSxIlPvH6W3LVgec3HH4gqKwWbllMS6H0s6gZOh2jDqf448VyHmOHkPfLLzhPH30nmqJvZJ5KYJtkbqJWgmscT4twRvY7cqjWf2Q9lt5Pxrex5b4IBE5KM1WIhy471vbpFCgvX0ICYSQIrQyHx6R7Z3lSq7X7Roo30IM0FjX",
                'name' => "jClzL8ezAz6UzY36Pn1xlxTLXau0jx7SBS9azulj367z0yCbbKx7NAWOnJ0dckIoHWie9bVqPQv"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon12()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_amount' => 5196,
                'usage_limit' => 197,
                'code' => "sISIPi1rsg",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-01-04T10:40:54.000000+09:00",
                'display_starts_at' => "2023-08-16T09:39:56.000000+09:00",
                'ends_at' => "2021-07-19T13:47:53.000000+09:00",
                'starts_at' => "2022-11-04T19:51:12.000000+09:00",
                'discount_upper_limit' => 6021,
                'description' => "CwJ3vJbxXRXxC0OPYJ8KbS",
                'name' => "ZVHcaGzYzrrJOnEmxxmKnittz0XW"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon13()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_amount' => 3928,
                'min_amount' => 2410,
                'usage_limit' => 5677,
                'code' => "grYs",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-01-20T13:34:09.000000+09:00",
                'display_starts_at' => "2022-07-11T05:55:51.000000+09:00",
                'ends_at' => "2022-05-16T09:40:00.000000+09:00",
                'starts_at' => "2020-07-21T12:32:31.000000+09:00",
                'discount_upper_limit' => 7399,
                'description' => "UCKwlc3HBLtjyUQjdyBbxy6mIhTPUbQrXN9AmSrsU3gXfL3FFCnDGbclirmISJjEzqZ1PiC8DjXK9FhRlaH9dY6b9zXVnj4wXEdFfPI9nQJGFXc1e2C3GPYCdxVJGBhve7dxkXDqhAn0VGvvMJpgnES9KsuQ8AiPjhYNUi5cfh0Bg5wpUGy7CRIFHygagWMZPOQqMlNrsvwVo2Zulhg3BbcSRP",
                'name' => "YQRQHUBWevsv8Bh2BmRkpVmxmuSH9eHidvU25jit4YkVh6mzT46TkxNDp2xduiIPI9a0zUXZGvdaJXUjKsBFT5gfdmwsGQ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon14()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_amount' => 8997,
                'is_shop_specified' => TRUE,
                'min_amount' => 414,
                'usage_limit' => 9045,
                'code' => "8dh8gJr",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-12-04T07:12:41.000000+09:00",
                'display_starts_at' => "2022-04-30T09:11:44.000000+09:00",
                'ends_at' => "2021-05-04T13:02:32.000000+09:00",
                'starts_at' => "2022-08-13T11:01:47.000000+09:00",
                'discount_upper_limit' => 7177,
                'description' => "NpYZXKr5OkychcHBKB0KMR",
                'name' => "y5oFqdPNP4pOw04KsfbBqY08wysJPT4wmkOuqPp3OoOfxKgc97ePmZQeq3SiWCwLpnM8ybDVCkhVDdP0arvdngFBgKQtpB4XVV9ogm7Q"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon15()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_amount' => 472,
                'available_shop_ids' => ["b6f59a52-6497-4132-a107-30483acbc2db", "5e20e4fa-21b8-462e-93b7-e1be57476a35", "397e16da-e542-4c58-ae56-87f4a14140ce", "7761c56d-47b0-4308-a29f-1fe8d506b474", "2f6e73cc-6a67-42e8-a81e-f2186368564b", "78c9a8cb-de16-4387-be1d-c2f04347f539", "b2369b0f-178f-4719-93f8-5885d5a94e5d"],
                'is_shop_specified' => FALSE,
                'min_amount' => 7526,
                'usage_limit' => 7378,
                'code' => "HtYf",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-08-13T04:50:28.000000+09:00",
                'display_starts_at' => "2023-10-12T16:11:40.000000+09:00",
                'ends_at' => "2022-02-03T08:26:42.000000+09:00",
                'starts_at' => "2020-02-02T15:40:46.000000+09:00",
                'discount_upper_limit' => 2298,
                'description' => "dkIIUrUSwG5ZuGqS9UnUYGPtJKSy2dD9pdsZgOE1YHnbv3",
                'name' => "K0IpG0MWM75LBTmc1kSvUTyhud7NtoJdY"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon16()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_amount' => 7942,
                'storage_id' => "ce2e9f28-3300-4586-80d4-0f4cef0536cb",
                'available_shop_ids' => ["26138009-f594-4f6b-a574-196bf2bb6488", "7eefebd4-a099-4fe6-a7da-69377f8ed3e9", "692a95be-702d-40ca-a2c8-8022b45a130a", "54671e4e-f2bd-4618-93d9-628366a3671a", "7e8b6c04-52e6-4cbe-97dc-934bca9f6115", "1117c2b4-e386-4cdc-8ddb-e69722b6ef03", "78b57fba-69d9-49de-9cf4-c8da7383bed9", "20c49b3e-0393-4ce8-b67d-9ac7197ec9b6"],
                'is_shop_specified' => TRUE,
                'min_amount' => 560,
                'usage_limit' => 7933,
                'code' => "1BWYnKZT",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-10-19T14:49:57.000000+09:00",
                'display_starts_at' => "2020-12-04T12:29:15.000000+09:00",
                'ends_at' => "2022-10-20T21:29:18.000000+09:00",
                'starts_at' => "2023-05-27T04:50:25.000000+09:00",
                'discount_upper_limit' => 9387,
                'description' => "qwIaYrFrlYuEkQwGRZZmRoftINSlESyWqeO9d6VV1BATRKOJGZslS54BlGDp7WuTQUfKS0FK6LQqD8Oajegffvqv382G9zpWET7wq4BXp1pFzU3I7lj7iLMdgqyugGvA6DNLQuI3qQJ9gTCHz",
                'name' => "RPjXGWEXZNKqpiPpv68crlupXJOWnQwMv2P2xCVjbFdmSIa7Zjs8rVOmZQkvweF9jzLBwwEXdvV4NxTEF5Ls1zOaBmBHxNmSg4qylhbI26xqui4YkJ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon17()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_amount' => 5210,
                'discount_percentage' => 6413.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon18()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_amount' => 6260,
                'discount_percentage' => 6330.0,
                'name' => "Tj83zC9"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon19()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_amount' => 9686,
                'discount_percentage' => 4443.0,
                'description' => "54PdpKJE3SlkUItc0ge7K8FGeOioL32l2ng0ayq4SjAa2LnM12j7OGGaG4v2LmIPB0pAjffSrA4qa5RYatVudhnXq1EAJS5ghvXl3JaKDSSWHtmryH9jZU74mGfl6Bw96YbenRyBwPNKxoYQskYUS7SIy0i8dOGRauTKy6nQRUNjXrxx60vSumKhiFFeM5SYjubRree761ANQ8uGXr8mZqW58vorfw2t3",
                'name' => "vCumShtjpuPpysveF5AAw9ubKT0Gwa9Efck7vjXs5DYhUHuVme5e7Z6oFKoYRGxa4PLRd6UnQuKy7xdJanbbXNxVr0U0JXx91tSiQhmmEltgp8a8be"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon20()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_amount' => 4548,
                'discount_percentage' => 261.0,
                'discount_upper_limit' => 4037,
                'description' => "neFAt4jylpRs3iirtdilKTUkbyBsI8D0casbs4Pyyp7OGDwyS3sWQ5enCJ5N9u4lb8UyAwVUMhy5E",
                'name' => "ouCKaebTLWfIAk3ch6eQfdNYydl2Y0mwuadFUIhxhC4gK3AsHJXDJQ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon21()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_amount' => 1690,
                'discount_percentage' => 2820.0,
                'starts_at' => "2022-08-19T20:24:51.000000+09:00",
                'discount_upper_limit' => 3236,
                'description' => "YlZItwrbHNseYsE2RzFXKo4q7RdjyfgTSvJDUEMo8oLT3ZNUifihBg80G1DFdS1Q59Z56gsKJB7H3yw",
                'name' => "KA91zsuABFJqWvHNrPybvwbzRbOLgGUO"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon22()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_amount' => 7012,
                'discount_percentage' => 8584.0,
                'ends_at' => "2020-08-18T21:55:44.000000+09:00",
                'starts_at' => "2021-03-05T12:18:24.000000+09:00",
                'discount_upper_limit' => 2415,
                'description' => "IcVeUBt5znqTKkgA7KEGlhxgpHX1J8Afel2qDBfOUlsSoPoxW2rxUEfV9c6uRDM9g2PFDpMvn2",
                'name' => "M1sQak1MEx2NeEFsDY7qsLqCz7Tg3HFsD5734mRts8bUNI7zH70sTvCig0UVvbAhom7eRxJt3LdYMOXZgEpkY6ZtWAwYselclHw5m9h"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon23()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_amount' => 1139,
                'discount_percentage' => 4222.0,
                'display_starts_at' => "2023-05-22T19:28:54.000000+09:00",
                'ends_at' => "2023-04-21T13:03:44.000000+09:00",
                'starts_at' => "2022-10-16T08:33:15.000000+09:00",
                'discount_upper_limit' => 7725,
                'description' => "Od6mNOQunOvVt8eUe7ge3xEQbTJjbxJiGrYdK8jpLdeqhIacwnTBT9j7LyKmniX71vGMxZmUk5KPRh5KFcwoejz4UFz2Luzpzx0r1idmrXPtvx0OIcGn4QI7sAKH70n5KIQYW5zqTj7p0DOzibvQzeWW5qC1U6zjQG61rCJP9p6qzBV0q3FMAL1iMw",
                'name' => "lF9G3VpgPguKd9mzDOl80fvQcQkwG6kgvl5JuhtxHwxxrpEfB0BMLyTvGMR1GeNxZtrlTFGfJ9FUKOo9DFQYdUDE"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon24()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_amount' => 6591,
                'discount_percentage' => 9282.0,
                'display_ends_at' => "2021-12-04T17:16:45.000000+09:00",
                'display_starts_at' => "2021-05-06T06:19:44.000000+09:00",
                'ends_at' => "2023-04-20T15:12:01.000000+09:00",
                'starts_at' => "2022-03-11T18:30:52.000000+09:00",
                'discount_upper_limit' => 7834,
                'description' => "lzq1WzrD4IeGx8AlCl5AFFf3agOX4r5tDXubwlOJanpGRMfcVUyFY5HvzsWhedM2XdaDxNoeN4gLVQdIZRZCcEsE5bQw0baIbkXUWQGJPp3onob7umPc2wsuJwPfte6iU3bjHMX3zVhQNuYQJ8vvRgn0yQp5ixT2AFkkXXU6hiwnpiUzK1BrfZyS2k",
                'name' => "Swv"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon25()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_amount' => 3335,
                'discount_percentage' => 713.0,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-07-02T13:59:56.000000+09:00",
                'display_starts_at' => "2021-08-01T00:42:12.000000+09:00",
                'ends_at' => "2021-07-06T10:30:01.000000+09:00",
                'starts_at' => "2023-03-02T17:07:10.000000+09:00",
                'discount_upper_limit' => 260,
                'description' => "48wOmoBXokdO2eHiuHoqZ1FhICqdKuWIl01pPBWZQ70N69PJzrKv42sUUVT3oukFuvtmt3p7LztyW5mdwqqFdjcDcRAPOsEXWwwu6yD2iT7YNpJjlTPeeMYcjsOv2ArhMU4FtyQpZcoc0ULW06KbpHSSo9jxTNxMrgUvQSC7d29Ri5",
                'name' => "3CPi9jQ4n95eQ77C5bnePiA51bDdTsZPyOpJyj0c5oNBwDZlueNEqKltYOlGJhjXV3qWTtmrtEEqKUupDa9G6cDMSDlgKbSZ5Wcf"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon26()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_amount' => 5876,
                'discount_percentage' => 333.0,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-04-17T20:06:17.000000+09:00",
                'display_starts_at' => "2023-02-10T13:03:03.000000+09:00",
                'ends_at' => "2023-09-01T23:24:41.000000+09:00",
                'starts_at' => "2020-07-16T12:38:52.000000+09:00",
                'discount_upper_limit' => 3307,
                'description' => "1L5Cm1SLfRZxBCFVS792bdXj6OJL0WNCdPW8KhSQt4tjqda1I6",
                'name' => "xMSGYcEqSAJ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon27()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_amount' => 6404,
                'discount_percentage' => 3880.0,
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-11-29T22:50:24.000000+09:00",
                'display_starts_at' => "2020-04-19T20:08:55.000000+09:00",
                'ends_at' => "2020-02-19T19:40:06.000000+09:00",
                'starts_at' => "2023-10-19T05:40:54.000000+09:00",
                'discount_upper_limit' => 9919,
                'description' => "ReqRfxOs71pyWOkpbWDvO6aOGQpRTfRVO67Y4924LTbuvj0WpUDlJkQAu6kPX7N9FmB5i200Tk9g6uUS6HDriCAzUwwbBLFRlph8wxBx5cp5zJItKQCWh29p2Zl4Cntp9HSJZJHIQmBfJwV3Q8lR7CNR0",
                'name' => "YwrGlRbrU56nMhx8RAur7KS8GybYwzcph"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon28()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_amount' => 654,
                'discount_percentage' => 4613.0,
                'code' => "z4fEpd",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2024-01-07T15:38:21.000000+09:00",
                'display_starts_at' => "2021-05-20T05:34:51.000000+09:00",
                'ends_at' => "2021-08-31T13:58:57.000000+09:00",
                'starts_at' => "2020-06-03T17:33:39.000000+09:00",
                'discount_upper_limit' => 3827,
                'description' => "Extd9ly4VJ5FstdOhR1njnwxgOlBHmXVG9tq0bt36JsMrSD5O6wsNDBs1iyg2GVoN6YHCzFuLeQQr6UzyZ53y7D6afc2LT36fPPoXqgBUbSdbR5qzzs7aLbWR0KTJQiWfTcF",
                'name' => "MbrWSafLj49BifCyI2ePUNFTVs"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon29()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_amount' => 5511,
                'discount_percentage' => 9375.0,
                'usage_limit' => 9415,
                'code' => "TMrvnHV",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-06-14T23:26:55.000000+09:00",
                'display_starts_at' => "2023-04-30T23:29:02.000000+09:00",
                'ends_at' => "2021-03-07T20:35:33.000000+09:00",
                'starts_at' => "2021-08-16T22:18:37.000000+09:00",
                'discount_upper_limit' => 8960,
                'description' => "bh6RIy7mo67GnUnQHRtklmyhslZPo0k8orzYEXesawqR2mLHS2yF2TWnsPycTSlMO7gvKOlyMYHRkGjZ017OktCk",
                'name' => "BHnPrzTK2GjBPCZCHOQtjEOlJXxNVjioOrwnAbqpi9XeBoM6GWEW515EzeQEPrJz10kcbERAWGpBBS9Z68qVUMlk85LlymtnQqwifCxHQ3Yg8"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon30()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_amount' => 7522,
                'discount_percentage' => 8075.0,
                'min_amount' => 8831,
                'usage_limit' => 1423,
                'code' => "z",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-10-08T21:41:15.000000+09:00",
                'display_starts_at' => "2022-01-03T07:28:33.000000+09:00",
                'ends_at' => "2020-02-29T00:49:00.000000+09:00",
                'starts_at' => "2023-12-08T23:32:11.000000+09:00",
                'discount_upper_limit' => 6095,
                'description' => "YITcy3Cpz3YfVxY4gLl8JhLnPErNcMNKtll6HcOZCjoTZfx0d8c9wZNVlGCW4ou7eySBavvMGEljYvYNwbYlvj17QWjxpJzFCmR7lrAMfKxvYHPIWxNk6u5C1H82lyc7G5Br3Ugfdf3cCui8OrDKZldKh7vkt1WNxHV4GzdD8aILLP4fqNWAU",
                'name' => "E2VunPfIBv4gxYXDh6q2BZRW1fZvS6xtoonYUeapmZKH35cE87qCF351umfclEdBw5gqtuYAEmO6R5tE8CW"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon31()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_amount' => 4492,
                'discount_percentage' => 4232.0,
                'is_shop_specified' => TRUE,
                'min_amount' => 5340,
                'usage_limit' => 2568,
                'code' => "6sz",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-01-09T04:23:49.000000+09:00",
                'display_starts_at' => "2023-08-20T03:38:25.000000+09:00",
                'ends_at' => "2022-03-30T11:11:56.000000+09:00",
                'starts_at' => "2020-09-06T06:49:27.000000+09:00",
                'discount_upper_limit' => 213,
                'description' => "W5q4q6Akuk9hwhPhjAMD1jFzhc5sF0UYsVy1WrxndIleQHYHGx04",
                'name' => "72T06H2GOdUERnsbrDBZUgiM9numc4TnGqw3NtEBt9V4cHR5i7dsH7QZnS3sx5WNUNnFDch09aS1FMSjZoIMeGPDDVB10DVKpypP4Q9DFb3qgb7s49ykpYEp6XUrIws3"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon32()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_amount' => 9120,
                'discount_percentage' => 1402.0,
                'available_shop_ids' => ["9f110460-439b-4fa6-8e32-60553cba5da3", "18e9f0cb-b26b-4172-beb2-27ed3965350f", "5d5bbc39-2c56-434c-a9f9-490f91defce7", "d1b029be-4c40-4d77-9138-88764cdc106b", "7c0c86f4-9333-4733-a3c9-9ca4b468242d", "3fda8e2a-8abc-4e22-97de-d0655bc240db", "c4ba16fe-cab2-472b-95c4-18afa262591e", "5e918efd-2cf4-4a7f-bb40-e71617a355be"],
                'is_shop_specified' => FALSE,
                'min_amount' => 5,
                'usage_limit' => 8738,
                'code' => "HZJyIoeyvC",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-02-01T00:23:46.000000+09:00",
                'display_starts_at' => "2020-04-28T04:33:55.000000+09:00",
                'ends_at' => "2022-05-24T12:07:34.000000+09:00",
                'starts_at' => "2022-08-13T06:25:18.000000+09:00",
                'discount_upper_limit' => 2075,
                'description' => "Sj362Ok1PohGsFtaB3pCOdnFC3t6UlGxj43oqEZLsuPq0uLTCj172QqQtjK1uw3cKZ1pOHeU2crDLPsqG6OYG4EhfMTp70tn4n1AKuosOIkr4Tdeeh45Jo7VgY8c6rltTCi3gDlx8uOdc6RUozGx3COlQSdostlrM3WkU1AsHkM3RzElDlVkizsa6TT4X7pcbcVnJOoVB",
                'name' => "5xTpmtfsTh8kQJYiMX2iWPVVtY8GUsktvVgD3zK3Ry6y3jfLBiotW2WaXilNQXCaDUwtiLhtB8N14ZpSAzwR2tdh3nDRf8aCUbBop9O4HCm01XOP"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon33()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_amount' => 6900,
                'discount_percentage' => 315.0,
                'storage_id' => "2b460bbe-2e26-430a-bd33-c9c6f441189d",
                'available_shop_ids' => ["526083a7-4e72-4f79-bf9e-3ee5f7cf1daa", "8382c26f-0628-42cb-a949-0963a101e1c5", "9201d773-7d2a-4936-86dc-45035de33c55", "79f085e5-394b-4dba-aec3-3ae8a79e1ee4", "2bc903d3-fa6e-4bca-a88b-b3eeb2e2c364", "75f2a322-9727-4846-85a4-dc3c5c33e1bf", "407db819-f720-4ade-b04b-75271b84863c"],
                'is_shop_specified' => FALSE,
                'min_amount' => 1515,
                'usage_limit' => 4746,
                'code' => "QLdcCtKx7K",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-09-19T15:29:22.000000+09:00",
                'display_starts_at' => "2023-01-03T15:43:05.000000+09:00",
                'ends_at' => "2022-01-23T13:09:30.000000+09:00",
                'starts_at' => "2022-07-30T12:48:42.000000+09:00",
                'discount_upper_limit' => 8896,
                'description' => "0vvr1srlYxdi8rrr5tRrXh5SUo7k0mOwJY5JBfdn57R4gRNf3ZHfqp7aOuMyMf88FGSwAKSgC5vs06nwrumeJ9oOcpV7Tmx8XmAJjSmPPHA4",
                'name' => "fVuNYkSpF8x1Zl9ta2yRgorVVRIvm10Uf8QSqOxlW38iaYspwe2mhv9GiiYXWMNkIcCA8sYkxYlgV8IKlfZ67qDa0kIE0zQnbcjzXO1WpY6XJA2Iv9bp45cFj"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon34()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_percentage' => 3822.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon35()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_percentage' => 6173.0,
                'name' => "kMqORY54rucTfR1"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon36()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_percentage' => 103.0,
                'description' => "CCJzDLS3NRT9D1pnjqBWyAH4RZv8Z4bS9g0C4R5H1O1qKN6zmiw7fL7o62qTI6J48v86aDZJt6LBtVfaTnaKySZPjuPmBD0kWQrcNcZSrfA9fb0gZWIeDbva8zlFa",
                'name' => "4N5EnMTMSDeg2cy5Vws4E3p5E2XtN7VljNqf85zSC9VJJD9jmV0RDAlJWaXEiRnxjYJUbHcBy5XkflVMPRQKNqYaqXzAxdf3uxAji"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon37()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_percentage' => 9415.0,
                'discount_upper_limit' => 7861,
                'description' => "YIcgPeKCBBfIabMZxBHF0AjtrNC1byjnMyGs5etx221WMuMHm",
                'name' => "t1IABrr1EJi2hsjcI6aLiDc3kIQAetPHTHQEeiCSmUd5jeLa5J4jZ7wPjohmy0SGY38wDkB2d7IxwEHZaHX7cVhcTqXCWsrlifZiaHd4i1B88z4yK5DGTKback"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon38()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_percentage' => 8894.0,
                'starts_at' => "2022-02-08T17:17:00.000000+09:00",
                'discount_upper_limit' => 3789,
                'description' => "CIxfnpBeo8ZlCKZc1wVvYWr6ZbmlUZ3UClOtecIZSr5ng3YSXhyKeDCaB1c59NnSkkgsxSq4giElgu8kq7T",
                'name' => "xeLxyoHSmtu8oTtOS5QroRetwpgtEIYzxrh2wA4sGfPnzxgxI3"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon39()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_percentage' => 6870.0,
                'ends_at' => "2022-01-22T22:05:00.000000+09:00",
                'starts_at' => "2020-12-28T05:41:08.000000+09:00",
                'discount_upper_limit' => 319,
                'description' => "cMImkcwHSWBM177XDqOpfVsN1g6G5cfku9Wckj6dVPfefzfunWr7KF8YzrfhNriFAlPqLDst6eKmO69rZMEnuADP1FpuNizCuCQymSvW7O2V2L0TSRBnCz43MmDPHvOjkY4ygGQABG9WXK34y43MIDxzwzDOt3V1VZVABKvnjfTYT9J3yzyAxqPWbFPHgDBS1tPLRNHBe4qyOjNZ91ZxA8aplCMRCWxt79pGW9NaFhK18fbtU0lmih",
                'name' => "ChfXC6zhxr8pyzrjtrbMoCR4MXv1ZbgChzgvUFyXpxZq9nFapgztN2UO7Wj"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon40()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_percentage' => 114.0,
                'display_starts_at' => "2020-07-18T23:30:33.000000+09:00",
                'ends_at' => "2021-12-06T09:35:11.000000+09:00",
                'starts_at' => "2021-06-11T03:35:20.000000+09:00",
                'discount_upper_limit' => 2183,
                'description' => "OXMrcI9ZvrbPa4",
                'name' => "XLaLlrKbYn68mdcg7S4LNlfTZa7BExot6PmDhHwy1EtL2iUsSLFvCZOV4IBnCyKvOnxUjbbOynC6ChHmejFgMl"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon41()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_percentage' => 5004.0,
                'display_ends_at' => "2021-04-01T02:07:24.000000+09:00",
                'display_starts_at' => "2022-09-13T14:16:55.000000+09:00",
                'ends_at' => "2022-07-09T19:46:14.000000+09:00",
                'starts_at' => "2023-06-01T19:42:00.000000+09:00",
                'discount_upper_limit' => 7831,
                'description' => "IK84bCJrAsDrTyc2TByPG4H9weKqeOyV",
                'name' => "bKnX4r0FVLFTeG4CJF9zNVV4rlSQaG46JGi6"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon42()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_percentage' => 1047.0,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-04-19T03:13:06.000000+09:00",
                'display_starts_at' => "2020-01-01T12:39:26.000000+09:00",
                'ends_at' => "2020-12-04T05:26:27.000000+09:00",
                'starts_at' => "2023-07-27T04:24:36.000000+09:00",
                'discount_upper_limit' => 6100,
                'description' => "Q06ilrH4j5pjLSWMQuOKWTJj8qgUQwwmCJ0rKSVEzsI1kKADZbTDmZBz0fZHQ59gS7miOdniGTqkVaM6I3H4RfCnS3cXYjmw0IUIIcrm9AdrznbAyde01FkCYmCIv",
                'name' => "dtGH8vwOId71n2jmmSvjIV6vDP2uai2CMCme5qsh39fXpiVnEHGKeK2hE"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon43()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_percentage' => 5169.0,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-01-29T00:46:34.000000+09:00",
                'display_starts_at' => "2021-11-15T09:57:19.000000+09:00",
                'ends_at' => "2020-09-03T03:21:16.000000+09:00",
                'starts_at' => "2022-04-29T22:10:32.000000+09:00",
                'discount_upper_limit' => 4206,
                'description' => "95yVb6k68Rq49KKsWBPQBfKDthcCOapHG95KxvoqMq7imm5ixuSEg2dBv9DOKhTWxYjqGWo8J2HECUgmUmBXnyGC6cqAwxAxJABw3kvxCsBcK4imSbi15WIGWBXFnQDVs8kNxJRxTQt7YdkmdZuoMvJybYeEujSpG1YLNVAWdYnEAU3MDbgkVEoIslcwRIxm",
                'name' => "jYrKxEE7ZmDbTdHM1lAg6J1xNDSi4EPEkG2RwF94xn3B4cLN1nrJugkjc3f2VUOnVsL57Hy"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon44()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_percentage' => 3517.0,
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-07-18T17:34:05.000000+09:00",
                'display_starts_at' => "2022-12-03T00:30:43.000000+09:00",
                'ends_at' => "2021-09-16T10:26:22.000000+09:00",
                'starts_at' => "2021-06-07T07:40:28.000000+09:00",
                'discount_upper_limit' => 8867,
                'description' => "5UDY8Iym9fSxoQzOp9QvotywpGIpGTKulL9VTKJAHCZVqUuCPjTOGtp3rxetAd8zQvaVOcI7vc7YwBWPYsgoZ1PgLHU1jpHEO11CYVvBXaG8FnjzDjs",
                'name' => "fz0OVtzhoYkWVW1ZYGlMwzllQUwAah9qc5tlrhKKKgH6VokpAY5oIfsUKpaLpogdyoNadv8mbogf4SW3QR9i6zSGS6Esw9fYElmkOHrCrSct"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon45()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_percentage' => 3520.0,
                'code' => "thgSJ",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-11-07T06:05:19.000000+09:00",
                'display_starts_at' => "2023-08-08T23:35:27.000000+09:00",
                'ends_at' => "2020-07-15T21:17:33.000000+09:00",
                'starts_at' => "2022-01-11T21:42:37.000000+09:00",
                'discount_upper_limit' => 2787,
                'description' => "N2OOKftfgyYAHUvC91RN65TXW40wN4SoWPnEXcx5ZbIR0U2qej327NJQMrPE3ncRThEpoI5WA3NtAYcgOJLi3r1N38nVMFKuLJ1q2FRYM2LxVlhWjifmh8AER93jrQc2VrSYM3xuvU54Qry4oUrHXSGH3AJW3JWLfFslKlolGv27RB7eOwX2DzusN6G8O35Spd6Pw8o3EmgKDHC1hjdWQLI9tXMf7k",
                'name' => "6E5o3hMGSHBYwAT8CX6CJhotmz6PPib8rNmzMF8NY"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon46()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_percentage' => 9701.0,
                'usage_limit' => 4295,
                'code' => "V1FIOvv",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-05-02T07:13:22.000000+09:00",
                'display_starts_at' => "2023-08-27T20:30:30.000000+09:00",
                'ends_at' => "2023-01-05T15:53:20.000000+09:00",
                'starts_at' => "2023-09-16T11:37:40.000000+09:00",
                'discount_upper_limit' => 7852,
                'description' => "ngqcpUPwdjHbLGQmmJkDZmP2rXjlx1xFXOIthtok",
                'name' => "Nbe0VhnJx3t65lmOjW73dq6tqkicMdffkV3xX7D8jEUL6S59raxC3GtgWzvGOYV3MlE2tvy7PTHRQ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon47()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_percentage' => 608.0,
                'min_amount' => 6921,
                'usage_limit' => 6031,
                'code' => "1a",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-09-14T05:17:38.000000+09:00",
                'display_starts_at' => "2022-05-10T07:31:24.000000+09:00",
                'ends_at' => "2020-10-30T08:21:37.000000+09:00",
                'starts_at' => "2021-05-01T20:46:01.000000+09:00",
                'discount_upper_limit' => 2061,
                'description' => "f8P6qdxrgyA5RUS6BOWulMPaaTqKsjEd8OKTnVCfo5FOaVOOu76HYotcJPO5YkZbNnkCpqBD1QUZp4reb3lfaSCWfnExlC1LUrPOIdvOcm2U1YDI6OXeTQtNHdWP6JTf9iiCYsYQPcXqDXlgtzlwgLDl3DZHpCYPvVmX2slOoqCTMx3AS5q4eWLBiDpNmufljD8g6aWVL2CdoAcz8z",
                'name' => "Zn"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon48()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_percentage' => 9176.0,
                'is_shop_specified' => FALSE,
                'min_amount' => 3984,
                'usage_limit' => 3386,
                'code' => "YVunPx9rg",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-04-09T11:32:15.000000+09:00",
                'display_starts_at' => "2022-05-05T18:42:09.000000+09:00",
                'ends_at' => "2023-12-20T04:04:56.000000+09:00",
                'starts_at' => "2021-08-10T12:38:44.000000+09:00",
                'discount_upper_limit' => 4266,
                'description' => "YNulfYJthXdleYRDdUiTEJDv4UAuvpC1fHyfSAzXe4GaqGznBVTPHL6QDB2nkn41FUwPl6mFgNamDkrs2s0dXiymgsyOzmHQemo2qvqbxbJj2ISrg7bNSBLXJEL1bjjasbjfR3W8ZYTk4",
                'name' => "KUp7KPMfnhYRqVBYOhSNnql315doLty8SPEa2i1prtkneRjKkySriDGS6qr2xf5OvcQCkSTWKic3Q9oRecwLrC4"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon49()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_percentage' => 2711.0,
                'available_shop_ids' => ["7ae3db9d-8006-4c86-b0cd-df060935cb25", "d7954054-aa06-4b5f-9019-9c17e7e6a4b9", "ef3c633c-aef9-4da0-8fe6-2f25f2a4922f", "e06f3801-b97d-4bfb-bcf5-fa3c0b5bee13", "90c90ff7-e139-4a39-9896-bdef8253ee65", "c1a91605-73bc-47ef-95ba-8b1e9eb8938b", "1adbb0a8-2c41-4110-9cc8-2198f52fa70c", "d02eaaa2-7798-4130-bcfa-b901ff951e80", "2e80063f-9a38-4e48-aa0d-a60c8e855eaa", "31e4a5c7-be20-4257-bf09-ad6871a4f051"],
                'is_shop_specified' => FALSE,
                'min_amount' => 5346,
                'usage_limit' => 8832,
                'code' => "1dKx3jDq",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-09-03T12:13:03.000000+09:00",
                'display_starts_at' => "2020-07-21T10:38:28.000000+09:00",
                'ends_at' => "2020-03-25T00:45:35.000000+09:00",
                'starts_at' => "2023-07-29T08:08:38.000000+09:00",
                'discount_upper_limit' => 96,
                'description' => "AgZZtcqHeQQCAtAAhYmeXQ8gI4JmU7pn",
                'name' => "6t1YP35fHhrAH6weRMviuwAns3bMVlGhgDQknHXxyAVCiQKMY02nYyEt"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon50()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "a69b76f3-c979-47c2-9724-9366b966bd30",
            [
                'discount_percentage' => 8378.0,
                'storage_id' => "ce3c6e2a-536a-4ce1-a731-4faa288354f0",
                'available_shop_ids' => ["9e87c8f0-d40b-41a3-ad95-8ec4017ea84c", "11f55326-3810-4ee0-881f-735e6314e207", "1c550479-a853-4c45-9d37-45bcef0aeb0f", "5a1c7ebb-691d-454e-873c-e665063ad090", "8016a8c4-9682-4c8f-a52a-1b341452952f", "d7c2ff61-3e8e-443b-b018-5dfadfdaff7b", "bea05a16-80a1-4377-8565-7235c8d6fc0c", "def857f5-d740-4eed-a148-1d79fbfa5a0c", "b7d44d95-044b-42a1-b0f0-b6c369fbb70b"],
                'is_shop_specified' => TRUE,
                'min_amount' => 5250,
                'usage_limit' => 2754,
                'code' => "0V2Z",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-11-25T10:38:43.000000+09:00",
                'display_starts_at' => "2022-10-24T14:29:04.000000+09:00",
                'ends_at' => "2023-06-06T09:37:02.000000+09:00",
                'starts_at' => "2022-12-31T09:14:29.000000+09:00",
                'discount_upper_limit' => 2477,
                'description' => "TTbSMqRkKBh9lBRGNyHvc3Jsp3KnRy3kj0SOJcINPHMC8rXrkN7gNECbSAZsuUG8OTBGJ6IuyOavocE2HastJYp5vbGDsVolxGEGmKLeP7dpX0a00oPDirtG17DbsmBuIZK5sE6O7q4JWXWlzn2GS29FuzlQjh3OLIW0kkc58UZzC9pufiqyBz4Mzb6ccsA34X6",
                'name' => "5mATLrgDAFdoUE1G8l9qoyhcZojvZIzGMY"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
