<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class UpdateCoupon extends TestCase
{
    public function testUpdateCoupon0()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_amount' => 7248
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon1()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_amount' => 8890,
                'name' => "r68fP2A8RCqVjIMZulltZtj"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon2()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_amount' => 8983,
                'description' => "MfuDxn3QgsidEuf2NvBHeZX8hYKnrzJWptMhyWUi64YZbGeyCSFHt3mcrCB8tq8q2IVY2UPxEK8mwHnigIC2xteLEmOps6u4P22rjT4dupTBgLrwJlYmSqD3jh0KtoQaeaW3v7wYe7b9HTOawWBmOJlSRN9rogVZwJO2xNcltqUbvpNyoJI0vqJ8n0oUjQYsKaRMsrJUacY2rYQO4gmGHCfbUV5BkcqYiSNlDYC6",
                'name' => "MEWefziiHI3E"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon3()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_amount' => 9849,
                'discount_upper_limit' => 4095,
                'description' => "NpjwCPjAkzyY2kmUe2JJ53U3N6F0e26pbO3HttlG4eyiatMI7VF3dtugJSz1Q3vovXNsgFsW05W19aXuGVVRQlUVJv9CZ2ZsBhmJBENJ2Jp2",
                'name' => "LnPueitIaB8AWaFb8JKCZbl1FLUJSG0fudQ9bvTSzMBL1Qigyh82R8yfv5oZ1A8LucSTZwJytxSEpRfXYxFxMDsqe8"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon4()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_amount' => 3145,
                'starts_at' => "2024-10-02T04:32:20.000000Z",
                'discount_upper_limit' => 9077,
                'description' => "nWJGeGMfsCgwJoSsvq0p2vMuqT6yOdp5xmnGGOh83wD",
                'name' => "3YT1DlU5jqThl0v0LlAw1sxsypKPTUBVqh1Y1karSx9kbbfwykuboyLPrrY2btuxHx9YophvSLqEzRt6XTR3oDpLSu"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon5()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_amount' => 2979,
                'ends_at' => "2021-10-07T18:16:08.000000Z",
                'starts_at' => "2023-07-26T08:01:11.000000Z",
                'discount_upper_limit' => 9299,
                'description' => "p4IuNXEvAYv341undTljbWPhfpiwPMjupC65xVDnAJbsKD6b895iftqbY67Ut2zsAKH6lKT6gJXbaEKAddoUM0CRdaSDeoQ9lXXELG9oQdgpEse81VvpXr3HeuSevupI3Lg6cydG4CQY3zROLCcC3cDzGwCmJXHiF5C2aKJupg0Hph0EUCWBeCDLYnE6HiVXo",
                'name' => "G09ihrRj4aejWMyEn4Q3X3BDxBJJ5t6h3IPcBKQDcagEkitF8iACEva8PGaDArnv6"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon6()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_amount' => 4678,
                'display_starts_at' => "2022-05-09T13:55:20.000000Z",
                'ends_at' => "2022-06-10T09:45:46.000000Z",
                'starts_at' => "2023-10-23T17:45:14.000000Z",
                'discount_upper_limit' => 7814,
                'description' => "lpvEl0kBLWjk",
                'name' => "R0Mj5I3Hqz506kx1IdZKDkCNCl989Inr9h5bKrK2A0mcFTtdvdsEkzDVoxJr0lAnMovt"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon7()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_amount' => 9039,
                'display_ends_at' => "2023-10-05T17:36:26.000000Z",
                'display_starts_at' => "2025-01-25T12:32:46.000000Z",
                'ends_at' => "2021-02-21T21:20:32.000000Z",
                'starts_at' => "2025-06-19T08:02:08.000000Z",
                'discount_upper_limit' => 4698,
                'description' => "68JstsOcxw5PoatcF0TU5W5omYIqjFLKdIYieVX7m2aCCypluKCuWAlkVHsDkHFJ",
                'name' => "vihW5VcQOv2mc2ISnCuuu6HEZICTUsFd55cysKpzPw06buTFvYo4vEubGw6jVHah"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon8()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_amount' => 8099,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-03-10T15:06:45.000000Z",
                'display_starts_at' => "2022-08-08T23:08:26.000000Z",
                'ends_at' => "2025-04-25T10:19:15.000000Z",
                'starts_at' => "2023-03-05T12:27:58.000000Z",
                'discount_upper_limit' => 1657,
                'description' => "qoWcQPdnYsCcbQIY2KFXsspdkpVkTBJa3OTrsXs88kJNoIZazm0lWPTZ7efHVp4Du6bqVzq0H9hNDIpWOGRlL4QDCIWrLzYwdZH6RYisLngmui2yyfAvCUPPfC6gPSyCFjnlF5wS89FXtStGksuJSc3uI6YbNMb4YSuPWKo7xO0kav9UABs7zcSSckrHrP7zrKa6Deu24AbEENpv2",
                'name' => "R4vcFbZYPGyrsGLqJFlRMGfDCisIe5qHDsMdG7wbTKEpXzySqqc4sXPad6xuwUqi64YRTYtsOeEN9XbwlgwBy5OkIYkbdAf4PBqh2Y5zV0C85V"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon9()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_amount' => 7951,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-08-25T05:17:15.000000Z",
                'display_starts_at' => "2024-11-27T19:18:04.000000Z",
                'ends_at' => "2021-10-01T02:42:58.000000Z",
                'starts_at' => "2024-06-25T00:40:49.000000Z",
                'discount_upper_limit' => 6248,
                'description' => "JKp8EeWwIbRZU73CECtq6YH4jkVjZI7iaSuegvmESb5ZkkQma0HXRKUqv4lzkwZFtSWx4aRECgS2Rzs2ylIq5ZtrGXVCQUhbREfojZVoiIjURbvF5cuoy",
                'name' => "A3tbiunsY6SNRraYwc8QDfAEfV4F8XUQw7FOCvHUkEBp2LxsthHBe9EWUoT5QLe9Yg2CBY3rucfBues6uHoyn0kY9tu08AkjC0WPKbQvYow9FaOH3zD7SQm"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon10()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_amount' => 8914,
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-04-15T08:33:57.000000Z",
                'display_starts_at' => "2024-11-20T12:30:49.000000Z",
                'ends_at' => "2023-12-12T01:24:30.000000Z",
                'starts_at' => "2022-09-13T16:43:57.000000Z",
                'discount_upper_limit' => 4234,
                'description' => "pGLgUAKK4AYXStTHGYGCT6FSvry2ciGzpWdg5yn158N5eaT1YQUtPEMBFK5RCvbOFISTKPBIbnB4IlVfzKQeAZtwqv4AGYkQ5YWzuO0mrMzlLTVYxU13omHKmdh2ng7xlmB0D7qlC",
                'name' => "lsr3peE1RPsdDZEoaT5osfv5Au45ikmQzjXEIrL5tEVsPccc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon11()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_amount' => 8718,
                'code' => "qGzpCuGxgj",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2024-08-31T01:29:06.000000Z",
                'display_starts_at' => "2022-09-05T23:52:33.000000Z",
                'ends_at' => "2023-08-11T08:35:11.000000Z",
                'starts_at' => "2024-11-05T03:45:03.000000Z",
                'discount_upper_limit' => 4846,
                'description' => "Fm6nBFTBcp5MgKi6djde9q9Gx06zspIhW3gmaN6JcrvmX5G7cBGoNqTURH3hLLIVR7YcRrTeQOsLdvK2PUyIdpshyxjFJxJ7Fcj7Ywb40WRFS5iP8DHnWS95dKYCDWjMDqXUFGoRA4XvfiL62Wv2vl8qJafcwBDpLTRN1a0lar5cvmWk6HP3Edv56q9t5VGuIJJqB",
                'name' => "hC6IgJljp1y8KOJgfu4WFT3sPLKGiMRgfz5jiMdvRW63Z9043h9S"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon12()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_amount' => 9267,
                'usage_limit' => 5310,
                'code' => "fTD5o4Kn6T",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-12-01T13:27:45.000000Z",
                'display_starts_at' => "2024-12-07T05:23:01.000000Z",
                'ends_at' => "2020-04-22T23:26:11.000000Z",
                'starts_at' => "2022-01-04T04:06:32.000000Z",
                'discount_upper_limit' => 1593,
                'description' => "tmnNiOZyV9AO3DnB1YRES4xlc6449ibwy8gDnWqdIP3eIh1PycrJFKeRKa6OogwkyZYeik5qw2qVOD7lJwoEqJ4uimGtF4vDevDABoV1497oKjyplKXUyjuZoAdZaiUShsjoKemD9IJVji3EhQ10nakJ4Xx7BosawhL51XW0ltZ8tyBqdUl09HCPEoMCgQwCdLCVxkfS7LC09h1a33P4feIw8r",
                'name' => "kq1IJcIVXzbXoLITUciADNRcm8cr7h7uvpVmJgh2hspBOtxaFVpQwu69vaYb020lVhpK1ujAV4SIGQk"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon13()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_amount' => 4048,
                'min_amount' => 131,
                'usage_limit' => 2541,
                'code' => "a5YJsZS",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-07-21T07:30:15.000000Z",
                'display_starts_at' => "2024-03-14T20:57:01.000000Z",
                'ends_at' => "2023-12-04T07:25:10.000000Z",
                'starts_at' => "2025-03-30T19:49:09.000000Z",
                'discount_upper_limit' => 6984,
                'description' => "hKFZRjFJsBJwxE5ymHkkfvwj75uGxXyxLiKvyAHQ0Cmh0GR2i",
                'name' => "pQgbrTS2HEffP70DHCUohTMu269OO6DIw88je3Px2M6UQ20lAXsAZIDxFXqpctZUoXMEwvfZIhfCcdW"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon14()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_amount' => 9985,
                'is_shop_specified' => FALSE,
                'min_amount' => 9298,
                'usage_limit' => 4612,
                'code' => "KBpAMRk3",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2025-06-10T02:37:08.000000Z",
                'display_starts_at' => "2022-09-12T07:05:29.000000Z",
                'ends_at' => "2023-03-17T01:41:53.000000Z",
                'starts_at' => "2023-09-16T22:14:00.000000Z",
                'discount_upper_limit' => 8357,
                'description' => "Dvn680BNVo61whu52VEWHzeXnCqnnjKe2ZokcQxt9okwN5c4Mkgq5YYKEEntoCEiLAHJ2sW9FitjutUJJsIkCXGENUTkzcX2ykkKJlN107OaiUpqdHMS0BnQNQ8yntRPdiO7nDWAmmXsETvex6EwUtMqxtCSMEZWLR3IYMZqZQp71KYV2dqAhSRH0jBaTj6CKr7da3Hc5",
                'name' => "MrDSrYQmTFD8MK4Lhw"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon15()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_amount' => 9289,
                'available_shop_ids' => ["80f0cc6c-a161-41e4-9fcb-23c591b787ee", "94e2f67b-5fff-408e-aa0e-0cd5c94684c3", "589cc60b-90d5-42ab-bec2-ee4da3320c54"],
                'is_shop_specified' => FALSE,
                'min_amount' => 827,
                'usage_limit' => 296,
                'code' => "jSLXQWZdq",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-11-22T17:54:04.000000Z",
                'display_starts_at' => "2022-03-02T17:26:50.000000Z",
                'ends_at' => "2024-10-18T21:58:25.000000Z",
                'starts_at' => "2022-09-19T19:08:56.000000Z",
                'discount_upper_limit' => 4130,
                'description' => "OS9NchMxuvMOV5pE0ThIcNVnpd1n04",
                'name' => "FvafoOT5XflXygJfyBJl1"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon16()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_amount' => 8735,
                'storage_id' => "51dcde96-2486-40a7-ae94-ca77aa5bfd8a",
                'available_shop_ids' => ["97858073-b988-41be-b6ce-0965051a3219", "fad97f93-160a-4788-bdb3-64863977df5e", "4d2ae353-c7b7-4be0-866b-2ae4f04299af", "a82559f0-bac8-4daf-9326-08173d5790ec", "7465480c-b515-4511-8ade-b219c99b57e9"],
                'is_shop_specified' => FALSE,
                'min_amount' => 838,
                'usage_limit' => 6051,
                'code' => "f9vj51i",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-09-27T00:12:25.000000Z",
                'display_starts_at' => "2023-09-17T02:04:37.000000Z",
                'ends_at' => "2020-09-20T10:14:14.000000Z",
                'starts_at' => "2021-02-01T18:35:10.000000Z",
                'discount_upper_limit' => 8834,
                'description' => "kai7fMidPllBkchJ2ELHNBkuEPtWGn6U1tknXv7iBjpuz8kXfTQVtq7nYSMGg6A5q48d0VvhbqvZRxaI0AVDH5phIrM988xOpACBuWehCLI5Ithzpo1sbw0fi8Tfl4MiezYuuDN5NO2HkiJUlQ4dKgR3uo3pyHQKCLEzAV2HW0T6wtgFowhjkpuax7inTCKJlAlkDX0z9k4WtlP60t1pGDCB7WpLio",
                'name' => "RLUylhwp3jBXylmnz"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon17()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_amount' => 646,
                'discount_percentage' => 9684.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon18()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_amount' => 9945,
                'discount_percentage' => 2129.0,
                'name' => "PT"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon19()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_amount' => 2769,
                'discount_percentage' => 4924.0,
                'description' => "EDpiIl88uXhFr9tzNaCFLhrW7Qg63LOoyDRk2frbKYDtHXRSpeSviFk4W1qsOLMcNwe8KEeqmGGreSt4nt1ybC0Ywm3a7y1jkUDzYlQVb",
                'name' => "nnRBBQRDsGnvgO2bodBPeKpRFsQIEwGMkEBFs4OKbpkXgOJ3P1nM9riBWugVW8sRaEhx8aJkSJHuUfzU3cxqLS"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon20()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_amount' => 1095,
                'discount_percentage' => 339.0,
                'discount_upper_limit' => 2271,
                'description' => "aP0CNMNfb6VowWUVfzovzP7VL5ebcijLtVhmlM6kBu7DCNg4aU7Bl",
                'name' => "WsNECFWA4hHlvtcjGtIPadSKiVX8t6IuP7AfSh1iSdno"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon21()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_amount' => 4461,
                'discount_percentage' => 2723.0,
                'starts_at' => "2020-11-26T20:15:19.000000Z",
                'discount_upper_limit' => 7587,
                'description' => "lXA8y2v",
                'name' => "wAsTNYaeLyV7CWdrmk"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon22()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_amount' => 7060,
                'discount_percentage' => 1975.0,
                'ends_at' => "2022-06-26T23:06:42.000000Z",
                'starts_at' => "2025-04-17T02:09:08.000000Z",
                'discount_upper_limit' => 7201,
                'description' => "yx2nAdRh4U2Gnj6HilrfsKlPIExrXeCFOu5KxrV4xhz7DzBywKIciMlN0S7L0N0uBHj0xIlmI7crwjgiJmBq8x2BMoiejWmPY8qwKCFWRUhTWJtrSHM5KvGCx3jvLeQXqJ7fOtRApW564YK0LvLN69VHlYJhXH6cUQL7XLfiXA0zUZ8WIiKSeWU9z6lAbD3wpFlmsWusC8RGaBKUJdHLf9kwaxRbmzAo5vzrqC43kvR5VzS4JSx7Qk5qYm8EJV1",
                'name' => "y6vGk0FuWZ3ptkSyNBcc9paWacdvlF8sKq6M8TMch0t9MLsXgvG8EYKbsPpBkO0z5h9"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon23()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_amount' => 3552,
                'discount_percentage' => 6207.0,
                'display_starts_at' => "2025-01-25T07:10:06.000000Z",
                'ends_at' => "2025-03-11T06:00:19.000000Z",
                'starts_at' => "2022-03-12T22:06:07.000000Z",
                'discount_upper_limit' => 3388,
                'description' => "0rjGagOIQ6x9sSfu0zX8zdCniT7rbp4RdF8jzLLX07kGwmRZR89QJDyeQCnprhi7qh3KP4T37Wi9g9nZZhOiq9TM1kLnMOaPoayQ1SL4LwXctk2uyuazqzFpngLk90ZBFe71DIECbUav",
                'name' => "pCer6amUqWii2uDVrmTki6pqO0f8cnptMkBRjmpnnbeCg4xumOoxK0oT4F795unttA065Yr03Qzj1SYSblk7QSMdkkKPrtzfsCSKaR3OFn1WKJz5"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon24()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_amount' => 3718,
                'discount_percentage' => 411.0,
                'display_ends_at' => "2020-05-23T00:13:04.000000Z",
                'display_starts_at' => "2020-11-25T18:49:06.000000Z",
                'ends_at' => "2022-10-13T01:01:14.000000Z",
                'starts_at' => "2024-01-22T22:08:02.000000Z",
                'discount_upper_limit' => 7304,
                'description' => "CZgSERTDaoK9IqITw9RXh5VLaBXSS3EzsrMpj8GBIyJaRyweuGKy2nXN4UBPwGQ9mhvxLr7QQxCiR4LJ0VAGQ0LknXBVXV6IePzMvb8rIAKhBAUImOpB9NJd0FGb0jOdIa2VbV1E7pIBf60ZOpXb0uUTjEzrW5FEq",
                'name' => "VpVqu1DpFd0JaBsPBEjjxsN82R5bV74h6MclFLskpVJhF8OvhWGp3gT"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon25()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_amount' => 5026,
                'discount_percentage' => 8515.0,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-03-29T06:48:50.000000Z",
                'display_starts_at' => "2025-08-17T01:31:00.000000Z",
                'ends_at' => "2022-01-03T03:03:19.000000Z",
                'starts_at' => "2022-01-01T06:37:40.000000Z",
                'discount_upper_limit' => 8678,
                'description' => "Z8zWBqSC3vDIMcnooU2vsEkhFzbMP7H4x70jy8CyXSjsNQfhm4JdiSR8LU0sAxVpKo9Pr8tnCR4b3VVcnR7ySaTJSLXaRbjFaOCY9HY0faJMcRsZ3tfn14pqdpY2gO",
                'name' => "zxC2AMFcqtkzhdfPKiy9SERDVnpaYhOvVB8b8Y5rPTIoQafvlfkuyBchbjOVFfaAmwoPiUeFs2qGGZk77FXigkP"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon26()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_amount' => 888,
                'discount_percentage' => 817.0,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-12-29T22:28:41.000000Z",
                'display_starts_at' => "2021-08-16T12:19:15.000000Z",
                'ends_at' => "2025-09-21T17:55:55.000000Z",
                'starts_at' => "2022-06-20T23:39:23.000000Z",
                'discount_upper_limit' => 5175,
                'description' => "cdhHDyq2BmegmNcooOzsV0UAnFDq2j42XbKSjWX0mczdG92I3EQWa6MviKhzgN1WE1E9QE8I1WOtKGTOoDsggK2zVvIrNmjPyMt",
                'name' => "JZTknlcSLOAfgHki7iEUUEZsYB8I8w6YX9AjYRSoiU1BYQYTGkBMdZ9g"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon27()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_amount' => 4471,
                'discount_percentage' => 6528.0,
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-01-28T10:08:21.000000Z",
                'display_starts_at' => "2023-10-18T19:41:56.000000Z",
                'ends_at' => "2022-07-09T00:36:35.000000Z",
                'starts_at' => "2022-11-03T00:03:33.000000Z",
                'discount_upper_limit' => 4036,
                'description' => "eBSRiyqeameMaY0bgN8gTUkelv3hkGmk4iWQZAVafOlabiOcEnloh2DXft8ZR3ZIT5H8aSOl3MDXnG9yHqEAThwDuq1zewsMIx1hpzHiKxcCexEPrWNcD1BCJ2Q7A3yxMyBqUSnmfmyMf158jbodxUJxcIS6QwIFvAWCZsB1EYOxuNXsb8K4XyQ60l6nZCLpElUd6iH1X66E0nqB",
                'name' => "BGmKnZ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon28()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_amount' => 8671,
                'discount_percentage' => 4903.0,
                'code' => "6",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2024-04-13T06:27:16.000000Z",
                'display_starts_at' => "2024-03-29T06:39:30.000000Z",
                'ends_at' => "2020-07-18T22:13:32.000000Z",
                'starts_at' => "2025-06-28T09:08:31.000000Z",
                'discount_upper_limit' => 7918,
                'description' => "3",
                'name' => "iuFQrrgeXzyNXNrNkeWa9hW"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon29()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_amount' => 2675,
                'discount_percentage' => 1484.0,
                'usage_limit' => 5487,
                'code' => "6",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-08-01T12:04:56.000000Z",
                'display_starts_at' => "2024-03-26T08:53:20.000000Z",
                'ends_at' => "2021-11-17T01:29:16.000000Z",
                'starts_at' => "2024-09-05T23:12:18.000000Z",
                'discount_upper_limit' => 4352,
                'description' => "dmMatyD",
                'name' => "W12s5SKsd06fYHa9p"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon30()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_amount' => 8804,
                'discount_percentage' => 7125.0,
                'min_amount' => 8575,
                'usage_limit' => 7742,
                'code' => "D",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-02-25T13:47:48.000000Z",
                'display_starts_at' => "2022-09-28T08:12:08.000000Z",
                'ends_at' => "2025-03-02T15:09:01.000000Z",
                'starts_at' => "2021-03-18T17:19:28.000000Z",
                'discount_upper_limit' => 2642,
                'description' => "ln1g4q1AmzenaBAIYsPX5BE",
                'name' => "EkSwN7Jl7UfMqNeIWxDQ5mYkDBp76iPlz0WyF7I2Snzg812cd0lMhCHFE2kwBpeHriIaXxYmUfeD23BKTCZPKhR"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon31()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_amount' => 179,
                'discount_percentage' => 4779.0,
                'is_shop_specified' => FALSE,
                'min_amount' => 2802,
                'usage_limit' => 4402,
                'code' => "MS5",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-05-11T05:45:18.000000Z",
                'display_starts_at' => "2022-05-21T00:07:59.000000Z",
                'ends_at' => "2024-12-12T23:04:45.000000Z",
                'starts_at' => "2024-08-12T21:16:50.000000Z",
                'discount_upper_limit' => 2416,
                'description' => "eG29hBWbNKIGuoyWD3BHeU5bcdtREmG3PoPoUnVURoRDP0303M0EUzCR0XC7UBINwESq7hPy7a3F5MBC2C7VfANu3p62KDWO8TDrLXiDq8ZM4HpSJ7ezaoKVM6PG4nVxadlDXYh8F3jX5Rw62VEObOlMsiJRl1b2ESaJKCDCVaIjvXY9buv1PGDaqpx",
                'name' => "AcB7XJ2PMH0HA7mMCxlziaJ1nphI9ySRxw6pdyrj7YEb5BIbPwZWptKeWMAfjTzhjO10bQwyTU6ZUhr"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon32()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_amount' => 8850,
                'discount_percentage' => 3071.0,
                'available_shop_ids' => ["939d6507-7f99-4488-8a01-a9a02b633607"],
                'is_shop_specified' => TRUE,
                'min_amount' => 5902,
                'usage_limit' => 1422,
                'code' => "80a47LYIcD",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-08-02T00:07:21.000000Z",
                'display_starts_at' => "2024-09-05T15:59:04.000000Z",
                'ends_at' => "2024-04-13T10:47:36.000000Z",
                'starts_at' => "2022-01-15T05:11:05.000000Z",
                'discount_upper_limit' => 1785,
                'description' => "YwYbStQsIHShYuqMOfry8huKLaun9q8fRCMt2pzYekawpUouvYHKlj0GUL0Fcnz7fEngR6pF3m54VmwYrgFgT3RyUt1Kexb2ZIYN0",
                'name' => "8OgDDQYpUk9QvTpwbva3X3fUufQzzx2hzebS68SpNEGkfmS3Uyy5Zn41VzLK"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon33()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_amount' => 1037,
                'discount_percentage' => 401.0,
                'storage_id' => "3ac4c00c-d755-40e7-8784-5b3337e7397c",
                'available_shop_ids' => ["bd16f56f-b00f-436d-b1d9-d7a062624bce", "6ddd52e6-d9aa-400d-a5de-9ffddaae43e5", "59b603cb-5aef-43cc-a395-a164ddefeaa6", "9c4a8b83-9746-4c45-b848-15aa55abcb6d", "dab3cd3c-fcf4-41b9-9238-344292401bbc", "6c334b98-1b91-4bf6-b12a-e141b114b4db", "22bd014a-b773-4342-ba33-db6cca2a48b6"],
                'is_shop_specified' => FALSE,
                'min_amount' => 1081,
                'usage_limit' => 7481,
                'code' => "Q",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-05-09T11:58:30.000000Z",
                'display_starts_at' => "2025-04-22T23:27:16.000000Z",
                'ends_at' => "2020-10-23T07:03:33.000000Z",
                'starts_at' => "2023-09-02T01:28:05.000000Z",
                'discount_upper_limit' => 8946,
                'description' => "fIkmiU4i2bFcYt3zvnnQAgg6WKGNaTc3A08bOic61u1yVQPNCQEFIkbwhO9RJiR7mxn7kYGzShazSiZH6DDfNqfsVRi3zxzsVzVJLxpF9uCjOUSNMH9fWh27PiOpr3HMMXsb4Lh4b0Gko8iE0P3Cu0AOaTlKzyVFYYoK00aco",
                'name' => "lEqYYGWZUMgU5LJ8nedbEkL6VCbZlYCZFu0YjXrvick1kbCzvMElblaTUskxDWTi4syFdijX"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon34()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_percentage' => 7385.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon35()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_percentage' => 1498.0,
                'name' => "6Fkp0v2rObj5KP7CaX5R9O7hn"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon36()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_percentage' => 1999.0,
                'description' => "MfDj4u8or1Z5ajnFBytvfCWU5lvasIan6Df8qsq2k3ETquM3SQujWFDE153B47G8gAIFr9zY1ABG4Q6S1AZ81ee9F1zaeUGprRtPpZgZzOhvmvIjVKe7aM7QiN4LuTtB8ZF5mN9clYyKl8cUsYw8CW8rHVcmWZsjKlFT0f7did2pSfVDNNjekhaUaqNZOry7pQcwkQvvHfTZTUiaSB",
                'name' => "niTvgiF"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon37()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_percentage' => 2915.0,
                'discount_upper_limit' => 5152,
                'description' => "fXoobW27D2zSsjxSJQCC2TKE3m70u0i2E7e3WCog3HknLhb4mGHjaX24jJAlJFQ82MhyQQoipgFNSux0jeobdQD1",
                'name' => "VXjUggH7qMtHhSfZdXUyjb1NxKa8yAWf3eI4rn2GKxT8MfsHveV88627AlMJYf8M"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon38()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_percentage' => 201.0,
                'starts_at' => "2021-09-26T21:03:13.000000Z",
                'discount_upper_limit' => 348,
                'description' => "c9iCp3raZonaiDazAfoVN5ZcNoMxEFE11voG9m7gWIlidcsFhnnSlOPQSKVW980GqQVfPuvUPiEFV6mDyiAjmPC8FhIFplNkUQpOFZAAuAkdYYYV8q02r77ePIgPu4dPH7ImSF7bIQ97lNoNEqqi11P4GN23Eb6NlDd7BTwpYu4Valw5x",
                'name' => "iIJ7Q1Cipp2CPMRifbrHbdPk0z0U5np6zSSSsJChBCfGVrTTzFEA3cEkuniAENmbJtM74yoK3yNaovdjb7urlPondGWEfVzKMwihh3UCJATPnnGfbSAjt8y1LpRX9w"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon39()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_percentage' => 5565.0,
                'ends_at' => "2022-12-31T14:16:19.000000Z",
                'starts_at' => "2020-02-05T09:21:00.000000Z",
                'discount_upper_limit' => 3013,
                'description' => "SDM7H6DKpMVCMs6AqPF1N4VGIihJYcZH1yqyLKdrb7VdvBferrdPPsgFTBp21GVpuNthlN8cTNxtCl",
                'name' => "PPAh3ydu7juMaO7kqGjaASQkqyw2Q45pim16jWY8Li2yJ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon40()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_percentage' => 7541.0,
                'display_starts_at' => "2023-10-11T19:52:31.000000Z",
                'ends_at' => "2021-12-30T21:37:20.000000Z",
                'starts_at' => "2023-02-07T14:38:04.000000Z",
                'discount_upper_limit' => 9389,
                'description' => "C9WmiQzTAP0hsvYk94ECXfwyrT6FNWSeiPJDkaNGUUFy",
                'name' => "37fVBCxguWkgEaSRxikajDhky1e9"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon41()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_percentage' => 9165.0,
                'display_ends_at' => "2021-06-21T19:15:33.000000Z",
                'display_starts_at' => "2021-05-29T10:22:05.000000Z",
                'ends_at' => "2022-06-20T20:37:17.000000Z",
                'starts_at' => "2022-07-26T09:58:16.000000Z",
                'discount_upper_limit' => 9818,
                'description' => "9eEBDTjFI18oRpgCoDiEOfsuO3LMtzPm5pmHiztzTLcjSeNyveotr1SbLY9f9RM3h2SXQaAm6iMSYVoPQWfV62UhTGJS1L9KLOsA2Q2Z23Mwd98ipOldTUQCXPcZtLDZ6t1d7NhS3tIbiaQ9UqJHQZFkEmVia7WMZwoONY9mYcjUD3BWfN3hpObBbd0WPCuqh90wnUEefdvvGn56xgqcINC0Ma",
                'name' => "OVTzO"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon42()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_percentage' => 4825.0,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-03-19T03:59:17.000000Z",
                'display_starts_at' => "2025-01-01T20:29:33.000000Z",
                'ends_at' => "2021-03-25T08:47:13.000000Z",
                'starts_at' => "2021-10-26T19:22:34.000000Z",
                'discount_upper_limit' => 1436,
                'description' => "dS1dG4VhCAXdvLcusNkP92lEHAtBr5uMSg7mI2h9L5UgNjF9pGXPoR6V6EH9oG2E8mJwg74tJdyJ5Llab29gfUQ6hTQL306GhITMLHDmfb2965KcWooPsLAa0LofoeILq2j1JbokM11iel9SifEKQQKEl5jTOYEn550ChTMJy5Ri4zQipR66DYXbWwtCBK4yI7b7ruIn1DQefV0LKmn0D6u1aqXUgLXLPq",
                'name' => "2aRw08aQ0"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon43()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_percentage' => 7410.0,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-02-13T03:59:11.000000Z",
                'display_starts_at' => "2022-10-08T08:51:46.000000Z",
                'ends_at' => "2022-06-02T03:37:52.000000Z",
                'starts_at' => "2025-05-20T00:14:00.000000Z",
                'discount_upper_limit' => 831,
                'description' => "sccmXhG1yeE5aq4GKVSCfP0aoPIG5NuiBMU7rfLf6FhpORYw57l88LjJn33RIRSOmlXSQfzzTwn3Dxt4Xew7YzDaZ1J9OdsQM2IVUV93tsgTE0JEew3ek7732woVpaWAn4e207OnXy1NWRJfp7ZK3WimQaowti0F0S2aIOKkN5iwpVUwFU1amkd1FBZBysFgH8TiyAaF4dUSAbqyi68iyJ302sQl233vCftoqwC5tymvF1K2",
                'name' => "3X2uYu46ypSW9PxtiaID1SUCfz9yEelMoF9a26c2RLHzQWOO"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon44()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_percentage' => 9920.0,
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2025-06-15T09:04:43.000000Z",
                'display_starts_at' => "2023-02-05T13:50:39.000000Z",
                'ends_at' => "2025-06-19T21:12:18.000000Z",
                'starts_at' => "2024-10-04T16:44:28.000000Z",
                'discount_upper_limit' => 3982,
                'description' => "o0g8SXRzZ3pUKHHeXuuwg12Ygg3AsTOryINKyRmJ3gWCDcmsuvkMrJePtGFhv4aIw1aGtGR3fEQezBo8XnXONHGXDMcl8tuhVdB5KkP8PHvZEmmcBKkGsr9sdEDTBkey7pr4d2jpaf36YY6mrG9Y2ztoKUUUx5B1bSO8xEgnoe60dnWTC",
                'name' => "mm3x115QsBZT6dCGgqZsePkl6iY0bdXM6Nza2rTctUJQmh0gNd3qkWY4lVW5zCUF3zWzIdrHm6OsiyHBxsWBtx4"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon45()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_percentage' => 9655.0,
                'code' => "LViM",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-02-12T16:13:52.000000Z",
                'display_starts_at' => "2023-12-01T15:57:45.000000Z",
                'ends_at' => "2024-10-19T19:02:27.000000Z",
                'starts_at' => "2022-06-04T09:04:38.000000Z",
                'discount_upper_limit' => 5454,
                'description' => "zcDCX5bbsPzVUGeD2BWp2XUNEsAtEjlivj0NhalsavWYZduuXynvh05rJdAnnKPkjJzRbGyuQYyb8948tP6VkRaNaNdjmk2wkclkjGIdrGdF8qpLKYfd3JbJX5QcdKyJ1DmsToKu4w1tRUaP7awM87Mt7bWysOyzqkBrGaMjb1sugqjE",
                'name' => "eek3DeIDBfKsRBbYLkU2TfJXzuBqG"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon46()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_percentage' => 3879.0,
                'usage_limit' => 7741,
                'code' => "FPReFsmx",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-01-09T17:16:04.000000Z",
                'display_starts_at' => "2023-05-03T19:23:01.000000Z",
                'ends_at' => "2021-05-22T01:47:36.000000Z",
                'starts_at' => "2021-03-04T18:00:14.000000Z",
                'discount_upper_limit' => 6488,
                'description' => "wuc649dznjsqwxML0aHpiMuF",
                'name' => "L917lUTrE8EACTMWkW53gnqE0TT1OD00WYy85d5RKAlbrPQ0st0t7yJcv8GqBqgGEHafl1jNP9k7uydClg9A7an27PrVxBqiE9YWo8xjmzBGJVwTTanAXyFjLag3g"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon47()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_percentage' => 8456.0,
                'min_amount' => 2768,
                'usage_limit' => 9997,
                'code' => "lq0FFnt",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-08-03T15:44:25.000000Z",
                'display_starts_at' => "2025-07-25T06:03:24.000000Z",
                'ends_at' => "2021-02-11T01:09:05.000000Z",
                'starts_at' => "2021-06-21T05:24:34.000000Z",
                'discount_upper_limit' => 417,
                'description' => "0p27NPGQTdAXKNGuLNgDO4Ma1ptA22IkyjkgPuZUMAq2NjJocNYKTrm2m1ssPqyT3XyCFCrR8uZnHFgU1ZOwuoeukDxIIOg9CcbCgtxt4qQAP06TDLYKBc2zPf6wToG8lTKcMPiFJX3LNKTomMc8wnROYRP673oHx5",
                'name' => "3DOO7AdxANDE2ea2N2bsCqxQkk2AG5TTqX05IlCZ5tUdSwXVRIVCnlZj6NtOwX2FI8Wr1369uaTF42a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon48()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_percentage' => 2914.0,
                'is_shop_specified' => FALSE,
                'min_amount' => 5095,
                'usage_limit' => 9999,
                'code' => "mtEHAWzKV",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-01-17T20:32:49.000000Z",
                'display_starts_at' => "2021-12-31T01:50:06.000000Z",
                'ends_at' => "2024-08-08T04:23:16.000000Z",
                'starts_at' => "2024-02-10T13:15:36.000000Z",
                'discount_upper_limit' => 1537,
                'description' => "1Q1Fha0o1JxRbdO7sJMkOiIt9zNKCX0VzisXLLiEpULitiIsW57odiOHhS8DsZfAQRFK6oTTeP8tTTuInowX2TMHi2vDKbmu8",
                'name' => "aUF4jypKaAY4yQaiw0JpUpNfjrUKaUCU4cuncfOgZgC0vnz9vdHX3zI"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon49()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_percentage' => 1485.0,
                'available_shop_ids' => ["f56c82e0-c87b-4a1a-b900-7e5049d1518d", "3eb4937e-9f4f-400c-844b-8e05115c5a55", "6beaf601-d480-4a9a-872b-e58a4a8ce071", "ab1ee887-7a3f-416b-b209-fcd8b4f25384", "47b867dd-8ba3-457d-b49b-b14116dd65e5", "a2d4d4cc-e46d-483e-85be-832da1e388d2", "39e2cb71-2584-4600-98dc-ccb5387e0b16"],
                'is_shop_specified' => FALSE,
                'min_amount' => 2018,
                'usage_limit' => 1453,
                'code' => "DROtzb2h",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2024-07-27T08:36:25.000000Z",
                'display_starts_at' => "2021-09-30T05:43:01.000000Z",
                'ends_at' => "2022-10-21T07:22:43.000000Z",
                'starts_at' => "2025-01-04T01:40:17.000000Z",
                'discount_upper_limit' => 6393,
                'description' => "QXA4kt1s5IzgftNOCeiOWbpouk4VaYSYsK",
                'name' => "6oU3L46cfTNsJ74FdhPrGorQztiuURWZ5r1OnryKkdpmMzmoITgipjScgSjEKEvn9tkKJsfEeEirDJBvMOLUpWvpk"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon50()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "694d5520-76fe-4c3f-aaac-0966b2ebfd3d",
            [
                'discount_percentage' => 6886.0,
                'storage_id' => "17b33c84-f761-4042-b741-021b21b38cc8",
                'available_shop_ids' => ["9b381b05-e50e-4b0a-b59f-ca675200137f", "f7f81e62-b7a9-4397-a0ca-29b17f3a893a"],
                'is_shop_specified' => FALSE,
                'min_amount' => 4503,
                'usage_limit' => 9296,
                'code' => "mdwaTBcNwq",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-06-12T06:57:22.000000Z",
                'display_starts_at' => "2024-10-29T03:32:45.000000Z",
                'ends_at' => "2025-02-13T06:48:35.000000Z",
                'starts_at' => "2023-09-13T09:54:16.000000Z",
                'discount_upper_limit' => 1555,
                'description' => "6a6zzUqrHdosHdbmLywqukvEUDGTtuu5mLHhGQ9yekqoyNLKN2h7BNq3rRMob2yqEgXsKX0DNjA5LloLW2ZGwTADg0EGo2tY0BvAArU4c3Hcr3rYtMZs1YhEQlphw1DkmThPoIdPA7X1r8JTPyIk7mw82VAIRkHcNMgqN77FQwuiGtQW4p",
                'name' => "FSkfz0ZAYuHKErS89ga8rAwXpAiqwTxt1HL4wWzmkMDA4SVfWD13Zj3L9DQPYajb0tVdWEdtL2ujHbA770c9iXi2Q1VWdznJovLhT0BrHHw3tEd"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
