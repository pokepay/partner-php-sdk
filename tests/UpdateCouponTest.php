<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class UpdateCoupon extends TestCase
{
    public function testUpdateCoupon0()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_amount' => 697
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon1()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_amount' => 4559,
                'name' => "snmpHLLi1CLeav7RfSWvnWCk6lkUGEVirZfwlls9i1MODwYgXmbMkfST1Ryu1bJq0ALWoHeWp70sXvtoF8gIyPhayIAOKlA1uXyO"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon2()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_amount' => 654,
                'description' => "06dMam0oUdff3XDMiKRbUemdTF5q0Cmdwk8eWynr3TXtTROgW1pJRF6PPk1rtXJepIjYhjT",
                'name' => "cFPoQA4fTtcTDJjERkmiTdE4xZpjkN6UTU6IG0baBabpNPPoYeioO6O1fEFMsqvKHirHQNnqQOUZs5W3I"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon3()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_amount' => 1211,
                'discount_upper_limit' => 3999,
                'description' => "T9tWWulUfkr2xcBT8wa4a6BtiJiYICkHE1Fc1Px84HcFDt7W0ndjPnQj8USvUdp6i2bvc5XR6e5CAdwnBwPmVeusFVpwoLaQEhimxJviEnDS9dKoG2nIkCkKRCjbzbVJSNG4G5ijkdhTqRIVaZVcUjU81sIpbmmazZF4OE7n92jpPkSzX12X0eAHqvZhMpAJs05ZgAUM10bWvMGEW0DwTrcJOkBn3GFpOPT13rKHnyP4OPbGd",
                'name' => "FWC6rg3QrikO6xwFNsSu"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon4()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_amount' => 5983,
                'starts_at' => "2022-12-07T22:52:39.000000+09:00",
                'discount_upper_limit' => 2912,
                'description' => "EfsiKLChMGWRONmq7mNSX0n5gY26HbYZUfZWHCr",
                'name' => "eOuVf0WeN3Rq3dTc9f11Ehhdsie59iVM8vsbOUV7ohvsU0PuL2BWxIHAacZs1L"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon5()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_amount' => 3119,
                'ends_at' => "2020-08-06T15:41:36.000000+09:00",
                'starts_at' => "2020-08-22T02:04:01.000000+09:00",
                'discount_upper_limit' => 9590,
                'description' => "NafdQLMzzcDvqOc5RL0UySf8LprpZI0ZNMPNR4M642KiKEiVdJa1mwQcAGHzljzaHtJcQiHcuk0m2lUNdrMPwYeRXWt89HIHld6LuUqdY0Je671Si2Rm14gHnTy6tIpspcCCUbIE2YRZNsWDkdLQevyota1CKadESK1JPd46HJt8HytSRgqB0OYKSMJHOVd8Sn23ev5vG4yvNd8RDf3R64SVkN8TcK2",
                'name' => "1EX6bmYUOZvAx4ZDuYRbKRnuSfwRI8hiKKN2EWQjVfZWqFvCcxdwN1g1kHaok"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon6()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_amount' => 1037,
                'display_starts_at' => "2020-01-05T11:15:46.000000+09:00",
                'ends_at' => "2023-10-16T15:16:48.000000+09:00",
                'starts_at' => "2023-08-11T04:33:57.000000+09:00",
                'discount_upper_limit' => 2030,
                'description' => "l7JEgPOL4cMnP4V2GzS4jqYRXb5UehIXj8c21mk2aLEDAdG7S14uOAlWb66QQLvK0DN8HJTUPGsOi6sa3KJVpLFLKvlpAPdvSjilOgIJmgqT9uktu7YpjPvGrrSQBoXRsSUAc3hyuRtJvuqj8gMon7qfIeI912yZEMfcjiEzDWEg7opVhaRn7dQBMOkb3rbY5U4XMf",
                'name' => "Hw75yQ94b0Ok4Hv1kZgMNgVBu0T7yYu5KcrfGyZTYw96A3GqaB0NERfuOSnMbjTNuKzTEgqgovmblyjel1Q"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon7()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_amount' => 4117,
                'display_ends_at' => "2021-02-11T13:11:58.000000+09:00",
                'display_starts_at' => "2020-01-25T09:56:37.000000+09:00",
                'ends_at' => "2022-06-02T18:11:03.000000+09:00",
                'starts_at' => "2022-08-14T10:12:52.000000+09:00",
                'discount_upper_limit' => 7518,
                'description' => "Y4tF80jAodxQNd",
                'name' => "1emyL8VmNLNJELAb1ysA4PUQLeOzswcZM4x9ULevCbdBoGE6TsV6ZlWBa5iyFkW4Si5DuFRq34Rov2iNlqjYfmlORKWSfwB2Kx"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon8()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_amount' => 5518,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-12-03T00:20:02.000000+09:00",
                'display_starts_at' => "2021-11-24T23:42:01.000000+09:00",
                'ends_at' => "2022-06-27T10:41:29.000000+09:00",
                'starts_at' => "2023-08-29T11:36:41.000000+09:00",
                'discount_upper_limit' => 3603,
                'description' => "tJrYiSFifhuqTOP6HVrq355tMmLPgHNyYSg5fuzlPnCom4z0yRRCMqfcjJt6dVjNz4kTaCnV3TVxBPUUQYd39VqqoRibLVZarfxSQw7msUcKPospns1soA0LVdxkffueeDFVWoBsLynZfCTI0vAkpV0WR0t0xt5kJN4mbdUw1USoZfLT0cwemQB0P",
                'name' => "gL5UvHZM9gmfF5irjkqWV3yOYz59tISfeZSLlSYd4m1N5f33xrhiOL2ckllHbk0gH3maojhajPMWP"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon9()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_amount' => 9338,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-02-04T08:43:42.000000+09:00",
                'display_starts_at' => "2022-01-11T13:49:53.000000+09:00",
                'ends_at' => "2023-06-11T08:24:21.000000+09:00",
                'starts_at' => "2021-10-06T23:56:27.000000+09:00",
                'discount_upper_limit' => 4934,
                'description' => "YCFMaGHCZbSUrPxRF4JtiwaZ74kz37IQBEoZBigROiWNCFuErfz2m0iZ4ENGthoyUsAWkGiSUTlJghEBLlWBYCSKt3UwiVTybL9UgRZ4tgBjnlKCiKqTd5ZNTC5FuxdRth4KWdyJYK7NL4oKNQ8w6IjxHaH9qXyJr0PYvb3JEF7JKxAgYfLwnXzosztsNSTyrG3XmbV",
                'name' => "9"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon10()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_amount' => 6196,
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-12-17T22:20:09.000000+09:00",
                'display_starts_at' => "2020-10-28T16:25:13.000000+09:00",
                'ends_at' => "2022-01-12T06:42:01.000000+09:00",
                'starts_at' => "2023-05-13T07:16:10.000000+09:00",
                'discount_upper_limit' => 2102,
                'description' => "WwsNSHtLwQAfXwUUvfZQi7uPDpzg7rJrbULqIJajLtZUev1HhbsOXerBGOoHitKYUq15Pj5A2q97ZHsKqFtUQIxXN0I2nloIv",
                'name' => "l6bDp9WCwq9UoQisc4B3uHJ45jm9cofhKBqmxlbagkgv"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon11()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_amount' => 2769,
                'code' => "hebgBwtt3",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-11-27T04:07:41.000000+09:00",
                'display_starts_at' => "2021-06-07T12:19:57.000000+09:00",
                'ends_at' => "2021-03-12T11:50:55.000000+09:00",
                'starts_at' => "2021-04-10T06:06:19.000000+09:00",
                'discount_upper_limit' => 1146,
                'description' => "HSff6UrtmLSdtnwDeuCsEHufBScl243E0LNcEOHlsbixuxT2HgJAK7PnyZiUCzzSEXUJpztS7v1KbZJwEqzgGV0NYdV9Mxaggjnc",
                'name' => "ADszP0l6BiI8yAAoRJXJGhSVu008US1623gucnP8"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon12()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_amount' => 8770,
                'usage_limit' => 8287,
                'code' => "vx",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-11-26T18:46:39.000000+09:00",
                'display_starts_at' => "2022-01-14T01:24:49.000000+09:00",
                'ends_at' => "2021-09-05T10:46:00.000000+09:00",
                'starts_at' => "2022-04-11T10:33:43.000000+09:00",
                'discount_upper_limit' => 1511,
                'description' => "sG3P1F2pebaFZwd5BbvgSCD0AzvtVM5cyrrbW0oTEn40NVzKvxsWXhwZi5ghyxrqw9OCuA8ntCmUo60s3ZgaVrsgrl3X6b3C56aQuDJFDDa7gNmmhxliPFLYb35GIQ6fBtGhzV6jmgN7l0q8GoN3nM7vEpl4X3t00HWGD3DaJyMYZR7NbruhMo0W",
                'name' => "DQigcImphMS4wULKgVQOCwhUwSCurB7tuihIopkpJDiGs278iufyt4xAr3lxavOJLsTs11qUhZUY"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon13()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_amount' => 6821,
                'min_amount' => 8561,
                'usage_limit' => 2971,
                'code' => "VG9EbGN",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-10-20T09:28:39.000000+09:00",
                'display_starts_at' => "2022-10-31T21:58:55.000000+09:00",
                'ends_at' => "2021-03-15T05:52:52.000000+09:00",
                'starts_at' => "2021-12-26T16:26:11.000000+09:00",
                'discount_upper_limit' => 9486,
                'description' => "FFeETXEQvmTTyNU9v9ZRvuudL6tIrd2W9W9bRNJY69Mc8wRs2InqiDzCzdsS9GxrYNDFrf5APP1ibtjiAJ8Ivlzsmrmg8dIp1rFdF32ktpMKr5IN7ITgUjfSiZdgns1Uz2BZHOeaPHEla3IplB9VhQkSbNGSbRZjFC81BPoc",
                'name' => "rmtjtHltTUyrhYofoCzMSWes8F82HxzhqTcSqa0ro4ou7JavlrE"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon14()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_amount' => 4647,
                'is_shop_specified' => FALSE,
                'min_amount' => 8052,
                'usage_limit' => 4459,
                'code' => "KtnL40M6s",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-08-07T00:20:03.000000+09:00",
                'display_starts_at' => "2023-12-23T18:44:53.000000+09:00",
                'ends_at' => "2023-11-12T08:45:01.000000+09:00",
                'starts_at' => "2022-08-29T03:04:48.000000+09:00",
                'discount_upper_limit' => 3499,
                'description' => "k0fj5qJ71ysOeUiodZKLrsWAFRx2QqlCmT2MPhJC4GWkSPXZW5cgpbGM23gL0eUvfkz6LdWZJQvJ6ntNUrCS3kvYgeFy3rRYIAruCmFSsbfCjMc0zuwwrXXan8o3QrPvzpG9R2G1wPZvQY1qhlR3WbntiXH5A90I1GDSwRxRzFSIlhSCkMgHPCQ7GQe9BNu24DePnuThCgmgz1WvDS",
                'name' => "rSjwRumQtKEBzJvzYW4mTsumvqBMJzMPyCmkNVfM9iln7SOkeCEWnH99aOuTzJtcrWeuyvlWr3ijT8dtvTA3GNEbX7ECZp49ukvlDlXaYYZtpBWH1c64DBvosIqMZ7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon15()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_amount' => 1111,
                'available_shop_ids' => ["35193097-8552-4a25-b6a9-12020b79fa8f", "d4c754b2-b8a4-47c9-98c2-f9853d3daca4", "98124e84-9cd0-49c7-a57f-70723fe84b94", "ec895812-a506-404c-919a-730382d99f0c", "ee0b8605-e470-458a-a614-5e36c0218fdc", "39140029-fae6-4413-b9b3-2955c86a3705", "d59d0afc-3239-4152-a2b9-bb633d67026a"],
                'is_shop_specified' => FALSE,
                'min_amount' => 2978,
                'usage_limit' => 8371,
                'code' => "mMUdbN",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-03-06T22:27:47.000000+09:00",
                'display_starts_at' => "2023-08-22T22:01:24.000000+09:00",
                'ends_at' => "2022-05-18T06:20:09.000000+09:00",
                'starts_at' => "2022-02-21T21:33:55.000000+09:00",
                'discount_upper_limit' => 4066,
                'description' => "1lFWI49m01VofeeaWarqDrCnQxBNOc3LZJqG336ZUL6ffJCYV7hSfs8HNvxpjxDdMvJ95SldW23ceDjfgz8sBhPfJpCWMrVUnqueHTsKAhZ0bSHAps37Hj03mEQkD1jdgC",
                'name' => "uM18K32fRgVtllbFRx"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon16()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_amount' => 1735,
                'storage_id' => "79af34b9-b43e-4653-b8df-a8dfa43d128a",
                'available_shop_ids' => ["98a713f3-8dfd-4066-89f9-742858fccff9", "423d1dc2-6573-475b-8651-ef6400ff651e", "7f419b0b-f9f3-489c-9868-08c936b9d092", "f9e12e38-a9f4-42f4-9446-271b23e11778", "0645697f-79f7-4415-b88e-324d33fa6e43", "a3157766-61f9-496d-9977-173a1d51c0ff", "c9175272-bd3b-4439-bb86-e21be97e7a9c", "16f2c716-e93d-477a-b79f-d7235dac4bcd", "40ae0d33-dbce-4864-b776-6077121206b9", "6b77052b-6dfb-431e-a9e1-381a097104b2"],
                'is_shop_specified' => FALSE,
                'min_amount' => 9484,
                'usage_limit' => 266,
                'code' => "N",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-06-11T03:19:47.000000+09:00",
                'display_starts_at' => "2022-12-07T09:29:02.000000+09:00",
                'ends_at' => "2020-08-02T23:35:20.000000+09:00",
                'starts_at' => "2020-09-17T11:43:09.000000+09:00",
                'discount_upper_limit' => 2490,
                'description' => "AIgCG9qhTqj4tjz4O5Fb6awS7ZTDNnOArrDKe68A4zi63Q8HHMvIwFjHMBVXfxa29esqw4DxbnGpS8FuL0rnH6Sl8oWXXjFA6j9sdl5DLfxhp4cwcV5w0vfX0cbqFxxaYhA3KDjDUlAQWJmHP16X55LyjA32QbmBcyuDMmtq7AVNKl4DtAWLZ9I",
                'name' => "DfRMCM9fAEkcg01PR2N1rXF2B"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon17()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_amount' => 3398,
                'discount_percentage' => 2889.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon18()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_amount' => 8555,
                'discount_percentage' => 8399.0,
                'name' => "s6qzowjHoGxo30BpJBv"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon19()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_amount' => 8232,
                'discount_percentage' => 4735.0,
                'description' => "eK847AA9xqVa10eQoDn36TPJsvSCdr3aGBecaYEfzvZvZOnYayR5n7TqLeOCbM1Lmb",
                'name' => "SMyoW7hKXdRK25GG1Tomh68PKcNnsYY4eVaz5jB5pUlaPiBnHmJoINNhmydNVpXRLKjs2hd"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon20()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_amount' => 6203,
                'discount_percentage' => 5789.0,
                'discount_upper_limit' => 6975,
                'description' => "VY8fp3M79ZwJe8szfbaGBRMipLgcbT8D0",
                'name' => "CR7zJKau1iPzxmXUrNSd8wOdL0k7tpjixOD5lCuzD"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon21()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_amount' => 5235,
                'discount_percentage' => 5355.0,
                'starts_at' => "2022-01-12T08:39:29.000000+09:00",
                'discount_upper_limit' => 1672,
                'description' => "BZ6Ho1MybnZTCU8mNe05GRFp6vJYfdlX7Weoc37QUknLiOXU7ZZwLjEqnspZX7i2LVfUlpc5EuHk4zun0guF12hrwApid1FyHEVkk3c3MHVPSIs3eU2riXD5HNzwnOUgTSTFAPfKrrFFQWOFTipx",
                'name' => "buvi7fwkqK59AxNCivoY5Ar4H7FQgFW30jL2zRc9TkIZtDzJEomsgdAUlHCMI9QgJ1yf0NJ84151h4L"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon22()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_amount' => 211,
                'discount_percentage' => 8114.0,
                'ends_at' => "2020-05-09T15:02:06.000000+09:00",
                'starts_at' => "2023-07-14T15:38:46.000000+09:00",
                'discount_upper_limit' => 9419,
                'description' => "RMtBouK2l5IfjjyF6roIzEB4t6GrzPZn40F5t7Mievad9I6zJ3AeHUtOZ28vL8N6hOK0UrfXbhmT0cwq4HmuBYPtgQEO4uJNcaojeRV3NizXuVOICXvG2EdPfYfYOVm4nnFLAThUpbTSuLsYqw9EYuLPhSt2U0",
                'name' => "VY5YOHzRzrao0avMWnIDjImVFv5J52sOWdXnRNloOKhZg5NaIHF4DRHunciL99fOGTR2isVjmx9boJVX1OUpHLlLaDRE"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon23()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_amount' => 3279,
                'discount_percentage' => 425.0,
                'display_starts_at' => "2020-03-26T22:25:49.000000+09:00",
                'ends_at' => "2020-09-28T05:37:11.000000+09:00",
                'starts_at' => "2020-12-26T15:57:23.000000+09:00",
                'discount_upper_limit' => 1768,
                'description' => "QjJkxKaWQNEemeRfcWPsPxmHZ3F87lx3XbGwViLul0MnMa5GGAUa8Gc2YMN89lK74PhKBN8LAtAibYyZdACXXhp7LlafuMi0Y1FJe3Zfcbd8es6CapLzBi",
                'name' => "Hn0mKqrw6ov7bxgvwvn9Rk0IJTQjkWKxns1W5DrPplWG8Svmd8BF0q"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon24()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_amount' => 2921,
                'discount_percentage' => 1399.0,
                'display_ends_at' => "2022-12-08T13:21:18.000000+09:00",
                'display_starts_at' => "2021-05-18T11:46:15.000000+09:00",
                'ends_at' => "2023-04-03T22:28:43.000000+09:00",
                'starts_at' => "2022-08-31T03:09:22.000000+09:00",
                'discount_upper_limit' => 4582,
                'description' => "29rOZOV8qvzGe6URWqIYAslpy3eVbfshQL8leluLCH5iCO6B9Rzs8SG6yb1RMOqdnXn3K2l7yiWtAlXDEZBIVvXSpvO9RKjSUfquZAtQppr3syZczAslKsgoQytHcb15j1a4KWFFYiGIPUwng3Oq6tk1nLjnbRTKCJYyg",
                'name' => "IKjxU5vVm5yIiP1JQcFGN9AJRZrBbD3hNgIidhGF4IUlqhjA2AKLDjU6FlVpGLUST6cmc67v9t2jrHnEsDoj6Pg2iteOG"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon25()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_amount' => 5477,
                'discount_percentage' => 6500.0,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-01-23T21:32:28.000000+09:00",
                'display_starts_at' => "2023-12-01T08:29:55.000000+09:00",
                'ends_at' => "2023-09-14T16:31:08.000000+09:00",
                'starts_at' => "2022-05-30T14:08:18.000000+09:00",
                'discount_upper_limit' => 5800,
                'description' => "yuxW6sdIBrymKZWmUwv9BB2PeJCVDSk4PChFugJnKIYZRMozs2TdvZWOiSXsygLbG2a8uUIESkShLjXjOu6PKJVIHdzyKqkxUiSHhArVYr9guheaDbVbNbuGgM4YuHQJTLtzDykRplInPnTZMnuTTEyIY",
                'name' => "7rBPGCS6drd8mozXJVBlZGah9IUJK4I5UbhINmXuNFois2yQ36KxFkeA3VoLapRVR36cg9WFh3LBo80dTYxjqz18f8tc3btEVm5scGBnjh8kSYvSxtnGkDUSKtc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon26()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_amount' => 7193,
                'discount_percentage' => 7400.0,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-06-12T06:54:32.000000+09:00",
                'display_starts_at' => "2022-01-20T06:17:52.000000+09:00",
                'ends_at' => "2022-01-12T05:49:26.000000+09:00",
                'starts_at' => "2023-10-20T08:51:35.000000+09:00",
                'discount_upper_limit' => 1718,
                'description' => "sEaXZCTFult1Gp3ogIFmBdTBGaikpwsOm6AWPl9ZdAy7uwwNnYakdRnxyxqV6vtNP9amNyzUqIPb82phdsBf4E5VHxYTNV2YTJ5XsEJMqCDVWOYMsBlocQhp9kWQlKjn9iPp7KV8DnRp4W6P2f5s7ks85yyvllnuTmpws7QbIHpX2BCwtNBgyUC91bkphj2r9hG3zDmdxgDe7NvEPPrNh1Ph8PGf5lFq14u68SrBUV",
                'name' => "ejkuAaB88PI0meonvUWNuYg5Xj7gM8rWIadMwwippGCPEIkQoRBtkHwJyDkbtRVKN9lE0HTzGBnjLGNKLNzpsm4MvDHEJN1A5Ae8L"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon27()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_amount' => 6731,
                'discount_percentage' => 2981.0,
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-09-15T12:50:08.000000+09:00",
                'display_starts_at' => "2021-07-01T00:51:05.000000+09:00",
                'ends_at' => "2022-01-02T05:10:30.000000+09:00",
                'starts_at' => "2022-09-27T06:32:39.000000+09:00",
                'discount_upper_limit' => 6646,
                'description' => "Y1NhaAB9",
                'name' => "Mfjaiim4XtHXpMFxASio54J7wjVhmrwe3I8vlmBnm8ZfbWNWTspD6e4wzTv7f5XR3q2dtvEwvKM"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon28()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_amount' => 9010,
                'discount_percentage' => 4943.0,
                'code' => "ky4FVw0",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-03-20T00:25:05.000000+09:00",
                'display_starts_at' => "2021-01-06T10:14:44.000000+09:00",
                'ends_at' => "2020-06-24T01:39:21.000000+09:00",
                'starts_at' => "2020-08-18T08:10:16.000000+09:00",
                'discount_upper_limit' => 9685,
                'description' => "FaeKXG4wQ4r97VnVGRhlKhKQ4AWZMNhxAXYrW8p7JXZJWjdBEP9qM6Fi0iU2Rh5JOeHl746MnARl8PuJveXbIcjezax0iXXG9LxdPl9C7pwOLDCP7cD8e6CX7xs1qILYwT43rQMwCS4YNEy6WiURNGE12NaMqAVkN1dJR72T3acO5bM4FsPfiGXLn",
                'name' => "G209Eu2HnNqD5ZnLX53XEqdIEESJvj9QYqnR4PgdbE5baoubVBUGuQMxhAmbb5HL6NwwrwdcTMNiGxlaIo7VQQl0zo8Cvb1XFHy1X"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon29()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_amount' => 4120,
                'discount_percentage' => 6416.0,
                'usage_limit' => 6717,
                'code' => "RGKdQ1w2JG",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-01-25T22:44:48.000000+09:00",
                'display_starts_at' => "2020-08-04T07:54:58.000000+09:00",
                'ends_at' => "2022-05-19T16:57:20.000000+09:00",
                'starts_at' => "2020-08-04T16:35:45.000000+09:00",
                'discount_upper_limit' => 2771,
                'description' => "nqKvaQbwxtoM086Uo7WcKtI0614RkLAcAH9d2YMnAhLwH7PhcQX1xd7m9kInIjHjOz7z417evOKGrzcJ2bWul1rvhuO",
                'name' => "16EV4X6mUYLfGto70Cn4vUXLC86mPTIzclvzq8ASzUwzawWtqq1kD"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon30()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_amount' => 9856,
                'discount_percentage' => 7869.0,
                'min_amount' => 547,
                'usage_limit' => 3633,
                'code' => "99o",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-03-07T16:17:17.000000+09:00",
                'display_starts_at' => "2020-04-09T21:35:03.000000+09:00",
                'ends_at' => "2023-02-25T18:39:41.000000+09:00",
                'starts_at' => "2021-08-30T08:59:36.000000+09:00",
                'discount_upper_limit' => 8479,
                'description' => "S17y9er8jEzhKFNMv7K6gG6dxHAl6U2ZkVZDxhObCI1hzBeYonp4kJ7trKVZijstiNx0VrTg6YaOjT5",
                'name' => "pPuoHHh2SDPb99ru10X6fRhVvbmHsUXZwrZJcuyhi3ifXm3seISVf6v6uajTbjmKIJDKSXq3xQiW3jjY"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon31()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_amount' => 3209,
                'discount_percentage' => 1012.0,
                'is_shop_specified' => TRUE,
                'min_amount' => 8961,
                'usage_limit' => 3066,
                'code' => "hOMpoER",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-11-03T14:04:24.000000+09:00",
                'display_starts_at' => "2020-03-06T15:05:22.000000+09:00",
                'ends_at' => "2023-01-02T23:39:01.000000+09:00",
                'starts_at' => "2020-10-04T15:22:40.000000+09:00",
                'discount_upper_limit' => 3800,
                'description' => "W9qkxFvWHyK4yhe1FEznZFVRbZv4l7XNywidcndcD1txauqLct7TWnTT55SJN8cV95D1Moor3Kg4q0PngjgSMNtfBUkMHDTtIZSLLPrmMvRQn4i5zGJ2klG4adQYbdQiA9pnqB1RafIplfURhzber1USfYrUNRmXwNZDdD7YzJi9cMobVh",
                'name' => "9BCnr"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon32()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_amount' => 4223,
                'discount_percentage' => 4109.0,
                'available_shop_ids' => ["0a779eed-5147-4ab8-ac3b-d37c8297598c", "61b22735-3467-4ae5-892e-198381bd41dc", "db378bab-f83d-4246-8a8e-c4ffbb7f4bf3", "3e6b930f-049a-417d-aef9-5f18895ba916", "969e617a-4b89-4e88-afe4-49aa28866555", "1cc1d33d-a90a-43f3-a732-c6d0f8a7dd2a", "4260a0e4-4968-43de-bfda-abdf784e4da8", "121d3b2e-3d4b-4b0a-84d0-0916e4c84243", "886861e5-cd82-4d32-82b6-923c890e8525", "df32a7a6-114a-4f7d-9626-06e92fdf7297"],
                'is_shop_specified' => FALSE,
                'min_amount' => 8664,
                'usage_limit' => 1219,
                'code' => "2PVbTNr",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-11-20T21:06:01.000000+09:00",
                'display_starts_at' => "2023-04-09T20:18:23.000000+09:00",
                'ends_at' => "2024-01-23T13:58:03.000000+09:00",
                'starts_at' => "2020-09-01T20:00:39.000000+09:00",
                'discount_upper_limit' => 1120,
                'description' => "q649mIilgcRrUHPSDUfGqgqTsnJBMjVgUJw7EBnrc8FReXP23SCKK3FxfwWdTJjdr4qZx5s",
                'name' => "09tSIzgVxWFwVhzduze5nLrvDUNy43RjTafQVXzK3muaFsxlKeoIDp0SijtBwCnb88u01mfm8OwLS4RRZngi40ALyD"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon33()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_amount' => 2774,
                'discount_percentage' => 9188.0,
                'storage_id' => "ad1c51cd-b8ef-490a-8625-db01b8c1f3b8",
                'available_shop_ids' => ["0c61fda2-8ef5-44d5-8e85-0a333bf8905c", "5cca7409-5e04-4385-8fc1-16b28fa4a27f", "d05706c0-b34e-4203-81dc-2e87d413e481", "e027b036-1a0f-4f59-a14d-4545ed7e138f", "21b0a0bb-b61c-4e83-8af3-1ad897bf94f8", "b9a8cb2e-b69f-407c-8cbc-ed7bed27ad81", "83f6befc-3979-4755-947f-0d8a29801775"],
                'is_shop_specified' => FALSE,
                'min_amount' => 4692,
                'usage_limit' => 9472,
                'code' => "vYa",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-02-08T15:38:42.000000+09:00",
                'display_starts_at' => "2023-12-09T00:32:45.000000+09:00",
                'ends_at' => "2021-09-18T13:29:07.000000+09:00",
                'starts_at' => "2022-05-17T12:12:04.000000+09:00",
                'discount_upper_limit' => 6546,
                'description' => "PKUgGlYdOeqeaDC4TEeeByjs8oWgVtT30fPISmnSbdy5yncAHv4Bq1EnS3QqMprX2i3R9",
                'name' => "1kRSukcQmHLuXaOeTPThADSzTQmhU8ExgsVlpso8ElKe3YMVaNBqqwoCRycZFwJZOlIt3bdECzGRV22YWrUvQrbg5m5JVXrMN9MLpG03HyQw8nbAA1IH3"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon34()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_percentage' => 5950.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon35()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_percentage' => 202.0,
                'name' => "zgzxDcbESspsHLRHTu1Tcrslkxc7eC8DdvVE3hGugIw6cZT09if1VCgbqLCrnQjvIRkmqvjUzYg04pCqxqBjr2HBL5sj3k5LwpHrJjVz5u9GZMZVPj3id"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon36()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_percentage' => 5711.0,
                'description' => "TP80OecIv634VFflyhm0ymTzTZpxDEXhzWvvKH0aTvIpGpDTZxwiGgPkTTL4QDpXDeHk1UdrhxTNhVEc3WWQNWaYCgHPeM0es7k8EIcN2Io2qKW159qog9Idw0HJhkgW6yB6Jpj",
                'name' => "1Bpn6jkmnj1hIVQbG4BJWCE0ExoImKXUzzUSD0jYlmxpqfOmObrWKaDdl9JQlSPHfw"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon37()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_percentage' => 7654.0,
                'discount_upper_limit' => 2433,
                'description' => "YRTu07TTgZN",
                'name' => "9v2xIoOH1SnCHwikGZQtM83z6XdEfdRtFzMEBwskOgvH"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon38()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_percentage' => 9806.0,
                'starts_at' => "2022-08-28T07:01:24.000000+09:00",
                'discount_upper_limit' => 584,
                'description' => "2NRp9Rnpplm7pKmIzIIrVVxstelHGsBRW5uT6a65x",
                'name' => "FMHooEr3MFFSUM6TCiqwKbjoW2H17k6Y0nq9Nsm6"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon39()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_percentage' => 1945.0,
                'ends_at' => "2024-01-18T04:30:48.000000+09:00",
                'starts_at' => "2020-02-21T16:16:15.000000+09:00",
                'discount_upper_limit' => 5521,
                'description' => "07xeNVW8AMKOOdyZcCGjJ3OaSSdgm8fc9bPFkEXxQ2HcI1zShSjlRMWoc5OtL7FcS0ko9KzDe5MeOL7yPsk4lvlx6ZpKmrnxD0GTvds1qh5RZX62DHJNXwsdJWZhrhMwu0qNJmgyVGGNOF9c",
                'name' => "cAhTDF5co001lCSaEPHVxq"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon40()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_percentage' => 338.0,
                'display_starts_at' => "2022-07-14T17:13:03.000000+09:00",
                'ends_at' => "2020-05-30T10:36:41.000000+09:00",
                'starts_at' => "2022-09-07T04:52:09.000000+09:00",
                'discount_upper_limit' => 5216,
                'description' => "wPKJYMML",
                'name' => "q"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon41()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_percentage' => 9433.0,
                'display_ends_at' => "2022-05-07T00:05:47.000000+09:00",
                'display_starts_at' => "2020-11-14T08:08:32.000000+09:00",
                'ends_at' => "2023-11-15T17:31:13.000000+09:00",
                'starts_at' => "2023-11-16T00:52:51.000000+09:00",
                'discount_upper_limit' => 3419,
                'description' => "U5TRtfmgWHUyNB5HqvxnXytoHVkPcMKRDQ2kV5lBMWUenvxDyEi4G7qXvzuAqYMlGQcCZEEx7nUoLh4TMrcPCk96b7M8uTL3j54jlSfHp91h12zqq5g3czj2sZr4p28ehkxcmjlUSrkGgjkdoxnfdFyBt1vIQf5j5Pko8oLgRudwhLvvKRCoboSgl0y8bgZv6BvLIm1h2TgiFu8tlGmqwtImxzvDxGdoMWzrkJQQZWPSdj2Gso16rnwSJU",
                'name' => "wbXrS5n7Ry6t980DjqJynfkIjXkoxrPPFaZwSuhCLgVL"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon42()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_percentage' => 366.0,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-06-17T07:39:01.000000+09:00",
                'display_starts_at' => "2023-10-07T17:20:52.000000+09:00",
                'ends_at' => "2022-05-24T07:44:58.000000+09:00",
                'starts_at' => "2020-09-24T11:02:34.000000+09:00",
                'discount_upper_limit' => 1069,
                'description' => "AZ01WqILxNSbNApnQYE4jZmVMOoyLYTvL3ALMPNQJZyvJiBZWnhUoFxgps51kR5F6NdaXzU9m96Bd9DzTtYmaNjWfxOtmjYnfvcG0iwW3TZCm6P5IFAhKWPxhQqy5u6oAfMrgIyaEbsNdU4VXdqkTwRVRdUda3JtKNSlQARdbEPhYVsByhe2rB1nMsNM36LvV5K8bq5usEkbqLTsLtNz8aZgsGTUNaDEWomolY5eWhZsKTjL",
                'name' => "yC"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon43()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_percentage' => 3840.0,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-11-28T17:07:03.000000+09:00",
                'display_starts_at' => "2022-06-09T14:51:10.000000+09:00",
                'ends_at' => "2023-10-03T20:41:22.000000+09:00",
                'starts_at' => "2021-03-26T17:13:54.000000+09:00",
                'discount_upper_limit' => 5748,
                'description' => "HB8USAhWkwGzL6m63JOQ8dKi0824Ndcm5wckH5pAbOGJafUWdVVRfnSCs0Y5FoD5FK912bAaVGkjBDDTeAFdgTErZqVX5E4Qn7NeC6swCoI5ZssqYPXWuvuIqm932wrEgj6XD",
                'name' => "JiqxsBsjEenMs2VfjtatHDgA1YDTnz7XC4EO9"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon44()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_percentage' => 9794.0,
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-05-02T12:21:42.000000+09:00",
                'display_starts_at' => "2021-04-10T18:16:56.000000+09:00",
                'ends_at' => "2021-11-06T01:31:08.000000+09:00",
                'starts_at' => "2020-06-04T16:39:54.000000+09:00",
                'discount_upper_limit' => 6065,
                'description' => "QYB8Ow7k6qWE1ko4mwD9FuBQTdGFc3VuKutBw6TjP",
                'name' => "gdDFn6UshInKLOghgMKVrASebNtAOrUCh9aqH9E3wMAFqpVSWtPr"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon45()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_percentage' => 3584.0,
                'code' => "G",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-05-03T05:05:15.000000+09:00",
                'display_starts_at' => "2022-10-09T14:34:21.000000+09:00",
                'ends_at' => "2023-05-19T03:35:00.000000+09:00",
                'starts_at' => "2020-04-28T19:03:48.000000+09:00",
                'discount_upper_limit' => 9611,
                'description' => "eOtgltUHYgSk2Raw3dp1nr3ZEjRvELFsxaJFmXX8UYMYKt3vuIm6JKvZlQ4vSIsv2r1HWzkqkcMYiS24nA4c1Ly9eylfI16U0UWIrXqu66F5O2efXtggGNixvWo39vSOxja7lJyYLLrj91ltyLXtrWMZOIDvcSqdqZxeI4IWgEKGa6QvLrkA2b16gscRjh3z7jQS0QtaIfxVPvbdrIUmqSUffsD",
                'name' => "EqhDRpI6pYblPkAeCKLJqE2QaFwg9trGUHlaIAWXvCVQVMWNgyFc8jZMvfG5YJ59hzAZZwJHktMdEvx5tjVP18Uurcvu3PpH1WA60c4JY"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon46()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_percentage' => 1636.0,
                'usage_limit' => 9469,
                'code' => "Se4HJ",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-03-29T16:03:36.000000+09:00",
                'display_starts_at' => "2020-07-10T06:25:16.000000+09:00",
                'ends_at' => "2023-07-09T09:44:37.000000+09:00",
                'starts_at' => "2020-12-23T16:15:20.000000+09:00",
                'discount_upper_limit' => 4113,
                'description' => "v5fUqTQVUv6QlrXQO13dxkHzapRpikoOZ3bJYT693KSsFgBBfn7kc3MF2p7sYvJ7N1Sr91jSTqlXGbkTYvtu6KAWP6XYsj8JU2ZLoD8LdGmmSFfUJ4nHBqfVeWnULNMIufl4e",
                'name' => "sdnsS9Zx44PvBaem7SeDm9c6EfTQvJeqs2xrdNlAQWPYq3QQguADly8KcfffU8b9hMBE7pZgB1GSq58YbrNn2ZZBcjBYl"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon47()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_percentage' => 5684.0,
                'min_amount' => 2842,
                'usage_limit' => 2114,
                'code' => "Tj",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-12-29T03:21:32.000000+09:00",
                'display_starts_at' => "2022-07-01T00:04:53.000000+09:00",
                'ends_at' => "2023-10-08T21:45:42.000000+09:00",
                'starts_at' => "2021-11-19T02:47:35.000000+09:00",
                'discount_upper_limit' => 7191,
                'description' => "nVBHVvR2ct3bbAhG5C3Kb5v2h0ogzGZFyv6oRwzccqCdfcj4MiSRFvkevR4yEnIQtP3i5tRhZ0nlXXhJZKzVuMjjiNDXsLRbtvQkRPae78vRpbQUXzzfs26muJ61saEwjgvTB2LPBI8PqiWCsEzWOL4gNg0ogKvZj9xvp8c7kvSNnP",
                'name' => "AZlA8dpM1JXDKRKjip7JD3i40EAHiIIsS2syBBMPoN"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon48()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_percentage' => 686.0,
                'is_shop_specified' => FALSE,
                'min_amount' => 456,
                'usage_limit' => 80,
                'code' => "vAU3rQm",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-04-27T19:33:48.000000+09:00",
                'display_starts_at' => "2022-03-18T21:02:50.000000+09:00",
                'ends_at' => "2023-09-21T21:59:47.000000+09:00",
                'starts_at' => "2021-02-18T19:47:29.000000+09:00",
                'discount_upper_limit' => 8876,
                'description' => "ZNa8EgsGmn1j7nOs4r7nn7CSiZNt6K1NCcimt6OYEJI96mzSk4Lgi4QHSSrshT1hYxoNlnIysewccLACxOTgSLA4t4jBGirIt2rM9hdnj3NxkFtCxfa4jJZg5F9jZsFM2wUy0z9lNvGW4KXPx1dvU91RJoHzyYSWlthWWSMlMh3ywR8wzdYianO6biK5pkZqbr6JKRtZAIeHqgOfR3oCWBXZxDK47r9VP2SlOBDZ6h0brPu5",
                'name' => "Qask"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon49()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_percentage' => 6437.0,
                'available_shop_ids' => ["dd893617-ffc4-4732-916a-495d9cb15081", "1d907a1f-9a6b-4b57-8ebf-e1f875206a0d", "423d4fb9-19c9-4900-8d1e-53ea99dde755", "43e9d886-dfa5-4ce7-8515-3e9fb95b90b5", "232cf7ed-9036-42b6-ac2a-a229db91dab0", "bb1c526c-9c14-43ac-8735-8454a6df3cc6", "0d1f579b-a24f-4992-bce2-11aaf958aa62", "c05b1662-88f6-4052-871a-93c71802ca1e", "d69af6ec-a27d-4ee0-ba32-55325f91568d"],
                'is_shop_specified' => TRUE,
                'min_amount' => 2030,
                'usage_limit' => 1564,
                'code' => "tqy5L0L",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-07-09T10:05:27.000000+09:00",
                'display_starts_at' => "2023-03-14T15:48:53.000000+09:00",
                'ends_at' => "2023-09-18T18:21:33.000000+09:00",
                'starts_at' => "2023-11-05T22:10:05.000000+09:00",
                'discount_upper_limit' => 3178,
                'description' => "3QEX0UhS9GnS5xqVSg6surz7eLKadh6VYOqljPFvqJLMdRdPwp6DDwbzR8V7Y2TYcPKyRxNf2IE9grVxv7JQhAnbGSaX3fghDceXIi6ocjz0U5QiSLTfDmtZtUBVV1hLeEUk2f",
                'name' => "eNIFpjkgHGwnwMBUTnfCQBCHBv0nGIcel4ZxOptan0XCa4QWWlUuWsKNKKwFIgRZ3GaiulROXBIpVrsvdZz3MAQvp05FwR1507hgeN3UE7Vn"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon50()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "4737a9c0-59b8-44c6-8e75-f361784d0c52",
            [
                'discount_percentage' => 4455.0,
                'storage_id' => "bfa9e68f-8b3b-42eb-bbc2-dc01d96a411c",
                'available_shop_ids' => ["6c63642b-e1b7-4ff6-be4b-88a89716b11a", "4c34a488-6430-4eb7-9357-1827c6cd0422", "e9c50e69-00dc-4aa7-8bb5-7e60745b6ee2", "9fe34b39-d262-4e33-9640-97d13467cd89", "06c8fc5f-ff8f-4c32-ba5b-3398544ff210", "4dcd6c80-f432-4cd2-9fe4-2245b31a6df9", "55372f05-e20a-4479-abd9-a9a90875131a", "32cf51db-f62d-45c4-8991-b67eac2dbd6b", "f3b616a0-085f-4349-b393-4c01ba58484d", "ee431616-c39d-4b18-9003-91d227e6f1d5"],
                'is_shop_specified' => FALSE,
                'min_amount' => 8759,
                'usage_limit' => 3046,
                'code' => "p6ktS",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-04-01T21:51:45.000000+09:00",
                'display_starts_at' => "2021-09-22T06:09:42.000000+09:00",
                'ends_at' => "2023-09-11T18:04:33.000000+09:00",
                'starts_at' => "2022-05-17T19:55:32.000000+09:00",
                'discount_upper_limit' => 4719,
                'description' => "UN73u1AUTwCRMWk9BrMo4JwrFwcUTaldLeN8LgCabhtH80QCUdH4f9OUc33UeRKaFudLkGIE7SrwTBeGyIxKvqTbuic2D9IPJOQdEUijwpaotgV9LOziDeLBGb3",
                'name' => "cGLhKgHhi654LjItBcFrWRVQcjjucSmjH8d4BJu54bIPeXBdhgFFJlozjvwUK37xwSuflrABmWOzkSOaRQo0P1NgH4ysk6Ybno"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
