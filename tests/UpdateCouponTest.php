<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class UpdateCoupon extends TestCase
{
    public function testUpdateCoupon0()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_amount' => 9208
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon1()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_amount' => 9421,
                'name' => "sH9rlpcWw1Vg5A3jIY5TVDn7VAyGhf1a2i4Xb006Y5FN9bW9vksFBm8sMwbh1WFtpEmCrFqNwdLZ15QmFMvlNaa2goLZ5E9OEvOUIiBwbJ5"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon2()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_amount' => 5017,
                'description' => "GuqfgOe9nVnbOf1mceXbMKgmiS2lNCj0coTfFCchnpKAXXDxQv4bOJ9FCs7r9SIiPLZxhYcpGO5FAV5Tmz4fnzfWLRafbjHHiTlinfVLWJIyGq0eGZ3LjtgQn48RP8UioFkI4pFJl8a49K0SiRVrDmJ5TPkLuNgnu18c0Kn6PzJQm",
                'name' => "77hC3byYhnk9L6y5R4kNHRMXQTzW1iBiUI5JGbGoEyKdo"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon3()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_amount' => 2820,
                'discount_upper_limit' => 4311,
                'description' => "vNvuZ2zOymd6UzJ163lry8C4rDtJNzcEFdrvo427ISByum8MIrVugVBfTif3qpXYgZnZ3LJOu3iwipHdsS3ShjnA4Sr1gSN2PelpywqnkqJGFUWWcs7OK2a7LaTGiSi2nVCa3OWfS7AqwLlHPiOBI9qmFjOPFMYQLKjqH9KdygsFLw",
                'name' => "OF89AbrhaWMPvJ4w9BbWGLWxTOnqHU20ukx1FDQpVqtvlq3pwt"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon4()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_amount' => 4130,
                'starts_at' => "2022-06-16T06:38:17.000000Z",
                'discount_upper_limit' => 5889,
                'description' => "NpqFJFhJ6HuYWnqyIUhAD4rpz6whWSFAXMqy8UduAdQ5IH0TK2HSat5A6ikNbGO6n",
                'name' => "v206MCoq10cKjOOAJZbMJkEXTJUv"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon5()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_amount' => 7699,
                'ends_at' => "2023-11-10T03:17:59.000000Z",
                'starts_at' => "2021-06-01T11:15:49.000000Z",
                'discount_upper_limit' => 4498,
                'description' => "PqHLhUyWTkN1F8Xwl2rFV9LPEG0FsEHZ0zFFEN3CsRlByNyR64VEa3muyUE26kLnIwLEQafbBqwyhczkUDSv0LkIzcZbnCm3D96fkss4WwEMOvII6xukRoB486Ic",
                'name' => "nSrXwZGPsDFfbhpjo6CvZmit6s"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon6()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_amount' => 3399,
                'display_starts_at' => "2024-06-18T13:30:53.000000Z",
                'ends_at' => "2021-06-28T14:17:57.000000Z",
                'starts_at' => "2021-09-30T20:05:58.000000Z",
                'discount_upper_limit' => 6103,
                'description' => "plDlWahPig9MKERKZGyJip4Qp4t6WiXGIWU4TxH2FAjMtbi1KGeJyFNO2KrkgbsXcbEbgPoZFbPh9J838rL1gDfq3VsJIZMJTMvIMK26sORVFvF51NUOj8RI7n9XLkQqGxRAu4ClCzUyuIE",
                'name' => "rXjU1Rl6vF7n9cWf5sF0ARyOKP3HCUhOEdj0FvKzWLO0X17seRboXyaTp5fxFISfuSj9R4g3InaFkgEEKedrMwdHuk"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon7()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_amount' => 2288,
                'display_ends_at' => "2020-07-13T03:52:09.000000Z",
                'display_starts_at' => "2021-09-21T19:09:48.000000Z",
                'ends_at' => "2021-06-08T00:28:56.000000Z",
                'starts_at' => "2022-06-15T20:02:10.000000Z",
                'discount_upper_limit' => 2593,
                'description' => "64f1DT6D6Mien3I4QpNgQKGBSiEs2F3MGwgLve3TZFNm4S8a9Imcm3HEYVUSqsC3AriSwCEB0Kew5ULKwo1UdPl33Js1Kuu0UegnQjK5K12",
                'name' => "MWvCvA9"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon8()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_amount' => 4676,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-07-25T19:57:53.000000Z",
                'display_starts_at' => "2021-01-15T07:23:34.000000Z",
                'ends_at' => "2022-06-25T09:33:47.000000Z",
                'starts_at' => "2020-07-05T23:08:29.000000Z",
                'discount_upper_limit' => 510,
                'description' => "ouPF8sEd3lBtNl0JB2dKxVrlXLEonC1KsoREeh2RXqHgFOF3b7VdwEdOPGXSe9OOoep5LkQDV7qJw1By6uFH",
                'name' => "kBHhurHoZlcvR7Q0TdgtR"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon9()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_amount' => 3896,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-04-30T01:32:26.000000Z",
                'display_starts_at' => "2020-03-04T20:15:04.000000Z",
                'ends_at' => "2021-01-11T13:50:44.000000Z",
                'starts_at' => "2021-01-27T12:25:54.000000Z",
                'discount_upper_limit' => 3864,
                'description' => "4LxjYp1VFXi65IWH287FkS1AdoZmrqVFQp8fp9IpDGNT32XXjSeAsfsowmrnytFnDNPErJC0T6j8TSBN1GRIxfJ3UGUUM2jHDzbRjTfUU5d5AtOipE6L0lEeYXxSLgJV1GwAOqdc8zzTPJEfMbaKIEhnBHfV6tGM4VG",
                'name' => "urvyE3ASr9IOsPHz4Zd6uXHhCBvnC8wCQDn5TxePGCKc6zq0vbsfAwCBSEwRfx0DBbiZykOey7zjJ6OyJP8"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon10()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_amount' => 4603,
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-11-18T11:11:58.000000Z",
                'display_starts_at' => "2020-01-03T16:10:03.000000Z",
                'ends_at' => "2024-04-02T17:58:06.000000Z",
                'starts_at' => "2021-07-15T21:58:58.000000Z",
                'discount_upper_limit' => 9476,
                'description' => "6jjFnlRSGQkOLow4uOPR7jYUkie5Rbdop3nbAQNRasJaqAeaFh0mPOgCiw12joVskUHIrzFx8",
                'name' => "5stT5X2fdTsebRuLVbzPU8r1TG2yJEOhnrWkQVh8G8vXFKeuF0FhTncNlMmgEuaHAHntz60OEH7JgjiAw3cGaLL5KHpinnRK5y0OzJ9Hvf2cVYRMoN8ciCbZWnzc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon11()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_amount' => 2075,
                'code' => "DnK4",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-10-31T06:47:54.000000Z",
                'display_starts_at' => "2022-04-20T17:22:37.000000Z",
                'ends_at' => "2020-09-11T17:00:49.000000Z",
                'starts_at' => "2021-01-12T18:14:53.000000Z",
                'discount_upper_limit' => 2465,
                'description' => "gWzsFxrEWGQmIqwq80GWYOCdqp3aMw45RftnlC78XMJnZ0CKAQudt",
                'name' => "EN83UK6KJ482qLWZU1lTgJBoEtylA7LcgVEYNBH5KGkiTeGrXAkdlmbDvPcxbP00J7QmpOV"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon12()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_amount' => 1660,
                'usage_limit' => 2625,
                'code' => "7MeP",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-01-26T03:31:36.000000Z",
                'display_starts_at' => "2023-02-02T03:14:15.000000Z",
                'ends_at' => "2022-08-22T06:28:44.000000Z",
                'starts_at' => "2020-07-12T08:26:09.000000Z",
                'discount_upper_limit' => 8072,
                'description' => "Sm3L3WBUYIGLXhu0DvMLxvuDjJfJxeesKkwbEHxkNigyccRVuXaxHAAztkflrbX507aitxdTcYjjCJVatXW3s3mbWjjaocKJS9JHlwFlJcsltjjmodDQEUxDaghv7DnSC5Rfu0C0uKFwmpPkPjblE3KxRrUTFSpI6jwJUUxrUc5YmXel2A200gV6FxYfWwCiS0MuCLswxDV9drgRKhLSvZ2KQO",
                'name' => "xMHroQo6jM66W2y8KrZ8xMlNalvWasLjNh8s14cZJ7e4Q9GCUyL2v9u3mWzZwKqxzujrUlmkKRdRXeieY6A"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon13()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_amount' => 2637,
                'min_amount' => 7518,
                'usage_limit' => 421,
                'code' => "8WCqGZQWN",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2024-02-24T14:36:20.000000Z",
                'display_starts_at' => "2024-02-13T20:25:25.000000Z",
                'ends_at' => "2024-03-26T04:06:36.000000Z",
                'starts_at' => "2024-03-28T19:42:28.000000Z",
                'discount_upper_limit' => 8374,
                'description' => "m650n0RmhPNf1QdSFaslICN4xIeeSgcGsS3PA5BMU547lNJdN573CatnkU3QijXWL36Ne9BIyD0VsxUMLq2pynj2i9JShHMs7dpHbhmzmDvsuxdQFF1b9FFVSxNRhY3CeG383Fyff0GWufJQM5UqG40T5H1YOyXeD7lp3hQ7iTUdtYXMwyZtYN7NcCeDXI01ioT6dE59eFWe4PxHJhHM6PRObQxj3f4w8El4HGgfInUuZUZacdXJKlldoDuv9TA2",
                'name' => "XHRXocL0a2ENjq4YdkJGWgFmK"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon14()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_amount' => 468,
                'is_shop_specified' => FALSE,
                'min_amount' => 905,
                'usage_limit' => 7089,
                'code' => "Af2HgecI",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-12-24T04:40:23.000000Z",
                'display_starts_at' => "2020-12-13T14:07:39.000000Z",
                'ends_at' => "2023-08-02T02:47:16.000000Z",
                'starts_at' => "2024-01-09T01:35:53.000000Z",
                'discount_upper_limit' => 6610,
                'description' => "ST7ScfdaiXI0aphnQpmaEH46JpxMwBWB66twUXazpjqxEREjqmyqJkEdfkYviMgBpZAYBbcvRZzaI37qk5Qpl5Gz36NQavWZXSE0IrKdpz0FXntwLwsP6PlvtKfS7zk6Hoi0oeAT0NWEwBSET0oVnBy6crZKnv",
                'name' => "ytNg"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon15()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_amount' => 1309,
                'available_shop_ids' => ["7bd93b28-ca24-412d-be7b-7da0433e7b4d", "936667e0-78f2-42bb-8014-2ff7850796e1", "fe7961c7-541a-4a0e-a5a8-cfc6aa7398a0", "fccc95f1-a2ae-4c99-9833-4d5d13f47af7", "8aea1f65-86dc-46e0-a7df-b84c13bdfc2e", "6fe2e053-674b-498e-8047-70ba72e0639e", "d5f765fd-190f-42d2-b00b-02dc88188871", "4056092c-b10b-4b12-93a3-7c45b6a67b75", "438d3e1d-6083-47fd-b7e0-ff90a26abf4c", "bddfb457-abd4-4a16-b9a1-f5baf376b61f"],
                'is_shop_specified' => FALSE,
                'min_amount' => 688,
                'usage_limit' => 823,
                'code' => "B088FF",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-10-31T11:28:14.000000Z",
                'display_starts_at' => "2023-02-21T05:18:13.000000Z",
                'ends_at' => "2022-05-28T09:41:46.000000Z",
                'starts_at' => "2024-08-30T05:00:49.000000Z",
                'discount_upper_limit' => 1030,
                'description' => "nrcL9APcDhFVXImIJBKStcO3wB304Jmf05hgJ0rNiPO7Acqsb1X8oQj9wf9SU4WjLK1VT02GEDFloz09QK5UFuC5JXRVayFf6oyQZu56A1wWzKTTxm1brwQKhHT",
                'name' => "3R75Hu"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon16()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_amount' => 7608,
                'storage_id' => "c06ef196-cfa6-4359-8a4a-20edbc666fb3",
                'available_shop_ids' => ["aff459e8-a0b1-4c13-97ad-f5e18b98470e", "fab171f8-ba54-4680-b43e-70b5b1aceb95", "4ef6607f-e4d3-4f8d-b389-9b5bbe383a1b", "03aae8f3-11ba-41e9-816a-0f18d56572cb", "bb930ed7-738d-4685-8af9-4ffa1030e231", "d7bdbd82-fc16-429b-832b-28f62ca4280a", "abc1e9ef-f836-447f-a3f6-b982858d9dc5", "c0777b3a-9447-4844-914e-fd734f4a9075", "1f374566-8fe1-4d1c-937d-fa0e60574808", "b082592d-7299-4778-b219-2856bba992d6"],
                'is_shop_specified' => TRUE,
                'min_amount' => 8385,
                'usage_limit' => 4087,
                'code' => "QqeQU",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-09-20T09:40:18.000000Z",
                'display_starts_at' => "2023-02-06T03:10:02.000000Z",
                'ends_at' => "2022-10-27T06:10:22.000000Z",
                'starts_at' => "2020-06-27T19:38:20.000000Z",
                'discount_upper_limit' => 2755,
                'description' => "i45yyQT",
                'name' => "l9wTWmjZWPblWstjkwC6ll5fjzCHapR04ADVEFmUehgiDu605XKZkJCbVsNuqqVdU"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon17()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_amount' => 7176,
                'discount_percentage' => 8700.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon18()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_amount' => 3272,
                'discount_percentage' => 7451.0,
                'name' => "FVHz0uIFKJoDWeoZQYdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon19()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_amount' => 519,
                'discount_percentage' => 6874.0,
                'description' => "F38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rpsj0heI1pcWBx1T31cQtfbPC",
                'name' => "ATbfETgM8KooCtS8z1fc4bmpdj"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon20()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_amount' => 4120,
                'discount_percentage' => 2371.0,
                'discount_upper_limit' => 6100,
                'description' => "fj1GK9RSuRp80JIGIfZb0zQJuIdXR7obZEoGLvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd5fwAxEmAXCuaDk4OeOYMd636fXlQmJ9z2bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmCRB6BbdWS6JCIuNd5OFNrZXER72QaNrZpzYfcTDxwidoKxhgH4IlA44068ievlutM",
                'name' => "BS788il7UEqSzLy9xJxJq4hHbOAXXYVgVj"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon21()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_amount' => 5323,
                'discount_percentage' => 7901.0,
                'starts_at' => "2020-04-02T22:36:42.000000Z",
                'discount_upper_limit' => 3432,
                'description' => "mxuYV64qe5o2B2OlLXdk5kJbuw4YuJbyUdwtwe",
                'name' => "akD"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon22()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_amount' => 7545,
                'discount_percentage' => 615.0,
                'ends_at' => "2020-01-15T10:27:17.000000Z",
                'starts_at' => "2020-10-17T17:05:33.000000Z",
                'discount_upper_limit' => 3888,
                'description' => "TFsZujDlCiTABlfIhphFt9MZHKK4",
                'name' => "ljx7sJ424DF7dkePprAJuqXJLC9DlGjqYc53kHtf9cD7bpNKlOmIqFEpEzlkbZXsHeK"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon23()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_amount' => 8473,
                'discount_percentage' => 6281.0,
                'display_starts_at' => "2024-02-08T00:47:20.000000Z",
                'ends_at' => "2022-05-09T18:45:38.000000Z",
                'starts_at' => "2021-12-08T03:00:07.000000Z",
                'discount_upper_limit' => 894,
                'description' => "ZjofXop8q4Bfps6VchHwOSBaSPaNKxM4bPYPan8UYIRAISeS032nbwP9uwXrTBWthKP8SFB1epaCsenfTVlWMFnuMgJI5wZ1cKhV863o3fLMEPLjDOHvTYhO06Q",
                'name' => "E7ACXnugqJAsKt"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon24()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_amount' => 2882,
                'discount_percentage' => 9985.0,
                'display_ends_at' => "2022-12-27T20:09:12.000000Z",
                'display_starts_at' => "2023-10-10T04:19:50.000000Z",
                'ends_at' => "2020-12-12T18:32:15.000000Z",
                'starts_at' => "2024-09-03T12:42:12.000000Z",
                'discount_upper_limit' => 1863,
                'description' => "R87GnzBbDtq5K3lfoJShMC6uD2oZ5QpD7GXwDffXUtXBf9of2MaByNhkorzLzXS7sax7iYOPlAj5UlMDxo6iDarlMDzJC7wMAkFYNemkzZpvDvog0lglLv2T90aOF7qLZJG6mWFW8mYG8iBpA9wK7FerKmMDJDN9kjnEAt",
                'name' => "WkM10yTZC3mt5NbCfjtxFXhJHyZxe38yvM1SEczLfO3bcMSu"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon25()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_amount' => 6859,
                'discount_percentage' => 9828.0,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-12-28T13:44:38.000000Z",
                'display_starts_at' => "2024-02-20T10:37:39.000000Z",
                'ends_at' => "2020-07-17T01:59:49.000000Z",
                'starts_at' => "2023-06-15T13:48:14.000000Z",
                'discount_upper_limit' => 7916,
                'description' => "GbkHo1PhxbbT2umORVj1yDfkPqeu7VGzhCxzDjEPJsArCV0qEvJPpVoq77PuYo1FVSdDE8cTf3i5qFGBCHYpL8ODBvwgaMAc0JPVvhl1tkrYQHQhhRs2PIaofbMQ1W",
                'name' => "yxx6iPX8"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon26()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_amount' => 9877,
                'discount_percentage' => 1143.0,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2024-05-21T04:42:43.000000Z",
                'display_starts_at' => "2021-03-07T08:30:24.000000Z",
                'ends_at' => "2021-03-29T08:14:06.000000Z",
                'starts_at' => "2022-01-03T16:37:41.000000Z",
                'discount_upper_limit' => 9065,
                'description' => "zApKM66ZkEOto1oTpzcZyDOIWVwoFQcmGYbDKlivyrCrMwSNsOLmKdqXCCeTbwp9jzAmkV",
                'name' => "eybVqp1YrzurkqIAwcJ63x2Wpl"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon27()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_amount' => 9323,
                'discount_percentage' => 9132.0,
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-10-04T18:10:55.000000Z",
                'display_starts_at' => "2022-12-24T15:56:47.000000Z",
                'ends_at' => "2022-01-31T17:58:30.000000Z",
                'starts_at' => "2024-07-08T05:24:29.000000Z",
                'discount_upper_limit' => 9491,
                'description' => "jX6CETl764u1bEUuZsZXEigsXHGq2ofRToY5BXgCjIyZIJEzXmOEMtSXxzZokGYkRiArikWZSvWA49o8HQUEwypAtZsgSDOAS6m6W",
                'name' => "4ycEKeHr4636lRXTr2iPpZt0j1CI3l6J30qBjXV2f99mP"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon28()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_amount' => 2511,
                'discount_percentage' => 9638.0,
                'code' => "l",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-12-13T01:39:42.000000Z",
                'display_starts_at' => "2024-04-26T18:48:09.000000Z",
                'ends_at' => "2020-05-17T19:13:27.000000Z",
                'starts_at' => "2024-03-26T22:54:49.000000Z",
                'discount_upper_limit' => 6208,
                'description' => "RuNHXLsbYmrfHwiW6AehvKLu9",
                'name' => "SykyDMxjQhXvqsNkUwpnxOJbMzTMi5NaDqvIkEgkU1iGJo4Veu1nD62pEennAfXO8IbuWWi93UYOzWoEzm8A2AGl9yivXZBxfQ6TXMiAoAS"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon29()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_amount' => 4687,
                'discount_percentage' => 1779.0,
                'usage_limit' => 9793,
                'code' => "MRnA6Rq",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-12-24T02:03:47.000000Z",
                'display_starts_at' => "2022-12-24T23:05:30.000000Z",
                'ends_at' => "2021-03-26T23:52:19.000000Z",
                'starts_at' => "2020-12-13T06:28:54.000000Z",
                'discount_upper_limit' => 9945,
                'description' => "oi1HNQ6SUUxfHdkFZrSjoj4E906hjOODSKfXhRhf12fH18u3lWSr6bxBxhq8hzLJKGl7pegu99iLkGceRH09p3Djf3UXXM3TuFXvJTrk8Ursx5VM8uakcEIyxQz7D46SGfEdpD0",
                'name' => "URVkFLTmlxp8SI9cXescrmSD5nkp7THGlyH3t2HB4wHFbCGx0Xzqx2wtaKpu1qdmiKn22F3ctIsxTTV24W3iMjgCaf4v1F7zb24TvVYyzGoNYLIXxqonkMGqXlJpJR"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon30()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_amount' => 2129,
                'discount_percentage' => 6391.0,
                'min_amount' => 3115,
                'usage_limit' => 2617,
                'code' => "9cv0p",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-12-10T08:43:38.000000Z",
                'display_starts_at' => "2023-07-15T06:06:31.000000Z",
                'ends_at' => "2024-04-04T10:54:37.000000Z",
                'starts_at' => "2023-06-06T02:15:36.000000Z",
                'discount_upper_limit' => 7842,
                'description' => "KqGnnOeMtFto3ZtBMyDD0JldWFE85ZjbUaTENhmx5ChLqBvfWnrg6wEB880lMBDEtofOwuX4DmXscPUoeV1XH78h5Guqwmdx9H0OP7RXsy9p5y2A7XdzXIFXZbjsiiNiXZ0lFTg0buQwKeaQ4",
                'name' => "WfPuDn8vtLGTKy9baAXpUrNxQgJv2d1RjRDvxxlQFhM2eopmIlmvqzqnGOYbg6rdqjemTbEPE"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon31()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_amount' => 1079,
                'discount_percentage' => 6761.0,
                'is_shop_specified' => TRUE,
                'min_amount' => 8502,
                'usage_limit' => 638,
                'code' => "xw8VlzyC",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-07-06T00:10:34.000000Z",
                'display_starts_at' => "2020-10-25T06:25:39.000000Z",
                'ends_at' => "2022-07-21T02:11:13.000000Z",
                'starts_at' => "2024-03-04T10:59:43.000000Z",
                'discount_upper_limit' => 5580,
                'description' => "0qfahEqSWpbWk8lIjmXf3crokuVBQQlsA8T5nZUMuDqspHuPmGiUoPteza9Foxx3GETJuunMNM7JUVu7YgDI0zS",
                'name' => "63cU49za1QJALcpDZJ7YKoaGZqFQRMYj7eI0OiTgfPr68fP2A8RCqVjIMZulltZtjgMfuDxn3QgsidEuf2NvBHeZX8hYKnrzJWptMhyWUi64YZ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon32()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_amount' => 4834,
                'discount_percentage' => 8337.0,
                'available_shop_ids' => ["ddf4871a-1f09-42e5-9ff9-cb43ff266353", "6453c5c6-1f48-4374-a633-8eed3a3e1f5f", "07c07063-2008-4b72-837b-96428622c9ba", "b3169538-343e-4298-9e74-d9249a443f83", "52ef8f8b-61f1-4a8c-b8f1-8efb5bab9704", "b9f21ca0-d032-4bc9-8ed6-5fd9852e5e03", "bf073c32-173c-4a0d-96df-732f92f550d5", "f9d509d0-05db-4624-9af8-7e2771ba1f8b"],
                'is_shop_specified' => FALSE,
                'min_amount' => 4171,
                'usage_limit' => 8204,
                'code' => "8mwHnigIC",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-05-30T15:23:11.000000Z",
                'display_starts_at' => "2020-10-05T22:05:34.000000Z",
                'ends_at' => "2022-04-01T05:42:10.000000Z",
                'starts_at' => "2023-04-26T01:23:04.000000Z",
                'discount_upper_limit' => 9317,
                'description' => "LEmOps6u4P22rjT4dupT",
                'name' => "BgLrwJlYmSqD3jh0KtoQaeaW3v"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon33()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_amount' => 2862,
                'discount_percentage' => 7223.0,
                'storage_id' => "feb74599-457b-4c77-bf81-a17f621d2eaa",
                'available_shop_ids' => ["ea4e98d9-d7e5-4a37-a292-06e22ccf3dbb", "2e7ff2ac-adb9-4210-931c-6048f4a36254", "1aeb8ea3-b617-482e-8f0d-a42560533d61", "7bce1e95-1d1e-4277-97ac-f3429ce3711a", "62574e9a-1ced-4710-9f4f-23ca5431966c", "a9996590-a686-4753-92ce-d9fe301aff83"],
                'is_shop_specified' => FALSE,
                'min_amount' => 7309,
                'usage_limit' => 7154,
                'code' => "VZwJO2xN",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2024-06-12T04:41:21.000000Z",
                'display_starts_at' => "2021-02-02T12:11:01.000000Z",
                'ends_at' => "2020-08-05T02:10:33.000000Z",
                'starts_at' => "2020-12-12T05:37:35.000000Z",
                'discount_upper_limit' => 6937,
                'description' => "pNyoJI0vqJ8n0oUjQYsKaRMsrJUacY2rYQO4gmGHCfbUV5BkcqYiSNlDYC6MEWefziiHI3EykNpjwCPjAkzyY2kmUe2JJ53U3N6F0e26pbO3HttlG4eyiatMI7VF3dtugJSz1Q3vovXNsgFsW05W19aXuGVVRQlUVJv9CZ2ZsBhmJBENJ2Jp2YLnPueitIaB8AWaFb8JKCZbl1FLUJSG0fudQ9bvTSzMB",
                'name' => "1Qigyh82R8yfv5oZ1A8LucSTZwJytxSEpRfXYxFxMDsqe8NITOunWJGeGMfsCgwJoSsvq0p2vMuqT"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon34()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_percentage' => 5302.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon35()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_percentage' => 8313.0,
                'name' => "Odp5xmnGGOh83wDY3YT1DlU5jqThl0v0LlAw1s"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon36()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_percentage' => 9848.0,
                'description' => "ypKPTUBVqh1Y1karSx9kbbfwykuboyLPrrY2btuxHx9YophvSLqEzRt6XTR3oDpLSuhWGSp4IuNXEvAYv341undTljbWPhfpiwPMjupC65xVDnAJbsKD6b895iftqbY67Ut2zsAKH6lKT6gJXbaEKAddoUM0CRdaSDeoQ9lXXELG9oQdgpEse81VvpXr3HeuSevupI3Lg6cydG4CQY3zROLCcC3cDzGwCmJXHiF5C2aKJupg0Hph",
                'name' => "EUCWBeCDLYnE6HiVXoG09ihrRj4aejWMyEn4Q3X3BDxBJJ5t6"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon37()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_percentage' => 7599.0,
                'discount_upper_limit' => 5992,
                'description' => "IPcBKQDcagEkitF8iACEva8PGaDArnv6F3HhJclpvEl0kBLWjkCR",
                'name' => "0Mj5I3Hqz506kx1IdZKDkCNCl989Inr9h5bKrK2A0mcF"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon38()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_percentage' => 6942.0,
                'starts_at' => "2020-09-22T01:55:48.000000Z",
                'discount_upper_limit' => 3219,
                'description' => "TtdvdsEkzDVoxJr0lAnMovtOnbZ68",
                'name' => "JstsOcxw5PoatcF0TU5W5omYIqjF"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon39()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_percentage' => 8221.0,
                'ends_at' => "2020-08-04T21:12:43.000000Z",
                'starts_at' => "2024-06-06T09:10:54.000000Z",
                'discount_upper_limit' => 6361,
                'description' => "eVX7m2aCCypluKCuWAlkVHsDkHFJvihW5VcQOv2mc2ISnCuuu6HEZICTUsFd55cysKpzPw06buTFvYo4vEubGw6jVHah2jNyPqoWcQPdnYsCcbQIY2KFXsspdkpVkTBJa3OTrsXs88kJNoIZazm0lWPTZ7efHVp4Du6bqVzq0H9hNDIpWOGRlL4QDCIWrLzYwdZH6RYisLngmui2yyfAvCUPPfC6gPSyCFjnlF5wS8",
                'name' => "FXtStGksuJSc3uI6YbNMb4YSuPWKo7xO0kav9UABs7zcSSckrHrP7zrKa6"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon40()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_percentage' => 4027.0,
                'display_starts_at' => "2020-03-20T09:00:47.000000Z",
                'ends_at' => "2022-08-01T21:38:12.000000Z",
                'starts_at' => "2024-03-10T08:17:43.000000Z",
                'discount_upper_limit' => 2717,
                'description' => "4AbEENpv2mR4v",
                'name' => "cFbZYPGyrsGLqJFlRMGfDCisIe5qHDsMdG7wbTKEpXzy"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon41()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_percentage' => 7678.0,
                'display_ends_at' => "2023-01-10T20:19:09.000000Z",
                'display_starts_at' => "2023-09-23T18:50:25.000000Z",
                'ends_at' => "2023-06-29T12:35:45.000000Z",
                'starts_at' => "2023-01-07T06:28:18.000000Z",
                'discount_upper_limit' => 9253,
                'description' => "4sXPad6xuwUqi64YRTYtsOeEN9XbwlgwBy5OkIYkbdAf4PBqh2Y5zV0C85Vn4l2htJKp8EeWwIbRZU73CECtq6YH4jkVjZI7iaSu",
                'name' => "egvmESb5ZkkQma0HX"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon42()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_percentage' => 6091.0,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-01-25T07:57:20.000000Z",
                'display_starts_at' => "2022-08-16T03:25:52.000000Z",
                'ends_at' => "2022-08-16T13:16:17.000000Z",
                'starts_at' => "2020-01-08T10:38:29.000000Z",
                'discount_upper_limit' => 9246,
                'description' => "v4lzkwZFtSWx4aRECgS2Rzs",
                'name' => "2ylIq5ZtrGXVCQUhbREfojZVoiIjURbvF5cuoyvA3t"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon43()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_percentage' => 8084.0,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-12-23T12:25:34.000000Z",
                'display_starts_at' => "2022-09-14T03:04:00.000000Z",
                'ends_at' => "2024-07-21T01:15:44.000000Z",
                'starts_at' => "2020-08-10T17:00:46.000000Z",
                'discount_upper_limit' => 5977,
                'description' => "6SNRraYwc8QDfAEfV4F8XUQw7FOCvHUkEBp2LxsthHBe9EWUoT5QLe9Yg2CBY3rucfBues6uHoyn0kY9tu08AkjC0WPKbQvYow9FaOH3zD7SQmRuyNCMpGLgUAKK4AYXStTHGYGCT6FSvry2ciGzpWdg5yn158N5eaT1YQUtPEMBFK5RCvbOFISTKPBIbnB4IlVfzKQeAZtwqv4AGYkQ5YWzuO0mr",
                'name' => "zlLTVYxU13omHKmdh2ng7xlmB0D7qlClsr3peE1RPsdDZEoaT5osfv5Au45ikmQzjXEIrL5tEVsPcc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon44()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_percentage' => 8844.0,
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-01-31T04:43:29.000000Z",
                'display_starts_at' => "2024-05-10T12:28:42.000000Z",
                'ends_at' => "2022-04-14T00:19:30.000000Z",
                'starts_at' => "2023-06-10T05:47:44.000000Z",
                'discount_upper_limit' => 6913,
                'description' => "uGxgjotbAnDFm6nBFTBcp5MgKi6djde9q9Gx06zspIhW3gmaN6JcrvmX5G7cBGoNqTURH3hLLIVR7YcRrTeQOsLdvK2PUyIdpshyxjFJxJ7Fcj7Ywb40WRFS5iP8DHnWS95dKYCDWjMDqXUFGoRA4XvfiL62Wv2vl8qJafcwBDpLTRN1a0lar5cvmWk6HP3Edv56",
                'name' => "9t5VGuIJJqB3hC6IgJljp1y8KOJgfu4WFT3sPLKGiMRgfz5jiMdvRW63Z9043h9SU3fTD5o4Kn6TQ5PsH9YtmnNiOZyV9AO3DnB1YRES4xlc6449ib"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon45()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_percentage' => 4983.0,
                'code' => "y8gDnWqdI",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-04-07T08:04:30.000000Z",
                'display_starts_at' => "2023-12-31T05:02:23.000000Z",
                'ends_at' => "2022-12-09T02:15:04.000000Z",
                'starts_at' => "2023-08-28T19:12:18.000000Z",
                'discount_upper_limit' => 4837,
                'description' => "Ih1PycrJFKeRKa6OogwkyZYeik5qw2qVOD7",
                'name' => "lJwoEqJ4uimGtF4vDevDABoV1497oKjyplKXUyjuZoAdZaiUShsjoKemD9IJVji3EhQ10nakJ4Xx7BosawhL51XW0ltZ8tyB"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon46()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_percentage' => 9073.0,
                'usage_limit' => 2148,
                'code' => "Ul09HCPEoM",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-05-24T11:55:26.000000Z",
                'display_starts_at' => "2020-04-15T06:30:55.000000Z",
                'ends_at' => "2021-08-01T00:12:01.000000Z",
                'starts_at' => "2024-03-31T12:00:55.000000Z",
                'discount_upper_limit' => 6979,
                'description' => "LCVxkfS7LC09h1a33P4feIw8rNkq1IJcIVXzbXoLITUciADNRcm8cr7h7uvpVmJgh2hspBOtxaFVpQwu69vaYb020lVhpK1ujAV4SIGQkIPmfa5YJsZSIV5H0hKFZRjFJsBJwxE5ymHkkfvwj75uGxXyxLiKvyAHQ0Cmh0GR2iNpQgbrTS2HEffP70DHCUohTMu269OO6DIw88je3Px2M6UQ20lAXsAZIDxFX",
                'name' => "pctZUoXMEwvfZIhfCcdWRRWKBpAMRk3KT9aHDvn680BNVo61whu52VEWHzeXnCqnnjKe2ZokcQxt9okwN5c4Mkgq5YYKEEntoCEiLAHJ2sW9Fitjut"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon47()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_percentage' => 7754.0,
                'min_amount' => 9619,
                'usage_limit' => 9323,
                'code' => "XGEN",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-11-11T16:31:16.000000Z",
                'display_starts_at' => "2022-04-11T03:32:59.000000Z",
                'ends_at' => "2024-08-11T18:31:22.000000Z",
                'starts_at' => "2023-03-07T00:17:54.000000Z",
                'discount_upper_limit' => 1401,
                'description' => "kKJlN107OaiUpqdHMS0BnQNQ8yntRPdiO7nDWAmmXsETvex6EwUtMqxtCSMEZWLR3IYMZqZQp71KYV2dqAhSRH0jBaTj6CKr7da3Hc5MrDSr",
                'name' => "YQmTFD8MK4LhwIRladKEnUCUBMTsHjSLX"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon48()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_percentage' => 9681.0,
                'is_shop_specified' => TRUE,
                'min_amount' => 7191,
                'usage_limit' => 6487,
                'code' => "Z",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-03-29T23:28:46.000000Z",
                'display_starts_at' => "2022-01-24T17:04:00.000000Z",
                'ends_at' => "2023-11-22T17:54:04.000000Z",
                'starts_at' => "2022-03-02T17:26:50.000000Z",
                'discount_upper_limit' => 7496,
                'description' => "OS9NchMxuvMOV5pE0ThIcNVnpd1n04FvafoOT5XflXygJfyBJl1nws6Ne3S7kdpHli9FCf9vj51iwXi5vVkai7fMidPllBkchJ2ELHNBkuEPtWGn6U1tknXv7iBjpuz8kXfTQVtq7nYSMGg6A5q48d0VvhbqvZRxaI0AVDH5phIrM988xOpACBuWehCLI5Ithzpo1sbw0fi8Tfl4MiezYuuDN",
                'name' => "5NO2HkiJUlQ4dKgR3uo3pyHQKCLEzAV2HW0T6wtgFo"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon49()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_percentage' => 9607.0,
                'available_shop_ids' => ["8adbc1e8-6f6a-41eb-8d3b-dfbeb51be87e", "9b9ecca9-4fab-4aaf-a7f0-bb04ba05f3de", "500e2781-3a75-4290-a1f8-efb7db101c3f", "b55cb193-9369-42ee-94c3-0d93857a9f04", "d2d4c49e-804b-475c-89ca-0a7ba8423a6c", "1fa01bc1-d990-408a-ac6b-004458281387", "6899bb93-0e01-4258-b07a-2e3958bbf66b", "c8e73c18-f5a7-4895-b457-1bf4365ae76c"],
                'is_shop_specified' => TRUE,
                'min_amount' => 7760,
                'usage_limit' => 4534,
                'code' => "t",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-09-11T01:02:50.000000Z",
                'display_starts_at' => "2024-04-19T11:21:08.000000Z",
                'ends_at' => "2023-04-30T08:01:11.000000Z",
                'starts_at' => "2024-03-17T03:55:48.000000Z",
                'discount_upper_limit' => 2441,
                'description' => "CB7WpLioRLUylhwp3jBXylmnzTDYQPTQEhEDpiIl88uXhFr9tzNaCFLhrW7Qg63LOoyDRk2frbKYDtHXRSpeSviFk4W1qsOLMcNwe8KEeqmGGreSt4nt1ybC0Ywm3a7y1jkUDzYlQVbUnnRBBQRDsGnvgO2bodBPeKpRFsQIEwGMkEBFs4OKbpkXgOJ3P1nM9riBWugVW8sRaEhx8aJkSJHuUfzU3c",
                'name' => "xqLSG8S4aP0CNMNfb6VowWUVfzovzP7VL5ebcijLtVhmlM6k"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon50()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ad3660c0-993d-4200-86ee-df28d0536fa6",
            [
                'discount_percentage' => 4622.0,
                'storage_id' => "be317d82-d2a3-4742-b5b7-5bc41e9dfe8c",
                'available_shop_ids' => ["5b517998-26a9-414e-a734-796112041ed5", "e7b92dc0-ef2b-418b-b7a9-9142d6f92c01", "3b25a8ec-7eab-4857-b34e-882b30d6eb45", "ef98a343-8792-4dc6-bfd7-e741ca661fb4"],
                'is_shop_specified' => TRUE,
                'min_amount' => 840,
                'usage_limit' => 2523,
                'code' => "tcjGtIP",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-05-27T06:54:21.000000Z",
                'display_starts_at' => "2023-08-17T06:51:16.000000Z",
                'ends_at' => "2024-01-07T01:05:15.000000Z",
                'starts_at' => "2020-03-22T15:55:21.000000Z",
                'discount_upper_limit' => 9942,
                'description' => "8t6IuP7AfSh1iSdnomWlXA8y2vwAsTNYaeLyV7CWdrmk7DRyx2nAdRh4U2Gnj6HilrfsKlPIExrXeCFOu5KxrV4xhz7DzBywKIciMlN0S7L0N0uBHj0xIlmI7crwjgiJmBq8x2BMoiejWmPY8qwKCFWRUhTWJtrSHM5KvGCx3jvLeQXqJ7fOtRApW564YK0LvLN69VHlYJhXH6cUQL7XLfiXA",
                'name' => "zUZ8WIiKSeWU9z6lAbD3wpFlmsWusC8RGaBKUJdHLf9kwaxRb"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
