<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class UpdateCoupon extends TestCase
{
    public function testUpdateCoupon0()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_amount' => 999
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon1()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_amount' => 2506,
                'name' => "uyt9MSKJxZMvOSiSToVyUlLZYpsOEbPGle7PnhARQQb12XVIGZX29Dyx5lvvN3RvdFrJB03Awjgyx1LKjKra0Iw3VSgbY44nqluiZNrww3UIPDcTpj4770t9xMtk2wu"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon2()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_amount' => 3373,
                'description' => "UGbgJkQOskPAWj9zcuH8kQMLZ6LwoGqmvZ2HzrvL9pQWZw6qBf2eZB0nluB8B4cZc5DBIvnOFyRoEsaMnoCbZG4lkQ3FrjJ9RAEzEMsUk2ifFvvUsuDqBNQG9tR535ExtPASVXxC2HvyFNSNX",
                'name' => "IlPlVVnLwBZ665AQI4VRr0wSpNoBjGGosaVXkExOG031"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon3()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_amount' => 9905,
                'discount_upper_limit' => 3548,
                'description' => "Q9mfMxrQRKkEbQcdqPYIQDvwSeY8tonzD87PL0ayzkfiyYZxzf4OnlyTBskLXpmOglUU3Jrz3z4mI0xe8EV5QE7MylmVonQFbH22rnQ8SQE3u2Ni30dsC587BM9rV1YmjYrtqFmLPwQL4re8STMfnTuLG7URczRdV",
                'name' => "ngk2C6jpMOGn4yOZCYgFxkP7zMM1xuL3ZkiEVqHlzlGyxtIxyTqg8tHzWkemTWfXxszbv3j0fm0VAImnMBEMd8KiSMr5gYuVQM3foMnrrwf"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon4()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_amount' => 8776,
                'starts_at' => "2020-09-24T18:52:20.000000+09:00",
                'discount_upper_limit' => 4196,
                'description' => "NkbIIctydmaVAgquHbnkma8fqUyQoofWhiy3W2GkJbJVyUdbgF0Md9Y5ktoosQtgmtgvu9wd37MkqTSRnciIk89XYKjlnfVy0TAgXzw1sSohsNjy6SxeKx5U1FFlMldjE23SHNAqIT1XF26gevTBc5IOdpCZ6Updb",
                'name' => "7qf"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon5()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_amount' => 5768,
                'ends_at' => "2023-02-20T04:06:06.000000+09:00",
                'starts_at' => "2021-11-05T19:48:02.000000+09:00",
                'discount_upper_limit' => 2071,
                'description' => "A8HyS1f2rOYiUmhDP4oCHVOSys5ylYNMya1LX6hK1NDm6SJqqfWFMbmhmCZB8N4i6vWkvSoLT7mbYiXGtvvTZkPyrjX94wAz0T07aExdtMcGVfB1GPsYXu4GbS79movGECbZv6nTaMeT1WqqNQfk7syHxdLUnUy8N194a8GwK1pd7c8PnvHQ6XdQedkvvc1IGLD1It8GktzQaAf2ZmhfFDRBi0sMfH7E0K",
                'name' => "71G4lKu7v0t8tYAQ3argv5iVyYiwDZocXpWaMe6u1ILFix1JkMq73o9Vb"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon6()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_amount' => 1029,
                'display_starts_at' => "2021-07-18T14:36:31.000000+09:00",
                'ends_at' => "2021-04-14T18:20:47.000000+09:00",
                'starts_at' => "2022-04-27T12:24:21.000000+09:00",
                'discount_upper_limit' => 2647,
                'description' => "igNdENsh9RuMfCQ",
                'name' => "CPeuKuXMf8rxzqLP2CPzoi694sybZumzPU2G1TVNa8Q1B7WyzCS73o0182FVvxm4k85kaNrDO86g7O"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon7()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_amount' => 5921,
                'display_ends_at' => "2023-06-30T02:33:54.000000+09:00",
                'display_starts_at' => "2022-08-06T00:28:58.000000+09:00",
                'ends_at' => "2020-03-28T05:45:54.000000+09:00",
                'starts_at' => "2020-10-09T00:36:29.000000+09:00",
                'discount_upper_limit' => 8188,
                'description' => "x34rtqXdzWgrMysLe0qw0XzCRIkhFyxvZRMytcTxdAkPDMOquZkDBuzJkaSAhxG5UKI7kKI2LGO3v5Fa2MniO3Kfv85pA",
                'name' => "SMYJznI"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon8()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_amount' => 3807,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-05-19T02:02:51.000000+09:00",
                'display_starts_at' => "2020-09-27T07:12:24.000000+09:00",
                'ends_at' => "2022-03-01T19:45:09.000000+09:00",
                'starts_at' => "2021-02-07T20:58:08.000000+09:00",
                'discount_upper_limit' => 6452,
                'description' => "pspJVMSfku6FDaJILxE6wvw2hmGnbLzEvpdXgOJ8JzfH",
                'name' => "s9k1He4KNSi6Binql6pqSoB8VHRCiNNoIFeya05Ij5ecx"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon9()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_amount' => 5001,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-11-11T22:16:04.000000+09:00",
                'display_starts_at' => "2020-12-30T09:38:59.000000+09:00",
                'ends_at' => "2020-11-14T08:55:29.000000+09:00",
                'starts_at' => "2021-06-14T17:05:07.000000+09:00",
                'discount_upper_limit' => 2423,
                'description' => "63xswBnRFiOAeyg74RaEWa7vfmXNKaLilDF18dJ5WSs0OI5KwvQaI6nbP9dNGVAAo8H4V6pNrcINI",
                'name' => "fjvsMAWRiIfot1yDQs6icxQhMbgFZSNE13ABNVpcRpc2qA0WIkWN8i9LMa6I85LnYdhJqmHLyKuSHRz8kJp9L8b4zUUpCGxxKMmatoV3unC6temynPhK7iFEYM"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon10()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_amount' => 2382,
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-03-19T03:13:11.000000+09:00",
                'display_starts_at' => "2021-08-28T12:26:42.000000+09:00",
                'ends_at' => "2020-11-03T00:48:16.000000+09:00",
                'starts_at' => "2023-05-23T03:49:10.000000+09:00",
                'discount_upper_limit' => 2426,
                'description' => "pfiQcUT4t994lOcfbOkzpYMphz6Ricc36cQaFTScUHZWZIoXam74BzjsbRjy8K8iEWuwrofQdy4C7",
                'name' => "G9uGKL5Nz2FmTXhsHwYyRsDzx34HXm"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon11()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_amount' => 588,
                'code' => "PVctM",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-10-11T01:42:22.000000+09:00",
                'display_starts_at' => "2022-12-23T19:49:52.000000+09:00",
                'ends_at' => "2021-09-13T04:05:22.000000+09:00",
                'starts_at' => "2022-01-02T01:29:18.000000+09:00",
                'discount_upper_limit' => 5471,
                'description' => "wPN9xTUbTwGA8z24h4r9EhOZfpYhrIlV2tMbi2pNPphJ2PAv6N8b3XTrB1aPsw5C2k2SRv7hiHLnKF7jfnAJPVO7KGDjw89JurjSfwY4uZtakhvvve28Qapx8CerhgITjET2ZdFuWOU8gb3LsU6T1W",
                'name' => "QvEdro1cL0aqHXKjn4ZUUDXK0lkc1x0PZusHIOm6c1R1BgK29sc89fn8C7eGjCOtsY3tj0YyIKIOtA3hit8jY2EgdSrzRzG4O3z6gmPalH1T8ci4"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon12()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_amount' => 814,
                'usage_limit' => 1111,
                'code' => "1LYUKTF",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-07-14T23:50:48.000000+09:00",
                'display_starts_at' => "2022-04-03T08:10:48.000000+09:00",
                'ends_at' => "2022-12-24T02:54:26.000000+09:00",
                'starts_at' => "2022-03-19T07:11:37.000000+09:00",
                'discount_upper_limit' => 3636,
                'description' => "sLA91xTzLTRsC8cjaAbkTSPQ8AYNMxkjzRD1j3b8ngdiTgFpbJnnBvKIZ02laP9MEF27MVBCtBsGnYCqdjHdv",
                'name' => "3MiJaW069c4W"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon13()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_amount' => 4766,
                'min_amount' => 7304,
                'usage_limit' => 7272,
                'code' => "v0",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-09-13T00:48:28.000000+09:00",
                'display_starts_at' => "2021-03-18T06:31:11.000000+09:00",
                'ends_at' => "2021-07-05T15:24:09.000000+09:00",
                'starts_at' => "2021-04-12T04:52:07.000000+09:00",
                'discount_upper_limit' => 2786,
                'description' => "0g8kRkdTJWcXo8YCKGCwulsPgy63saETPweNv2wFPBo4FspTecaoEBfvLxSrIzhZGQoAP2QqZDUbtQ2IUzuLCGxMYmUOhqoNpD5HigsSpyYz8K8SInJT0IN2tHYNT8v6cvHilZib",
                'name' => "wkPX6gmgVxmyOVtTy6znyYlT0Jvv52hNHFd8CAhYP1OGdrlCjgpFMDmN7RJTu5QnaaWDY82DLGt2QNvLCj9zyQD"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon14()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_amount' => 5736,
                'is_shop_specified' => TRUE,
                'min_amount' => 4421,
                'usage_limit' => 1966,
                'code' => "f15rT",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-04-01T05:01:06.000000+09:00",
                'display_starts_at' => "2022-05-05T20:38:45.000000+09:00",
                'ends_at' => "2021-06-02T13:35:56.000000+09:00",
                'starts_at' => "2023-06-30T20:51:40.000000+09:00",
                'discount_upper_limit' => 6599,
                'description' => "v2vqBNnrQgb4d6W78dsUzuBqcBsYaHzK6ADKyWDUY67IvQAqiFg0lruq4bOW1z782j20332byzdYjsfvDRSTSWdqOSPgmJDW5",
                'name' => "ZMQlNd4VerRTOSeYtmPNru6zpNkYcHMOvdhjjVNNae9c40wbVZBM5KaK8FBMfNEG0T3uZp2mPS9iQc3dphgCmMjHHwDu70yNct74wXkcfNErHAxAlcoW6qIyjWR"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon15()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_amount' => 1027,
                'available_shop_ids' => ["f5cd62cb-7f42-4d3c-bb99-8ac38c3860bf", "140acf47-0321-4ed8-b5ab-371019a0405b", "07641937-a465-449d-a3b6-8455cfd62bdf", "0ecc949f-b9a8-4c4e-93e8-df6bb181783c", "26b97c7e-2e88-46fc-a4ee-45f865780ff5", "1a3152f7-5c07-475a-b906-a6f7dcb9a58c"],
                'is_shop_specified' => TRUE,
                'min_amount' => 8227,
                'usage_limit' => 9109,
                'code' => "91gf",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-06-29T08:51:09.000000+09:00",
                'display_starts_at' => "2023-06-30T01:52:34.000000+09:00",
                'ends_at' => "2022-10-17T11:14:12.000000+09:00",
                'starts_at' => "2023-08-04T11:23:03.000000+09:00",
                'discount_upper_limit' => 5345,
                'description' => "Bzkv9pnHMb7dmNBdjHCm8S08VI9tiJE71JBnmn6xAOlzXIfGMLCyosXWe5AY9pPuv96mmldAzto32r94gTP3forXj3nL36H19eNQFxiYVVXXIqsXuro4aJdfNLuwY9XIWnLlc9OS9Cp3Bp3iUUL4HxL6YkrEACtuYV4mHXnLoyUBGF8EdCsJzcoKCSwgPZSJgBf94jJkHyU0vE019ix5A52SogPyssqfxgvmiNKWek",
                'name' => "0Rozw3NT31KkJAjObupyZqOJIGX1OhTtt4d5DomF7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon16()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_amount' => 6961,
                'storage_id' => "f16e2a95-abc5-481e-a076-73d0e1d88647",
                'available_shop_ids' => ["d31447ca-2311-4cae-934b-833ec7b01ee7", "1fc2344b-aa9a-459e-914a-eb92f1e70588", "921033ea-1566-4df0-b296-3970f8c45b0d", "d0ff59a7-95f5-40ae-bde2-d16e80c47ce3", "167b4169-7dcc-441f-8a0e-9791c9437917", "822ec19e-bc3d-4c5e-8bd6-2c3a5704e450", "0391dd19-264d-452b-b30e-a8b1ae72d1c6", "1b88bda0-94a9-466e-95c8-7c1bab4e14d9"],
                'is_shop_specified' => TRUE,
                'min_amount' => 4272,
                'usage_limit' => 8160,
                'code' => "nMRSBCpaQQ",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-02-27T18:48:52.000000+09:00",
                'display_starts_at' => "2022-09-15T17:15:34.000000+09:00",
                'ends_at' => "2023-07-11T20:25:09.000000+09:00",
                'starts_at' => "2022-01-30T13:03:17.000000+09:00",
                'discount_upper_limit' => 568,
                'description' => "u2WkGHmY8Vf3rb8AVo",
                'name' => "xdTPcWwQ1HJz5ooWvbmx0vwn4scwbv0w9ySU8gLnOoDIfUtJuMq4pLbZEffiz32Y9"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon17()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_amount' => 4558,
                'discount_percentage' => 701.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon18()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_amount' => 638,
                'discount_percentage' => 2575.0,
                'name' => "MpeByQxt5h9kVo15tgEb7HZtKAal0GNhgP8B5N2jlzqOF9DEXqATfLhLjC3E4knaVMtR"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon19()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_amount' => 3405,
                'discount_percentage' => 6264.0,
                'description' => "HhXpsvVGll4pZLSJI7Y3EItDF4CnOlnAZqkOks7YTWDxflhUFrJZzb4N5rBI5FZRlrFRPEAxnzEjqR9TnRRqVmBN7x",
                'name' => "RJLwW7NY7pjqYULQmhyjDMwFQEwkaUGlZOhNj4DbcUmuHluFjnQfEMBUgsC2HAj42Z9BtfxHsgpXIgsY6jwFCc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon20()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_amount' => 9050,
                'discount_percentage' => 5872.0,
                'discount_upper_limit' => 7175,
                'description' => "0RHWvklh86xuW5KzV8zQZUxn02LGg7xKOMRfke8rKt0eu",
                'name' => "ES9aDlZrpJUHzlffZyzvhCISbgR5F7bH15FSj5PhFUUyosxrPuUZJsFIpHruI0PDDJz8o9xrnjhSm6IXW8k8lhVW57sFAQToxBdPPh"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon21()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_amount' => 2364,
                'discount_percentage' => 1262.0,
                'starts_at' => "2020-06-28T01:28:46.000000+09:00",
                'discount_upper_limit' => 6315,
                'description' => "quDcX7DWMKAIk496Um1b5drR7U5t2VSntAoomXq97a0i6K8kMLixLknmNm5BOlp55r1NJqKKmMSMDNHXM49YiCxqrzszvn6bj7stH2cYp8Oduz9ydozdALWCzunNWLqkZNWq5sezt42ld40YejmxaSQIdAY6mzS5zlfhW5O06mJVzNqGuR07MzaV2gLnYHRqeVnYKwSRaEjdVuASyzZcw6cVG9CKg7ea0asT6pK6ZXBjTeHFbB",
                'name' => "KY6KXS8kr2nlrnzouGWLq7cztqV"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon22()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_amount' => 2015,
                'discount_percentage' => 6652.0,
                'ends_at' => "2023-04-22T12:31:15.000000+09:00",
                'starts_at' => "2020-06-27T10:12:47.000000+09:00",
                'discount_upper_limit' => 472,
                'description' => "FgGyXUEsH2qqZvshhzuYxEGVd32mNAUk3Ucex1MVJvmI7mCPSy50wNRRYeFQeswzltU0sfsoB1emUvSd2OFryqxbAraxFNZAbmeInh4oQOayuQJED9AwhmPBCJ19vDHPTr61le7AlU9fLKxpvYU6BIygzRE97ExmQwf4CZa3",
                'name' => "rzC3uftigMt7QxcVwURcpZ2ihU7pMs9NRa5jWC6rb7pByQgkSNC1zcXyyLkDgk1xV6bbP2jacxd1JBRts4DI35vkWeHBvtSegzGKhXZWXIfM8fC4DPTvM9cYaNSy"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon23()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_amount' => 7224,
                'discount_percentage' => 4204.0,
                'display_starts_at' => "2022-05-28T06:15:35.000000+09:00",
                'ends_at' => "2022-03-03T17:01:53.000000+09:00",
                'starts_at' => "2023-04-02T22:58:49.000000+09:00",
                'discount_upper_limit' => 7445,
                'description' => "CwYgsyfpway76nMlJOaCDmI4KLZrjBzd",
                'name' => "2KAHT2B8eM00ODx3MQEHnhXdEzt2V8TLvm1jCLGw1aYHnLofh2aoZikHi6M1MRBxI21Qztmny8BwH2PDtMT1N2YFeCk0tI5ForXs"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon24()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_amount' => 8127,
                'discount_percentage' => 9762.0,
                'display_ends_at' => "2022-07-03T17:13:37.000000+09:00",
                'display_starts_at' => "2022-12-25T03:52:08.000000+09:00",
                'ends_at' => "2020-12-11T19:50:35.000000+09:00",
                'starts_at' => "2020-08-08T14:18:41.000000+09:00",
                'discount_upper_limit' => 880,
                'description' => "FwC",
                'name' => "78O9AjJku4eRSD7TIeMldRKuwfG8YG1l98V0fxB"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon25()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_amount' => 2313,
                'discount_percentage' => 8852.0,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-04-16T02:30:56.000000+09:00",
                'display_starts_at' => "2023-02-11T02:42:24.000000+09:00",
                'ends_at' => "2023-09-27T18:21:01.000000+09:00",
                'starts_at' => "2021-12-06T05:27:55.000000+09:00",
                'discount_upper_limit' => 1296,
                'description' => "8yEcbu3QYsAALAFvZnHeJ2qUNHuetPwFaxfnvKeZVRzAmpxw5yU6bePTCMQWkHJN9hN",
                'name' => "3M6oGtiUY4AaKX3eLQOK6kISFr6Om88U5taryFLcDg6bMxh8pQEEYIhp18m7PHf6pZGPXIREKXPvcDjg"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon26()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_amount' => 1886,
                'discount_percentage' => 6611.0,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-12-07T04:43:41.000000+09:00",
                'display_starts_at' => "2021-03-22T11:02:42.000000+09:00",
                'ends_at' => "2021-04-26T08:47:21.000000+09:00",
                'starts_at' => "2020-04-02T01:39:12.000000+09:00",
                'discount_upper_limit' => 5849,
                'description' => "Oo1Jx3NzH1iEz0v25FotCIn5RrzGLtmrEnEi5vxRSCCFtLKEvRfKP3eP",
                'name' => "PpAoMWyj2L0bf5bOkYk0R1XSZ6BidzgvMEnG5jZEDVSgQoHhLUfAFS8FP2AB6lUeVP6Csjx2etklo1c2HDi"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon27()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_amount' => 3011,
                'discount_percentage' => 8369.0,
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-09-18T06:50:41.000000+09:00",
                'display_starts_at' => "2023-10-10T04:10:11.000000+09:00",
                'ends_at' => "2020-07-04T17:39:39.000000+09:00",
                'starts_at' => "2023-08-25T04:38:28.000000+09:00",
                'discount_upper_limit' => 8819,
                'description' => "lVfN8fKF7tKDhIEuok91lySQUZlgUtVmmmRld3vxuOqkzITACPvdg4guSZmziPeDPJ4nJjNbse",
                'name' => "c0aT447BxF2QuzHXlOD5jkIUNXstwxjsP"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon28()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_amount' => 3913,
                'discount_percentage' => 227.0,
                'code' => "6Nh2SQK7",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-07-13T12:53:52.000000+09:00",
                'display_starts_at' => "2023-03-13T13:55:28.000000+09:00",
                'ends_at' => "2021-12-05T05:18:52.000000+09:00",
                'starts_at' => "2020-04-22T04:41:20.000000+09:00",
                'discount_upper_limit' => 6010,
                'description' => "oMSew4ZZXMA1V0DNNCka4ER6n6kLIE6HEUdaJxnEtJf0xz7LQwNKmETthvZSToxVO1KuvRNnfDbko9UAaEx8tQ9MaTkNKCcG83flrFOjuvJDaGcXa2wiEcz7F7sxZys0thr8AOU8TA4myC6Oja44l6CFZMDPCJkFOkkXPFfOCytq2kgkQwN3A",
                'name' => "Nyb43WonuG4KGZnLfzAvhfvvowNzYfSLcZ45sgJZm9CoGQko2XcKcJBLxTbVkHb9FJuoN1u0"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon29()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_amount' => 4729,
                'discount_percentage' => 951.0,
                'usage_limit' => 7260,
                'code' => "j2g",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-01-30T12:59:45.000000+09:00",
                'display_starts_at' => "2022-02-15T12:00:16.000000+09:00",
                'ends_at' => "2021-05-03T19:28:45.000000+09:00",
                'starts_at' => "2021-04-23T02:15:59.000000+09:00",
                'discount_upper_limit' => 5746,
                'description' => "26QJWLliRdbvaPqhnoPfgUmTasKicNiYFq0KFwnnmqwKTU1mCl0g4y1HM25GxueuNyg21oN6MnfFsGQz030i7olBaEcM618Zs8LEzJid0tCm0QKIB75qmDNnsacueGkHFEGymqcQBr5NHE0Krj5jA4vdcmNNRdmnBlhHcDWuJzgkfxAKpJKQlepFBQ0k9UbdzGdqZiHUp",
                'name' => "z7qfNkgtU8OKhSHYN2nNf7EPxgpJLYmOfxnF"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon30()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_amount' => 6833,
                'discount_percentage' => 1456.0,
                'min_amount' => 9589,
                'usage_limit' => 7579,
                'code' => "UeyFVZvJr",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-02-12T14:00:13.000000+09:00",
                'display_starts_at' => "2021-12-05T11:26:04.000000+09:00",
                'ends_at' => "2021-09-06T06:08:26.000000+09:00",
                'starts_at' => "2020-05-24T16:50:34.000000+09:00",
                'discount_upper_limit' => 5420,
                'description' => "i5GexzzRRZEiPItwg0JsrNURfe2kGBbnwoJnCULs3bDrH2QVFD6oQEvvJI6N23c04dmRdRQ1OPvHNY9PA0z9i7qSgUcLoqfZETXLdWG8TpzeaaZrVM2INEXSAU2iWo8DVtCr1qu7TR8xII19f5bmsS7jwdnfEuqzZVZ8bZqbMZCpF6yrU9lPlnLWHBdJo12iBiBh5H1IMYnUyOwon6RCkoT",
                'name' => "IzQagO7lOF5yTqMig9RrsMO1cR0JephbU2VXUSxTkTWCNJ7jvWuHCR91B8Mt6u"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon31()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_amount' => 4692,
                'discount_percentage' => 7444.0,
                'is_shop_specified' => TRUE,
                'min_amount' => 2404,
                'usage_limit' => 475,
                'code' => "L3rQ5RH",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-02-23T09:37:25.000000+09:00",
                'display_starts_at' => "2021-07-05T02:40:46.000000+09:00",
                'ends_at' => "2023-01-20T16:45:49.000000+09:00",
                'starts_at' => "2021-09-20T10:42:16.000000+09:00",
                'discount_upper_limit' => 1421,
                'description' => "Dgqmp4j7OFOS2KusaktMaRfINhbYK001ofA",
                'name' => "fQFCIkl4OGjF9UVZalNtQWeYYKqiItathdLFx6Jb182MHmAztoreGMWZPCZaiC6BAiTet5qXDU0CQX2Mp4Y4jOj80TwM7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon32()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_amount' => 1490,
                'discount_percentage' => 8389.0,
                'available_shop_ids' => ["a0dbd959-10ec-493d-9139-28d8c7cd5e7e", "c7dabf7f-5edc-4935-8863-b5dccd2b5910", "37be4b52-62e8-42f4-95fb-3b8ff239409a", "da844645-a1e5-4eca-9af2-1c63b6bcef8c", "7ce543dd-5cc1-4a99-997d-5d926dff34ed", "e02ce92f-6900-4458-a38e-a96e076b98a4", "c3679569-ecd3-40bd-8e10-3171ca111fff", "a8334bce-58e0-47ad-ad4a-db10b1b7d1cd", "651786ac-4c09-4041-a66e-f887b748833e", "398af122-e56e-45f4-b8c3-19ff648f92c5"],
                'is_shop_specified' => TRUE,
                'min_amount' => 2275,
                'usage_limit' => 5563,
                'code' => "eiPJ63z",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-08-10T11:04:59.000000+09:00",
                'display_starts_at' => "2021-03-10T23:16:20.000000+09:00",
                'ends_at' => "2023-03-27T13:22:16.000000+09:00",
                'starts_at' => "2020-05-28T20:32:15.000000+09:00",
                'discount_upper_limit' => 8209,
                'description' => "xJqWAfuYub929Jq9NZDKTciVGVZn9UyKDYFFkk0TttvEXV1NidR7GmyPU2OdrNcIGZUgbzDqgFNjgSbj",
                'name' => "HwPucmeA97QOEcvvRhSE5"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon33()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_amount' => 3571,
                'discount_percentage' => 5673.0,
                'storage_id' => "0f60ec1f-e001-4a63-8cc7-305a71d74b2f",
                'available_shop_ids' => ["dae9a81f-05d4-4193-8168-6fd6ba4d2bb2", "e176107e-7dc1-4457-b820-2962c6b89f7e", "a11e30d0-3a2d-4f9f-97f2-633aa6bebafe", "adc0a8c0-8cce-4195-aef7-32cd605123c9", "7013da38-26ea-4edf-ab89-abea297d3496", "267ac5e5-032a-41b4-b118-4a2dd1bf855a", "da5d963a-2053-4906-b6c2-797aef04ff61"],
                'is_shop_specified' => FALSE,
                'min_amount' => 263,
                'usage_limit' => 4929,
                'code' => "7d",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-06-06T09:09:27.000000+09:00",
                'display_starts_at' => "2022-05-15T21:14:58.000000+09:00",
                'ends_at' => "2023-06-03T07:56:04.000000+09:00",
                'starts_at' => "2021-02-02T06:54:35.000000+09:00",
                'discount_upper_limit' => 1204,
                'description' => "oQT37xs0mOQU2Llx6zljTaKBnu1rclPmFzyQZNd6apfCEwvSLfNXWJsfUPKPLOtGZqtffpzi4C7",
                'name' => "pOzDZZ85wNvyaKboD4asodFo7b7uzFLV"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon34()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_percentage' => 2346.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon35()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_percentage' => 3195.0,
                'name' => "mIpRdikh3jEIqFJSvz5SFjpUq"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon36()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_percentage' => 5676.0,
                'description' => "POLqttgh3jZeLH9kIyGWqAfHkt6nErudqpX6z0Lk21ZqSAfNzoyvOImSbcPTX6zPTKempwT66sslacr8rL7jTydQk1f5gLwlNoliBBW1ourAHntSleL6LlvD60jCBen6obYgOJTlIrOAHDSJsFo7kqM0nGzAzf8ExcErZiY5955b3tfefcks0a7Db7RWTSi0YNfkgWbjMd",
                'name' => "pq3ECgEZjKmAkTilnYKX5Xotq10eWFYwDpauwhXVBzLvnRTa"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon37()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_percentage' => 7119.0,
                'discount_upper_limit' => 1328,
                'description' => "EVoQUWexQUWvk04q09YwztpEOEcsXVaQJnXAdq4Q6xuA30Fh1fIXmMrcTLYbc0RmcyUku0LKVZSRoq56HX2IyCH3Irj86wDuXXs6h6eCgs6UAYzzDfgbnjwiAg12BmCEgpyCmHCQNwf16cBdfmVZ8HBRBKvug3fAq2PR4Cm47JrM8XgQgKxtKTMTlAG0u9LfiMzmIQ7m5buEMJPzhVmYQaxM9rTkOGPGSEFSqnRBChe0texB",
                'name' => "gN7NezQkDjD80Ww3gMG52JsuS9pNNhp6ZsMuSLA4fwVVUos8Qs6lLzt0rWmdaZvAuiMleR1qQjJ1qTQ5W"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon38()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_percentage' => 2017.0,
                'starts_at' => "2021-07-11T05:09:30.000000+09:00",
                'discount_upper_limit' => 1530,
                'description' => "uvuKtRfNxRyxJoB6E4VzEnBlupsq6rQfma0vj51J7OYlu1FkS3CfeGxAy5lTGZpKB8GNyOys6kJsmSVTf7mWLXhEKInLQPxpUvV6THzZ70GaEGZGp9hKoUiDbU5rO3LhvFQ8u",
                'name' => "HNKJ9ZbGe8vS2xQNAVaBeiK3HMpUEpMNgrUSDtybHcnUGD3KwjahrIizd1wc7ImuJkEqdNCkA"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon39()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_percentage' => 9954.0,
                'ends_at' => "2020-05-29T09:58:36.000000+09:00",
                'starts_at' => "2023-07-06T12:21:17.000000+09:00",
                'discount_upper_limit' => 3397,
                'description' => "BAYPNBCfHFWcLlj3hF5VyRYwsXg651NHxFP3RC1TIry39NSzSK8U7n1il76EMwDtegK5XaIq5nikLPtjxo8rfJRxHkFi2cRmVGZTRi0oCgmQTMbnJhsm83sL9zW2gZr7tD",
                'name' => "X4ti8EbGpb4G6VSFwNzfJlVSrXiSR7YsP9zZcVTWy"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon40()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_percentage' => 9215.0,
                'display_starts_at' => "2021-05-18T08:13:01.000000+09:00",
                'ends_at' => "2023-09-06T18:24:19.000000+09:00",
                'starts_at' => "2023-10-05T01:30:01.000000+09:00",
                'discount_upper_limit' => 8391,
                'description' => "MGY2CM7HAifX8rIewuu3VeLrXgMnT1OZURdxVsagVuepAnhnQCEdOH6Q4Rfgo9LQKdHCp2CxccaoF3EebCIA3hNdpLW2iQYUjFvH2EvpVhyEHWWbdwaTWnCxW8ocC4iFtVSs5TYnCjY4ZtM4Jj",
                'name' => "VZCeAgXQ8V5ELy4npQ3Nhjoko4roZ1wK0e8syGi1LbnQJXoHQ68Xe2lDNVXq"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon41()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_percentage' => 556.0,
                'display_ends_at' => "2020-12-05T22:47:31.000000+09:00",
                'display_starts_at' => "2023-06-01T07:11:59.000000+09:00",
                'ends_at' => "2021-05-07T23:01:06.000000+09:00",
                'starts_at' => "2022-05-13T18:04:00.000000+09:00",
                'discount_upper_limit' => 1695,
                'description' => "EZIx6hL3B8MxSjhO2mZ7sot0Rm2B5HNLoqpseVPnSLag98",
                'name' => "cZS8"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon42()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_percentage' => 6253.0,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-05-20T23:19:36.000000+09:00",
                'display_starts_at' => "2022-07-06T05:15:38.000000+09:00",
                'ends_at' => "2021-11-26T01:49:33.000000+09:00",
                'starts_at' => "2022-07-03T22:05:00.000000+09:00",
                'discount_upper_limit' => 1894,
                'description' => "yiaUDddlcCbVfVMl3YIuJxLcZWopKlLQI8244uSAqzIGwXXF9mz",
                'name' => "vEVRSameUlRAIazWjSDgnu9eWOa3pN8D2jBrsQzuzKUgzxyl67ZFCPoyRrK18ctDiv2sdR2vQ6ZIysY0dMzCgK3NAun4aLYG0AnViRgDwSrIxT1ExwcEhdr"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon43()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_percentage' => 6119.0,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-11-15T02:57:27.000000+09:00",
                'display_starts_at' => "2021-12-23T11:00:24.000000+09:00",
                'ends_at' => "2020-01-20T08:39:58.000000+09:00",
                'starts_at' => "2021-05-03T22:47:00.000000+09:00",
                'discount_upper_limit' => 2061,
                'description' => "cRVoxbo2OOLig8QFb7x80IJwBoeMZ3s1RKt8dZAJ6mXF9lwf1q1yDNJDI0jNE14Zjrg3KSBgLmfN8XWaRQLJOzC1bOKbEpMGXks7RBIEfOJAH1hOSBPtbL7ieBan9jrnYtcuBDuYmuDQr9lvatSwWcJN6QAbB7s2ZQzqvuuXnmiLRPwLgkio8zWWEC1S9WFk0Sxj28WJeFDeaXXoPb1",
                'name' => "rsvXNFiIYT9ImBYZdJ1ZNg8ameVZh0NXpnA2nx1Pa7gBiRBRpgLIJf1QMuhWI6AANEpU3Yr0Q"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon44()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_percentage' => 9069.0,
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-01-18T03:15:40.000000+09:00",
                'display_starts_at' => "2021-04-05T07:52:55.000000+09:00",
                'ends_at' => "2023-09-07T02:03:09.000000+09:00",
                'starts_at' => "2023-01-05T12:29:36.000000+09:00",
                'discount_upper_limit' => 4592,
                'description' => "PoRHJqpzPYb3vMR4EiZYZZ68HiTKXv45axVbjnxHx4LS1fq25JFKGPZsGeKHBJ6HU9FY1AxcTvei2TSmTpqfIAz7loJbbeev63SUaWpPKWdXFUSsEKNtj3QaJG3NyCQzs0aGrLsjw7898UByRBpyRXMkA",
                'name' => "kfFoVa185JYgNRatFwU8hc5Bo4f2odco"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon45()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_percentage' => 3510.0,
                'code' => "T2XW5EZl",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-12-04T09:36:08.000000+09:00",
                'display_starts_at' => "2021-04-01T11:46:26.000000+09:00",
                'ends_at' => "2022-11-22T20:38:20.000000+09:00",
                'starts_at' => "2022-01-26T04:30:02.000000+09:00",
                'discount_upper_limit' => 5570,
                'description' => "LZZZjGUCQ2KQQPQaWbIN1CybTokex9ROzK87wd7uGVIj8ZMWgfyQDk7j90HZtx3KzAXhNqzM5plvUR8YSBVaQtkICtOasfju7Q4arGKYgOBau6OPYoU2n7OC08X3zZyKbaxqGNp0jWlbMvndILwlbPW7sYrBKMgsPaET7iRNwsJY5kKq8kB14rWGYHEVBiOQohmHbgmOkpE6uihT9vPGO7QyDm13rzSV",
                'name' => "LW0"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon46()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_percentage' => 1394.0,
                'usage_limit' => 2019,
                'code' => "meDG",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-08-06T05:33:32.000000+09:00",
                'display_starts_at' => "2023-05-21T04:10:39.000000+09:00",
                'ends_at' => "2022-04-04T19:02:53.000000+09:00",
                'starts_at' => "2020-09-25T11:41:21.000000+09:00",
                'discount_upper_limit' => 6560,
                'description' => "0hY2Z4xMx0ATpz1VVR2zNeNHsXfpf9FEe0fchY9a1LgLXF99Xcswc9NEYovRWKnEeNkerH3MkvEoEMKCIquDnTPouOrBpAIH9UogxIw1pG5ei2Rcmdxd05GLxGybbNtvCYC6rR8g2iYWQ4jVp",
                'name' => "gDMsB0i7j5BjqhXCj7iJUurYj7LFSRBi69Eo25wh8NSXnhDgTnQNpOcBWVrERBDcma2h4RonD1zdyoaNEf6x2LoD5hQjH9hDceRhs7lAAUgzgjySCTeFe7GeDtQw"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon47()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_percentage' => 6576.0,
                'min_amount' => 4062,
                'usage_limit' => 2755,
                'code' => "YsL6z",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-04-25T03:29:33.000000+09:00",
                'display_starts_at' => "2022-02-10T21:53:32.000000+09:00",
                'ends_at' => "2022-02-07T06:18:12.000000+09:00",
                'starts_at' => "2022-02-12T15:22:12.000000+09:00",
                'discount_upper_limit' => 9682,
                'description' => "zttBGPfANUvTxcZNieoDSLJuBPIjaxaKwBeie4zHMywkTOsih7eAYM0XWdiDdvp",
                'name' => "gXUFP"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon48()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_percentage' => 2122.0,
                'is_shop_specified' => TRUE,
                'min_amount' => 5927,
                'usage_limit' => 5452,
                'code' => "80",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-07-28T13:09:14.000000+09:00",
                'display_starts_at' => "2021-07-01T17:49:23.000000+09:00",
                'ends_at' => "2022-08-09T16:47:49.000000+09:00",
                'starts_at' => "2023-11-28T21:52:04.000000+09:00",
                'discount_upper_limit' => 3928,
                'description' => "oX11GqNLOS4A29eaoKH5Zw8jlSMFALJGTZ4KYKTyPeKLB8S4KwNiDdoY4ShPviEXOyzvBGYYomOrVTZ4GEkJBWgW6Rq62pI5BmJKvxndcMijhibVmALFW6JHUAWsnfK5hFctWWixeTkwBECkELV3NSL5XB1At5InXNDePjl6IWuM08aHF",
                'name' => "CEkoQVNUxSyboXsdzclKiQo743LQTigRJuu73XETbvk73t9bIypvXFI4ycSMDtoB6BtzWkrMF4UG"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon49()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_percentage' => 2712.0,
                'available_shop_ids' => ["41298cca-c0d0-4849-8bdb-5d41a5321f31", "a57229ea-8d10-480f-b9a8-c3d737b165dc", "f11ebd09-9aa5-4963-b46d-13ca87d7019e", "cab0650d-0e88-427c-b00e-cad2b64bbb0d", "0a7d6293-48d0-45ab-8f45-b00524a2b99f", "ec583d45-6c6d-433c-b70d-cbc32bd39665", "1e00f2fa-4258-47af-9d33-2c80c92a39b8", "d420f1ae-656a-4ef1-bfb3-7f987185147b", "b03f2649-ef1f-4e97-9590-940649e6b9dd", "771c5b90-d6b9-4a69-9756-de8179d1d039"],
                'is_shop_specified' => TRUE,
                'min_amount' => 9340,
                'usage_limit' => 6817,
                'code' => "59f",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-04-20T14:50:47.000000+09:00",
                'display_starts_at' => "2022-03-30T17:07:31.000000+09:00",
                'ends_at' => "2021-04-16T06:32:49.000000+09:00",
                'starts_at' => "2020-08-07T03:33:31.000000+09:00",
                'discount_upper_limit' => 8407,
                'description' => "V2ExHMqRwrtTNBLqZ6i27bV3ngdzuheez0rnHokyiO9oLa3nNC7YIMiJkgbLbOhRSv4p1AePnE31xmaKnYQzeiffhgOTB9leBGg4HRm0ediF9kKMZ91jbuDGt2JsxaAFtGP9rwhn2nFgu5zNBbpQqv0uDUSWgPqo4KjLLGXt9EUX6KVywpLNBRLuyY",
                'name' => "GG1ii8wDvI3TCbasvGgBUnuDO1eOIhzYOTLl2QHkuCu2eO1ns90zYChCAoEYR8itblvi"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon50()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "ecfce521-abc5-4c66-9b38-a971ca8e57a1",
            [
                'discount_percentage' => 6039.0,
                'storage_id' => "6e5c0c97-a767-454b-859f-58f5798e72f2",
                'available_shop_ids' => ["fc87cd02-ba60-4c1a-88fa-ff4ec2033361", "8dee8bf4-ab5e-4afa-a211-0f31ef5c12bc", "60a9e84d-b4f5-4cf4-9ecd-89a5f0fd8a1b", "b9d1b58e-e286-4468-b7b3-bac502b9ab4f", "93df505f-49b6-4d0b-bb48-56e1ffefd210", "f0ffa23f-ec88-4bcf-8fce-5b0e4912b267", "7d30a5ff-8841-4d7d-bd0e-13c656c0f650", "4a87e34d-a5dd-41ad-93ab-18fdfa81c021", "1e9e6638-cf4e-4286-9819-2d04c0dd12f1", "407395a1-e67a-4cfe-8ad5-b21223d9cf97"],
                'is_shop_specified' => TRUE,
                'min_amount' => 8394,
                'usage_limit' => 5071,
                'code' => "7rSqz",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-11-13T08:02:43.000000+09:00",
                'display_starts_at' => "2021-12-20T18:52:16.000000+09:00",
                'ends_at' => "2021-01-26T17:49:04.000000+09:00",
                'starts_at' => "2021-08-19T10:30:09.000000+09:00",
                'discount_upper_limit' => 1732,
                'description' => "k74XCLeBEAl4IwbgFdV8Yrc5tfxIfVeBzr5cfVcoQrzXbRnunreG6k2a6uUVPAvsda5jaSZbWCSepQRJhxhRwvRgHx3QMJyiYGDmd59t7OrCcXLNNFlRvpDGsPsNPsOl5yvxxoqGz3R4SOPIiAPAHlZ5Hu4jlpHkzxoYX2dBrltgbAoVxNlZ74ZGDGGk0NXgTg6gBVDqwXnhX1yBJonGWXE7T6pcqpSJu2Phxsu6X6yo",
                'name' => "6ToRRpEF96R1yKKKaW3QkptQLZ4GW685TaJHGsMzclTwaQfPJApcpSFgNsg0iduMerNIii5kfhNs3PlYFQOYxNTTZgQGcyGMid"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
