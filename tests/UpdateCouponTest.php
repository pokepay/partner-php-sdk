<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class UpdateCoupon extends TestCase
{
    public function testUpdateCoupon0()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_amount' => 8602
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon1()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_amount' => 5554,
                'name' => "hTsSxNXBuhLAxPxLgPF7PH9jsPo3qRbXC06hH5q5N6rSqlhclxbbI1pwNVNkX1wbtHq7h4XHkBbxR0RnLtirGJS2N5S6EEO5Bp0Ta"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon2()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_amount' => 2957,
                'description' => "BrmndiCNxXXwjFaRAeTxfe0YQCHzm8OG8zcqkOxIGcWZjjM6j3edDcpZu9iiEwcokneeQ36NR2IjhyB4vKQ7cGlo7SrCjimdlgwn9qvauQ2kDhj5HLJcSNTCm30yK3y8WItCe9VYgMydEalG76qE4T1vOr",
                'name' => "KA4IwgS5AgijW"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon3()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_amount' => 2296,
                'discount_upper_limit' => 3608,
                'description' => "neekV8cIDT0hnm8h8evW68NKpdkq0PMSo6iR11TAHpgNTXOxFwqhkpZVaDhpFPp5bfKVt9DPYJAVzV6vyI6ywfpyKilj",
                'name' => "5zg8pn57kF0DYbPLXjuwrpeD0A9IDYP4sAiFNwaac"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon4()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_amount' => 1593,
                'starts_at' => "2022-09-20T16:39:04.000000+09:00",
                'discount_upper_limit' => 6364,
                'description' => "r9GBqh0SVIl9M1spjv4mKXU1rVLf6U0K44BovHKqYzk7GBG1DZKj2tBRFerhSuL22gGga7pF0nmLMfnIYTQdqHJZ8WnDHEVfpIBtEOMP2U7IkYygmkkDxd3MzpkzvPsPo2vcZvKaf470Dw5YI6SeAOBDBgRAgmjxZG",
                'name' => "GCqaBwJ9iX"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon5()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_amount' => 5610,
                'ends_at' => "2023-10-28T01:07:36.000000+09:00",
                'starts_at' => "2021-07-06T12:25:32.000000+09:00",
                'discount_upper_limit' => 9157,
                'description' => "bkdsvlfnd1NOUEcUOGTeYua5DveJsn8lhIUcgIkY0oNU4ZtZZObHmdr0N6vylnlZRhGDMxuj8A7eDOAWeoDpeF6vcSyg1N9plx7jjHK1E1PUQiuVzdT2YVVNgkhGiOaJk8HWWbXOMsyMVL1Y0FzVGqOKFoU3xJNKmuaDr4cMSAgHDAlLlP6Lo5yS1v7L6lCM4yrq4lI3mHyvfAo1Zkwkd2ADoyNq2PW9ePZH1V1",
                'name' => "DlcE5mr4I9qCPq1klPYIi4fgZzpFf9vCRDU8J59OtcokEMMVhmKz2iB"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon6()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_amount' => 8903,
                'display_starts_at' => "2021-08-28T13:14:25.000000+09:00",
                'ends_at' => "2022-07-28T06:50:55.000000+09:00",
                'starts_at' => "2022-05-03T16:47:09.000000+09:00",
                'discount_upper_limit' => 4355,
                'description' => "UmIl7jlWxrfEKMQ8FCs062PLb59yfzniw8Z7TrjWh0BQdrr7bOC0AUfJnZnSogxeCWxbc4wl0P2Dqh3DSK23Mk8m6Cln0nexx5CEw583J2WEBiiOFuwneTfWH1pqqlIhFKkOnPRe3g3OqYMD6Y7flopJpL06wROQZ33dSb51CrQZVorM80jAnbL9pF2AijYf8ydTws4HIQ4AniWPzD9CM0oL6ak44VafBlkQEtaE8xbTpd0PiIwS54q66",
                'name' => "i2nXWkvfusE3magRZXBvYQN11diTIPMylP78XJI2fk"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon7()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_amount' => 4491,
                'display_ends_at' => "2023-01-10T01:24:41.000000+09:00",
                'display_starts_at' => "2023-05-18T11:05:49.000000+09:00",
                'ends_at' => "2023-02-06T01:25:37.000000+09:00",
                'starts_at' => "2023-01-17T17:51:03.000000+09:00",
                'discount_upper_limit' => 7060,
                'description' => "uaeWPZ92K6Zt1zTkBm5QsUJIx79pUjuQLW3JQAlc0mxfIBEGWMOeqgVzvGmf46VZC1gROo7yDwwPoswLPrFl08abqydMndg7MmFsD2bCpZf9Kmzx2cSvcsgfp28NPWqo6XqlqrR",
                'name' => "lgptmz4nyVSUDS2rGPI8RxpE3teEPiaYEeN8ncoL5boSBHerEtGhFgJdxH"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon8()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_amount' => 9181,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-03-19T06:57:55.000000+09:00",
                'display_starts_at' => "2021-02-16T17:03:39.000000+09:00",
                'ends_at' => "2021-05-29T20:21:59.000000+09:00",
                'starts_at' => "2022-07-06T15:29:43.000000+09:00",
                'discount_upper_limit' => 6070,
                'description' => "M7DHhWIQ2aljg7pW5tLDSL3EPYXvMXdIXxGA8eOtdDg4emZxxvv3UzyZmkPPeL3QSeHszKal8UJ7m",
                'name' => "vjTFU0wWAMu89mD0TpxWczQUyWaVgBaLWMWptjgf0FiZZDEEO2PZA9bioQMPG1E81jCARXbk7MR17C6RF6LyMxBAxNrASDj9"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon9()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_amount' => 6230,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-12-13T02:16:18.000000+09:00",
                'display_starts_at' => "2024-03-01T18:21:42.000000+09:00",
                'ends_at' => "2021-01-31T12:57:53.000000+09:00",
                'starts_at' => "2023-10-16T14:47:49.000000+09:00",
                'discount_upper_limit' => 7870,
                'description' => "fEP7s2f7f5rT4gnJZ2Cz81XNoucyBbEpxFX7PDggrznNWBV0p9BBTTp6AGpMMO3btHYGiB4Qalu6chDV2Pcj2ctvmZzuG53qZWTYzGouuBX6LUUUBENz9R18rNQjTARxcKWcb1nyLLVIf7PJ4PKIYRAl1UCuQycWgFlQrGdRqVd3CIlE3dO8Hdi7PJayBT5IgAK5b9hyZhcZh8MuSlVRKgCS",
                'name' => "IL13YYuGN17rfT9nOtCiuSxp7i1rcacR4EWmJRYE0vgLGn2OdxgxwF29eViuwKtjsRjzvb8XUneGNN0gcbjHE0ykOW2yVlHndMAdWY9HjNAOFWD0f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon10()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_amount' => 7986,
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-11-13T09:48:54.000000+09:00",
                'display_starts_at' => "2021-07-18T13:41:34.000000+09:00",
                'ends_at' => "2022-05-24T06:19:56.000000+09:00",
                'starts_at' => "2020-01-27T05:22:46.000000+09:00",
                'discount_upper_limit' => 8946,
                'description' => "wLb9YSbpNpmMET9MPbipC8utokXPq016coqfiAUWXxFRzN5EfouqVIJLmWFeGJqYbyf9xqeV9Lg6T4ooRxK5KRr3h8egFMYUCN7QJ0QWlqwtD",
                'name' => "88aLfgCd3mseLQBXIUiYpTvNgfaK3PoowpKAx3kfA31wXd04SY1O8gGOF1kRrye61uzmBIXdnENFs"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon11()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_amount' => 3891,
                'code' => "jBlwZ",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-05-22T21:41:06.000000+09:00",
                'display_starts_at' => "2023-05-23T09:17:56.000000+09:00",
                'ends_at' => "2020-03-14T05:37:03.000000+09:00",
                'starts_at' => "2020-09-10T14:20:02.000000+09:00",
                'discount_upper_limit' => 2211,
                'description' => "B37CRt8PxiPIwClGZ1KOGgE2sj7Hu6WK5M7npguch6s2J670P8hn4WhIeMSn521mnmeh5QEBdCZJtrUa6Fgp7ym0hYqDUAWMYxWfGNC0wV3aBOX1Ig8hROFB3MljHGXrpVSkSdQBQzqXHWCk88yAdkNbUUlXp2sT5T809AbvtJaUy0K5oRI2Afv57nsS8pT7iwNl9",
                'name' => "CKN5yCsDMuuaWg6vjoZFJU5qu"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon12()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_amount' => 5976,
                'usage_limit' => 7022,
                'code' => "J5Eq6Gc",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-04-17T13:12:35.000000+09:00",
                'display_starts_at' => "2024-03-07T14:03:12.000000+09:00",
                'ends_at' => "2023-08-06T07:43:14.000000+09:00",
                'starts_at' => "2020-10-04T01:00:10.000000+09:00",
                'discount_upper_limit' => 8411,
                'description' => "Pq46GdIPJm8acYbz4K3IA8JYUILwDYHWq9h3ayYxNgOJ9lz7HMs7r8Mwpfor2g0yfZY1uTlDfXz0uDeov2GaxLjZM7ftEliKPQLWJArPq3tph1c8gKwadNnw5eCqfZdksVLOzbmWJa8YkV10V05hf8WtQGHpv3xPQzPNZMa3cTmTslTDHzq00PkzT3rjRscSaTDEUxwAJXNLOLDUjAEUO9KUSGzbSRmda66Hxc4wf0VsciZqVg9CY4JyxUqm",
                'name' => "9QYX9eOR0RPX1REGDLSjexe42N6h2JPSKX"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon13()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_amount' => 207,
                'min_amount' => 9246,
                'usage_limit' => 5754,
                'code' => "8JwoXWD3O",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-09-09T21:25:38.000000+09:00",
                'display_starts_at' => "2022-03-29T06:32:28.000000+09:00",
                'ends_at' => "2023-03-14T05:46:20.000000+09:00",
                'starts_at' => "2023-04-05T17:08:01.000000+09:00",
                'discount_upper_limit' => 3863,
                'description' => "HYwOestfQFumGQVfUsw4hfYXr8Tws7k48pGfLa44NJMCeJ8jlsCf1ZGfe6gS6x1DqMOxCGU3f6AMPJnByO8IAY8ZIAKOHAMaB7ZxbhLpAG3vIRMVqbJVgHdPhvPKwzwzrbVYcpu84LTKQxDTzMnM7RDpI6DZQTPfIajSBmWzFbVfaL5LT2cPjctfArtA5QzauCKeqrCHLOb6c1NzcpMx2",
                'name' => "8O1vhN74ziDPGC2ST6zTd6xVdSlQkj4Z4gR5YjMfLJAECo2gNDDCrV3PxozvlpngWpA6xbZMfc0uwppINu3aeeMh7MwqqZDhOobPpK6TParuu"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon14()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_amount' => 7844,
                'is_shop_specified' => TRUE,
                'min_amount' => 9447,
                'usage_limit' => 7071,
                'code' => "1",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-02-23T15:16:55.000000+09:00",
                'display_starts_at' => "2020-09-14T22:14:05.000000+09:00",
                'ends_at' => "2021-03-07T07:18:45.000000+09:00",
                'starts_at' => "2024-01-06T00:21:31.000000+09:00",
                'discount_upper_limit' => 5129,
                'description' => "gWq51AuUounyHv57rDbvmuL7BqYd28Ylq4PTRllx603bU9utxlgE1LKaCgZVizYnvZve6TUWFWHy2b5Vs5gPuvHuA5HWIqhNUoMi9wNIaJyI2pADs2B",
                'name' => "yB1GZTk4B1PKHR2EWhPZSvV8nScTvJ4VHpUajLmD9cCimPwC97LHW"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon15()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_amount' => 2349,
                'available_shop_ids' => ["173cae53-8b5b-42cf-ae49-4813d3eca943", "b74c1a25-6788-4c0a-ba08-bc225a5bc4c2"],
                'is_shop_specified' => TRUE,
                'min_amount' => 2413,
                'usage_limit' => 3586,
                'code' => "opraV9Fu47",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-11-10T00:06:44.000000+09:00",
                'display_starts_at' => "2023-10-08T22:15:05.000000+09:00",
                'ends_at' => "2020-05-07T00:08:29.000000+09:00",
                'starts_at' => "2020-10-27T12:05:26.000000+09:00",
                'discount_upper_limit' => 991,
                'description' => "gn9VJjED17kjNr295nMRl2EDxJjIsLyTAA5MEWhdNFDbX7fss0ltmaJnxslaUL7RrxqbB",
                'name' => "xY"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon16()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_amount' => 7349,
                'storage_id' => "44b93517-613a-46f4-839b-aaad60e96562",
                'available_shop_ids' => ["d1a03e2d-e5e2-42b3-b5c6-447ae8477085", "1b3ec37c-61c1-4ee6-ad96-e33a491fdeeb", "03a841aa-de16-4be4-b3f0-d81ca34504e4", "cba02592-06f5-462c-b7d5-8a270d7c4442", "ccc6da7d-af83-4685-a796-495b199f35eb", "526de772-eff1-427b-adf2-ad76004c99ca", "934f580a-4633-4dc7-96d6-8ebf30dc8600", "feff17f3-657c-4936-9bc7-b52df4d35f3c", "1859ce73-9e12-489f-9e4a-0a38e49522d8"],
                'is_shop_specified' => FALSE,
                'min_amount' => 2308,
                'usage_limit' => 7116,
                'code' => "ApV",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-09-09T09:52:14.000000+09:00",
                'display_starts_at' => "2020-04-17T14:46:00.000000+09:00",
                'ends_at' => "2023-01-31T13:04:25.000000+09:00",
                'starts_at' => "2022-10-02T16:47:50.000000+09:00",
                'discount_upper_limit' => 9122,
                'description' => "jKIEdqTZCuDots6oOpUnX5paeprWtPSGZrL9UrmNU3vFgZ69vwXIbJ7yB2uIbdTxo63tcXPzmao0EWnRVCjlgZcfxXnQfXvfoocz3td7BZN78kqzJ0Us2fGrJyL",
                'name' => "sRHFPpRHSTTSFxnvRwj3Oa3urFP8R4bhOdaBwGLVVHwtN3AFb20DhVqIxWOmhxrSYnMI0dEOIqOF"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon17()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_amount' => 2380,
                'discount_percentage' => 4977.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon18()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_amount' => 7278,
                'discount_percentage' => 8282.0,
                'name' => "uLk5GF2FUuyDVUpZnC5UYez0zM0cPoxe0DGq4e7wXOOVc8GIqj26qcMQ423OrAYOyd21L95eAaG4JW0HS70OJOUKjKLeGCg"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon19()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_amount' => 6732,
                'discount_percentage' => 5137.0,
                'description' => "yc3XcFOYpAAHYYK9z73uxDP2ictixYSW0AnlJyQ4ogjQgbj8PRfNm4vkTJ8joyTSHmI2see5qGgNKlkv5vEcEoMjbT4VP8lZF0AhpuShoXCly79fXYfw5LEwfbe5",
                'name' => "dxC9nFb6EnR37XI7b090WiBtRh0"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon20()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_amount' => 2236,
                'discount_percentage' => 8742.0,
                'discount_upper_limit' => 2401,
                'description' => "vWom7iSFIO4uZdtJGn6HWLBVq7JKL8IsIw17O7EyRwbRgUy7vFea5WeBAkgIciVnQYB9t75iPCouDaOPQZR4UpdKmspN8b2gkMcSPrmt0hjIJu43wB7scWlYirrj6XmXYoqVEvKvw3AdEs5hGDLuaSpYl1TGEiugglxJJBGt0dcPbtQc4uSkk26uSRwX6Rx7fOEoFSQiDYpTTgrywklVD4mELe2edQ",
                'name' => "d6Mwu12UeT7ThuLLgJ9PT2zGkxOOzhTpPLnUQXea"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon21()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_amount' => 4915,
                'discount_percentage' => 9484.0,
                'starts_at' => "2020-02-21T08:59:17.000000+09:00",
                'discount_upper_limit' => 8601,
                'description' => "BlP1za1n7IcWMlrV1ey0F13qC7iArhwm76E35ql4",
                'name' => "fUae14Wbt93t26LiQAMBYx057AoBwLeryNecuIhUBXRQRCvkSHsmDbMU34aVyZLcCNEj4KngWmPwy7k0E27omWruI"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon22()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_amount' => 1367,
                'discount_percentage' => 115.0,
                'ends_at' => "2021-12-01T01:14:41.000000+09:00",
                'starts_at' => "2021-11-26T23:30:11.000000+09:00",
                'discount_upper_limit' => 4774,
                'description' => "TAGfq9ue8TvZwYbMntyIPzqAGarjc22UJafoQs8oM8ozozHv7pSUj",
                'name' => "2vqwiu14DVHGOrsaIKsQ11QA0zf5QFhEcKjjKztGRK6K9KAPEUIedziHih60rhQZO78Ysa8FmX0ccAumcgyg4cqEaxSmm8kmOYz37PEcPNNiKvN"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon23()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_amount' => 2485,
                'discount_percentage' => 9607.0,
                'display_starts_at' => "2020-03-20T16:53:08.000000+09:00",
                'ends_at' => "2020-12-25T09:09:12.000000+09:00",
                'starts_at' => "2023-11-12T05:39:36.000000+09:00",
                'discount_upper_limit' => 1728,
                'description' => "RLA9ghACTJRDSXhb0oNXnX7lDuTKN6ygQ5h7kN0paU2HC64wcGrUcdcRO2Sa3zE9qA6JlqvTos7SrIAldP5taDahvoqIf3H7H22Xm9qyhmrKIzglEahNrgMO9grD73ccOw2h3Fa222nHBaN6510bAHdVRRVqtJb7GLA5jeThW5qr3yEd",
                'name' => "dXuL0rYsAz43Mmx6hv0Ug3INp6i2B7flubMg8I3PFzXHSWu8scihq"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon24()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_amount' => 7255,
                'discount_percentage' => 7712.0,
                'display_ends_at' => "2020-05-05T05:21:59.000000+09:00",
                'display_starts_at' => "2023-05-25T12:08:55.000000+09:00",
                'ends_at' => "2023-05-05T10:17:47.000000+09:00",
                'starts_at' => "2022-11-30T00:24:44.000000+09:00",
                'discount_upper_limit' => 3145,
                'description' => "sgxoxZCQ2441blMtSOZHoWLqvzthoXVcLebdhYmokN15vn0WBXfGwW2mMW1f9b8gICLPqqow4qG8fKRsijZT9ACbFhSbUnXdQpmPpnHFqiJvOHOlQFLdxOm16oejI9dat1CL",
                'name' => "gQoRlzuyxB2QGrCPmQ415Et2SGqgy7Wowcm3CmFfxpyCPpsziVloAtynLsPgO9CFz87kImOLWynZ7sTqSkOWWDLZmiyY4qSDce16GC4wPtLkv3o4mk88yYjRj6ppJ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon25()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_amount' => 1868,
                'discount_percentage' => 535.0,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-06-25T04:24:56.000000+09:00",
                'display_starts_at' => "2023-09-05T10:03:26.000000+09:00",
                'ends_at' => "2023-10-01T20:37:00.000000+09:00",
                'starts_at' => "2020-08-23T10:55:41.000000+09:00",
                'discount_upper_limit' => 7013,
                'description' => "8JObXuRsPVeFJcsOCB9dZH0k0NKC7bYH6IQhPn4Xu22OkprhqhwvNpMEMbpSnLulsX8V7SnJwOTksCozm6o1k9oepRB7yq0Oa1SzxnfEtxAkEm7sWqtjzoUhtWxAFotkA3GwpJ6pUWjvsxF7sC23pAVbXivHZtrIAyP3B3n1m451mPU8dTD7bnX1r8l3hCw6Snm9mfcT5cLUh34lWYk1AXf6CZiEJmgnIHDO",
                'name' => "d6m8hlpqS572AEF2Ig4ikrPHEQKtfhnULfkSB8hVVRhZgs0ShDA1T4kxBhv1AOy0nxwzXXsopchwGQjGjB8p2s"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon26()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_amount' => 6952,
                'discount_percentage' => 1516.0,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-02-11T14:58:44.000000+09:00",
                'display_starts_at' => "2022-07-12T12:47:31.000000+09:00",
                'ends_at' => "2022-05-24T08:32:23.000000+09:00",
                'starts_at' => "2021-05-05T20:46:41.000000+09:00",
                'discount_upper_limit' => 8513,
                'description' => "jO7bJtO7Dnnc0m9rCGM5hvlyZ4zlX8tOl1gapEcvHpCxJHTvEJuFQdQk10O1BigovU99ROsTZK65zQOhilbvDcAlCpIpP",
                'name' => "o9knGna2qU0GmaUmeizgJ6BwqETnaq5"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon27()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_amount' => 7941,
                'discount_percentage' => 3685.0,
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-02-01T13:27:23.000000+09:00",
                'display_starts_at' => "2022-12-03T09:34:22.000000+09:00",
                'ends_at' => "2023-03-15T07:37:56.000000+09:00",
                'starts_at' => "2020-08-28T00:40:04.000000+09:00",
                'discount_upper_limit' => 8807,
                'description' => "3gtXl8b4nZOZsr1VPBj7ivp8ue6C3vcL7BXf3IHjK0XiC",
                'name' => "0zcQRlonr1N4IocuKCcZ1hdXCgyALhLsPZ4xEZBaL9gPoE5PnOxSYIBQUZMwQEKQp536z2WYA1sx132uYplZstFpjBFQy9bZmz7mGiFt"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon28()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_amount' => 8473,
                'discount_percentage' => 109.0,
                'code' => "Sje",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-07-25T08:39:17.000000+09:00",
                'display_starts_at' => "2023-10-12T06:53:49.000000+09:00",
                'ends_at' => "2022-04-06T06:22:54.000000+09:00",
                'starts_at' => "2020-07-14T06:24:28.000000+09:00",
                'discount_upper_limit' => 9545,
                'description' => "wYSIqDRQ8l1f3l8HQkQuvmK2Ptks2ZcRpli1kcYUjdKenDWjLTaaBosz7aBykL",
                'name' => "G1RzGMmx1hSkje"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon29()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_amount' => 7993,
                'discount_percentage' => 3210.0,
                'usage_limit' => 2720,
                'code' => "0kmePd8GX",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-04-14T07:45:40.000000+09:00",
                'display_starts_at' => "2023-03-28T06:29:16.000000+09:00",
                'ends_at' => "2021-10-02T14:41:38.000000+09:00",
                'starts_at' => "2020-05-22T21:18:05.000000+09:00",
                'discount_upper_limit' => 9505,
                'description' => "2Jw1idAxcQ9RQcA93jzkpVE1oN8GZytUXsp14vePeJl09h1SmSe",
                'name' => "z9uXJe9aRBNGFiXbom9IOMRvPLFSPNSfRkv8Et2jCeNHdXqCXUrpWRIE"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon30()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_amount' => 7055,
                'discount_percentage' => 6055.0,
                'min_amount' => 9869,
                'usage_limit' => 4267,
                'code' => "OjH6PT",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-03-29T21:48:28.000000+09:00",
                'display_starts_at' => "2020-12-18T16:30:48.000000+09:00",
                'ends_at' => "2020-12-24T08:04:45.000000+09:00",
                'starts_at' => "2020-01-08T11:14:30.000000+09:00",
                'discount_upper_limit' => 4906,
                'description' => "f1Ll0O4t8yu2YY3amcbZRFCGWEFlMAhGqMbfoqHBJlao6arWtW2Kf2i4IAcwQjuFWx2kNI9qHm3gWQVGMbEKu4AfuwweTMrw4f2dzO7lqy4",
                'name' => "kEKJ1Q7c8C0SZpOWKljojyXNatscwZjWuBesyFuc4sWKFJnLD7m3pQpjDhF5ByJU"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon31()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_amount' => 6011,
                'discount_percentage' => 2138.0,
                'is_shop_specified' => FALSE,
                'min_amount' => 2440,
                'usage_limit' => 9419,
                'code' => "qULct",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-05-03T19:30:16.000000+09:00",
                'display_starts_at' => "2023-05-12T12:38:14.000000+09:00",
                'ends_at' => "2023-11-23T21:53:14.000000+09:00",
                'starts_at' => "2021-03-28T14:07:04.000000+09:00",
                'discount_upper_limit' => 5867,
                'description' => "9cBHdXfv4mxi0ybLSzTGhHvgOYEOxJ03xV3nSGPvtC19a5RpyBdhfDtmpMgxIW5ljI6yfgW8zOoaul3ISoLlGYqCoXoGAustVKiyGKg6I2c4vjJ0uuFNk5xEatUCGYnUIhqAnDQImUocNLmlkEs1s3oajWUDkbVb94dhcQ",
                'name' => "TjATi4FvTByqrSIzi26MGgpQ9DKPsTX2x6llLqyqxLBzmQKSHklP2GNjfKFk3xSPN2EauZcekm4uUHwCvLyAybYYI1PTnYt6AX3ZMraJiLHRNz"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon32()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_amount' => 6460,
                'discount_percentage' => 8437.0,
                'available_shop_ids' => ["2c940c74-acc4-448c-acda-c7af6f38c112", "a6a1dcc8-9af0-4d00-b54d-2f3fa089f0f6", "0bf31cfc-88a3-4068-9afa-ea2fa03e4be6", "afbfbe62-0ccd-4743-af0a-58b9f20c847c"],
                'is_shop_specified' => TRUE,
                'min_amount' => 6237,
                'usage_limit' => 9694,
                'code' => "ya",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-05-26T00:21:08.000000+09:00",
                'display_starts_at' => "2021-09-02T14:22:54.000000+09:00",
                'ends_at' => "2023-05-04T13:55:41.000000+09:00",
                'starts_at' => "2021-06-12T17:17:21.000000+09:00",
                'discount_upper_limit' => 5983,
                'description' => "qgB5ft0k4jfS4r5kfrLJk",
                'name' => "ytv5gO2QqNTMBVQz08laq2biuqoxBaoCNpyYWsiSLe8XgZiLcB9lkuwUmt5gGSX2SbBRPaYeWynmUQkGZMrt25VWYHR"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon33()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_amount' => 5658,
                'discount_percentage' => 6327.0,
                'storage_id' => "76450450-536d-411f-9c81-2a755e992159",
                'available_shop_ids' => ["fc0146cf-ca8a-4ef5-b98b-603897c4290d", "45d96815-2cbf-4935-9f8d-411163387b10", "fe351065-9341-4d49-bc8d-707b40e8d129", "74577384-834e-44e9-b4bf-3644a7af45c3", "9a8990e8-f6b9-4923-ae7c-b3c5ecef9b8a", "4047192d-7eb1-458e-9b91-8070fabdc7e9", "b29a0b8d-1d6f-4c28-906d-910590cb7115", "bdb54781-c926-4fbd-9ef6-ee1439973859", "a7ad1d81-1630-4af9-b0a5-cb19359c6889"],
                'is_shop_specified' => TRUE,
                'min_amount' => 105,
                'usage_limit' => 7015,
                'code' => "mahsEfLajE",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-04-02T20:18:31.000000+09:00",
                'display_starts_at' => "2022-02-22T13:21:07.000000+09:00",
                'ends_at' => "2022-08-11T11:26:11.000000+09:00",
                'starts_at' => "2020-11-21T10:42:06.000000+09:00",
                'discount_upper_limit' => 2921,
                'description' => "XaYXCbSM5b6xxCi9aS7pUn8sHDE4F3kcf0hrQ4a3rPgThS8KkZCOZQxeSP2z9qxNvFrLUebeM3qu8knhRZPaevJazOcUuFHzOggogIb0heOl2hQPfOiPoRxRiCop5Q0A9gBKU33EhyGU9Sc7TWphUCFQOlhJCzSIu3L4oB0QKjjVXdg6wCnP4F0PUy8JyZq3ofPUU0rY2rRd10bnDEPKoSGRnM40Adb2lsHFBNfL0ieognilvSR4pMoCwkx",
                'name' => "SpqKLDrvgRvBVvAYQP0NP5o8oIbQ6bcvTH9KRHlq0wqM01LRxPcYJN00R6J1knyJeLDqePaGS57qQUn9QotexnhecBro7jHBJHSTWFK0aJRYTfxgM"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon34()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_percentage' => 4530.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon35()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_percentage' => 1746.0,
                'name' => "ajM6sQRgc1VEyXHMXBj8otEAcFy5ooXoXuzlRpCyC"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon36()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_percentage' => 8734.0,
                'description' => "oaTfbTmVX0XqqL2DDCdNGv9QaNMmxX2S2fPh6fy135I5DGGggnvkdWrHaspAw5Vcp7CE78JSe44PvWgrDoffEic8syvxPXUni2oM8QHA7lWY5GLHqITj0UgJwxmfaF0gGfgNlG67XOfGi887nNv1eh26ZZWkeJQym7n7CGmjd25iFSdny2rQSPU5tCjVy8COfDZrZRHs0hjVGtY7fDHExM6iUcB",
                'name' => "9LDUejJe4laTFkcJAyP9v3lR5fJ1SCFuFJVqCc62CsLVYKPyOwySSjaFxy00IGCXmzsObY8JjUm176PqMxSejYJw"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon37()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_percentage' => 1540.0,
                'discount_upper_limit' => 4945,
                'description' => "QhcSsOlDNZZsSWHBkBrsiXhCnZzamORmWcssL2FF3HAzhtt18u7MooUueVWo8T9dRNvfu3qkwBDNVzugQpgEVipsMl1opS6XVL1U8vfTPgZQ",
                'name' => "oGXLb8hT5vzbbFysLVW03Q8sgkwbt7bycdIa6s2OiS448zYYuSerVgt5xpThqkxWuN4OkYmUnkAFHrW518DEhvGfJFhBLP"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon38()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_percentage' => 6302.0,
                'starts_at' => "2022-04-26T17:02:14.000000+09:00",
                'discount_upper_limit' => 144,
                'description' => "IWgGXu2FRRBCtapsc2OJEtIYHTkPMCnHWRhGK3T2O4zTKZ",
                'name' => "pJNYtglnu99Onqaf5iTxaKHt4HXxpMz5eg3TFJnOMXlccrSM4NeRkShSKYnhr8JJ6rqJ58uKWhjJEVfg4kmmGr3fEZnBlmzkrtoyKm38BDyuj1U15iB"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon39()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_percentage' => 3676.0,
                'ends_at' => "2021-05-02T04:41:41.000000+09:00",
                'starts_at' => "2020-01-24T14:03:23.000000+09:00",
                'discount_upper_limit' => 2480,
                'description' => "VVURHNCTBSkvCAJURQ0xc8v3XGoxNYBzQF26RRnLKM2vajHzuhk8mM7y90MUBMqpZFx6CyPOvMtoUIDYTTb9YLUK2ZY6omFZc6c5lAiaH7ksthq2qt1fISbJLQ2IGy7A4O5EuF",
                'name' => "Di3ep7E8KTw"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon40()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_percentage' => 6558.0,
                'display_starts_at' => "2021-03-02T00:56:13.000000+09:00",
                'ends_at' => "2021-03-22T01:01:19.000000+09:00",
                'starts_at' => "2023-03-17T01:05:53.000000+09:00",
                'discount_upper_limit' => 9855,
                'description' => "zGZlqsrJTtHeL1jl3TaroJ97KS7PIYmqHtFEvZxOLg",
                'name' => "NEFPzTNAe"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon41()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_percentage' => 6420.0,
                'display_ends_at' => "2021-11-27T07:28:23.000000+09:00",
                'display_starts_at' => "2023-05-12T20:36:02.000000+09:00",
                'ends_at' => "2022-10-18T15:33:23.000000+09:00",
                'starts_at' => "2022-08-20T18:46:14.000000+09:00",
                'discount_upper_limit' => 2783,
                'description' => "VgTRCY2rEPprVjpNeaYJXDFnN5l443TmOvQLPfQxkSjhKrHXePF1aNsQcGEPe",
                'name' => "2hgv"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon42()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_percentage' => 260.0,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-03-11T17:39:55.000000+09:00",
                'display_starts_at' => "2020-03-07T01:45:23.000000+09:00",
                'ends_at' => "2020-03-13T13:03:37.000000+09:00",
                'starts_at' => "2023-09-01T12:18:01.000000+09:00",
                'discount_upper_limit' => 4091,
                'description' => "DeTC8XzXR9jncya31KgghsgYe3TbLJN21a8hZtm5so8Mz8sE9uDmHdcukVhdalQqRPyTvG2tPeRbQcNODGa3IhebkRxi8kuGoSk8mmCPAG5TaOSJrFwT6IMSTQQD3aZSLuV5KvsCMKR5EbTWV4WWsRyRXgRYVg4CYuzSBW4stkoPc7UXRyRiV8Pax53IDmwuQOCWjbIPmFGWkh7DMCSqp4SWi3zPKlO0ubMaaWt2sfRwBothNvTY3v",
                'name' => "r4ELRXyBW70oqJ1JP1EYwzYF5YE8jQgUzmyBkd9RsSiJlXzLN5312aQsa3khCQuI0KxC45P"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon43()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_percentage' => 9768.0,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-08-17T22:41:02.000000+09:00",
                'display_starts_at' => "2020-11-11T15:24:28.000000+09:00",
                'ends_at' => "2022-09-07T08:48:38.000000+09:00",
                'starts_at' => "2020-06-24T11:55:24.000000+09:00",
                'discount_upper_limit' => 4685,
                'description' => "Qsr0pTvhXVGg9hnQlyenzuwrO3gGQmGe09eXlKtPgqSA0ERaGz46vIiA4hbe1yI3CGp5lj6m5fgOCupwcIPxBzhbkfELKrUPd9GpW6Q92PXWpLmGFM1PrngLs4Zq6rjFKNHUPj8OaHLD3inc4333SWlp4s7jMjS5PtJzYsdA5qhl1QGqEwjgkrGn0uAn0iqI2b5rx",
                'name' => "tzGOZhKJMKwzvYsbBzTdo6bpAqcW"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon44()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_percentage' => 3740.0,
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-09-04T06:28:22.000000+09:00",
                'display_starts_at' => "2020-02-26T13:30:26.000000+09:00",
                'ends_at' => "2023-01-24T18:45:34.000000+09:00",
                'starts_at' => "2021-12-06T11:36:14.000000+09:00",
                'discount_upper_limit' => 1444,
                'description' => "sv2Llex1ejGQ2ugzGxu81Sx50Yf2M71M8zENOSGlzUlDTz33P2rJ14YHcAJKWHCf11oIN1lhxfCtQoWt3KCnkWzy38cC0E7gsSEITDei3yOkB642y5M6ZGKLNmOSXPLkVgGHidiNxSMbU65iFGAAyuGpPep5MlLDDmy5H5WNxLWXFOkEFZiHMkNkDC4XjAgnNgPyTasq1IFexxHoOsY3X",
                'name' => "mfSCMMI0hPIOcfptkBjf"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon45()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_percentage' => 7190.0,
                'code' => "HuYKUEJ",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-06-17T18:23:42.000000+09:00",
                'display_starts_at' => "2023-03-02T23:14:39.000000+09:00",
                'ends_at' => "2020-09-13T21:12:42.000000+09:00",
                'starts_at' => "2020-06-23T22:10:37.000000+09:00",
                'discount_upper_limit' => 2277,
                'description' => "cLNjePvmbsJ6aAodX3lOsSzeTfXuUhrzyKZN2IpvZDbUGNbf92zGejiy7b3srgm7LVnhxTyAZfZDkQ2r2xXuIalmcupP8PaFubqXmo0h47ayHi8sXxsnC42wCpyAiBnUBLAV97YftKTMpHhWMUK3SCmPb9BXoLZ7wKHtX23HwTLkUG7zxtQPL0ebUOhv3B3t2DzpE8reI7vFyo7eM4dNHW25nKJYDvzM004QSYdkecoFJzr3b",
                'name' => "rOZ5f3RQvkhtySJKYRUQ3NzI"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon46()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_percentage' => 3131.0,
                'usage_limit' => 8303,
                'code' => "xko0Q38",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-07-12T22:23:37.000000+09:00",
                'display_starts_at' => "2021-07-13T13:21:43.000000+09:00",
                'ends_at' => "2021-08-19T14:34:20.000000+09:00",
                'starts_at' => "2023-07-13T06:23:16.000000+09:00",
                'discount_upper_limit' => 7146,
                'description' => "7uK9FEO8wpTMbUo34Oh",
                'name' => "jcbIFy00bHfPtADraHJBywFUVQhJIvCWpCXL"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon47()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_percentage' => 773.0,
                'min_amount' => 7165,
                'usage_limit' => 4206,
                'code' => "x8oHUCw9I",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-06-02T23:27:17.000000+09:00",
                'display_starts_at' => "2022-07-10T23:22:12.000000+09:00",
                'ends_at' => "2023-08-28T17:11:20.000000+09:00",
                'starts_at' => "2020-06-24T22:34:08.000000+09:00",
                'discount_upper_limit' => 301,
                'description' => "v5tebk72bnq5V1PYuyQsrCeZvlknHwyC",
                'name' => "eoTGD6IVelM1xkQHIURZCUVG9E4BcH9vh8Qcd9Qr1jGxJh75seT2MlMasdJCSgZ4nn16A08HMuzRKVjoY87iExdEHT"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon48()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_percentage' => 3496.0,
                'is_shop_specified' => TRUE,
                'min_amount' => 8308,
                'usage_limit' => 6853,
                'code' => "pdMlXJAK",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-06-16T23:36:14.000000+09:00",
                'display_starts_at' => "2020-04-24T03:45:58.000000+09:00",
                'ends_at' => "2022-07-19T12:13:10.000000+09:00",
                'starts_at' => "2022-08-01T23:29:15.000000+09:00",
                'discount_upper_limit' => 5335,
                'description' => "jNBic0lbP5i9pPDb3qItRRs3FY6lAlrydgPmYNQmdCCSHSb7PeqbGNNyGMxdwCiRwJpoUBZS7wM2sjFT50Pr6H3Lr5Vqadi7ItSc4oUdi9EYp8oXZ4d1DUqCUDmWqMmM9IYmurAkMd4wDsAO01hvmpIXnG4Vdq7gNAtqrqKm6uKQNQH3PDcRwU",
                'name' => "ecSBjOParYUfATbiJrkxUEwT3M91XjHrTG7fMCl81IJPQuSHXTmEReE1YV9ebnUBpzD7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon49()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_percentage' => 8349.0,
                'available_shop_ids' => ["75f4ef73-61c7-47ee-9e4f-85beaea7dff6", "1fabf200-1250-4374-9a4f-c31ce35ed6d1", "c00754b7-baf7-4fd2-9da5-b1a5d4d415a2", "dd2d0f2a-3b2a-40d1-a796-4c2953449a28", "d5b939cd-2f7a-460b-ac45-e3d1affeb905"],
                'is_shop_specified' => FALSE,
                'min_amount' => 4499,
                'usage_limit' => 5465,
                'code' => "b78oA0LE9",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-05-25T09:42:31.000000+09:00",
                'display_starts_at' => "2021-06-19T06:39:04.000000+09:00",
                'ends_at' => "2022-08-24T10:17:12.000000+09:00",
                'starts_at' => "2023-12-22T07:22:47.000000+09:00",
                'discount_upper_limit' => 8570,
                'description' => "soBIqSCZEncCQxjIhrUeBMFsGSoFMs14cvovqZ6GQpcxkL1iWim0Xpy9XRR4FHqayBd9Y6naDnCaj1IshUK5sOcLMoSdluvLDw0rIOalhSCHrt5J1YKxmhpIQaAHu",
                'name' => "1XqBsQEc2YHzb0v51JNexx20BlobdlTY6n3LbK6Vu4m4rhE7PkEzPYVXfzwtjxI8n9Z0CQK"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon50()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0c52339d-828e-49a3-9a5e-133b52c825fe",
            [
                'discount_percentage' => 9805.0,
                'storage_id' => "3fccb155-2b85-4a11-a486-d973d52a139b",
                'available_shop_ids' => ["a63d439f-26bc-494b-a80e-8f7cdde882fe", "5055221a-443e-4ce0-9b05-02cc80b0d663", "496e72e1-62d6-44c0-b66e-ee12227d9948"],
                'is_shop_specified' => FALSE,
                'min_amount' => 3038,
                'usage_limit' => 9865,
                'code' => "WcZidvZ55",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-08-06T16:30:05.000000+09:00",
                'display_starts_at' => "2023-08-12T20:58:15.000000+09:00",
                'ends_at' => "2023-02-09T11:36:27.000000+09:00",
                'starts_at' => "2020-07-04T07:54:55.000000+09:00",
                'discount_upper_limit' => 965,
                'description' => "16AnmYbzCLHYWconVaiJFwoOHJhs1D1kk2Z65xpUZ28FCmVx3QLXn5K0ujHfTEebumDwnUvtTuwE1P6w3jvuc6WVynWZlMwTGtLKHNv0GHMA8YNVctqn0HylBEaWFtK",
                'name' => "GqTMRGGhLK4md8CvDRXJmyMUq3nONdNUldEzZzYqTFGHLldYwHPZ5GyoYYcgPPK3Dchqik562nQJ7JN9nEMDfH9ZULXMKOjFu2fGiShoySflnR"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
