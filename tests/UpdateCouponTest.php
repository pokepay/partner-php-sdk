<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class UpdateCoupon extends TestCase
{
    public function testUpdateCoupon0()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_amount' => 2696
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon1()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_amount' => 6546,
                'name' => "M7JUVu7YgDI0zSm63cU49za1QJALcpDZJ7YKoaGZq"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon2()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_amount' => 1617,
                'description' => "RMYj7eI0OiTgfPr68fP2A8RCqVjIMZulltZtjgMfuDxn3QgsidEuf2NvBHeZX8hYKnrzJWptMhyWUi64YZbGeyCSFHt3mcrCB8tq8q2IVY2UPxEK8mwHnigIC2xteLEmOps6u",
                'name' => "4P22rjT4dupTBgLrwJlYmSqD3jh0KtoQaeaW3v7wYe7b9HTOawWBmOJlSRN9rogVZwJO2xNcltqUbvpNyoJI0vqJ8n0o"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon3()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_amount' => 8533,
                'discount_upper_limit' => 4539,
                'description' => "QYsKaRMsrJUacY2rYQO4gmGHCfbUV5BkcqYiSNlDYC6MEWefziiHI3EykNpjwCPjAkzyY2kmUe2JJ53U3N6F0e26pbO3HttlG4eyiatMI7VF3dtugJSz1Q3vovXNsgFsW05W19aXuG",
                'name' => "VVRQlUVJv9C"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon4()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_amount' => 2010,
                'starts_at' => "2023-09-28T14:50:26.000000+09:00",
                'discount_upper_limit' => 5466,
                'description' => "sBhmJBENJ2Jp2YLnPueitIaB8AWaFb8JKCZbl1FLUJSG0fudQ9bvTSzMBL1Qigyh82R8yfv5oZ1A8LucSTZwJytxSEpRfXYxFxMDsqe8NITOunWJGeGMfsCgwJoSsvq0p2vMuqT6yOdp5xmnGGOh83wDY3YT1DlU5jqThl0v0L",
                'name' => "Aw1sxsypKPTUBVqh1Y1karSx9kbbfwykuboyLPrrY2btuxHx9YophvSLqEzRt6XTR3oDpLSuhWGSp4IuNXEvAYv341undTljbWPhfpiwPMjup"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon5()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_amount' => 2442,
                'ends_at' => "2021-07-23T03:24:47.000000+09:00",
                'starts_at' => "2024-04-21T04:24:46.000000+09:00",
                'discount_upper_limit' => 4662,
                'description' => "xVDnAJbsKD6b895iftqbY67Ut2zsAKH6lKT6gJXbaEKAddoUM0CRda",
                'name' => "DeoQ9lXXELG9oQdgpEse81VvpXr3HeuSevupI3Lg6cydG4CQY3zROLCcC3cDzGwCmJXHiF5C2aKJupg0Hph0"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon6()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_amount' => 8615,
                'display_starts_at' => "2023-09-22T17:07:39.000000+09:00",
                'ends_at' => "2023-05-09T16:18:08.000000+09:00",
                'starts_at' => "2022-08-18T13:57:47.000000+09:00",
                'discount_upper_limit' => 2263,
                'description' => "BeCDLYnE6HiVXoG09ihrRj4aejWMyEn4Q3X3BDxBJJ",
                'name' => "5t6h3IPcB"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon7()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_amount' => 6404,
                'display_ends_at' => "2023-12-23T04:44:59.000000+09:00",
                'display_starts_at' => "2022-03-31T16:45:05.000000+09:00",
                'ends_at' => "2021-07-13T13:14:57.000000+09:00",
                'starts_at' => "2025-05-06T19:13:08.000000+09:00",
                'discount_upper_limit' => 2813,
                'description' => "agEkitF8iACEva8PGaDArnv6F3HhJclpvEl0kBLWjkCR0Mj5I3Hqz506kx1IdZKDkCNCl989Inr9h5bKrK2A0mcFTtdvdsEkzDVo",
                'name' => "xJr0lAnMovtOnbZ68Js"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon8()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_amount' => 5254,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-04-19T11:13:19.000000+09:00",
                'display_starts_at' => "2022-03-21T23:14:43.000000+09:00",
                'ends_at' => "2021-03-21T18:56:56.000000+09:00",
                'starts_at' => "2023-03-08T13:30:31.000000+09:00",
                'discount_upper_limit' => 1571,
                'description' => "5PoatcF0TU5W5omY",
                'name' => "IqjFLKdIYieVX7m2aCCypluKCuWAlkVHsDkHFJvihW5VcQOv2mc2ISnCuuu6HEZICTUsFd55cysKpzPw06buTFvYo4vEubGw6jVHah2jNyPqoWcQPdnYsCcbQIY2K"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon9()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_amount' => 1040,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-05-23T21:41:26.000000+09:00",
                'display_starts_at' => "2025-01-31T04:33:32.000000+09:00",
                'ends_at' => "2022-11-20T01:20:51.000000+09:00",
                'starts_at' => "2022-11-12T01:51:04.000000+09:00",
                'discount_upper_limit' => 755,
                'description' => "dkpVkTBJa3OTrsXs88kJNoIZazm0lWPTZ7efHVp4Du6bqVzq0H9hNDIpWOGRlL4QDCIWrLzYwdZH6RYisLngmui2yyfAvCUPPfC6gPSyCFjnlF5wS89FXtStGksuJSc3uI6YbNMb4YSuPWKo7xO0kav9UABs7zcSSckrHrP7zrKa6Deu24AbEENpv2mR4vcFbZYPGyrsGLqJFlRMGfDCisIe5qHDsMdG7wbTKEpXzySqqc4sX",
                'name' => "Pad6xuwUqi64YRTYtsOeEN9XbwlgwBy5OkIYkbdAf4PBqh2Y5zV0C85Vn4l2htJKp8EeWwIbRZU73CECtq6YH4jkVjZI7i"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon10()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_amount' => 2657,
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-04-02T00:35:49.000000+09:00",
                'display_starts_at' => "2021-11-23T05:42:06.000000+09:00",
                'ends_at' => "2022-01-23T03:52:36.000000+09:00",
                'starts_at' => "2022-01-30T08:48:39.000000+09:00",
                'discount_upper_limit' => 2342,
                'description' => "vmESb5ZkkQma0HXRK",
                'name' => "Uqv4lzkwZFtSWx4aRECgS2Rzs2ylIq5ZtrGXVCQU"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon11()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_amount' => 3723,
                'code' => "REf",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2025-02-28T13:07:34.000000+09:00",
                'display_starts_at' => "2024-04-19T21:28:10.000000+09:00",
                'ends_at' => "2023-12-04T04:02:35.000000+09:00",
                'starts_at' => "2022-11-20T08:17:24.000000+09:00",
                'discount_upper_limit' => 4061,
                'description' => "oiIjURbvF5cuoyvA3tbiunsY6SNRraYwc8QDfAEfV4F8XUQw7FOCvHUkEBp2LxsthHBe9EWUoT5QLe9Yg2CBY3r",
                'name' => "cfBues6uHoyn0kY9tu08AkjC0WPKbQvYow9FaOH3zD7SQmRuyNCMpGLgUAKK4AYXStTHGYGCT6FSvry2ciGzpWdg5yn158N5eaT1YQUtPEMBFK5RCvbOFI"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon12()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_amount' => 2123,
                'usage_limit' => 336,
                'code' => "Ibn",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2024-04-01T10:15:37.000000+09:00",
                'display_starts_at' => "2024-11-05T21:17:32.000000+09:00",
                'ends_at' => "2021-12-18T08:15:15.000000+09:00",
                'starts_at' => "2023-10-10T11:21:58.000000+09:00",
                'discount_upper_limit' => 1403,
                'description' => "zKQeAZtwqv4AGYkQ5YWzuO0mrMzlLTVYxU13omHKmdh2ng7xlmB0D7qlClsr3peE1RPsdDZEoaT5osfv5Au45ikmQzjXEIrL5tEVsPc",
                'name' => "ciqGzpCuGxgjotbAnDFm6nBFTBcp5MgKi6djde9q9Gx06zspIhW3gmaN6JcrvmX5G7cBGoNqTURH3hLLIVR7YcRrTeQOsLdvK2PU"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon13()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_amount' => 9977,
                'min_amount' => 2276,
                'usage_limit' => 5015,
                'code' => "hyxj",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-09-11T15:54:10.000000+09:00",
                'display_starts_at' => "2022-08-15T12:38:34.000000+09:00",
                'ends_at' => "2022-12-19T20:47:52.000000+09:00",
                'starts_at' => "2025-02-28T02:47:00.000000+09:00",
                'discount_upper_limit' => 4500,
                'description' => "J7Fcj7Ywb40WRFS5iP8DHnWS95dKYCDWj",
                'name' => "DqXUFGoRA4XvfiL62Wv2vl8qJafcwBDpLTRN1a0lar5cvmWk6HP3Edv56q9t5VGuIJJqB3hC6IgJlj"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon14()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_amount' => 4113,
                'is_shop_specified' => TRUE,
                'min_amount' => 4657,
                'usage_limit' => 5920,
                'code' => "y8KOJgfu",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2024-03-20T00:24:38.000000+09:00",
                'display_starts_at' => "2022-05-11T09:54:28.000000+09:00",
                'ends_at' => "2024-11-11T09:35:23.000000+09:00",
                'starts_at' => "2022-08-26T18:42:18.000000+09:00",
                'discount_upper_limit' => 5929,
                'description' => "sPLKGiMRgfz5jiMdvRW63Z9043h9SU3fTD5o4Kn6TQ5PsH9YtmnNiOZyV9AO3DnB1YRES4xlc6449ibwy8gDnWqdIP3eIh1PycrJFKeRKa6OogwkyZYeik5qw2qVOD7lJwoEqJ4uimGtF4vDevDABoV1497oKjyplK",
                'name' => "XUyjuZoAdZa"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon15()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_amount' => 361,
                'available_shop_ids' => ["3d2fd402-8d9e-4887-93a5-79e83844c27c", "e48edb23-1817-4ef3-aaef-cda57e2ffc2e", "e3fea67b-b0a7-473b-8b65-921634bd23ed", "78e8f8c4-2304-4a85-89b9-bd1d42ea5949", "a56683ca-e38a-4896-96ea-56aafe55c796", "c7087c69-bdb3-43c5-9d87-0f7ea73c01a8"],
                'is_shop_specified' => TRUE,
                'min_amount' => 2583,
                'usage_limit' => 8657,
                'code' => "0n",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-05-23T20:41:50.000000+09:00",
                'display_starts_at' => "2023-03-05T13:33:22.000000+09:00",
                'ends_at' => "2020-05-28T01:25:48.000000+09:00",
                'starts_at' => "2022-09-12T21:51:29.000000+09:00",
                'discount_upper_limit' => 5611,
                'description' => "J4Xx7BosawhL51XW0ltZ8tyBqdUl09HCPEoMCgQwCdLCVxkfS7LC09h1a33P",
                'name' => "4feIw8rNkq1IJcIVXzbXoLITUciADNRcm8cr7h7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon16()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_amount' => 2934,
                'storage_id' => "1695377b-7970-4613-9fa7-0e903ebcd1d6",
                'available_shop_ids' => ["9d0ccc04-c86d-46ca-a768-68b2330b885e", "65eaef26-b298-4168-bd21-8af346407070", "d9a38f0b-9f42-444f-9d74-0e780534f961", "42cead1b-1e46-4a9c-8a56-722e4a467170", "f39361ae-6ad1-4a77-b52f-91b61d440501", "7c68a205-9383-4fb9-b60c-67e15e34e75f", "b3dfc859-69e2-4230-8c3f-49b2cfe7a730", "1d242eec-89d6-4da3-a881-797012c2f0cb"],
                'is_shop_specified' => FALSE,
                'min_amount' => 9643,
                'usage_limit' => 9649,
                'code' => "jAV4SI",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2024-04-13T23:52:41.000000+09:00",
                'display_starts_at' => "2024-04-30T08:50:24.000000+09:00",
                'ends_at' => "2023-02-25T20:09:17.000000+09:00",
                'starts_at' => "2021-10-27T05:23:50.000000+09:00",
                'discount_upper_limit' => 9057,
                'description' => "YJsZSIV5H0hKFZRjFJsBJwxE5ymHkkfvwj75uGxXyxLiKvyAHQ0Cmh",
                'name' => "0GR2iNpQgbrTS2"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon17()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_amount' => 4165,
                'discount_percentage' => 2278.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon18()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_amount' => 7526,
                'discount_percentage' => 4560.0,
                'name' => "70DHCUohTMu269OO6DIw88je3Px2M6UQ20lAXsAZIDxFXqpctZUoXMEwvfZIhfCcdWRRWKBpAMRk3KT9aHDvn680BNVo61w"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon19()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_amount' => 5673,
                'discount_percentage' => 3324.0,
                'description' => "u52VEWHzeXnCqnnjKe2ZokcQxt9okwN5c4Mkgq5YYKEEntoCEiLAHJ2sW9FitjutUJJsIkCXGENUTkzcX2ykkKJlN107OaiUpqdHMS0BnQNQ8yntRPdiO7nDWAmmXsETvex6EwUtMqxtCSMEZWLR3IYMZqZQp71KYV2dqAhSRH0jBaTj6CKr7da3Hc5MrDSrYQmTFD8MK4LhwIRladKEnUCUBMTsHjSLXQWZdqZHX",
                'name' => "OS9NchMxuvMOV5pE0ThIcNVnpd1n04Fvafo"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon20()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_amount' => 1180,
                'discount_percentage' => 4789.0,
                'discount_upper_limit' => 7708,
                'description' => "flXygJfyBJl1nws6Ne3S7kdpHli9FCf9vj51iwXi5vVkai7fMidPllBkchJ2ELHNBkuEPtWGn6U1tknXv7iBjpuz8kXfTQVtq7nYSMGg6A5q48d0VvhbqvZRxaI0AVDH5phIrM988xOpACBuWehCLI5Ithzpo1sbw0fi8Tfl4MiezYuuDN5NO2HkiJUlQ4dKgR3uo3pyHQKCLEzAV2HW0T6wt",
                'name' => "Fowhjkpuax7inTCKJlAlkDX0z9k4WtlP60t1pGDCB7WpLioRLUylhwp3jBXylmnzTDYQPTQEhEDpiIl88uXhFr9tzNaCFLhrW7Qg63LO"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon21()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_amount' => 1151,
                'discount_percentage' => 9593.0,
                'starts_at' => "2025-02-03T21:32:51.000000+09:00",
                'discount_upper_limit' => 9028,
                'description' => "Rk2frbKYDtHXRSpeSviFk4W1qsOLMcNwe8KEeqmGGreSt4nt1ybC0Ywm3a7y1jkUDzYlQVbUnnRBBQRDsGnvgO2bodBPeKpRFsQIEwGMkEBFs4OKbpkXgOJ3P1nM9riBWugVW8sRaEhx8aJkSJHuUfzU3cxqLSG8S",
                'name' => "4aP0CNMNfb6VowWUVfzovzP7VL5ebcijLtVhmlM6kBu7DCNg4aU7BlWsNECFWA4hHlvtcjGtIPadSKiVX8t6IuP7AfSh1iSd"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon22()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_amount' => 111,
                'discount_percentage' => 4461.0,
                'ends_at' => "2023-09-19T05:03:31.000000+09:00",
                'starts_at' => "2020-11-26T20:15:19.000000+09:00",
                'discount_upper_limit' => 7587,
                'description' => "lXA8y2v",
                'name' => "wAsTNYaeLyV7CWdrmk"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon23()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_amount' => 7060,
                'discount_percentage' => 1975.0,
                'display_starts_at' => "2022-06-26T23:06:42.000000+09:00",
                'ends_at' => "2025-04-17T02:09:08.000000+09:00",
                'starts_at' => "2023-02-13T23:57:06.000000+09:00",
                'discount_upper_limit' => 7201,
                'description' => "yx2nAdRh4U2Gnj6HilrfsKlPIExrXeCFOu5KxrV4xhz7DzBywKIciMlN0S7L0N0uBHj0xIlmI7crwjgiJmBq8x2BMoiejWmPY8qwKCFWRUhTWJtrSHM5KvGCx3jvLeQXqJ7fOtRApW564YK0LvLN69VHlYJhXH6cUQL7XLfiXA0zUZ8WIiKSeWU9z6lAbD3wpFlmsWusC8RGaBKUJdHLf9kwaxRbmzAo5vzrqC43kvR5VzS4JSx7Qk5qYm8EJV1",
                'name' => "y6vGk0FuWZ3ptkSyNBcc9paWacdvlF8sKq6M8TMch0t9MLsXgvG8EYKbsPpBkO0z5h9"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon24()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_amount' => 3552,
                'discount_percentage' => 6207.0,
                'display_ends_at' => "2025-01-25T07:10:06.000000+09:00",
                'display_starts_at' => "2025-03-11T06:00:19.000000+09:00",
                'ends_at' => "2022-03-12T22:06:07.000000+09:00",
                'starts_at' => "2020-08-15T09:43:24.000000+09:00",
                'discount_upper_limit' => 1931,
                'description' => "0r",
                'name' => "GagOIQ6x9sSfu0zX8zdCniT7rbp4RdF8jzLLX07kGwmRZR89QJDyeQCnprhi7qh3KP4T37Wi9g9nZZhOiq9TM1kLnMOaPoayQ1SL4LwXctk"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon25()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_amount' => 6066,
                'discount_percentage' => 5948.0,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-10-26T08:32:07.000000+09:00",
                'display_starts_at' => "2020-08-29T19:52:25.000000+09:00",
                'ends_at' => "2025-04-19T12:11:33.000000+09:00",
                'starts_at' => "2024-01-25T20:34:41.000000+09:00",
                'discount_upper_limit' => 4260,
                'description' => "zFpngLk90ZBFe71DIECbUavopCer6amUqWii2uDVrmTk",
                'name' => "6pqO0f8cnptMkBRjmpnnbeCg4xumOoxK0oT4F795unttA065Yr03Qzj1SYSblk7QSMdkkKPrtzfsCSKaR3OFn1WKJz5hhBZBCZgSERTDao"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon26()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_amount' => 7037,
                'discount_percentage' => 7499.0,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2025-06-04T02:34:33.000000+09:00",
                'display_starts_at' => "2021-09-24T04:38:33.000000+09:00",
                'ends_at' => "2025-01-17T04:27:44.000000+09:00",
                'starts_at' => "2021-10-03T08:47:06.000000+09:00",
                'discount_upper_limit' => 1393,
                'description' => "ITw9RXh5VLaBXSS3EzsrMpj8GBIyJaRyweuGKy2nXN4UBPwGQ9mhvxLr7QQxCiR4LJ0VAGQ0LknXBVXV6IePzMvb8rIAKhBAUImOpB9NJd0FGb0jOdIa2VbV1E7pIBf60ZOpXb0uUTjEzrW5FEq6VpVqu1DpFd0JaBsPBEjj",
                'name' => "xsN82R5bV74h6MclFLskpVJhF8OvhWGp3gTZC"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon27()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_amount' => 3126,
                'discount_percentage' => 944.0,
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-01-03T03:03:19.000000+09:00",
                'display_starts_at' => "2022-01-01T06:37:40.000000+09:00",
                'ends_at' => "2021-06-15T10:37:26.000000+09:00",
                'starts_at' => "2020-07-09T04:38:50.000000+09:00",
                'discount_upper_limit' => 3753,
                'description' => "8zWBqSC3vDIMcnooU2vsEkhFzbMP7H4x70jy8CyXSjsNQfhm4JdiSR8LU0sAxVpKo9Pr8tnCR4b3VVcnR7ySaTJSLXaRbjFaOCY9HY0faJMcRsZ3tfn14pqdpY2gOVzxC2AMFcqtkzhdfPKiy9SERDVnpaYhOvVB8b8Y5rPTIoQ",
                'name' => "afvlfkuyBchbjOVFfaAmwoPiUeFs2qGGZk77FXigkPx1NC7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon28()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_amount' => 7266,
                'discount_percentage' => 9443.0,
                'code' => "dhHDyq2Bm",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-08-18T12:58:45.000000+09:00",
                'display_starts_at' => "2023-01-12T01:53:18.000000+09:00",
                'ends_at' => "2024-10-04T21:38:53.000000+09:00",
                'starts_at' => "2023-07-24T07:33:34.000000+09:00",
                'discount_upper_limit' => 2531,
                'description' => "oOzsV0UAnFDq2j42XbKSjWX0mczdG92I3EQWa6MviKhzgN1WE1E9QE8I1WOtKGTOoDsggK2zVvIrNmjPyMt7JZTknlcSLOAfgHki7iEUUEZsYB8I8w6YX9AjYRSoiU1BYQYTGkBMdZ9gxwOlUDOeBSRiyqeameMaY0bgN8gTUkelv3hkGmk4iWQZAVafOlabiOcEnloh2DXft8ZR3ZIT5H8aSOl3MDXnG9yHqEAThwDuq1ze",
                'name' => "sMIx1hpzHiKxcCexEPrWNcD1BCJ2Q7A3yxMyBqUSnmfmyMf158jbodxUJxcIS6QwIFvAWCZsB1EYOxuNXsb8K4XyQ60l6nZCLpElUd6iH1X66E0nqBBGmKnZ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon29()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_amount' => 8671,
                'discount_percentage' => 4903.0,
                'usage_limit' => 6966,
                'code' => "uDIn3iuFQ",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-09-09T23:53:11.000000+09:00",
                'display_starts_at' => "2024-03-21T05:49:54.000000+09:00",
                'ends_at' => "2022-09-15T03:19:11.000000+09:00",
                'starts_at' => "2025-05-13T06:55:27.000000+09:00",
                'discount_upper_limit' => 9304,
                'description' => "yNXNrNkeWa9hWsLSo6RhlRrNdmMatyDW12s5SKsd06fYHa9pHdUJ2NkpD9XRln1g4q1AmzenaBAIYsPX5BEVEkSwN7Jl7UfMqNeIWxDQ5mYkDBp76iPlz0WyF7I2Snzg812cd0lMhCHFE2kwBpeHriIaXxYmUfeD23BKTCZPKhRk3w9r2MS5qnBpeG29hBWbNKIGuoyWD3BHeU5bcdtREmG3PoPoUnVURoRDP0303M0EUzCR0XC7UBINwES",
                'name' => "7hPy7a3F5MBC2C7VfANu3p62KDWO8TDrLXiDq8ZM4HpSJ7ezaoKVM6PG4nVxadlDXYh8F3jX5Rw62VEObOlMsiJRl1b2ESaJKCDCVaIjvXY9buv1PG"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon30()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_amount' => 9241,
                'discount_percentage' => 7553.0,
                'min_amount' => 9108,
                'usage_limit' => 974,
                'code' => "cB",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-01-13T13:22:43.000000+09:00",
                'display_starts_at' => "2025-05-15T03:32:14.000000+09:00",
                'ends_at' => "2020-10-01T22:31:14.000000+09:00",
                'starts_at' => "2023-03-01T17:20:16.000000+09:00",
                'discount_upper_limit' => 9421,
                'description' => "H0HA7mMCxlziaJ1nphI9ySRxw6pdyrj7YEb5BIbPwZWptKeWMAfjTzhjO10bQwyTU6ZUhrOp80a47LYIcD579HHiydYwYbStQsIHShYuqMOfry8huKLaun9q8fRCMt2pzYekawpUouvYHKlj0GUL0Fcnz7fEngR6pF3m54VmwYrgFgT3RyUt1Kexb2ZIYN08OgDDQYpUk9QvTpwbva3X3fUufQzzx2hz",
                'name' => "bS68SpNEGkfmS3Uyy5Zn41VzLKUg3om1YNfeeKoLdFE8Hmt9R8Bv1AJsBz3l6W699PQnfTErfIkmiU4i2bFcYt3zvnnQAgg6WKGNaT"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon31()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_amount' => 4531,
                'discount_percentage' => 2068.0,
                'is_shop_specified' => FALSE,
                'min_amount' => 8200,
                'usage_limit' => 7344,
                'code' => "bOic61u1y",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-11-15T20:19:29.000000+09:00",
                'display_starts_at' => "2025-07-16T23:13:20.000000+09:00",
                'ends_at' => "2021-01-18T23:48:43.000000+09:00",
                'starts_at' => "2025-08-31T21:54:32.000000+09:00",
                'discount_upper_limit' => 662,
                'description' => "QEFIkbwhO9RJiR7mxn7kYGzShazSiZH6DDfNqfsVRi3zxzsVzVJLxpF9uCjOUSNMH9fWh27PiOpr3HMMXsb4Lh4b0Gko8iE0P3Cu0AOaTlKzyVFYYoK00acoGlEqYYGWZUMgU5LJ8nedbEkL6VCbZlYCZFu0YjXrvick1",
                'name' => "bCzvMElblaTUskxDWTi4syFdijXYZ6Fkp0v2rObj5KP7CaX5R9O7hnOQMfDj4u8or1Z5ajnFBytvfCWU5lvasIan6Df8qsq2k3ETquM3SQuj"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon32()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_amount' => 5917,
                'discount_percentage' => 9542.0,
                'available_shop_ids' => ["5871c41f-61c4-4392-abc5-3e03afab3d0b", "6e50692f-ea31-4cb5-9533-7b0a0e25f99d", "abc5c423-6b2d-48c2-be34-c3892123bdb7", "3a21dc82-00fc-4e47-83b8-7f673f95c6a3", "4b71231d-a019-4bc1-a749-d2c68a82bf9f", "5d23bdf2-d4b9-4d7a-995b-9516b89e4cb1", "5b7ca8c1-5c42-4247-b451-9e282e8bc3b6", "e6368898-3598-4653-9a31-ee9e306ee8c1"],
                'is_shop_specified' => FALSE,
                'min_amount' => 6267,
                'usage_limit' => 4186,
                'code' => "81ee9F1zae",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2024-03-11T14:13:25.000000+09:00",
                'display_starts_at' => "2025-08-22T12:28:05.000000+09:00",
                'ends_at' => "2021-12-22T18:31:12.000000+09:00",
                'starts_at' => "2024-05-09T11:20:18.000000+09:00",
                'discount_upper_limit' => 7378,
                'description' => "tPpZgZzOhvmvIjVKe7aM7QiN4LuTtB8ZF5mN9clYyKl8cUsYw8CW8rHVcmWZsjKlFT0f7did2pSfVDNNjekhaUaqNZOry7p",
                'name' => "QcwkQvvHfTZTUiaSBni"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon33()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_amount' => 3540,
                'discount_percentage' => 4925.0,
                'storage_id' => "30ec09f6-b9e7-4b69-8346-8b634e5cb1ab",
                'available_shop_ids' => ["a71b3846-779b-4420-978c-ed66e5a65023", "7c25fb58-3514-4c3b-af08-708b60ae35fd", "c8172bdc-6004-4c6f-a294-39861791329a", "b44a008a-8157-4c32-8daa-330602fb38b7", "27d6a604-f844-429b-9229-09afc7b17a94", "8612e132-a83b-4591-ae11-263da576fc7a", "3f949ad3-81f3-4cea-929b-5b787717641b"],
                'is_shop_specified' => FALSE,
                'min_amount' => 9169,
                'usage_limit' => 1219,
                'code' => "C2TKE3m",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-05-19T20:00:28.000000+09:00",
                'display_starts_at' => "2023-07-04T04:01:37.000000+09:00",
                'ends_at' => "2024-01-28T22:33:31.000000+09:00",
                'starts_at' => "2022-09-13T04:35:01.000000+09:00",
                'discount_upper_limit' => 7560,
                'description' => "i2E7e3WCog3HknLhb4mGHjaX24jJAlJFQ82MhyQQoipgFNSux0jeobdQD1VXjUggH7qMtHhSfZdXUyjb1NxKa8yAWf3eI4rn2GKxT8MfsHveV88627AlMJYf8MI0c9iCp3raZonaiDazAfoVN5ZcNoMxEFE11voG9m7gWIlidcsFhnnSl",
                'name' => "PQSKVW980GqQVfPuvUPiEFV6mDyiAjmPC8FhIFplNkUQpOFZAAuAkdYYYV8q02r77ePIgPu4dPH7ImSF"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon34()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_percentage' => 3025.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon35()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_percentage' => 6312.0,
                'name' => "7lNoNEqqi11P4GN23Eb6NlDd7BTwpYu4Valw5xiIJ7Q1Cipp2CPMRifbrHbdPk0z0U5np6zSSSsJChBCfGVrTTzFEA3cEk"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon36()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_percentage' => 4641.0,
                'description' => "niAENmbJtM74yoK3yNaovdjb7urlPondGWEfVzKMwihh3UCJATPnnGfbSAjt8y1LpRX9w3aEMSDM7H6DKpMVCMs6AqPF1N4VGIihJYcZH1yqyLKdrb7VdvBferrdPPsgFTBp21GVpuNthlN8cTNxtClPPAh3ydu7juMaO7kqGjaASQkqyw2Q45pim16jWY8Li2yJuAILC9WmiQzTAP0hsvYk94ECXfwyrT6FNWSeiPJDkaNGUUFy37",
                'name' => "fVBCxguWkgEaSRxikajDhky1e9MUM8ZY9eEBDTjFI"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon37()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_percentage' => 2180.0,
                'discount_upper_limit' => 2232,
                'description' => "RpgCoDiEOfsuO3LMtzPm5pmHiztzTLcjSeNyveotr1SbLY9f9RM3h2SXQaAm6iMSYVoPQWfV62UhTGJS1L9KLOsA2Q2Z23Mwd98ipOldTUQCXPcZtLDZ6t1d7NhS3tIbiaQ9UqJHQZFkEmVia7WMZwoONY9mYcjUD3BWfN3hpObBbd0WPCuqh90wnUEefdvvGn56xgqcINC0MaOVTzOYUS4YiFzadS1dG4VhCAXdvLcusNkP",
                'name' => "92lEHAtBr5uMSg7mI2h9L5UgNjF9pGXPoR6V6EH9oG2E8mJwg74tJdyJ5Llab2"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon38()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_percentage' => 1788.0,
                'starts_at' => "2021-02-15T15:29:34.000000+09:00",
                'discount_upper_limit' => 5177,
                'description' => "fUQ6hTQL306GhITMLHDmfb2965KcWooPsLAa0LofoeILq2j1JbokM11iel9SifEKQQKEl5jTOYEn550ChTMJy5Ri4zQipR66DYXbWwtCBK4yI7b7ruIn1DQefV0LKmn0D6u1aqXUgLXLPq2aRw08aQ0rfHosccmXhG1yeE5aq4GKVSCfP0aoPIG5NuiBMU7rfLf6FhpORYw57l88LjJn33RIRSOmlXSQfzzTwn3D",
                'name' => "xt4Xew7YzDaZ1J9OdsQM2IV"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon39()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_percentage' => 4181.0,
                'ends_at' => "2023-09-30T16:33:34.000000+09:00",
                'starts_at' => "2020-05-18T12:44:10.000000+09:00",
                'discount_upper_limit' => 4724,
                'description' => "sgTE0JEew3ek7732woVpaWAn4e207OnXy1NWRJfp7ZK3WimQaowti0F0S2aIOKkN5iwpVUwFU1amkd1FBZBysFgH8TiyAaF4dUSAbqyi68iyJ302sQl233vCftoqwC5tymvF1K23X2uYu46ypSW9PxtiaID1SUCfz9yEelMoF9a26c2RLHzQWOO42l0o0g8SXRzZ3pUKHHeXuuwg12Ygg3AsTOryINKyRmJ3gWCDcmsuvkMrJePtGFhv4aIw1",
                'name' => "GtGR3fEQezBo8XnXONHGXDMcl8tuhVdB5KkP8PHvZEmmcBKkGsr9sdEDTBkey7pr4d2jpaf36YY6mrG9Y2ztoKUUUx5B1bSO8x"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon40()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_percentage' => 3653.0,
                'display_starts_at' => "2021-09-12T17:44:07.000000+09:00",
                'ends_at' => "2023-06-04T23:29:32.000000+09:00",
                'starts_at' => "2024-08-29T17:49:02.000000+09:00",
                'discount_upper_limit' => 6254,
                'description' => "oe60dnWTCVmm3x115QsBZT6dCGgqZsePkl6iY0bdXM6Nza2rTctUJQmh0gNd3qkWY4lVW5zCUF3zWzIdrHm6OsiyHBxsWBtx4G7cLViMByCBNzcDCX5bbsPzVUGeD",
                'name' => "2BWp2XUNEsAtEjlivj"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon41()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_percentage' => 4503.0,
                'display_ends_at' => "2022-05-14T21:47:09.000000+09:00",
                'display_starts_at' => "2021-07-21T22:54:40.000000+09:00",
                'ends_at' => "2025-08-05T19:10:18.000000+09:00",
                'starts_at' => "2025-04-18T06:50:17.000000+09:00",
                'discount_upper_limit' => 232,
                'description' => "lsavWYZduuXynvh05rJdAnnKPkjJzRbGyuQYyb8948tP6VkRaNaNdjmk2wkclkjGIdrGdF8qpLKYfd3JbJX5QcdKyJ1DmsToKu",
                'name' => "w1tRUaP7awM87Mt7bWysOyzqkBrGaMjb1sugqjEeek3DeIDBfKsRB"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon42()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_percentage' => 299.0,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-08-05T00:39:53.000000+09:00",
                'display_starts_at' => "2023-09-09T10:18:19.000000+09:00",
                'ends_at' => "2023-04-13T14:01:22.000000+09:00",
                'starts_at' => "2023-08-19T23:31:22.000000+09:00",
                'discount_upper_limit' => 8664,
                'description' => "uBqGFPReFsmxaxT8Xwuc649dznjsqwxML0aHpiMuFL917lUTrE8EACTMWkW53gnqE0TT1OD00WYy85d5RKAlbrPQ0st0t7yJcv8GqBqgGEHafl1jNP9k7uydClg9A7an27PrVxBqiE9YWo8xjmzBGJVwTTanAXyFjLag3gPPvlq0FFntKGY10p27NPGQTdAXKNGuLNgDO4Ma1ptA22IkyjkgPuZUMAq2NjJocNYKTrm2m1ssPqyT3XyCFCr",
                'name' => "R8uZnHFgU1ZOwuoeukDxIIOg9CcbCgtxt4qQAP06TD"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon43()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_percentage' => 4697.0,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-07-19T13:18:04.000000+09:00",
                'display_starts_at' => "2024-12-09T21:06:37.000000+09:00",
                'ends_at' => "2023-03-03T15:21:07.000000+09:00",
                'starts_at' => "2021-06-21T07:41:10.000000+09:00",
                'discount_upper_limit' => 604,
                'description' => "Pf6wToG8lTKcMPiFJX3LNKTomMc8wnROYRP673oHx5N3DOO7AdxANDE2ea2N2bsCqxQkk2AG5TTqX05IlCZ5tUdSwXVRIVCnlZj6NtOwX2FI8Wr1369uaTF42abkgSmtEHAWzKVmwmqN4ax1Q1Fha0o1JxRbdO7sJMkOiIt9zNKCX0VzisXLLiEpULitiIsW57odiOHhS8DsZfAQRFK6oTTeP8tTTuInowX2TMHi2vDKbmu86aUF4jypKaA",
                'name' => "4yQaiw0JpUpNfjrUKaUCU4cuncfOgZgC0vnz9vdHX3zI21M9POKUqkrXtAeLmERqX5bwDROtzb2hizqeaCyQXA4kt1"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon44()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_percentage' => 627.0,
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-01-19T13:47:49.000000+09:00",
                'display_starts_at' => "2024-12-25T16:30:34.000000+09:00",
                'ends_at' => "2021-05-22T06:53:49.000000+09:00",
                'starts_at' => "2020-10-25T07:44:38.000000+09:00",
                'discount_upper_limit' => 2382,
                'description' => "OCeiOWbpouk4VaYSYsKX6oU3L46cfTNsJ74FdhPrGo",
                'name' => "QztiuURWZ5r1OnryKkdpmMzmoITgipjScgSjEKEvn9tkKJsfEeEirDJBvMOLUpWvpkfaBwAHAugbJ1KgmPImdwaTBcNwqaqeRCH16a6zzUqrHdosHdb"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon45()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_percentage' => 5285.0,
                'code' => "wqukvEUDGT",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-04-07T07:21:25.000000+09:00",
                'display_starts_at' => "2021-05-28T02:32:21.000000+09:00",
                'ends_at' => "2024-11-20T06:18:52.000000+09:00",
                'starts_at' => "2024-02-04T22:55:04.000000+09:00",
                'discount_upper_limit' => 8040,
                'description' => "GQ9yekqoyNLKN2h7BNq3rRMob2yqEgXsKX0DNjA5LloLW2ZGwTADg0EGo2tY0BvAArU4c3Hcr3rYtMZs1YhEQlphw1DkmThPoIdPA7X1r8JTPyIk7mw82VAIRkHcNMgqN77FQwuiGtQW4pnFSkfz0ZAYuHKErS89ga",
                'name' => "8rAwXpAiqwTxt1HL4wWzmkMDA4SVfWD13Zj3L9DQPYajb0t"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon46()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_percentage' => 982.0,
                'usage_limit' => 8919,
                'code' => "EdtL2u",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-07-19T02:09:05.000000+09:00",
                'display_starts_at' => "2021-02-02T13:50:47.000000+09:00",
                'ends_at' => "2025-09-09T07:51:29.000000+09:00",
                'starts_at' => "2024-12-15T22:00:33.000000+09:00",
                'discount_upper_limit' => 4,
                'description' => "iXi2Q1VWdznJovLhT0BrHHw3tEdBOJZocfpIFBg2EP1IMpzVlOR0ZjHbJ4pIYeH1mIjK91BovJNiyan2Rg9xEgMUhIRyB0Lq7z8Ljil9JSMA7rA7mkLLtmKfguDK2IgQjODYIDOJbPEulQIvNSkQALktsxpQNr6y6a28m0nRuldHpSuEUpdPie9qQ2",
                'name' => "GFfC0at"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon47()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_percentage' => 5945.0,
                'min_amount' => 4970,
                'usage_limit' => 7313,
                'code' => "8Dw",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-03-28T07:21:18.000000+09:00",
                'display_starts_at' => "2022-02-11T07:16:05.000000+09:00",
                'ends_at' => "2022-01-19T19:09:13.000000+09:00",
                'starts_at' => "2024-04-12T11:42:12.000000+09:00",
                'discount_upper_limit' => 2181,
                'description' => "WbNc2E2NkkIcBn5byBGxSlhAbqrppUqGdxMolEMce2oIWkzh6xh3kO5wXHuEli1NcEVyTrbdyJqmh3WRfGT9d54NzUibZax1gbEqwtEhHNUjZJEl7H6aHeFVmJSAKrLNuNDUQhJfNq76RxAuxSVrnur4Ju4ayidm5BuCe0yTSEIanUYTV2eUYLa0Qhqw2R1myjYzFL4j0HTXKtxMi6tvMf7GbuKVOo",
                'name' => "81owGN6i0XTT33lqY"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon48()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_percentage' => 5508.0,
                'is_shop_specified' => TRUE,
                'min_amount' => 4448,
                'usage_limit' => 3887,
                'code' => "KQ",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-04-10T17:20:39.000000+09:00",
                'display_starts_at' => "2020-09-25T17:52:40.000000+09:00",
                'ends_at' => "2022-07-28T19:10:23.000000+09:00",
                'starts_at' => "2020-01-06T20:03:54.000000+09:00",
                'discount_upper_limit' => 1498,
                'description' => "7eOE9tcwx8MOKl5MRsa1MFEYPOVzvPSXDUkbgX2oBshUtXGZ9lfp9TwgYPOmismihXWyqdhqoMR6oAdT5yPsPRTmUYdZdYDDGZDuZn0XgqQIqTu14tSh13qLZDYdRTWbMgZiB4q5yXIKvcyeytZUeCOzn479Q7e7CQ6mogsi4OQ6jQwMdVQzET3CTZR3naadmHoO937wRncWgLEMvwuXtyGneCNJhR9grzsET9HHziGJ",
                'name' => "iqEYWh5QfKEnNvZa51B6RuNHWw3kkEIImb7878ag0GpEoXRZP9T"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon49()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_percentage' => 5507.0,
                'available_shop_ids' => ["e2318675-2c16-4b40-a5fe-91fd564d450d", "b9e4dc02-896f-4f36-a968-5feb99746f4c", "c3d75774-a5ce-42f0-96dd-996dd134f600"],
                'is_shop_specified' => TRUE,
                'min_amount' => 3074,
                'usage_limit' => 6102,
                'code' => "Jl2arbhJ",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-01-29T01:44:57.000000+09:00",
                'display_starts_at' => "2020-09-02T14:43:44.000000+09:00",
                'ends_at' => "2023-07-28T23:06:32.000000+09:00",
                'starts_at' => "2024-12-05T12:06:18.000000+09:00",
                'discount_upper_limit' => 4662,
                'description' => "lBm7k1iTzlm9ILQGKVJoUCSY35cdkgvsbAYCbaEHjTHUmx8bpMxYByLz0xsJRhRVsB9HjzBAZfWzO75yHWR5FLMa9CO3GmqQepv7doxpRjgZI2VSDvLJkkZMMdEANfWVavAje3PJg4zkA5dwRQrAEDCEBzCTk0pNAGkxkj3y6QjLE9oTv9S3Zg4O5dK9OBTn3gY0HIw",
                'name' => "r5Xn6R9PIw5eC52tvIBnMyMg4CnT2dj7ORUTt4jEgn4792da7QYy7V605lzcBixerwgOsZo2yFQ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon50()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "cf507e04-ed0d-4f1f-904d-b9ce7fd33a9c",
            [
                'discount_percentage' => 8280.0,
                'storage_id' => "1f03ec93-450d-4f69-aa69-fd7f26c62bfe",
                'available_shop_ids' => ["7ba9bc20-fcd0-4fa3-bb77-a82496553af9", "9ea2ed45-fc50-4d6b-8dd4-90ea186a98f7", "48de2ebc-ac0e-494b-b5ab-e55579381316", "e5d3aadd-4d81-49a2-ad20-891cd70ea2ae", "c79ed489-7242-44e1-a7aa-dbbc1e9f966d", "cb5e4b5b-6c7c-41d1-a35f-f407fbf4df88", "243cf6d5-a676-42a7-b6a5-e82384ef3a13"],
                'is_shop_specified' => TRUE,
                'min_amount' => 2372,
                'usage_limit' => 2326,
                'code' => "25XYGa",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2025-06-01T14:34:21.000000+09:00",
                'display_starts_at' => "2024-08-17T00:34:52.000000+09:00",
                'ends_at' => "2024-01-01T08:34:49.000000+09:00",
                'starts_at' => "2025-08-14T14:06:35.000000+09:00",
                'discount_upper_limit' => 4831,
                'description' => "VKSQYACWhdJgT5oXIAxp1c5Q2vG7By91KC2xkwbMvROWfUAhh6XnZz0yJYgRGAM6oTzljbZYS9b6qmrSFaDiVxdn1z0TuA7dLQ8GnuuGnm3um0ZKY",
                'name' => "qHYAPfacx4ba4pxXiFCicQd3QQrdtpp5IlW8KnTaroT8w3801ZxeZpTa0FFkkUFLVCDKp9TvCsVFg3Dy6t9FVfvRBKOl2QQeBI5NM6J7EhkzG"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
