<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class UpdateCoupon extends TestCase
{
    public function testUpdateCoupon0()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_amount' => 5673
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon1()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_amount' => 6556,
                'name' => "s4nU8oJIkRCorlAZX8hRab5l5jt8Up93bLzdB7YXNMuLZlQsOnNxTHfNS7K8uMxrtTKN"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon2()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_amount' => 91,
                'description' => "2rlkc2NA70O1BWaafUQAybj6OtCDywsmiLrTnr2LBs10J3P36SxcjgkEsBtsPOwlfof1JhYivIrllzIktp2VSTMas6PuWluQRPey8TrLElHa2G5kIO2gdHrE5rBbBDoFliqe1bJsRzsWK4DsoRRyD4v2755wMN6gJzbHpR9rk2EHi8QEcnZQJ4jfCfJzqFCrrb0oXvUzZWFTMeGWB",
                'name' => "XBo2o4oiuSSVutyjKdcDsakezMumRECWZUvsqQ7dagggNog20kSqESnIMKeEOY8oIJNbcnQ9nlHa1pHLZDPzXifgmbCSiekv0sCCiPAmcxA3MInPmk7aBXL7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon3()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_amount' => 7996,
                'discount_upper_limit' => 361,
                'description' => "VE2BmQNRFr61L02",
                'name' => "QBXdun"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon4()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_amount' => 8123,
                'starts_at' => "2023-07-30T06:10:03.000000+09:00",
                'discount_upper_limit' => 5525,
                'description' => "LLPlu3kubTBiX3aXLaduep8yfuZjIRcId6PWvqbZmH785iKj8aEziwt8Wi3Ht0FqknJXSBrR2sdqsSKhWQtvZp5QHKWIJAHjHWF0gmqtoFO2iyh5SPOaBiQ1jwXSyk7QsdtS9XAzWfFrhl9ynI9I7J",
                'name' => "Sjh0NMpaVIOIBT7peQ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon5()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_amount' => 4568,
                'ends_at' => "2021-05-04T00:07:50.000000+09:00",
                'starts_at' => "2022-05-25T17:39:34.000000+09:00",
                'discount_upper_limit' => 2850,
                'description' => "2XXErS17ETRxeBMJ",
                'name' => "EeirUeY9BdS0tOkRQ7Lc3F0NNSTjX"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon6()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_amount' => 5474,
                'display_starts_at' => "2022-10-18T20:20:39.000000+09:00",
                'ends_at' => "2020-08-15T00:24:58.000000+09:00",
                'starts_at' => "2021-05-30T03:13:27.000000+09:00",
                'discount_upper_limit' => 2294,
                'description' => "xsi0O9d9zuvdv74F2Gtj6rSFK4lVItcY6AwCHBxLf8VRBl7swEuKDN2YPjywMQ9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCUwimytDvae2gX1SQomGHGyYgv4sunARXhnoZLq81R5hO0bZMK8a1eGGmDIzDdoA6XVPSe66A1",
                'name' => "l2RX5T1CtrjYeVahMSSfAPxEmKQHuIh5Xy55vh8rh03ZBSEBlxFtEosv"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon7()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_amount' => 6041,
                'display_ends_at' => "2020-02-11T18:11:57.000000+09:00",
                'display_starts_at' => "2020-06-11T08:55:42.000000+09:00",
                'ends_at' => "2020-04-14T11:44:10.000000+09:00",
                'starts_at' => "2020-10-17T09:35:00.000000+09:00",
                'discount_upper_limit' => 67,
                'description' => "n6Hpq1H9pvlTNwHdbhSN",
                'name' => "3ePNngPVtZr8jmlPbfgT2OHoYf8MqFRQLnv8N5LEAWghQWBI974We2ohMMvfsPaxG2bBoxAyWnzXWc0gY9MQ9c"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon8()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_amount' => 1308,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-05-21T02:20:51.000000+09:00",
                'display_starts_at' => "2023-04-17T23:17:10.000000+09:00",
                'ends_at' => "2021-02-19T23:51:24.000000+09:00",
                'starts_at' => "2022-07-05T01:22:09.000000+09:00",
                'discount_upper_limit' => 2299,
                'description' => "VPICmsLbm48WuXTI99DZNpG5WhMXhAQYtQwzE40mGvWb3xaNpMiUZGxVCxleCPg9ujkWc75mo6DW8VIek2RS5dAuuQb7zCwRo1LcrxurKRS4X8RhFB2dzGAWHXzpJXwR1wEvlzR2IEMMP9HB66xBtMLDOnOT2Ut4zvv2TkMvfVbBSGhUI6eLkA4W4QquiCmuVq76FlyIMZKjvrtzM1TZknHJTAX",
                'name' => "l6EAoHKHlMNuYbQAq4gP2ATfzmifRDV0dmetNahWvYqwcenL2ottX9mYbmbRhSk6qgmA4NFy4OYtQYwmHzqcOnWDPVIjv3ccy2tHE5q4p2WTCkGaXF6ag4bo7g2X"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon9()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_amount' => 9650,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-05-12T14:27:50.000000+09:00",
                'display_starts_at' => "2021-12-10T06:31:39.000000+09:00",
                'ends_at' => "2021-05-15T22:31:35.000000+09:00",
                'starts_at' => "2020-11-04T18:46:22.000000+09:00",
                'discount_upper_limit' => 5702,
                'description' => "krbYNGqzSENro2PTPmz64WU9B1mXNphwN74i7IlQapdlen0H",
                'name' => "8GvhwPQ79afzilHtMxe1DGw9cFxL"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon10()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_amount' => 7911,
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-11-27T15:05:32.000000+09:00",
                'display_starts_at' => "2020-07-13T14:09:39.000000+09:00",
                'ends_at' => "2022-11-16T10:53:00.000000+09:00",
                'starts_at' => "2020-05-29T08:42:16.000000+09:00",
                'discount_upper_limit' => 3802,
                'description' => "n7BroB3iq9rHPjXsTWFI3fwdLPffxVYOHzMhoE391Ls5cGFYrXhxvE1nJj0FSg",
                'name' => "EJumyU95SwpbDe72Gp"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon11()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_amount' => 6480,
                'code' => "F35Hqvq",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-05-13T19:40:42.000000+09:00",
                'display_starts_at' => "2020-10-16T23:47:04.000000+09:00",
                'ends_at' => "2020-12-25T05:59:51.000000+09:00",
                'starts_at' => "2021-04-21T02:28:44.000000+09:00",
                'discount_upper_limit' => 884,
                'description' => "FAlyK2ePkbetXM71lacc4brmW4qXoZJNmjBxq9YzdwafnuQFxtdH8iBdmzchTEz5ptV6OTfZlEozpqpnWcjpm2RTsW1x6ABD8kKubRfKnFs1AM6E8bpVK3Djs3ESVtdplUS8Q2UrIIIX6KzgtSmKckOHPQhCeF3mFfOybm3h8l9mXG3XJG11cJ3CwPhv21tEm6wYSZ8qLsoKVTTEDpUEIiOoNAcetVv04nSSSHnCD3illV9V",
                'name' => "uzlyNxEG7PIdG2Bg1SlhpRrJVBrzkyWsxJEX3aEuX3YLhIai1AoMUnhMzQan7H7YAHR6ALPWQbaTxls2RwlR2jQ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon12()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_amount' => 9647,
                'usage_limit' => 2416,
                'code' => "Ij6",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-08-02T19:38:11.000000+09:00",
                'display_starts_at' => "2021-12-31T13:44:47.000000+09:00",
                'ends_at' => "2020-07-21T16:32:14.000000+09:00",
                'starts_at' => "2020-12-28T17:54:31.000000+09:00",
                'discount_upper_limit' => 66,
                'description' => "tkKIjxfMvYigRS3aMB3leXfamXPTAcct6aoZrDRrbs2X3sJUHGiNyGnuCOsFM1lMgWE9FE2t8MTQvBSMMHqNfBNp8oNRWCbnsVdV2X9EYf5DdyVH2qbb9mkm9s6IZhI43q2l0936RryOCTzNzu95ewHOKtgDGT7aTW6NicQEA7w8",
                'name' => "maf7D"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon13()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_amount' => 1921,
                'min_amount' => 3877,
                'usage_limit' => 1168,
                'code' => "68CTA",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-05-07T20:48:23.000000+09:00",
                'display_starts_at' => "2023-09-27T12:07:05.000000+09:00",
                'ends_at' => "2024-01-10T16:17:19.000000+09:00",
                'starts_at' => "2020-05-14T03:51:29.000000+09:00",
                'discount_upper_limit' => 2421,
                'description' => "YOPbaFAD5X4OUxwJsIbAA9EJZbGlGDK0BLKhm0BCDKClY7ksx4AFmegls",
                'name' => "a7kcQ3U5nYdR"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon14()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_amount' => 5569,
                'is_shop_specified' => TRUE,
                'min_amount' => 3545,
                'usage_limit' => 7220,
                'code' => "5D5",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-11-12T17:53:27.000000+09:00",
                'display_starts_at' => "2023-01-27T10:09:02.000000+09:00",
                'ends_at' => "2024-01-11T03:05:02.000000+09:00",
                'starts_at' => "2020-03-20T06:04:35.000000+09:00",
                'discount_upper_limit' => 7396,
                'description' => "SpGqSwnjqBCplYqFGCSydJBdGQIRCoUGKXQLvpmISysqAvSge0ksdZjMeixjk4Xr2U2mAhXvL3RhDJrSIafRbJT8SF8wUW22cHM6quzFhV6av10cPpYvh8M4GYaOxN",
                'name' => "pnsfp3Yo32Eoxrm5h7gERxts6Ahc1mLgxHrG9yPSdMn20M1m"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon15()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_amount' => 6209,
                'available_shop_ids' => ["7f065976-0596-4174-8ee4-c8eda39be7a8", "e170b42f-013b-4cbf-b900-e435fc714a83", "46c6d01a-b5d1-44b6-8052-c481473a3644", "21f41538-10ab-4468-92f6-163153ed6db1", "4d1379d2-2226-47f4-8ead-9d4b2c1ce540"],
                'is_shop_specified' => FALSE,
                'min_amount' => 1663,
                'usage_limit' => 3472,
                'code' => "weh",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-10-11T01:00:53.000000+09:00",
                'display_starts_at' => "2022-10-29T09:07:50.000000+09:00",
                'ends_at' => "2022-04-05T14:42:35.000000+09:00",
                'starts_at' => "2020-01-11T04:21:12.000000+09:00",
                'discount_upper_limit' => 6049,
                'description' => "gJuyt9MSKJxZM",
                'name' => "vOSiSToVyUlL"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon16()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_amount' => 6166,
                'storage_id' => "da6b6527-21da-4018-99a7-3cf071e422a5",
                'available_shop_ids' => ["f70d3940-46f3-47cf-8505-922bc68fe8e2"],
                'is_shop_specified' => TRUE,
                'min_amount' => 5260,
                'usage_limit' => 8232,
                'code' => "G",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-09-22T10:00:23.000000+09:00",
                'display_starts_at' => "2021-09-28T11:53:52.000000+09:00",
                'ends_at' => "2021-07-07T02:02:04.000000+09:00",
                'starts_at' => "2022-05-04T14:04:56.000000+09:00",
                'discount_upper_limit' => 7933,
                'description' => "hARQQb12XVIGZX29Dyx5lvvN3RvdFrJB03Awjgyx1LKjKra0Iw3VSgbY44nqluiZNrww3UIPDcTpj4770t9xMtk2wuUGbgJkQOskPAWj9zcuH8kQMLZ6LwoGqmvZ2Hzrv",
                'name' => "L9pQWZw6qBf2eZB0nluB8B4cZc5D"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon17()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_amount' => 5165,
                'discount_percentage' => 3138.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon18()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_amount' => 5577,
                'discount_percentage' => 2235.0,
                'name' => "vnOFyRoEsaMnoCbZG4lkQ3FrjJ9RAEzEMsUk2ifFvv"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon19()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_amount' => 5205,
                'discount_percentage' => 4616.0,
                'description' => "uDqBNQG9tR535ExtPASVXxC2HvyFNSNXIlPlVVnLwBZ665AQI4VRr0wSpNoBjGGosaVXkExOG0311Q9mfMxrQRKkEbQcdqPYIQDvwSeY8tonzD87PL0a",
                'name' => "yzkfiyYZxzf4On"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon20()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_amount' => 1132,
                'discount_percentage' => 9107.0,
                'discount_upper_limit' => 2681,
                'description' => "BskLXpmOglUU3Jrz3z4mI0xe8EV5QE7MylmVonQFbH22rnQ8SQE3u2Ni30dsC587BM9rV1YmjYrtqFmLPwQL4re8STMfnTuLG7URczRdVjngk2C6jpMOGn4yOZCYgFxkP7zMM1xuL3ZkiEVqHlzlGyxtIxyTqg8tHzWkemTWfXxszbv3j0fm0VAImnMBEMd8KiSMr5gYuVQM3foMnrrwf",
                'name' => "VHddNkbIIctydmaVAgquHbnkma8fqUyQoofWhiy3W2GkJbJVyUdbgF0M"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon21()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_amount' => 9273,
                'discount_percentage' => 1113.0,
                'starts_at' => "2021-05-24T02:36:37.000000+09:00",
                'discount_upper_limit' => 1259,
                'description' => "oosQtgmtgvu9wd37MkqTSRnciIk89XYKjlnfVy0TAgXzw1sSohsNjy6SxeKx5U1FFlMldjE23SHNAqIT1XF26gevTBc5IOdpCZ6Updb7qfraA8HyS1f2r",
                'name' => "OYiUmhDP4oCHVOSys5yl"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon22()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_amount' => 7246,
                'discount_percentage' => 1273.0,
                'ends_at' => "2022-07-27T11:14:37.000000+09:00",
                'starts_at' => "2022-10-11T08:36:38.000000+09:00",
                'discount_upper_limit' => 1945,
                'description' => "1LX6hK1NDm6SJqqfWFMbmhmCZB8N4i6vWkvSoLT7mbYiXGtvvTZkPyrjX94wAz0T07aExdtMcGVfB1GPsYXu4GbS79movGECbZv6nTaMeT1WqqNQfk7syHxdLUnUy8N194a8GwK1pd7c8PnvHQ6XdQedkvvc1IGLD1It8GktzQaAf2ZmhfFDRBi0sMfH7E0K871G4lKu7v0t8tYAQ3argv5iVyYiwDZocX",
                'name' => "WaMe6u1ILFix1JkMq73o9VbouWigNdENsh9RuMfCQMCPeuKuXMf8rxzqLP2CPzoi694sybZumzPU2G1TVNa8Q1B7WyzCS73o0182FVvxm4k85kaNr"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon23()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_amount' => 4431,
                'discount_percentage' => 1819.0,
                'display_starts_at' => "2023-02-25T02:59:32.000000+09:00",
                'ends_at' => "2022-10-27T09:15:34.000000+09:00",
                'starts_at' => "2020-04-18T11:37:11.000000+09:00",
                'discount_upper_limit' => 3767,
                'description' => "Jx34rtqXdzWgrMysLe0qw0XzCRIkhFyxvZRMytcTxdAkPDMOquZkDBuzJkaSAhxG5UKI7kKI2LGO3v5Fa2MniO3Kfv85pASMYJznIjKXEz4pspJVMSfku6FDaJILxE6wvw2hmGnbLzEvpdXgOJ8JzfHs9k1He4KNSi6Binql6pqSoB8VHRCiNNoIFeya05Ij5ecx3CAwL63xswBn",
                'name' => "RFiOAeyg74RaEWa7vfmXNKaLilDF18dJ5WSs0OI5KwvQaI6nbP9dNGVAAo8H4V6pNrcINIyfjvsMAWRiIfot1yDQs6icxQh"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon24()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_amount' => 5965,
                'discount_percentage' => 5526.0,
                'display_ends_at' => "2024-01-19T12:03:36.000000+09:00",
                'display_starts_at' => "2023-09-25T09:24:55.000000+09:00",
                'ends_at' => "2020-07-22T16:54:30.000000+09:00",
                'starts_at' => "2020-12-29T05:12:58.000000+09:00",
                'discount_upper_limit' => 718,
                'description' => "13ABNVpcRpc2qA0WIkWN8i9LMa6I85LnYdhJqmHLyKuSHRz8kJp9L8b4zUUpCGxxKMmato",
                'name' => "3unC6temynPhK7iFEYMNI1GP6zLpfiQcUT4t994lOcfbOkzpYMphz6Ricc36cQaFTScUHZWZIoXam74BzjsbRjy"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon25()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_amount' => 8767,
                'discount_percentage' => 1611.0,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-06-10T14:11:59.000000+09:00",
                'display_starts_at' => "2023-06-14T12:28:11.000000+09:00",
                'ends_at' => "2022-11-17T00:23:05.000000+09:00",
                'starts_at' => "2022-11-19T06:22:33.000000+09:00",
                'discount_upper_limit' => 5391,
                'description' => "EWuwrofQdy4C7G9uGKL5Nz2FmTXhsHwYyRsDzx34HXmyLPVctManwPN9xTUbTwGA8z24h4r9EhOZfpYhrIlV2tMbi2pNPphJ2PAv6N8b3XTrB1aPsw5C2k2SRv7hiHLnKF7",
                'name' => "jfnAJPV"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon26()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_amount' => 8271,
                'discount_percentage' => 7991.0,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-05-09T20:05:21.000000+09:00",
                'display_starts_at' => "2022-12-26T15:50:00.000000+09:00",
                'ends_at' => "2021-05-18T09:38:05.000000+09:00",
                'starts_at' => "2022-05-21T00:08:00.000000+09:00",
                'discount_upper_limit' => 6727,
                'description' => "Djw89JurjSfwY4uZtakhvvve28Qapx8CerhgITjET2ZdFuWOU8gb3LsU6T1WoQvEdro1cL0aqHXKjn4ZUUDXK0lkc1x0PZusHIOm6c1R1BgK29sc89fn8C7eGjCOts",
                'name' => "3tj0YyIKIOtA3hit8jY2EgdSrzRzG4O3z6gmPalH1T8ci4Wv1LYUKTFrXb4TsLA91xTzLTRsC8cjaAbkTSPQ8AYNMx"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon27()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_amount' => 9323,
                'discount_percentage' => 224.0,
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-12-13T01:59:22.000000+09:00",
                'display_starts_at' => "2020-12-06T14:59:30.000000+09:00",
                'ends_at' => "2022-02-24T06:48:00.000000+09:00",
                'starts_at' => "2021-06-08T18:24:04.000000+09:00",
                'discount_upper_limit' => 2481,
                'description' => "j3b8ngdiTgFpbJnnBvKIZ02laP9MEF27MVBCtBsGnYCqdjHdv3MiJaW069c4WgGbhAv01wb0g8kRkdTJWcXo8YCKGCwulsPgy63saETPweNv2wFPBo4FspTecaoEBfvLxSrIzhZGQoAP2QqZDUbtQ2IUzuL",
                'name' => "GxMYmUOhqoNpD5HigsSpyYz8K8SInJT0IN2tHYNT8v6cvHilZibVwkPX6gmgVxmyOVtT"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon28()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_amount' => 8966,
                'discount_percentage' => 249.0,
                'code' => "lT0Jvv52hN",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-08-06T02:16:48.000000+09:00",
                'display_starts_at' => "2023-05-09T06:08:08.000000+09:00",
                'ends_at' => "2022-10-28T11:08:43.000000+09:00",
                'starts_at' => "2020-09-25T08:13:26.000000+09:00",
                'discount_upper_limit' => 8036,
                'description' => "8CAhYP1OGdrlCjgpFMDmN7RJTu5QnaaWDY82DLGt2QNvLCj9zyQDhDEmf15rTxSUGv2vqBNnrQgb4d6W78dsUzuBqcBs",
                'name' => "YaHzK6ADKyWDUY67IvQAqiFg0lruq4bOW1z782j20332byzdYjsfvDRSTSWdqOSPgmJDW5zZMQlNd4VerRTOSeYtmPNru"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon29()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_amount' => 1334,
                'discount_percentage' => 5242.0,
                'usage_limit' => 6311,
                'code' => "N",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-05-13T11:14:49.000000+09:00",
                'display_starts_at' => "2023-02-06T14:49:07.000000+09:00",
                'ends_at' => "2021-09-24T10:46:39.000000+09:00",
                'starts_at' => "2020-09-13T00:43:52.000000+09:00",
                'discount_upper_limit' => 1485,
                'description' => "vdhjjVNNae9c40wbVZBM5KaK8FBMfNEG0T3uZp2mPS9iQc3dphgCmMjHHwDu70yNct74wXkcfNErHAxA",
                'name' => "lcoW6qIyjWRlkmKBCGXu7ec6UNShkdnxuwZ9wj91gfobjaiBzkv9pnHMb7dmNBdjHCm8S08VI9tiJE71JBnmn6xAOlzXIf"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon30()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_amount' => 4877,
                'discount_percentage' => 9543.0,
                'min_amount' => 130,
                'usage_limit' => 4429,
                'code' => "LCyo",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-06-09T18:31:15.000000+09:00",
                'display_starts_at' => "2023-06-28T20:33:10.000000+09:00",
                'ends_at' => "2022-10-10T13:00:59.000000+09:00",
                'starts_at' => "2021-02-26T20:43:04.000000+09:00",
                'discount_upper_limit' => 6720,
                'description' => "e5AY9pPuv96mmldAzto32r94gTP3forXj3nL36H19eNQFxiYVVXXIqsXuro4aJdfNLuwY9XIWnLlc9OS9Cp3Bp3i",
                'name' => "UL4HxL6YkrEACtuYV4mHXnLoyUBGF8EdCsJzcoKCSwgPZSJgBf94jJkHyU0vE019ix5A52SogPyssqfxgvmiNK"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon31()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_amount' => 7201,
                'discount_percentage' => 6653.0,
                'is_shop_specified' => FALSE,
                'min_amount' => 7403,
                'usage_limit' => 5087,
                'code' => "0",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-07-23T04:01:21.000000+09:00",
                'display_starts_at' => "2021-08-20T22:35:01.000000+09:00",
                'ends_at' => "2021-12-27T18:17:01.000000+09:00",
                'starts_at' => "2021-02-27T21:09:11.000000+09:00",
                'discount_upper_limit' => 1075,
                'description' => "T31KkJAjObupyZqOJIGX1OhTtt4d5DomF7S1EvPGJSKgKJjfprpubnciLKVPMs1FnHY09nMRSBCpaQQhJ68u2WkGHmY8Vf3rb8AVoxdTPcWwQ1HJz5ooWvbmx0vwn4scwbv0w9ySU8gLnOoDIfUtJuMq4pLbZEffiz32Y9NGIucCMpeByQxt5h9kVo15tgEb7HZtKAal0GNhgP8",
                'name' => "5N2jlzqOF9DEXqATfLhLjC3E4knaVMtRMxYHhXpsvVGll4pZLSJI7Y3EItDF4CnOlnA"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon32()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_amount' => 730,
                'discount_percentage' => 9713.0,
                'available_shop_ids' => ["565b23eb-6fcf-4bab-992c-2feb388f3719", "461ee284-fa3d-44f3-9ba8-4a372c51213e", "b503d701-f601-4759-9457-9bc489a21978", "81e8af0b-d001-4a66-ac40-6e2c7730d168", "9fe09755-15ff-42db-86fb-3bf209faa2be", "a00170ca-7b8a-43da-ba7d-7a9e90877284", "bdd492e2-47b4-4ead-8e35-7f7253dee2c2", "3821461b-2096-442c-a949-ed136b257e35"],
                'is_shop_specified' => TRUE,
                'min_amount' => 5670,
                'usage_limit' => 6436,
                'code' => "FRP",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2024-01-09T14:01:10.000000+09:00",
                'display_starts_at' => "2021-03-25T18:11:08.000000+09:00",
                'ends_at' => "2020-12-15T13:27:29.000000+09:00",
                'starts_at' => "2020-09-22T05:43:50.000000+09:00",
                'discount_upper_limit' => 4472,
                'description' => "nzEjqR9TnRRqVmBN7xURJLwW7NY7pjqYULQmhyjDMwFQEwkaUGlZOhNj4DbcUmuHluFjnQfEMBUgsC2HAj42Z9BtfxHsgpXIgsY6jwFCcZop0RHWvklh86xuW5KzV8zQZUxn02LGg7xKOMRfke8rKt0eue",
                'name' => "S9aDlZrpJUHzlffZyzvhCISbgR5F7bH15FSj5PhFUUyosxrPuUZJsFIpHruI0PDDJz8o9x"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon33()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_amount' => 9070,
                'discount_percentage' => 3946.0,
                'storage_id' => "95147668-21d3-467b-ad84-7aa54a29e136",
                'available_shop_ids' => ["f14178d8-a31c-4991-ba57-687f1feec138", "cd861deb-12a9-4938-ac8c-57003a6382e8", "ebfe9a56-9c23-419c-9782-bf8b8950ce2a", "c798f415-dcb5-43b7-b397-0b5c4f674246", "dbcfff2d-1493-4441-ba7b-80df9482d251", "3662c7d4-2bef-4a10-a0f8-4227372cfb8c", "2aacdda8-0817-460e-82e4-4850684202ac", "86f51250-bf8a-493c-891b-a568879b493c", "f316bcec-2896-44ee-8e2a-3fc30745e737", "43e0d8ab-90f1-4a8f-a27f-917b01d7cb71"],
                'is_shop_specified' => FALSE,
                'min_amount' => 2855,
                'usage_limit' => 608,
                'code' => "X7DW",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-12-06T14:54:52.000000+09:00",
                'display_starts_at' => "2021-06-10T10:35:09.000000+09:00",
                'ends_at' => "2021-11-05T21:54:08.000000+09:00",
                'starts_at' => "2022-11-02T02:30:33.000000+09:00",
                'discount_upper_limit' => 5027,
                'description' => "496Um1b5drR7U5t2VSntAoomXq97a0i6K8kMLixLknmNm5BOlp55r1NJqKKmMSMDNHXM49YiCxqrzszvn6bj7stH2cYp8Oduz9ydozdALWCzunNWLqkZNWq5sezt42ld40YejmxaSQIdAY6mzS5zlfhW5O06mJVzNqGuR07MzaV2gLnYHRqeVnYKwSRaEjdVuASyzZcw6cVG9CKg7ea0asT6pK6ZXBjTeHFbBKY6KXS8",
                'name' => "r2nlrnzouGWLq7cztqVhXFgGyXUEsH2qqZvshhzuYxEGVd32mNAUk3Ucex1MVJvmI7mCPSy50wNRRYeFQeswzltU0sfsoB1emUvSd2OFryqx"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon34()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_percentage' => 4637.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon35()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_percentage' => 2326.0,
                'name' => "bAraxFNZAbmeInh4oQOayuQJED9AwhmPBCJ19vDHPTr61"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon36()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_percentage' => 620.0,
                'description' => "e",
                'name' => "7AlU9fLKxpvYU6BIygzRE97ExmQwf4CZa3rzC3uftigMt7QxcVwURcpZ2ihU7pMs"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon37()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_percentage' => 569.0,
                'discount_upper_limit' => 3022,
                'description' => "Ra5jWC6rb7pByQgkSNC1zcXyyLkDgk1xV6bbP2jac",
                'name' => "d1JBRts4DI35vkWeHBvtSegzGKhXZWXIfM8fC4DPTvM9cYaNSye8Nl6CwYgsyfpway76nMlJOaCDmI4KLZrjBzdc2KAHT2B8eM00ODx3MQEHnhXdEzt2V8TLv"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon38()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_percentage' => 6074.0,
                'starts_at' => "2023-07-14T16:48:45.000000+09:00",
                'discount_upper_limit' => 2067,
                'description' => "1jCLGw1aYHnLofh2aoZikH",
                'name' => "i6M1MRBxI21Qztmny8BwH2PD"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon39()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_percentage' => 9204.0,
                'ends_at' => "2023-10-22T13:12:26.000000+09:00",
                'starts_at' => "2022-08-21T15:44:13.000000+09:00",
                'discount_upper_limit' => 4436,
                'description' => "1N2YFeCk0tI5ForXsAhApFwC78O9AjJku4eRSD7TIeMldRKuwfG8YG1l98V0",
                'name' => "xBhaB8yEcbu3QYsAALAFvZnHeJ2qUNHuetPwFaxfnvKeZVRzAmpxw5yU6bePTCMQWkHJN9hNO3M6oGtiUY4AaKX3eLQOK6kISFr6Om8"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon40()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_percentage' => 6441.0,
                'display_starts_at' => "2023-01-31T07:54:32.000000+09:00",
                'ends_at' => "2021-12-18T07:55:01.000000+09:00",
                'starts_at' => "2022-09-14T13:01:08.000000+09:00",
                'discount_upper_limit' => 4735,
                'description' => "5taryFLcDg6bMxh8pQEEYIhp18m7PHf6pZGPXIREKXPvcDjgS1RZ5Y7Oo1Jx3NzH1iEz0v25FotCIn5RrzGLtmrEnEi5vxRSCCFtLKEvRfKP3ePRPpAoMWyj2L0bf5bOkYk0R1XSZ",
                'name' => "BidzgvMEnG5jZEDVSgQoHhLUfAFS8FP2AB6lUeVP6Csjx2etklo1c2H"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon41()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_percentage' => 1040.0,
                'display_ends_at' => "2023-10-05T09:26:28.000000+09:00",
                'display_starts_at' => "2021-06-15T17:31:21.000000+09:00",
                'ends_at' => "2023-07-07T06:12:19.000000+09:00",
                'starts_at' => "2022-07-15T21:48:06.000000+09:00",
                'discount_upper_limit' => 8369,
                'description' => "2cADsIlVfN8fKF7tKDhIEuok91lySQUZlgUtVmmmRld3vxuOqkzITACPvdg4guSZmziPeDPJ4nJjNbsec0aT447BxF2QuzHXlOD5jkIUNXstwxjsPIcg6Nh2SQK7ZPpz4oMSew4ZZXMA1V0DNNCka4ER6n6kLIE6HEUdaJxnEtJf0xz7LQwNKmETthvZSToxVO1",
                'name' => "uvRNnfDbko9UAaEx8tQ9MaTkNKCcG83flrFOjuvJDaGcXa2wiEcz7F7sxZys0thr8AOU8TA4myC6"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon42()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_percentage' => 6918.0,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-05-05T16:51:42.000000+09:00",
                'display_starts_at' => "2021-01-19T07:14:50.000000+09:00",
                'ends_at' => "2022-10-01T11:59:36.000000+09:00",
                'starts_at' => "2020-05-04T05:49:21.000000+09:00",
                'discount_upper_limit' => 859,
                'description' => "CFZMDPCJkFOkkXPFfOCytq2kgkQwN3AGNyb43WonuG4KGZnLfzAvhfvvowNzYfSLcZ45sgJZm9CoGQko2XcKcJBLxTbVkHb9FJuoN1u0y7OVoRj2gBjAPmrH26QJWLliRdbvaPqhnoPfgUmTasKicNiYFq0KFwnnmqwKTU1mCl0g4y1HM25Gxue",
                'name' => "Nyg21oN6MnfFsGQz030i7olBaEcM618Zs8LEzJid0tCm0QKIB75qmDNnsacueGkHFEGymqcQBr5NHE0Krj5jA4vdcmNNRdmnBlhHcDWuJzgkfxAKpJKQle"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon43()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_percentage' => 6161.0,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-05-02T20:06:23.000000+09:00",
                'display_starts_at' => "2022-01-04T00:39:34.000000+09:00",
                'ends_at' => "2022-09-25T02:04:50.000000+09:00",
                'starts_at' => "2020-10-07T17:33:05.000000+09:00",
                'discount_upper_limit' => 8752,
                'description' => "9UbdzGdqZiHUpz7qfNkgtU8OKhSHYN2nNf7EPxgpJLYmOfxnFu10un8UeyFVZvJrmLZZVi5GexzzRRZEiPItwg0JsrNURfe2kGBbnwoJnCULs3bDrH2QVFD6oQEvvJI6N23c04dmRdRQ1OPvHNY9PA0z9i7qSgUcLoqfZETXLdWG8TpzeaaZrVM2INEXSAU2iWo8DVtCr1qu7TR8xII19f5bmsS7jwdnfEuqzZVZ8bZq",
                'name' => "MZCpF6yrU9lPlnLWHBdJo12iBiBh5H1IMYnUyOwon6RCkoTIzQagO7lOF5yTqMig9RrsMO1cR0JephbU2VXUSxTkTWCNJ7jvWuH"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon44()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_percentage' => 6226.0,
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-03-30T16:00:45.000000+09:00",
                'display_starts_at' => "2020-06-04T06:24:38.000000+09:00",
                'ends_at' => "2020-11-03T23:39:46.000000+09:00",
                'starts_at' => "2020-05-05T03:08:40.000000+09:00",
                'discount_upper_limit' => 2998,
                'description' => "uTNd6L3rQ5RHUDgqmp4j7OFOS2KusaktMaRfINhbYK001ofAfQFCIkl4OGjF9UVZalNtQWeYYKqiItathdLFx6Jb182MHmAztoreGMWZPCZaiC6BAiTet5qXDU0CQX2Mp4Y4jOj80Tw",
                'name' => "M7UREmYYlQ9X5HcRhtEeJrcAYmXniSNqNJMAnntxCEcveiPJ63zwDnO3OxJqWAfuY"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon45()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_percentage' => 7925.0,
                'code' => "929",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2024-01-20T18:41:53.000000+09:00",
                'display_starts_at' => "2021-07-31T17:19:55.000000+09:00",
                'ends_at' => "2020-11-18T13:22:10.000000+09:00",
                'starts_at' => "2022-10-02T08:07:25.000000+09:00",
                'discount_upper_limit' => 1119,
                'description' => "NZDKTciVGVZn9UyKDYFFkk0TttvEXV1NidR7GmyPU2OdrNcIGZUgbzDqgFNjgSbjHwPucmeA97QOEcvvRhSE5scLGZThV2AW8bPWrNnwMI8jje4qZSvBzaiAm7d7ZGR4JoQT",
                'name' => "7xs0mOQU2Llx6zljTaKBnu1rclPmFzyQZNd6apfCEwvSLfNXWJsf"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon46()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_percentage' => 5845.0,
                'usage_limit' => 5195,
                'code' => "PLOtGZqtf",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-10-26T10:07:44.000000+09:00",
                'display_starts_at' => "2023-07-27T10:14:18.000000+09:00",
                'ends_at' => "2023-02-10T15:19:05.000000+09:00",
                'starts_at' => "2021-12-28T11:29:56.000000+09:00",
                'discount_upper_limit' => 67,
                'description' => "7pOzDZZ8",
                'name' => "5wNvyaKboD4asodFo7b7uzFLVJmIpRdikh3jEIqFJSvz5SFjpUqIPOLqttgh3jZeL"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon47()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_percentage' => 3882.0,
                'min_amount' => 4187,
                'usage_limit' => 7074,
                'code' => "kIyGWqAfHk",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-11-29T18:11:58.000000+09:00",
                'display_starts_at' => "2023-05-29T07:18:23.000000+09:00",
                'ends_at' => "2023-05-16T13:46:01.000000+09:00",
                'starts_at' => "2023-10-14T15:22:22.000000+09:00",
                'discount_upper_limit' => 3618,
                'description' => "udqpX6z0Lk21ZqSAfNzoyvOImSbcPTX6zPTKempwT66sslacr8rL7jTydQk1f5gLwlNoliBBW1ourAHntSleL6LlvD60jCBen6obYgOJTlIrOAHDSJs",
                'name' => "o7kqM0nGzAzf8ExcErZiY5955b3tfefcks0a7Db7RWTSi0YNfkgWbjMdpq3ECgEZjKmAkTi"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon48()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_percentage' => 5868.0,
                'is_shop_specified' => TRUE,
                'min_amount' => 4007,
                'usage_limit' => 9163,
                'code' => "5Xotq10eW",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-04-18T14:36:39.000000+09:00",
                'display_starts_at' => "2022-02-12T13:35:37.000000+09:00",
                'ends_at' => "2021-04-02T06:35:27.000000+09:00",
                'starts_at' => "2023-12-26T06:25:32.000000+09:00",
                'discount_upper_limit' => 2544,
                'description' => "uwhXVBzLvnRTaOL0oEVoQUWexQUWvk04q09YwztpEOEcsXVaQJnXAdq4Q6xuA30Fh1fIXmMrcTLYbc0RmcyUku0LKVZSRoq56HX2IyCH3Irj86wDuXXs6h6eCgs6UAYzzDfgbnjwiAg12BmCEgpyCmHCQNwf16cBdfmVZ8HBRBKvug3fAq2PR4Cm47JrM8XgQgKxtKTMTlAG0u9LfiMzmIQ7m5buEMJPzh",
                'name' => "mYQaxM9rTkOGPGSEFSqnRBChe0texBPgN7NezQkDjD80Ww3gMG52JsuS9pNNhp6ZsMuSLA4fwVVUos8Qs6lLzt0"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon49()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_percentage' => 5400.0,
                'available_shop_ids' => ["1186e08b-0872-4490-9728-566dd4a49add", "135932de-b7e4-45e1-925a-5402c49f128a", "0a63eb2e-0776-4ec1-b5e9-7c836e756803", "03149a25-599f-4ecd-ac3f-756584e11d52", "7a848e31-ca71-472d-ad5e-ee51e168316a", "69057a4a-6a31-4a27-80a5-9004a20bd30d", "8804a6f1-8154-485e-a706-8b214d396b1e", "c40cb408-41d1-429a-b53b-94d7b38f47e1", "cade9c0a-ea4c-464e-ba84-4414b93b1a75"],
                'is_shop_specified' => TRUE,
                'min_amount' => 2958,
                'usage_limit' => 4285,
                'code' => "KtRfNx",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-10-08T15:23:08.000000+09:00",
                'display_starts_at' => "2020-11-06T06:02:42.000000+09:00",
                'ends_at' => "2023-08-05T00:59:37.000000+09:00",
                'starts_at' => "2021-10-10T20:16:17.000000+09:00",
                'discount_upper_limit' => 1912,
                'description' => "oB6E4VzEnBlupsq6rQfma0vj51J7OYlu1FkS3CfeGxAy5lTGZpKB8GNyOys6kJsmSVTf7mWLXhEKInLQPxpUvV6THzZ70GaEGZGp9hKoUiDbU5rO3LhvFQ8uHHNKJ9ZbGe8vS2xQNAVaBeiK3HMpUEpMNgrUSDtybHcnUGD3KwjahrIizd1wc7ImuJkEqdNCkAbLfEBAYPN",
                'name' => "CfHFWcLlj3hF5VyRYwsXg651NHxFP3RC1TIry39NSzSK8U7n1il76EMwDtegK5XaIq5"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon50()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "fd6ff65f-ae39-4e67-8e3e-1a6cd58c3542",
            [
                'discount_percentage' => 1430.0,
                'storage_id' => "e1b7746e-425f-4069-946b-d2cc6ead2150",
                'available_shop_ids' => ["ec301dea-5e78-4499-a0ef-b638558aaa72", "bb39e6e6-5dca-4e96-9220-f0f81ebc0494", "0d30c2c0-89c8-47a9-abfc-1846fd3de35b", "cc925623-b55c-4f81-9469-bd0d42b9eab2", "33f71f40-435f-4d63-920e-df5be5198bed"],
                'is_shop_specified' => TRUE,
                'min_amount' => 7301,
                'usage_limit' => 3710,
                'code' => "G",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-10-07T06:20:23.000000+09:00",
                'display_starts_at' => "2021-01-14T19:22:35.000000+09:00",
                'ends_at' => "2020-06-09T11:43:22.000000+09:00",
                'starts_at' => "2023-06-21T15:47:46.000000+09:00",
                'discount_upper_limit' => 6740,
                'description' => "i0oCgmQTMbnJhsm83sL9zW2gZr7tDX4ti8EbGpb4G6VSFwNzfJlVSrXiSR7YsP9zZcVTWySGMGY2CM7HAif",
                'name' => "8rIewuu3VeLrXgMnT1OZURdxVsagVuepAnhnQCEdOH6Q4Rfgo9LQKdHCp2CxccaoF3EebCIA3hNdpLW2iQYUjFvH2"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
