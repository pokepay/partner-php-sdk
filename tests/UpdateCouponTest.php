<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class UpdateCoupon extends TestCase
{
    public function testUpdateCoupon0()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_amount' => 4008
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon1()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_amount' => 1135,
                'name' => "uqVIJLmWFeGJqYbyf9xqeV9Lg6T4ooRxK5KRr3h8egFMYUCN7QJ0QWlqwtDL88aLfgCd3mseLQBXIUiYpTvNgfaK3PoowpKAx3kfA31wXd04SY1O8gGOF1kRrye61uzm"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon2()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_amount' => 7874,
                'description' => "IXdnENFs3jBlwZrD72DB37CRt8PxiPIwClGZ1KOGgE2sj7Hu6WK5M7npguch6s2J670P8hn4WhIeMSn521mnmeh5QEBdCZJtrUa6Fgp7ym0hYqDUAWMYxWfGNC0wV3aBOX1Ig8hROF",
                'name' => "3MljHGXrpVSkSdQBQzqXHWCk88yAdkNbUUlXp2sT5T809AbvtJaUy0K5oRI2Afv57ns"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon3()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_amount' => 6739,
                'discount_upper_limit' => 3768,
                'description' => "T7iwNl9CKN5yCsDMuuaWg6vjoZFJU5quwxFBXnJ5Eq6GcNPCEVPq46GdIPJm8acYbz4K3IA8JYUILwDYHWq9h3ayYxNgOJ9lz7HMs7r8Mwpfor2g0yfZY1uTlDfXz0uDeov2GaxLjZM7ftEliKPQLWJArPq3tph1c8gKwadNnw5eCqfZdksVLOzbmWJa8YkV10V05hf8WtQGHpv3xPQzPNZMa3cTmTslTDHzq00PkzT3rjRsc",
                'name' => "SaTD"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon4()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_amount' => 7708,
                'starts_at' => "2022-08-05T00:50:13.000000+09:00",
                'discount_upper_limit' => 895,
                'description' => "UxwAJXNLOLDUjAEUO9KUSGzbSRmda66Hxc",
                'name' => "wf0VsciZqVg9CY4JyxUqm9QYX9eOR0RPX1REGDLSjexe42N6h2JPS"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon5()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_amount' => 9379,
                'ends_at' => "2021-12-12T06:52:59.000000+09:00",
                'starts_at' => "2023-05-03T02:56:24.000000+09:00",
                'discount_upper_limit' => 207,
                'description' => "z8JwoXWD3OcRqlTHYwOestfQFumGQVfUsw4hfYXr8Tws7k48pGfLa44NJMCeJ8jlsCf1ZGfe6gS6x1DqMOxCGU3f6AMPJnByO8IAY8ZIAKOHAMaB7ZxbhLpAG3vIRMVqbJVgHd",
                'name' => "hvPKwzwzrbVYcpu84LTKQxDTzMnM7RDpI6DZQTPfIajSBmWzFbVfaL5LT2cPjctfArtA5QzauCKeqrCHL"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon6()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_amount' => 7503,
                'display_starts_at' => "2023-03-18T23:40:54.000000+09:00",
                'ends_at' => "2023-05-25T04:41:06.000000+09:00",
                'starts_at' => "2023-01-02T01:11:18.000000+09:00",
                'discount_upper_limit' => 5761,
                'description' => "c1NzcpMx2l8O1vhN74ziDPGC2ST6zTd6xVdSlQkj4Z4gR5YjMfLJAECo2gNDDCrV3PxozvlpngWpA6xbZMfc0uwppINu3aeeMh7MwqqZDhOobPpK6TParuulg11gUrgWq51AuUounyHv57rDbvmuL7BqYd28Ylq4PTRllx603bU9utxl",
                'name' => "E1LKaCgZVizYnvZve6TUWFWHy2b5Vs5gPuvHuA5HWIqhNUoMi9wNIaJyI2pADs2B4yB1GZTk4B1PKHR2EWhPZSvV8nScTvJ4VHpUajLm"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon7()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_amount' => 958,
                'display_ends_at' => "2023-02-24T03:06:35.000000+09:00",
                'display_starts_at' => "2020-05-07T20:47:00.000000+09:00",
                'ends_at' => "2022-09-30T23:08:11.000000+09:00",
                'starts_at' => "2020-12-27T04:31:53.000000+09:00",
                'discount_upper_limit' => 8069,
                'description' => "cCimPwC97LHWaSOnICBJimGKiopraV9Fu47WiDgn9VJjED17kjNr295nMRl2EDxJjIsLyTAA5MEWhdNFDbX7fss0ltmaJnxslaUL7RrxqbBxY5tCbxb35FzAfmkd3pduwUBkrqrvJ3GVs6GsJ8XiLApVwNY6",
                'name' => "zjKIEdqTZCuDots6oOpUnX5paeprWtPSGZr"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon8()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_amount' => 1595,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-07-31T04:45:49.000000+09:00",
                'display_starts_at' => "2021-06-01T04:13:09.000000+09:00",
                'ends_at' => "2023-11-16T22:56:36.000000+09:00",
                'starts_at' => "2022-09-30T10:26:58.000000+09:00",
                'discount_upper_limit' => 5229,
                'description' => "NU3vFgZ69vwXIbJ7yB2uIbdTxo63tcXPzmao0EWnRVCjlgZcfxXnQfXvfoocz3td7BZN78kqzJ0Us2fGrJyLKsRHFPpRHSTTSFxnvRwj3Oa3urFP8R4bhOdaBwGLVVHwtN",
                'name' => "AFb20DhVqIxWOmhxrSYnMI0dEOIqOFLqn2ZuLk5GF2FUuyDVUpZn"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon9()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_amount' => 4441,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-10-13T10:15:58.000000+09:00",
                'display_starts_at' => "2023-10-05T04:37:14.000000+09:00",
                'ends_at' => "2020-06-23T13:16:45.000000+09:00",
                'starts_at' => "2022-10-30T00:24:12.000000+09:00",
                'discount_upper_limit' => 6683,
                'description' => "zM0cPoxe0DGq4e7wXOOVc8GIqj26qcMQ423OrAYOyd21L95eAaG4JW0HS70OJOUKjKLeGCgLyc3XcFOYpAAHYYK9z73uxDP2ictixYSW0AnlJyQ4ogjQgbj8PRfNm4vkTJ8joyTSHmI2see5qGgNKlkv5vEcEoMjbT4VP8lZF0AhpuShoXCly79fXYfw5L",
                'name' => "wfbe5dxC9nFb6EnR37XI7b090WiBtRh0avWom7iSFIO4uZdtJGn6HWLBVq7JKL8IsIw17O"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon10()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_amount' => 6583,
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-05-26T05:29:54.000000+09:00",
                'display_starts_at' => "2021-04-09T21:59:10.000000+09:00",
                'ends_at' => "2024-01-28T22:17:32.000000+09:00",
                'starts_at' => "2022-06-04T00:21:11.000000+09:00",
                'discount_upper_limit' => 8981,
                'description' => "RgUy7vFea5WeBAkgIciVnQYB9t75iPCouDaOPQZR4UpdKmspN8b2gkMcSPrmt0hjIJu43wB7scWlYirrj6XmXYoqVEvKvw3AdEs",
                'name' => "5hGDLuaSpYl1TGEiugglxJJBGt0dcPbtQc4uS"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon11()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_amount' => 1259,
                'code' => "6uS",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-12-07T18:56:24.000000+09:00",
                'display_starts_at' => "2022-12-01T12:21:10.000000+09:00",
                'ends_at' => "2021-04-13T17:22:08.000000+09:00",
                'starts_at' => "2023-12-10T04:38:42.000000+09:00",
                'discount_upper_limit' => 4190,
                'description' => "x7fOEoFSQiDYpTTgrywklVD4mELe2edQd6Mwu12",
                'name' => "UeT7ThuLLgJ9PT2"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon12()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_amount' => 8843,
                'usage_limit' => 6677,
                'code' => "kxOOzhTp",
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-08-11T18:49:09.000000+09:00",
                'display_starts_at' => "2022-05-10T06:49:18.000000+09:00",
                'ends_at' => "2023-07-24T01:52:21.000000+09:00",
                'starts_at' => "2020-02-14T14:38:53.000000+09:00",
                'discount_upper_limit' => 4031,
                'description' => "QXea3eTBlP1za1n7IcWMlrV1ey0F13qC7iArhwm76E35ql4XfUae14Wbt93t26",
                'name' => "LiQAMBYx057AoBwLeryNecuIhUBXRQRCvkSHsmDbMU34aVyZLcCNEj4KngWm"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon13()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_amount' => 6224,
                'min_amount' => 6137,
                'usage_limit' => 9527,
                'code' => "E",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-10-22T16:12:16.000000+09:00",
                'display_starts_at' => "2022-03-14T00:38:05.000000+09:00",
                'ends_at' => "2020-03-22T09:11:10.000000+09:00",
                'starts_at' => "2020-05-06T07:45:07.000000+09:00",
                'discount_upper_limit' => 138,
                'description' => "WruIWs4TAGfq9ue8TvZwYbMntyIPzqAGarjc22UJafoQs8oM8ozozHv7pSUjn2vqwiu14DVHGOrsaIKsQ11QA0zf5QFhEcKjjKztGRK6K9KAPEUIedziHih60rhQZO78Ysa8FmX0ccAumcgyg4cqEaxSmm8kmOYz3",
                'name' => "7PEcPNNiKvN5Ht8RLA9ghACTJRDSXhb0oN"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon14()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_amount' => 6126,
                'is_shop_specified' => TRUE,
                'min_amount' => 4663,
                'usage_limit' => 1724,
                'code' => "uTKN6",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-07-06T08:44:01.000000+09:00",
                'display_starts_at' => "2022-03-18T15:54:29.000000+09:00",
                'ends_at' => "2021-11-19T12:04:56.000000+09:00",
                'starts_at' => "2022-11-23T13:55:03.000000+09:00",
                'discount_upper_limit' => 9195,
                'description' => "N0paU2HC64wcGrUcdcRO2Sa3zE9qA6Jl",
                'name' => "qvTos7SrIAldP5taDahvoqIf3H7H22Xm9qyh"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon15()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_amount' => 768,
                'available_shop_ids' => ["8cbd798b-b6f2-4acb-897a-fa8c6e0d0b0c", "1790102e-90e7-456c-8a8f-158ba23481c5"],
                'is_shop_specified' => FALSE,
                'min_amount' => 6717,
                'usage_limit' => 676,
                'code' => "hNrgMO",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-10-28T22:30:43.000000+09:00",
                'display_starts_at' => "2021-11-09T17:41:59.000000+09:00",
                'ends_at' => "2023-09-27T15:53:22.000000+09:00",
                'starts_at' => "2023-11-14T18:53:05.000000+09:00",
                'discount_upper_limit' => 8247,
                'description' => "ccOw2h3Fa222nHBaN6510bAHdVRRVqtJb7GLA5jeThW5qr3yEd4dXuL0rYsAz43Mmx6hv0Ug3INp6i2B7flubMg8I3PFzXHSWu8scihqWwWKLIsgxoxZCQ2441blMtSOZHoWLqvzthoXVcLebdhYmokN15vn0WBXfGwW2mMW1f9b8gICLPqq",
                'name' => "ow4qG8fKRsijZT9ACbFhSbUnXdQpmPpnHFqiJvOHOlQFLdxOm16oejI9dat1CLgQoRlzuyxB2QGrCPmQ415Et2SGqgy7Wowcm3CmFfxpyCPpsziVloAtynLsPgO9CFz"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon16()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_amount' => 8248,
                'storage_id' => "be758937-d390-446b-a45e-77c961c6259b",
                'available_shop_ids' => ["9179cf1e-5003-489d-adcf-a8cc361157d7", "47cc4ce0-7110-4a3a-b96e-291bd9d094da", "4f9fd637-e62e-4c20-b39c-d354a19fdf27", "77a2b0a4-331b-467f-80f1-6c9c9cecbaa3", "af4389fb-eb3b-4753-8ca0-486b2476e04f", "d460c0d7-7701-4d8f-97c4-824cb158285f", "5b6cfd1f-1eda-4f6d-a9a4-060511452d79", "bc7eed84-2fd9-493b-9934-0497211073f1", "85263c2a-4d53-4344-8363-64e5de6c85b1"],
                'is_shop_specified' => TRUE,
                'min_amount' => 1448,
                'usage_limit' => 7713,
                'code' => "GC4wPtL",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2022-12-14T09:31:57.000000+09:00",
                'display_starts_at' => "2021-04-01T23:30:59.000000+09:00",
                'ends_at' => "2020-04-05T00:04:54.000000+09:00",
                'starts_at' => "2023-06-17T02:45:47.000000+09:00",
                'discount_upper_limit' => 9583,
                'description' => "4mk88yYjRj6ppJLnlec8JObXuRsPVeFJcsOCB9dZH0k0NKC7bYH6IQhPn4X",
                'name' => "u22Okprhq"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon17()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_amount' => 1256,
                'discount_percentage' => 8182.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon18()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_amount' => 2447,
                'discount_percentage' => 3329.0,
                'name' => "MEMbpSnLulsX8V7SnJwOTksCozm6o1k9oepRB7yq0Oa1SzxnfEtxAkEm7sWqtjzoUhtWxAFotkA3GwpJ6pUWjvsxF7sC23pAVbXivHZtrIAyP3B3n"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon19()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_amount' => 941,
                'discount_percentage' => 9649.0,
                'description' => "m451mPU8dTD7bnX1r8l3hCw6Snm9mfcT5cLUh34lWYk1AXf6CZiEJmgnIHDOUd6m8hlpqS572AEF2Ig4ikrPHEQKtfhnULfkSB8hVVRhZgs0ShDA1T4kxBhv1AOy0nxwzXXsopchwGQjGjB8p2sVlc1F7AjO7bJtO7Dnnc0m9rCGM5hvlyZ4zlX8tOl1gapEcvHpCxJHTvEJuFQdQk10O1BigovU99",
                'name' => "ROsTZK65zQOhilbvDcAlCpIpPo9knGn"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon20()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_amount' => 3169,
                'discount_percentage' => 4018.0,
                'discount_upper_limit' => 497,
                'description' => "U0GmaUmeizgJ6BwqETnaq5BggeTTsTdXg3gtXl8b4nZOZsr1VPBj7ivp8ue6C3vcL7BXf3IHjK0XiCg0zcQRlonr1N4IocuKCcZ1hdXCgyALhLsPZ4xEZBaL9gPoE5PnOxSYIBQUZMwQEKQp536z2",
                'name' => "YA1sx132uYplZstFpjBFQy9bZmz7mGiFtXmRSje5IwYSIqDRQ8l1f3l8HQkQuvmK2Ptks2ZcRpli1kcYUjdKenDW"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon21()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_amount' => 1258,
                'discount_percentage' => 9313.0,
                'starts_at' => "2023-09-18T08:13:54.000000+09:00",
                'discount_upper_limit' => 2543,
                'description' => "z7aBykLG1RzGMmx1hSkje9X0kmePd8GXi22Jw1idAxcQ9RQcA93jzkpVE1oN8GZytUXsp14vePeJl09h1SmSe7z9uXJe9aRBNGFiXbom9IOMRvPLFSPNSfRkv8Et2jCeNHdXqCXUrpWRIEnGneOjH6PTi68jf1Ll0O4t8yu2YY3amcbZRFCGWEFlMAhGqMbfoqHBJlao6arWtW2Kf2i4IAcwQjuFWx2kNI9qHm3gWQVGMbEKu4Af",
                'name' => "uwweTMrw4f2dzO7lqy4kEKJ1Q7c8C0SZpOWKljojyXNatscwZjWuBesyFuc4sWKFJnLD7m3pQpjDhF5ByJUZoKtqULctVH6"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon22()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_amount' => 5867,
                'discount_percentage' => 8761.0,
                'ends_at' => "2023-03-09T03:28:35.000000+09:00",
                'starts_at' => "2023-07-12T16:09:38.000000+09:00",
                'discount_upper_limit' => 1992,
                'description' => "dXfv4mxi0ybLSzTGhHvgOYEOxJ03xV3nSGPvtC19a5RpyBdhfDtmpMgxIW5ljI6yfgW8zOoaul3ISoLlGYqCoXoGAustVKiyGKg6I2c4vjJ0uuFNk5xEatUCGYnUIhqAnDQImUocNLmlkEs1s3oajWUDkbVb94dhcQmTjATi4FvTByqrSIzi26MGgpQ9D",
                'name' => "PsTX2x6llLqyqxLBzmQKSHklP2GNjfKFk3xSPN2EauZcekm4uUHwCvLyAybYYI1PTnYt6AX3ZMra"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon23()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_amount' => 258,
                'discount_percentage' => 8455.0,
                'display_starts_at' => "2021-05-03T01:55:17.000000+09:00",
                'ends_at' => "2021-12-05T03:40:10.000000+09:00",
                'starts_at' => "2020-03-07T23:33:30.000000+09:00",
                'discount_upper_limit' => 736,
                'description' => "iLHRNzuSt",
                'name' => "ZHp5MvhzfbMCo9qyaARxtZqgB5ft0k4jfS4r5kfrLJkZytv5gO2QqNTMBVQz08laq2biu"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon24()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_amount' => 2927,
                'discount_percentage' => 3704.0,
                'display_ends_at' => "2022-07-20T19:37:37.000000+09:00",
                'display_starts_at' => "2021-07-14T19:17:22.000000+09:00",
                'ends_at' => "2022-01-11T20:44:45.000000+09:00",
                'starts_at' => "2020-08-06T01:38:14.000000+09:00",
                'discount_upper_limit' => 1499,
                'description' => "aoCNpyYWsiSLe8XgZiLcB9lkuwUmt5gGSX2SbBRPaYeWynmUQkGZMrt25VWYHR7PmuYOuy85eAINi4DCh9E1piomvY0y0iLigYmahsEfLajE38CSizXaYXCbSM5b6xxCi9aS7pUn8sHDE4F3kcf0hrQ4a",
                'name' => "rPgThS8KkZCOZQxeSP2z9qxNvFrLUebeM3qu8knhRZPaevJazOcU"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon25()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_amount' => 8821,
                'discount_percentage' => 1990.0,
                'is_disabled' => FALSE,
                'display_ends_at' => "2020-02-28T03:47:20.000000+09:00",
                'display_starts_at' => "2024-02-09T11:43:54.000000+09:00",
                'ends_at' => "2023-08-07T02:47:43.000000+09:00",
                'starts_at' => "2021-01-22T02:10:35.000000+09:00",
                'discount_upper_limit' => 1308,
                'description' => "gogIb0heOl2hQPfOiPoRxRiCop5Q0A9gBKU33EhyGU9Sc7TWphUCFQOlhJCzSIu3L4oB0QKjjVXdg6wCnP4F0PUy8JyZq3ofPUU0rY2rRd10bnDEPKoSGRnM40Adb2lsHFBNfL0ieognilvSR4pMoCwkxpSpqKLDrvgRvBVvAYQP0NP5o8oIbQ6bcvTH9KRHlq0wqM01LRxPcYJN00R6J1knyJeLDqePaGS57qQU",
                'name' => "9QotexnhecBro7jHBJHSTWFK0aJRYTfxgM2RajM6sQRgc1VEyXHMXBj8otEAcFy5ooXoXuzlRpCyCoZoaTfbTmVX0XqqL2DDCdNGv9QaNMmxX2S"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon26()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_amount' => 358,
                'discount_percentage' => 4560.0,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-07-25T03:35:04.000000+09:00",
                'display_starts_at' => "2021-10-04T01:56:11.000000+09:00",
                'ends_at' => "2022-01-26T08:17:29.000000+09:00",
                'starts_at' => "2020-08-08T01:13:26.000000+09:00",
                'discount_upper_limit' => 2278,
                'description' => "y135I5DGGggnvkdWrHaspAw5Vcp7CE78JSe44PvWgrDoffEic8syvxPXUni2oM8QHA7lWY5GLHqITj0UgJwxmfaF0gGfg",
                'name' => "lG67XOfGi887nNv1eh26ZZWkeJQym7n7CGmjd25iFSdny2rQSPU5tCjVy8COfDZrZRHs0hjVGtY7fDH"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon27()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_amount' => 3879,
                'discount_percentage' => 6597.0,
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-06-24T10:33:33.000000+09:00",
                'display_starts_at' => "2022-04-30T18:44:41.000000+09:00",
                'ends_at' => "2020-02-22T20:20:16.000000+09:00",
                'starts_at' => "2022-04-05T13:58:19.000000+09:00",
                'discount_upper_limit' => 4901,
                'description' => "UcBW9LDUejJe4laTFkcJAyP9v3lR5fJ1SCFuFJVqCc62CsLVYKPyOwySSjaFxy00IGCXmzsObY8JjUm176PqMxSejYJwKQkQhcSsOlDNZZsSWHBkBrsiXhCnZzamORmWcssL2FF3HAzhtt18u7MooUueVWo8T9dRNvfu3qkwBDNVzugQpgEVipsMl1opS6XVL1U8vfTPgZQoGXLb8hT5vzbbFysLVW03Q8sgkwbt7b",
                'name' => "cdIa6s2OiS448zYYuSerVgt5xpThqkxWuN4OkYmUnkAFHrW518DEhvGfJFhBLPIWgGXu2FRRBCtapsc2OJEtIYHTkPMCnHWRhGK3T2O4zTKZrpJNYtglnu99On"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon28()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_amount' => 8689,
                'discount_percentage' => 6241.0,
                'code' => "5iTxaKH",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-07-06T05:01:40.000000+09:00",
                'display_starts_at' => "2022-04-30T02:17:19.000000+09:00",
                'ends_at' => "2023-12-14T21:37:33.000000+09:00",
                'starts_at' => "2021-12-08T04:36:24.000000+09:00",
                'discount_upper_limit' => 8664,
                'description' => "xpMz5eg3TFJnOMXlccrSM4NeRkShSKYnhr8JJ6rqJ58uKWhjJEVfg4kmmGr3fEZnBlmzkrtoyKm38BDyuj1U15iB0VVURHNCTBSkvCAJURQ0xc8v3XGoxNYBzQF26RRnLKM2vajHzuhk8mM7y90MUBMqpZFx6CyPOvMtoUIDYTTb",
                'name' => "YLUK2ZY6omFZc6c5lAiaH7ksthq2qt1fISbJLQ2IGy7A4O5EuFDi3ep7E8"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon29()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_amount' => 9861,
                'discount_percentage' => 8122.0,
                'usage_limit' => 2123,
                'code' => "wqzGZ",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-01-08T01:54:59.000000+09:00",
                'display_starts_at' => "2020-09-20T15:59:46.000000+09:00",
                'ends_at' => "2023-01-28T03:10:24.000000+09:00",
                'starts_at' => "2022-02-05T00:48:30.000000+09:00",
                'discount_upper_limit' => 8266,
                'description' => "TtHeL1jl3TaroJ97KS7PIYmqHtFEvZxOLgNEFPzTNAeMR2CvVgTRCY2rEPprVjp",
                'name' => "NeaYJXDFnN5l443TmOvQLPfQxkSjhKrHXePF1aNsQcGEPe2hgvk3yuDeTC8XzXR9"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon30()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_amount' => 3244,
                'discount_percentage' => 4783.0,
                'min_amount' => 2050,
                'usage_limit' => 2538,
                'code' => "n",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-12-29T19:59:33.000000+09:00",
                'display_starts_at' => "2022-07-16T17:40:09.000000+09:00",
                'ends_at' => "2020-11-14T20:24:01.000000+09:00",
                'starts_at' => "2021-07-06T09:38:59.000000+09:00",
                'discount_upper_limit' => 2353,
                'description' => "KgghsgYe3TbLJN21a8hZtm5so8Mz8sE9uDmHdcukVhdalQqRPyTvG2tPeRbQcNODGa3IhebkRxi8kuGoSk8mmCPAG5TaOSJrFwT6IMSTQQD3aZSLuV5KvsCMKR5EbTWV4WWsRyR",
                'name' => "XgRYVg4CYuzSBW4stkoPc7UXRyRiV8Pax53IDmwuQOCW"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon31()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_amount' => 8861,
                'discount_percentage' => 2922.0,
                'is_shop_specified' => TRUE,
                'min_amount' => 2093,
                'usage_limit' => 639,
                'code' => "PmFGWkh7DM",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2022-05-29T16:12:03.000000+09:00",
                'display_starts_at' => "2020-07-01T14:25:53.000000+09:00",
                'ends_at' => "2021-08-14T22:25:52.000000+09:00",
                'starts_at' => "2023-05-21T06:48:20.000000+09:00",
                'discount_upper_limit' => 1491,
                'description' => "Wi3zPKlO0ubMaaWt2sfRwBothNvTY3vFr4ELRXyBW70oqJ1JP1EYwzYF5YE8jQgUzmyBkd9RsSiJlXzLN5312aQsa3khCQuI0KxC45PIbfMDQsr0pTvhXVGg9hnQlyenzuwrO3gGQmGe09eXlKtPgqSA0ERaGz46vIiA4hbe1yI3CGp",
                'name' => "lj6m5fgOCupwcIPxBzhbkfELKrUPd9GpW6Q92PXWpLmGFM1PrngLs4"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon32()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_amount' => 8384,
                'discount_percentage' => 2778.0,
                'available_shop_ids' => ["780583b6-fef2-46ea-a160-9046d15644cb", "5e3cd67e-178b-4ace-94c8-ae933b155491"],
                'is_shop_specified' => FALSE,
                'min_amount' => 1130,
                'usage_limit' => 7224,
                'code' => "HL",
                'is_public' => FALSE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-12-05T22:07:16.000000+09:00",
                'display_starts_at' => "2022-08-13T06:41:44.000000+09:00",
                'ends_at' => "2022-01-05T08:14:20.000000+09:00",
                'starts_at' => "2020-10-24T02:22:33.000000+09:00",
                'discount_upper_limit' => 7320,
                'description' => "c4333SWlp4s7jMjS5PtJzYsdA5qhl1QGqEwjgkrGn0uAn0iqI2b5rxtzGOZhKJMKwzvYsbBzTdo6bpAqcWNJrNTsv2Llex1ejGQ2ugzGxu81Sx5",
                'name' => "0Yf2M71M8zENOSGlzUlDT"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon33()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_amount' => 1203,
                'discount_percentage' => 1595.0,
                'storage_id' => "61fb7933-9e0b-4615-905d-0f9650173d83",
                'available_shop_ids' => ["2b06e5b2-2d72-454a-b134-eafbcbe61959"],
                'is_shop_specified' => TRUE,
                'min_amount' => 4323,
                'usage_limit' => 3118,
                'code' => "JK",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-12-24T19:28:03.000000+09:00",
                'display_starts_at' => "2021-08-20T19:25:24.000000+09:00",
                'ends_at' => "2022-02-12T01:20:38.000000+09:00",
                'starts_at' => "2022-05-08T16:43:29.000000+09:00",
                'discount_upper_limit' => 945,
                'description' => "IN1lhxfCtQoWt3KCnkWzy38cC0E7gsSEITDei3yOkB642y5M6ZGKLNmOSXPLkVgGHidiNxSMbU65iFGAAyuGpPep5MlLDDmy5H5WNxLWXFOkEFZiHMkNkDC4XjAgnNgPyTasq1IFexxHoOsY3XmfSCMMI0hPIOcfptkBjffHuYKUEJ4zrJepcLNjePvmbsJ6aAodX3lOsSzeTfXuUhrzyKZN2IpvZDbUGNbf92zGejiy7b3s",
                'name' => "rgm7LVnhxTyAZfZDkQ2r2xXuIalmcupP8PaFubqXmo0h47ayHi8sXxsnC42wCpyA"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon34()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_percentage' => 5818.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon35()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_percentage' => 1188.0,
                'name' => "BnUBLAV97YftKTMpHhWMUK3SCmPb9BXoLZ7wKHtX23HwTLkUG7zxtQPL0ebUOhv3B3t2DzpE8reI7vFyo7eM4dNHW25nKJYDvzM004QSYd"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon36()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_percentage' => 7935.0,
                'description' => "ecoFJzr3brOZ5f3RQvkhtySJKYRUQ3NzIgBoxko0Q38viglT3j7uK9FEO8wpTMbUo34OhjcbIFy00bHfPtADraHJBywFUVQhJIvCWpCXLp2g",
                'name' => "nx8oHUCw9IDU8v5tebk72bnq5V1PYuyQsrCeZvlknHwyCYeoTGD6IVelM1xkQHIURZCUVG9E4BcH9vh8Qcd9Qr"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon37()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_percentage' => 5922.0,
                'discount_upper_limit' => 4714,
                'description' => "GxJh75seT2MlMasdJCSgZ4nn16A08HMuzRKVjoY87iExdEHTNDtgEpdMlXJAKinvVKW5jNBic0lbP5i9pPDb3qItRRs3FY6lAlrydgPmYNQmdCCSHSb7PeqbGNNyG",
                'name' => "MxdwCiRwJpoUBZS7wM2sjFT50Pr6H3Lr5Vqadi7ItSc4"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon38()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_percentage' => 8815.0,
                'starts_at' => "2020-11-01T22:01:57.000000+09:00",
                'discount_upper_limit' => 8638,
                'description' => "di9EYp8oXZ4d1DUqCUDmWqMmM9IYmurAkMd4wDsAO01hvmpIXnG4Vdq7gNAtqrqKm6uKQNQH3PDcRwUCecSBjOParYUfATbiJrkxUEwT3M91XjHrTG7fMCl81IJPQuSHXTmEReE1YV9ebnUBpzD7d9DsGnOvPtZOQ",
                'name' => "wRQgMzlEQYhb78oA0LE9nGzsoBIqSCZEncCQxjIhrUeBMFsGSoFMs14c"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon39()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_percentage' => 7296.0,
                'ends_at' => "2021-09-20T03:31:47.000000+09:00",
                'starts_at' => "2022-06-02T05:56:55.000000+09:00",
                'discount_upper_limit' => 7542,
                'description' => "vqZ6GQpcxkL1iWim0Xpy9XRR4FHqayBd9Y6naDnCaj1IshUK5sOcLMoSdluvLDw0rIOalhSCHrt5J1YKxmhpIQaAHuF1XqBsQEc2YHzb0v51JNexx20BlobdlTY6n3LbK6Vu4m4rhE7PkEzPYVXfzwtjxI8n9Z0CQKMUdsLKbKLcaV6nH18WcZidvZ55mAgOE16AnmYbzCLHYWconVaiJFwoOHJhs1D1kk2Z65xpUZ28FCmV",
                'name' => "3QLXn5K0ujHfTEebumDwnUvtTuwE1P6w3jvuc6WVynWZlMwTGtLKHNv0GHMA8YNVctqn0HylBEaWFtKmGqTMRGGhLK4md8CvDRXJmyMUq3nONdNUldEzZzYqT"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon40()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_percentage' => 2330.0,
                'display_starts_at' => "2020-07-22T21:57:26.000000+09:00",
                'ends_at' => "2024-02-06T10:43:19.000000+09:00",
                'starts_at' => "2020-01-29T15:22:48.000000+09:00",
                'discount_upper_limit' => 8,
                'description' => "ldYwHPZ5GyoYYcgPPK3Dchqik562nQJ7JN9nEMDfH9ZULXMKOjFu2fGiShoySflnRPKvTH4Qb4HK1DE5zpHipftSBuuUyajKD4UG1MO97nrik73QyiaNKms0iFYGrWxxlKwOlCibtq2e0nqtXLNITG9Gffmmox8hwqx5x7fQ",
                'name' => "ZGPMXFo6oI"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon41()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_percentage' => 8478.0,
                'display_ends_at' => "2022-10-07T01:23:27.000000+09:00",
                'display_starts_at' => "2020-11-03T09:46:30.000000+09:00",
                'ends_at' => "2022-05-11T18:45:46.000000+09:00",
                'starts_at' => "2020-09-04T22:22:21.000000+09:00",
                'discount_upper_limit' => 7232,
                'description' => "xUJAAeHeUyg78eCpqwfbVaGI8MUg6pkTJeF4LA5VGWmlO55tLRhXfPthFrTbvP80JDs4TLAvvWwguBec41EmwzzFrgc709a7P9KtTHr3zG8NnPjRfIRrqy3FohrRiHbftN77E9sKP2LWTHQkvbYQTkmfSmGSFmTTeLGAy7h6m0YyagUC0Ij3N9K7EVH4f0IDf80jI5hM",
                'name' => "qGagepFcb0C3pMehBLw9uhZslxpk65zsLMOaWLvqiZty5Zp232IvDDPPtMusem1WSPOdAkWLCHhP7q"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon42()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_percentage' => 6199.0,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-12-02T01:56:58.000000+09:00",
                'display_starts_at' => "2020-08-12T00:00:14.000000+09:00",
                'ends_at' => "2022-02-15T18:53:30.000000+09:00",
                'starts_at' => "2023-01-08T07:25:15.000000+09:00",
                'discount_upper_limit' => 4089,
                'description' => "jEo8V3Di9DtzhzAGKUtsDdhPal5eEvQkTNVI1DbDv2ICSa1fLqeRzwnNnU8Hy7seU6TPp7YTcvCbmuWQvyjmdKhWFzroFJfg0zCih9qHu842U5SnXNqipKVsIIUjVYx3ZiMVPZEq0xgguEtAXJ6WozfUGo1oVRA1PV2JD5SjzUvS2Jlq6P89tC2Mi1PRe6ex8zQnoMXPxIs0d6X24reGHeQvAPqGMs",
                'name' => "A1rgfPu4olvC1KDDE1G2mGU9YeDH5Tysjz5v4HW6eqkSkn"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon43()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_percentage' => 6019.0,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-02-23T18:14:02.000000+09:00",
                'display_starts_at' => "2022-10-22T07:05:19.000000+09:00",
                'ends_at' => "2022-02-17T16:54:47.000000+09:00",
                'starts_at' => "2021-01-29T00:52:35.000000+09:00",
                'discount_upper_limit' => 5428,
                'description' => "aW80Xp5YCo9TXEMx6Q3N4lydCpBzThmgOIjIatpE7508LaYMNkxpSQqkfWLu8WbqqwjfwNPVeBo88egFulBO0tWJ93Y52C590AS7UiB0DiDGREmImyJDbbC2wEGBfcAGc0EsT",
                'name' => "xqnb80BRFYcLTC4xCABLekowD1pN0MSUSSu62wEl3iPUkIv4a2NsBAg7OoWmbOWXvcqkH6OCG8bjnFs6Wxag7kVTYLZtjq"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon44()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_percentage' => 9743.0,
                'is_public' => TRUE,
                'is_hidden' => TRUE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2023-07-24T23:18:14.000000+09:00",
                'display_starts_at' => "2021-04-22T12:28:18.000000+09:00",
                'ends_at' => "2022-09-23T16:27:24.000000+09:00",
                'starts_at' => "2021-01-24T12:52:37.000000+09:00",
                'discount_upper_limit' => 606,
                'description' => "NXCxB23NKDv8dBki6rCZ5MRu3n3kWR611LhXRF1WjDXemYssWVQAa0S9OWEqIPoWhsZ8",
                'name' => "p0D8THD4dpuhxNvhxjPfdLCMpGSOhV764tKT9oHgjnPne51YZO"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon45()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_percentage' => 8405.0,
                'code' => "0zGq4PpZBc",
                'is_public' => FALSE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-08-26T05:56:22.000000+09:00",
                'display_starts_at' => "2023-09-30T11:22:26.000000+09:00",
                'ends_at' => "2023-01-31T10:52:46.000000+09:00",
                'starts_at' => "2021-06-22T23:31:22.000000+09:00",
                'discount_upper_limit' => 848,
                'description' => "stD7C9IM7suB5w40dZFTsuKZGsFElmQpA4RSTaTlLaqlkU49OXmcM1eYLCIvDzYzwAtEksQWSl6Am3gCBrhM35EfmrtOFWMml5EKRiDsWg9ZcujQMFmb4vZ2HzNm8wdK6sB9HsuClaKx3AfzVa9lboQsNDBH1uzKMqlEF94aThPURq2Q4ZM2ZH2d8EggWOOiiO67HWQCePWkLnY7",
                'name' => "5P2vTc2kTDF85U9g31HpRLtjhMxgRT9FEddBtVan5HyW6Uan9MoYMbeeBKUXDDy014vqgIch5W6XuTL0vlIdvdIMbz7wUi6BXoKUl0tR07369wBiPR32MXZafz"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon46()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_percentage' => 9651.0,
                'usage_limit' => 3352,
                'code' => "fpT8lgG",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2021-06-02T05:42:42.000000+09:00",
                'display_starts_at' => "2021-01-25T22:40:46.000000+09:00",
                'ends_at' => "2022-03-01T13:27:34.000000+09:00",
                'starts_at' => "2022-02-25T10:45:56.000000+09:00",
                'discount_upper_limit' => 3159,
                'description' => "SdaJfJ60D0H2T0aKhnL3FlnAD82QrpYaKuslNraOesyAiawWiyWkSV3bs4OkWhHFx3P67yxFmxWAZtUSoiVrIFnb7w6ZClkoqVajvuG5c",
                'name' => "GcBP5wA9GwSB8bfxMId7hFKERGvYa"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon47()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_percentage' => 9149.0,
                'min_amount' => 2231,
                'usage_limit' => 6653,
                'code' => "bD1cIyw",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2023-07-03T17:15:20.000000+09:00",
                'display_starts_at' => "2021-08-20T09:11:22.000000+09:00",
                'ends_at' => "2021-06-13T20:21:16.000000+09:00",
                'starts_at' => "2022-12-19T18:04:08.000000+09:00",
                'discount_upper_limit' => 1549,
                'description' => "cQ5N98CAVKuKRC5FLAIRiGKuI8CNBTqLCZ99AjVbK3l31NeAICSoLJdEVZoJB0H5I2jNmYRtpCMs9TezTj3A085y5hWQ3gdeDOWFExGORRYNLJdsZ6n3IGoF44i0499bTqwmusaHN4dAo0kcMwrj6lsuth9pSzmqVAxW3BZh2UFG0NdobuyCqKAyF8XBloHn7nUM7l934bPMQ7DIwFMXGuPCrmdUDxKggDFfFvOJkxhc8IPv",
                'name' => "tQD4QxNm6tX3Guvbo2vDNfvQpElqxJKgNyOMeXS2rUoCJ5iH"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon48()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_percentage' => 4770.0,
                'is_shop_specified' => FALSE,
                'min_amount' => 7922,
                'usage_limit' => 9929,
                'code' => "swPc2",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2020-03-27T12:54:11.000000+09:00",
                'display_starts_at' => "2020-05-10T02:22:04.000000+09:00",
                'ends_at' => "2020-04-17T04:38:29.000000+09:00",
                'starts_at' => "2022-03-25T04:16:14.000000+09:00",
                'discount_upper_limit' => 4958,
                'description' => "kU0m8hSr1melepO9LnwIsUcSmvb4GOUqCz9cGDIhlPt52zP7YS2DWusWLcKpd2P335Nv6jpCTg7cImjgcPmkAEumRe3ajMg8VGC0KZL7VMaMEGv2NsNR",
                'name' => "CHkqW6b190Xf2yHeAyBqIIySMiYLD3kq3Znz8pepfEmpSiLZTFdERWScAwFtubDUWmymMiDw"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon49()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_percentage' => 6342.0,
                'available_shop_ids' => ["42761e86-170f-4746-a5dd-1166e55ee0a2", "da1330e3-754e-48ce-8c41-1d7ff794db93", "3f6cf7e6-fb07-49d4-b036-3e60ae980196", "678f86c7-1933-48ed-b29e-8453f9a41db1", "285bb3ba-1fb1-479c-9f80-01c8d1134c1b", "7b416a00-e792-402f-9744-192e78c7af69", "4fc6c6ce-da91-48c3-b25f-b0547fa396b6", "86db4725-51da-4f31-bb03-52084a666b85"],
                'is_shop_specified' => TRUE,
                'min_amount' => 9374,
                'usage_limit' => 2246,
                'code' => "Wi9xNJq",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => TRUE,
                'display_ends_at' => "2021-02-22T21:43:44.000000+09:00",
                'display_starts_at' => "2022-08-14T04:38:13.000000+09:00",
                'ends_at' => "2023-08-01T15:33:49.000000+09:00",
                'starts_at' => "2022-09-08T13:08:36.000000+09:00",
                'discount_upper_limit' => 7305,
                'description' => "G4qAHZdsob31RGFcTjCHIRk6EOKDYDfh7IyYBfSv2V1UV4oPfCtFaYiWkYeLppJ33CkMXXFMJbGPqbgq29Gzz59vVOvin5VZAtZIBDPoHNl5n64I544K0pgRwqKcwLRpyfhv",
                'name' => "p3huvf9ISSZ1V5b6lHxDKXrcl2EVGtJV2Ntce9IqiVZ5m5eyekXLeKtBuImxNnX45R5ZNIieikdp8w9LWlkr"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCoupon50()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745",
            [
                'discount_percentage' => 7309.0,
                'storage_id' => "15dcc571-fa3b-4727-ae82-bd92b528c9ba",
                'available_shop_ids' => ["6160df3a-d2a1-4b0d-9363-007aa169cba4", "405f6334-0db3-4aa3-9daa-795de6a959e4", "265693ac-b5a9-472f-82a3-b06d681948b2", "ec9dfab6-8506-4b8e-8f9a-503a3d7cd78f", "cb34a0f2-1a37-4960-86a4-102d93d03b45", "e255b237-eeef-4e78-98f7-0311f60f4509"],
                'is_shop_specified' => FALSE,
                'min_amount' => 6385,
                'usage_limit' => 2847,
                'code' => "eP95WFsrDT",
                'is_public' => TRUE,
                'is_hidden' => FALSE,
                'is_disabled' => FALSE,
                'display_ends_at' => "2024-02-03T06:31:48.000000+09:00",
                'display_starts_at' => "2020-08-15T14:35:18.000000+09:00",
                'ends_at' => "2021-10-31T14:42:36.000000+09:00",
                'starts_at' => "2022-04-12T10:51:52.000000+09:00",
                'discount_upper_limit' => 8652,
                'description' => "Ax4xhJmPNb2Vt3kMgTzAxm3nuCtm4tM4rQ7TMWwQQegAiqW5Gh3EedIVkoAN4R6PBgm1bgbkQVRY8M",
                'name' => "hwDykulFo5mDyJw8V3XaTOkFDFDXkJRYuzmNrD0IPFMYcPpoEqcZqYNWKYupHW3vkZPbupwOmpLyfcnvR24ekndSEuijqLz34cJjz9WzSXV2waIpnDEjnP"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
