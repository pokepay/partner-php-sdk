<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class GetCustomerAccounts extends TestCase
{
    public function testGetCustomerAccounts0()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "cc385ebe-006e-4669-a864-96be7d06215b"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts1()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "cc385ebe-006e-4669-a864-96be7d06215b",
            [
                'email' => "8I4zgjgTjL@IFfQ.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts2()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "cc385ebe-006e-4669-a864-96be7d06215b",
            [
                'tel' => "034-410556",
                'email' => "Yu6CKGyHPI@hrfs.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts3()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "cc385ebe-006e-4669-a864-96be7d06215b",
            [
                'external_id' => "Y7mip6qJaiYP0u3zQ",
                'tel' => "0012652-4225",
                'email' => "p1DFfGNYVS@0SG5.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts4()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "cc385ebe-006e-4669-a864-96be7d06215b",
            [
                'status' => "pre-closed",
                'external_id' => "rjSiJdBu1Jp6aOdb5LCLH9D83Jg5D9h4j8",
                'tel' => "083621590629",
                'email' => "yD9IZKEUbZ@JeRb.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts5()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "cc385ebe-006e-4669-a864-96be7d06215b",
            [
                'is_suspended' => TRUE,
                'status' => "active",
                'external_id' => "bXaSP0vm",
                'tel' => "003357-1950",
                'email' => "0g43JRY0gz@1k1c.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts6()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "cc385ebe-006e-4669-a864-96be7d06215b",
            [
                'created_at_to' => "2021-06-23T10:53:48.000000+09:00",
                'is_suspended' => FALSE,
                'status' => "active",
                'external_id' => "rOemHSalI8oXCKf0SnSxKdfUUeVOtIb418ZB2YlD",
                'tel' => "05-5774-1389",
                'email' => "6iUaLS64JA@mcFY.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts7()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "cc385ebe-006e-4669-a864-96be7d06215b",
            [
                'created_at_from' => "2023-05-13T09:19:17.000000+09:00",
                'created_at_to' => "2023-08-31T05:56:04.000000+09:00",
                'is_suspended' => FALSE,
                'status' => "suspended",
                'external_id' => "xRBZ2atpm59PKfjqKKZS7Ycdm6HzZ1bHyFRGDDL8k58mJ2YqG",
                'tel' => "0884-33-918",
                'email' => "7xtVzVGocJ@rcGC.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts8()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "cc385ebe-006e-4669-a864-96be7d06215b",
            [
                'per_page' => 3601,
                'created_at_from' => "2022-03-14T17:30:33.000000+09:00",
                'created_at_to' => "2020-08-01T15:15:22.000000+09:00",
                'is_suspended' => FALSE,
                'status' => "suspended",
                'external_id' => "j7ugDLAUWqsMIGoosFMsW",
                'tel' => "09429-500",
                'email' => "p1sFIYyy2d@NaOE.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts9()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "cc385ebe-006e-4669-a864-96be7d06215b",
            [
                'page' => 2424,
                'per_page' => 2149,
                'created_at_from' => "2022-10-05T06:11:57.000000+09:00",
                'created_at_to' => "2022-11-15T08:21:38.000000+09:00",
                'is_suspended' => FALSE,
                'status' => "suspended",
                'external_id' => "9B6GsIc0RNw0ChJkb842rnIndEWHfwTPQs",
                'tel' => "03610022",
                'email' => "ptMitd6AbD@BDco.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
