<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class GetCustomerAccounts extends TestCase
{
    public function testGetCustomerAccounts0()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "3b0bd29b-18c6-4e9b-8ee2-ac69b800007a"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts1()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "3b0bd29b-18c6-4e9b-8ee2-ac69b800007a",
            [
                'email' => "ZqSEKvNBsi@LTmR.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts2()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "3b0bd29b-18c6-4e9b-8ee2-ac69b800007a",
            [
                'tel' => "03806-307",
                'email' => "lMjgyCm3l3@6NNu.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts3()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "3b0bd29b-18c6-4e9b-8ee2-ac69b800007a",
            [
                'external_id' => "yyweAXXanZiLS6lbj9JXoVWEOjNWc",
                'tel' => "0840-022121",
                'email' => "Dc2LIkAJFp@X3tM.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts4()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "3b0bd29b-18c6-4e9b-8ee2-ac69b800007a",
            [
                'is_suspended' => TRUE,
                'external_id' => "PvkskrBs7cZNQht6pUXt6QkeG9pRp1c5EcN6nLJcb0",
                'tel' => "05-51389254",
                'email' => "SeKRyRniwP@aN0a.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts5()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "3b0bd29b-18c6-4e9b-8ee2-ac69b800007a",
            [
                'created_at_to' => "2023-08-28T11:30:54.000000+09:00",
                'is_suspended' => TRUE,
                'external_id' => "mRVY0r2kLaY",
                'tel' => "017-875-8353",
                'email' => "SDE2uEYUD0@C3IX.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts6()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "3b0bd29b-18c6-4e9b-8ee2-ac69b800007a",
            [
                'created_at_from' => "2024-02-02T10:37:08.000000+09:00",
                'created_at_to' => "2024-06-13T14:04:04.000000+09:00",
                'is_suspended' => FALSE,
                'external_id' => "4lH8T3KxBkSfET7NeTYdPy8UjYc9OlslQ",
                'tel' => "096-353-8330",
                'email' => "zj6ObIBdQw@mJP2.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts7()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "3b0bd29b-18c6-4e9b-8ee2-ac69b800007a",
            [
                'per_page' => 2802,
                'created_at_from' => "2019-04-23T22:00:24.000000+09:00",
                'created_at_to' => "2018-04-17T23:14:14.000000+09:00",
                'is_suspended' => FALSE,
                'external_id' => "6WRlyy",
                'tel' => "02-62735",
                'email' => "figMsVRHKP@W8Eb.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts8()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "3b0bd29b-18c6-4e9b-8ee2-ac69b800007a",
            [
                'page' => 6166,
                'per_page' => 1125,
                'created_at_from' => "2017-04-28T00:36:50.000000+09:00",
                'created_at_to' => "2019-07-19T14:46:55.000000+09:00",
                'is_suspended' => FALSE,
                'external_id' => "byfcjYNDVx4A2ovqPMZA8irXJ9E6ZcMzkLyAq",
                'tel' => "007344-5067",
                'email' => "Tgn11mpxaV@IYgQ.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
