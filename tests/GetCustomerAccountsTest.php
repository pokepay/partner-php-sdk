<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class GetCustomerAccounts extends TestCase
{
    public function testGetCustomerAccounts0()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "7149a4c8-c163-4dc7-bb2b-c47ead476c91"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts1()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "7149a4c8-c163-4dc7-bb2b-c47ead476c91",
            [
                'email' => "uqU0Zpo5LB@ba7y.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts2()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "7149a4c8-c163-4dc7-bb2b-c47ead476c91",
            [
                'tel' => "0189-2318439",
                'email' => "9S36TscHpg@aN0j.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts3()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "7149a4c8-c163-4dc7-bb2b-c47ead476c91",
            [
                'external_id' => "ZeP1HDPDTHzzRIdWxHjKy82N7",
                'tel' => "0404-3529659",
                'email' => "VqRIEU93kl@jq1Q.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts4()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "7149a4c8-c163-4dc7-bb2b-c47ead476c91",
            [
                'status' => "active",
                'external_id' => "jukgNdosrcsbqXkWqVhxk",
                'tel' => "0380912467",
                'email' => "KaXCJgJ38w@W32A.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts5()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "7149a4c8-c163-4dc7-bb2b-c47ead476c91",
            [
                'is_suspended' => FALSE,
                'status' => "pre-closed",
                'external_id' => "ILX828FihWZQyqSbK0FMXzQI3K0upT8cYYAuEa7V",
                'tel' => "08-0226-867",
                'email' => "8JSWzel5X6@ggil.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts6()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "7149a4c8-c163-4dc7-bb2b-c47ead476c91",
            [
                'created_at_to' => "2020-09-12T19:18:20.000000+09:00",
                'is_suspended' => FALSE,
                'status' => "active",
                'external_id' => "IikjMsDtvgyHs8kXaVldBOvstCOu5vNtx3b",
                'tel' => "0292-1998-8577",
                'email' => "D4mpTYqNNF@Pcbc.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts7()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "7149a4c8-c163-4dc7-bb2b-c47ead476c91",
            [
                'created_at_from' => "2023-04-06T21:01:03.000000+09:00",
                'created_at_to' => "2024-05-28T04:31:22.000000+09:00",
                'is_suspended' => TRUE,
                'status' => "pre-closed",
                'external_id' => "MK49acleVRs",
                'tel' => "0319-683",
                'email' => "tmURvImdni@els4.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts8()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "7149a4c8-c163-4dc7-bb2b-c47ead476c91",
            [
                'per_page' => 5022,
                'created_at_from' => "2021-06-18T16:04:15.000000+09:00",
                'created_at_to' => "2023-10-03T10:14:51.000000+09:00",
                'is_suspended' => FALSE,
                'status' => "pre-closed",
                'external_id' => "5DbpL3fJFTwwcn9WP3m8VyuReCXx5WTYs7Yv5KDLwBc",
                'tel' => "0377-052-608",
                'email' => "uiC1VR8XiX@W8JG.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts9()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "7149a4c8-c163-4dc7-bb2b-c47ead476c91",
            [
                'page' => 5951,
                'per_page' => 9829,
                'created_at_from' => "2020-03-02T07:43:09.000000+09:00",
                'created_at_to' => "2022-01-02T13:29:30.000000+09:00",
                'is_suspended' => FALSE,
                'status' => "suspended",
                'external_id' => "uAk94khcXRAw",
                'tel' => "0624496",
                'email' => "uwMI02c6YH@U8uG.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
