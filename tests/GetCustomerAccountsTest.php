<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class GetCustomerAccounts extends TestCase
{
    public function testGetCustomerAccounts0()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "f22922ac-5343-42eb-88e2-6a73c14bab8d"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts1()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "f22922ac-5343-42eb-88e2-6a73c14bab8d",
            [
                'email' => "Opn0GBtVQ3@V8SP.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts2()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "f22922ac-5343-42eb-88e2-6a73c14bab8d",
            [
                'tel' => "043032694",
                'email' => "8uPwdbaKTg@7KLZ.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts3()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "f22922ac-5343-42eb-88e2-6a73c14bab8d",
            [
                'external_id' => "eECBmO8lIxZxffiNO26mW5znNZ22umoTC",
                'tel' => "0313-99-175",
                'email' => "oZQS2irm6Y@NDKb.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts4()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "f22922ac-5343-42eb-88e2-6a73c14bab8d",
            [
                'status' => "suspended",
                'external_id' => "ddy5pLVFl21Cd",
                'tel' => "012-782899",
                'email' => "mc3fIHHfhj@ZoOj.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts5()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "f22922ac-5343-42eb-88e2-6a73c14bab8d",
            [
                'is_suspended' => TRUE,
                'status' => "pre-closed",
                'external_id' => "jrY4gPDA17Wzbd0M2iQVGHJJtyXR0ZMWs2cHp",
                'tel' => "030-39-5338",
                'email' => "EQQMmBUIEO@p46i.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts6()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "f22922ac-5343-42eb-88e2-6a73c14bab8d",
            [
                'created_at_to' => "2022-08-26T08:39:27.000000+09:00",
                'is_suspended' => TRUE,
                'status' => "suspended",
                'external_id' => "qEck7fgAotkae5RFqM1jAFvVRqoCCL3XTTq0lHm5zn7FVk",
                'tel' => "0410-324971",
                'email' => "apPREwiHGi@DPAs.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts7()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "f22922ac-5343-42eb-88e2-6a73c14bab8d",
            [
                'created_at_from' => "2020-06-17T15:04:13.000000+09:00",
                'created_at_to' => "2023-06-01T05:09:41.000000+09:00",
                'is_suspended' => FALSE,
                'status' => "suspended",
                'external_id' => "zp3Xpc7",
                'tel' => "0692582588",
                'email' => "tDlYh9hld6@nahu.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts8()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "f22922ac-5343-42eb-88e2-6a73c14bab8d",
            [
                'per_page' => 8344,
                'created_at_from' => "2020-06-16T15:27:13.000000+09:00",
                'created_at_to' => "2023-03-24T12:38:52.000000+09:00",
                'is_suspended' => FALSE,
                'status' => "suspended",
                'external_id' => "3kzLJnBcG2cd",
                'tel' => "0737-219185",
                'email' => "OlJWLvBerq@W2vR.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts9()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "f22922ac-5343-42eb-88e2-6a73c14bab8d",
            [
                'page' => 8481,
                'per_page' => 7124,
                'created_at_from' => "2022-06-14T11:14:33.000000+09:00",
                'created_at_to' => "2022-08-24T12:50:43.000000+09:00",
                'is_suspended' => TRUE,
                'status' => "active",
                'external_id' => "dg8FgAKsuOIFneuQ",
                'tel' => "07563201-716",
                'email' => "iAIL2vXy3B@eYg2.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
