<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class GetCustomerAccounts extends TestCase
{
    public function testGetCustomerAccounts0()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "cc3e9a8d-9f53-49c0-aae4-655b6560b2b8"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts1()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "cc3e9a8d-9f53-49c0-aae4-655b6560b2b8",
            [
                'email' => "QPzbjt0rt7@Umer.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts2()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "cc3e9a8d-9f53-49c0-aae4-655b6560b2b8",
            [
                'tel' => "02567-299",
                'email' => "vGgvAZbyLJ@1Lea.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts3()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "cc3e9a8d-9f53-49c0-aae4-655b6560b2b8",
            [
                'external_id' => "an4P1AnQ",
                'tel' => "014316247",
                'email' => "uXgZDedIJq@THGg.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts4()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "cc3e9a8d-9f53-49c0-aae4-655b6560b2b8",
            [
                'status' => "pre-closed",
                'external_id' => "hGiwZBj5AvHdO2At",
                'tel' => "04732-129",
                'email' => "2vDzXzQx3s@P8V6.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts5()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "cc3e9a8d-9f53-49c0-aae4-655b6560b2b8",
            [
                'is_suspended' => TRUE,
                'status' => "suspended",
                'external_id' => "T9VFC5bo0KXfPASw8j",
                'tel' => "0062-407",
                'email' => "NJOUuVI3xk@USOX.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts6()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "cc3e9a8d-9f53-49c0-aae4-655b6560b2b8",
            [
                'created_at_to' => "2023-07-09T23:41:16.000000Z",
                'is_suspended' => TRUE,
                'status' => "pre-closed",
                'external_id' => "TgyFK1FOp7pl9MWii2exAarzlUllrgsQZQAnUYeKIbZQ",
                'tel' => "00290679273",
                'email' => "IYlLoYSz5j@RHNP.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts7()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "cc3e9a8d-9f53-49c0-aae4-655b6560b2b8",
            [
                'created_at_from' => "2022-11-11T13:33:04.000000Z",
                'created_at_to' => "2022-11-13T10:13:32.000000Z",
                'is_suspended' => FALSE,
                'status' => "pre-closed",
                'external_id' => "tPyt1wTnktL8AY",
                'tel' => "004073-175",
                'email' => "ncONv8Kje2@pUTW.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts8()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "cc3e9a8d-9f53-49c0-aae4-655b6560b2b8",
            [
                'per_page' => 290,
                'created_at_from' => "2023-12-29T01:09:34.000000Z",
                'created_at_to' => "2024-03-15T02:26:12.000000Z",
                'is_suspended' => FALSE,
                'status' => "suspended",
                'external_id' => "87oiAkJ",
                'tel' => "06-68637053",
                'email' => "k6umIdkjys@mBoC.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts9()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "cc3e9a8d-9f53-49c0-aae4-655b6560b2b8",
            [
                'page' => 9338,
                'per_page' => 2970,
                'created_at_from' => "2022-10-23T14:46:45.000000Z",
                'created_at_to' => "2024-06-14T14:05:22.000000Z",
                'is_suspended' => TRUE,
                'status' => "suspended",
                'external_id' => "e5PrxfXmPZX1VlVfqebv0ckwSJ4e9e0pY47yGoAwg28Msl4sq9",
                'tel' => "0152-9805-5720",
                'email' => "RF0uEHwK5J@bwu9.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
