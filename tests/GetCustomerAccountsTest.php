<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class GetCustomerAccounts extends TestCase
{
    public function testGetCustomerAccounts0()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "5a434e63-82f5-4d3b-9357-6d0bf3dd402a"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts1()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "5a434e63-82f5-4d3b-9357-6d0bf3dd402a",
            [
                'email' => "xfr4xKRRC5@UPfd.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts2()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "5a434e63-82f5-4d3b-9357-6d0bf3dd402a",
            [
                'tel' => "09-1302581",
                'email' => "hDpkltxfpG@BgKz.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts3()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "5a434e63-82f5-4d3b-9357-6d0bf3dd402a",
            [
                'external_id' => "LBWMCY",
                'tel' => "0680922280",
                'email' => "nT3R8fCd81@15Vz.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts4()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "5a434e63-82f5-4d3b-9357-6d0bf3dd402a",
            [
                'status' => "pre-closed",
                'external_id' => "SNwUPij0JCeKaErwIngTct5VctC8ahSG576",
                'tel' => "029-20-627",
                'email' => "hNuqsd2aOE@u5ug.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts5()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "5a434e63-82f5-4d3b-9357-6d0bf3dd402a",
            [
                'is_suspended' => FALSE,
                'status' => "suspended",
                'external_id' => "0fcKmGRUw7sMhCFW8ODbHkZSUPXBsmObvnHUjDTSSciw",
                'tel' => "0302-887",
                'email' => "IImkvl5vCA@Hh7Q.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts6()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "5a434e63-82f5-4d3b-9357-6d0bf3dd402a",
            [
                'created_at_to' => "2017-11-11T00:03:31.000000+09:00",
                'is_suspended' => FALSE,
                'status' => "active",
                'external_id' => "YIcm0Sp2RluFOAxJTKKlkJp5ENq52OLTcJlns",
                'tel' => "0775-9145-4752",
                'email' => "n7Z1wrrgdx@WfKk.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts7()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "5a434e63-82f5-4d3b-9357-6d0bf3dd402a",
            [
                'created_at_from' => "2021-08-28T21:00:04.000000+09:00",
                'created_at_to' => "2015-11-25T18:11:51.000000+09:00",
                'is_suspended' => TRUE,
                'status' => "pre-closed",
                'external_id' => "pOR",
                'tel' => "00807-2523",
                'email' => "d4nadmeyKn@qGyq.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts8()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "5a434e63-82f5-4d3b-9357-6d0bf3dd402a",
            [
                'per_page' => 4016,
                'created_at_from' => "2018-03-12T00:01:50.000000+09:00",
                'created_at_to' => "2021-12-03T04:41:26.000000+09:00",
                'is_suspended' => FALSE,
                'status' => "active",
                'external_id' => "36l34SSSOxW72gqSjd8Q",
                'tel' => "04040475",
                'email' => "merReZGbvG@gvAZ.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts9()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "5a434e63-82f5-4d3b-9357-6d0bf3dd402a",
            [
                'page' => 1123,
                'per_page' => 890,
                'created_at_from' => "2021-11-19T16:34:34.000000+09:00",
                'created_at_to' => "2020-01-07T05:35:58.000000+09:00",
                'is_suspended' => FALSE,
                'status' => "pre-closed",
                'external_id' => "Lea6an4P1AnQALadFsAzgfKjbtuXgZDedI",
                'tel' => "08-40087872",
                'email' => "iwZBj5AvHd@O2At.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
