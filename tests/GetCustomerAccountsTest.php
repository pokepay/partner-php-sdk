<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class GetCustomerAccounts extends TestCase
{
    public function testGetCustomerAccounts0()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "d82a1596-1c2b-404f-96df-825eace28fef"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts1()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "d82a1596-1c2b-404f-96df-825eace28fef",
            [
                'email' => "jTDEk0fitY@gKzf.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts2()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "d82a1596-1c2b-404f-96df-825eace28fef",
            [
                'tel' => "0579740165",
                'email' => "y6Tu3BU56A@0Dov.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts3()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "d82a1596-1c2b-404f-96df-825eace28fef",
            [
                'external_id' => "2AWl",
                'tel' => "0811-188918",
                'email' => "pqZwH1tkpy@NDcu.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts4()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "d82a1596-1c2b-404f-96df-825eace28fef",
            [
                'status' => "pre-closed",
                'external_id' => "xfr4xKRRC5UPfddKJfLPJmxAh",
                'tel' => "04077912",
                'email' => "KzLBWMCYif@XDXP.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts5()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "d82a1596-1c2b-404f-96df-825eace28fef",
            [
                'is_suspended' => FALSE,
                'status' => "pre-closed",
                'external_id' => "HnT3R8fCd8115Vzf",
                'tel' => "0370-9091083",
                'email' => "eKaErwIngT@ct5V.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts6()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "d82a1596-1c2b-404f-96df-825eace28fef",
            [
                'created_at_to' => "2017-06-10T02:52:41.000000+09:00",
                'is_suspended' => FALSE,
                'status' => "active",
                'external_id' => "8ahS",
                'tel' => "055-929-200",
                'email' => "67hNuqsd2a@OEu5.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts7()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "d82a1596-1c2b-404f-96df-825eace28fef",
            [
                'created_at_from' => "2019-04-22T20:06:33.000000+09:00",
                'created_at_to' => "2016-05-10T16:03:58.000000+09:00",
                'is_suspended' => FALSE,
                'status' => "suspended",
                'external_id' => "0fcKmGRUw7sMhCFW8ODbHkZSUPXBsmObvnHUjDTSSciw",
                'tel' => "0302-887",
                'email' => "IImkvl5vCA@Hh7Q.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts8()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "d82a1596-1c2b-404f-96df-825eace28fef",
            [
                'per_page' => 2092,
                'created_at_from' => "2022-09-24T11:32:08.000000+09:00",
                'created_at_to' => "2020-05-05T00:22:07.000000+09:00",
                'is_suspended' => FALSE,
                'status' => "suspended",
                'external_id' => "m0Sp2RluFOAxJTKKlkJp5ENq52OLTcJlnsa7",
                'tel' => "0516145-4752",
                'email' => "n7Z1wrrgdx@WfKk.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts9()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "d82a1596-1c2b-404f-96df-825eace28fef",
            [
                'page' => 7041,
                'per_page' => 7700,
                'created_at_from' => "2022-03-21T22:23:59.000000+09:00",
                'created_at_to' => "2018-07-22T10:29:44.000000+09:00",
                'is_suspended' => TRUE,
                'status' => "pre-closed",
                'external_id' => "9LHlnKRmCd4nadmeyK",
                'tel' => "081192-053",
                'email' => "W7S36l34SS@SOxW.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
