<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class GetCustomerAccounts extends TestCase
{
    public function testGetCustomerAccounts0()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "ba8d1a87-7770-4d8c-afe7-e78ab3f573e4"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts1()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "ba8d1a87-7770-4d8c-afe7-e78ab3f573e4",
            [
                'email' => "yoNadv8mbo@gf4S.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts2()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "ba8d1a87-7770-4d8c-afe7-e78ab3f573e4",
            [
                'tel' => "0531-296193",
                'email' => "GS6Esw9fYE@lmkO.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts3()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "ba8d1a87-7770-4d8c-afe7-e78ab3f573e4",
            [
                'external_id' => "HrCrScttthgSJWH7mMcN2OOKftfgyYAHUvC91RN65TXW40w",
                'tel' => "0453-3765-5005",
                'email' => "nEXcx5ZbIR@0U2q.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts4()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "ba8d1a87-7770-4d8c-afe7-e78ab3f573e4",
            [
                'status' => "suspended",
                'external_id' => "j327NJQMrPE3ncRThEpoI5WA3NtAYcgO",
                'tel' => "09-138665",
                'email' => "KuLJ1q2FRY@M2Lx.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts5()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "ba8d1a87-7770-4d8c-afe7-e78ab3f573e4",
            [
                'is_suspended' => TRUE,
                'status' => "active",
                'external_id' => "Wjifmh8AER93jrQc2VrSYM3xuvU54Qry4oUrHXSGH",
                'tel' => "03616427663",
                'email' => "lKlolGv27R@B7eO.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts6()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "ba8d1a87-7770-4d8c-afe7-e78ab3f573e4",
            [
                'created_at_to' => "2023-12-18T14:19:49.000000+09:00",
                'is_suspended' => FALSE,
                'status' => "pre-closed",
                'external_id' => "2DzusN6G8O35Spd6Pw8o3EmgK",
                'tel' => "08-407-299",
                'email' => "tXMf7k6E5o@3hMG.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts7()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "ba8d1a87-7770-4d8c-afe7-e78ab3f573e4",
            [
                'created_at_from' => "2021-07-11T01:09:39.000000+09:00",
                'created_at_to' => "2021-05-19T14:25:12.000000+09:00",
                'is_suspended' => TRUE,
                'status' => "active",
                'external_id' => "YwA",
                'tel' => "00-63894",
                'email' => "mz6PPib8rN@mzMF.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts8()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "ba8d1a87-7770-4d8c-afe7-e78ab3f573e4",
            [
                'per_page' => 2733,
                'created_at_from' => "2023-10-12T04:50:24.000000+09:00",
                'created_at_to' => "2022-10-01T19:54:03.000000+09:00",
                'is_suspended' => FALSE,
                'status' => "suspended",
                'external_id' => "8NYteGvV1FIOvvkfpongqcpUPwdjHbLGQmmJ",
                'tel' => "04002581",
                'email' => "xFXOIthtok@LNbe.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts9()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "ba8d1a87-7770-4d8c-afe7-e78ab3f573e4",
            [
                'page' => 642,
                'per_page' => 1585,
                'created_at_from' => "2022-07-31T01:53:45.000000+09:00",
                'created_at_to' => "2022-04-03T06:40:28.000000+09:00",
                'is_suspended' => TRUE,
                'status' => "active",
                'external_id' => "nJx3t65lmOjW73dq6tq",
                'tel' => "093-666385",
                'email' => "X7D8jEUL6S@59ra.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
