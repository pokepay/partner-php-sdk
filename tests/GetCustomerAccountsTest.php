<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class GetCustomerAccounts extends TestCase
{
    public function testGetCustomerAccounts0()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "431bf48b-10c1-47e8-8470-dceb3e272e6c"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts1()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "431bf48b-10c1-47e8-8470-dceb3e272e6c",
            [
                'email' => "txfpGBgKzL@BWMC.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts2()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "431bf48b-10c1-47e8-8470-dceb3e272e6c",
            [
                'tel' => "092-6804-592",
                'email' => "PCbHnT3R8f@Cd81.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts3()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "431bf48b-10c1-47e8-8470-dceb3e272e6c",
            [
                'external_id' => "5VzfSNwUPij0JCeKaErwIngTct5VctC8ahSG576Yk267hNuqsd",
                'tel' => "0555-779-0623",
                'email' => "cKmGRUw7sM@hCFW.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts4()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "431bf48b-10c1-47e8-8470-dceb3e272e6c",
            [
                'status' => "active",
                'external_id' => "DbHkZSUPXBsmObvn",
                'tel' => "06-443-5397",
                'email' => "3PX7IImkvl@5vCA.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts5()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "431bf48b-10c1-47e8-8470-dceb3e272e6c",
            [
                'is_suspended' => TRUE,
                'status' => "active",
                'external_id' => "7QD95u0YIcm0Sp2RluFOAxJTKKlkJp5ENq52OLTcJ",
                'tel' => "0927751914",
                'email' => "usdwen7Z1w@rrgd.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts6()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "431bf48b-10c1-47e8-8470-dceb3e272e6c",
            [
                'created_at_to' => "2018-03-19T12:22:35.000000+09:00",
                'is_suspended' => TRUE,
                'status' => "active",
                'external_id' => "fKkMLwrBpORQ9LHlnKRmCd4n",
                'tel' => "045-981479",
                'email' => "qpn3W7S36l@34SS.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts7()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "431bf48b-10c1-47e8-8470-dceb3e272e6c",
            [
                'created_at_from' => "2018-08-12T08:35:01.000000+09:00",
                'created_at_to' => "2016-07-17T17:07:52.000000+09:00",
                'is_suspended' => FALSE,
                'status' => "active",
                'external_id' => "gqSjd8QPzbjt0",
                'tel' => "0475282-467",
                'email' => "bvGgvAZbyL@J1Le.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts8()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "431bf48b-10c1-47e8-8470-dceb3e272e6c",
            [
                'per_page' => 4106,
                'created_at_from' => "2018-04-10T23:30:04.000000+09:00",
                'created_at_to' => "2025-06-26T02:16:09.000000+09:00",
                'is_suspended' => TRUE,
                'status' => "active",
                'external_id' => "P1AnQALadFsAzgfKjbtuXg",
                'tel' => "04-469814",
                'email' => "HGgnOhGiwZ@Bj5A.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts9()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "431bf48b-10c1-47e8-8470-dceb3e272e6c",
            [
                'page' => 5313,
                'per_page' => 1889,
                'created_at_from' => "2016-10-15T14:02:21.000000+09:00",
                'created_at_to' => "2023-05-04T22:39:47.000000+09:00",
                'is_suspended' => TRUE,
                'status' => "pre-closed",
                'external_id' => "AtfcLabY2vDzXzQx3sP8V6",
                'tel' => "01493521-386",
                'email' => "PASw8jPQ0h@MJ4n.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
