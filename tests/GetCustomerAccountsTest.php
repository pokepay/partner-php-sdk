<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class GetCustomerAccounts extends TestCase
{
    public function testGetCustomerAccounts0()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "4fec6862-3753-4feb-9429-58ce0b1197f0"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts1()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "4fec6862-3753-4feb-9429-58ce0b1197f0",
            [
                'email' => "NgUQHiKbLJ@gq4B.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts2()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "4fec6862-3753-4feb-9429-58ce0b1197f0",
            [
                'tel' => "040-526-3291",
                'email' => "91yWsGk2yX@Juba.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts3()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "4fec6862-3753-4feb-9429-58ce0b1197f0",
            [
                'external_id' => "Xj9qcFwmyN9tX8QM8vrdWLyeROt6sLZBQq8GP9HvB",
                'tel' => "053-7688-247",
                'email' => "10KXZshJKx@YUVI.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts4()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "4fec6862-3753-4feb-9429-58ce0b1197f0",
            [
                'status' => "active",
                'external_id' => "drV77pLWy0W5gZpYqDsjLLAxwz1rHdWY3KMN9Tqzf3OTd5Ywb",
                'tel' => "05-73-119",
                'email' => "NiqscGnETI@m5rQ.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts5()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "4fec6862-3753-4feb-9429-58ce0b1197f0",
            [
                'is_suspended' => FALSE,
                'status' => "suspended",
                'external_id' => "98rMXpZDPwM1Bm",
                'tel' => "04695675",
                'email' => "kdPif4maNd@cqsr.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts6()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "4fec6862-3753-4feb-9429-58ce0b1197f0",
            [
                'created_at_to' => "2020-05-11T05:06:25.000000+09:00",
                'is_suspended' => TRUE,
                'status' => "active",
                'external_id' => "s6vOIa2v1hbImueaydMOELOUZWkLAiWnEq9hN8ZlG",
                'tel' => "0066-2493643",
                'email' => "a6UDAaX38o@clxw.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts7()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "4fec6862-3753-4feb-9429-58ce0b1197f0",
            [
                'created_at_from' => "2021-04-23T19:38:19.000000+09:00",
                'created_at_to' => "2020-04-28T01:12:19.000000+09:00",
                'is_suspended' => FALSE,
                'status' => "suspended",
                'external_id' => "SAcUWOK",
                'tel' => "03864-2491",
                'email' => "CQTfoNCDdn@plmH.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts8()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "4fec6862-3753-4feb-9429-58ce0b1197f0",
            [
                'per_page' => 7909,
                'created_at_from' => "2022-08-02T08:41:58.000000+09:00",
                'created_at_to' => "2020-10-21T06:05:46.000000+09:00",
                'is_suspended' => FALSE,
                'status' => "pre-closed",
                'external_id' => "grdgTd8RMGUbR5S5zWW4esU60aNmx",
                'tel' => "024682827",
                'email' => "dqkAutBWPl@IguF.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts9()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "4fec6862-3753-4feb-9429-58ce0b1197f0",
            [
                'page' => 1553,
                'per_page' => 192,
                'created_at_from' => "2024-01-27T11:09:29.000000+09:00",
                'created_at_to' => "2023-09-21T01:44:52.000000+09:00",
                'is_suspended' => FALSE,
                'status' => "suspended",
                'external_id' => "pEfuIWBxd9UqE1wu55t0pByxm3JUEJ8X0MV7QaXx",
                'tel' => "049147-807",
                'email' => "O6Orr6lNux@dEKw.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
