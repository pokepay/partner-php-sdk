<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class GetCustomerAccounts extends TestCase
{
    public function testGetCustomerAccounts0()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "2bb129b5-2cd0-4c15-aeec-7aaf2a2fb1f4"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts1()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "2bb129b5-2cd0-4c15-aeec-7aaf2a2fb1f4",
            [
                'email' => "Pkiqk3wLzT@PwxY.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts2()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "2bb129b5-2cd0-4c15-aeec-7aaf2a2fb1f4",
            [
                'tel' => "03898463",
                'email' => "i9IzQOyLB7@v3z8.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts3()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "2bb129b5-2cd0-4c15-aeec-7aaf2a2fb1f4",
            [
                'external_id' => "NVhHWsM133H7OrXKAzFuGERaY7oOfIo0Gjsz",
                'tel' => "04-5857311",
                'email' => "jL46StfZ3q@eX9r.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts4()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "2bb129b5-2cd0-4c15-aeec-7aaf2a2fb1f4",
            [
                'status' => "pre-closed",
                'external_id' => "fBO1o",
                'tel' => "035-4878885",
                'email' => "1PNfWcBlDR@Khxy.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts5()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "2bb129b5-2cd0-4c15-aeec-7aaf2a2fb1f4",
            [
                'is_suspended' => TRUE,
                'status' => "active",
                'external_id' => "4pv157nv85LgGN",
                'tel' => "06-793137",
                'email' => "1o4pd2z5dm@x5it.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts6()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "2bb129b5-2cd0-4c15-aeec-7aaf2a2fb1f4",
            [
                'created_at_to' => "2023-02-10T04:52:50.000000+09:00",
                'is_suspended' => FALSE,
                'status' => "suspended",
                'external_id' => "LEi",
                'tel' => "06-1872835",
                'email' => "S2lOZpIxrP@70RY.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts7()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "2bb129b5-2cd0-4c15-aeec-7aaf2a2fb1f4",
            [
                'created_at_from' => "2022-12-21T14:58:11.000000+09:00",
                'created_at_to' => "2020-06-21T18:57:46.000000+09:00",
                'is_suspended' => TRUE,
                'status' => "active",
                'external_id' => "wx1sc",
                'tel' => "07893125061",
                'email' => "ddCaXPWayt@E8Ae.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts8()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "2bb129b5-2cd0-4c15-aeec-7aaf2a2fb1f4",
            [
                'per_page' => 3098,
                'created_at_from' => "2024-01-02T17:43:14.000000+09:00",
                'created_at_to' => "2020-11-01T09:25:46.000000+09:00",
                'is_suspended' => FALSE,
                'status' => "active",
                'external_id' => "OlyTcN6PlMQpkWJwOJozNuAxiupw4CrKFIjBNVlbXXG0yM4n",
                'tel' => "074665712156",
                'email' => "f3ER82Rvrk@8Pti.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts9()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "2bb129b5-2cd0-4c15-aeec-7aaf2a2fb1f4",
            [
                'page' => 2602,
                'per_page' => 553,
                'created_at_from' => "2020-08-13T21:00:01.000000+09:00",
                'created_at_to' => "2023-05-20T10:10:45.000000+09:00",
                'is_suspended' => FALSE,
                'status' => "suspended",
                'external_id' => "nzQQPwEK2gLcqf3h7nX6OqwHO6zMy3skfKtM58HO4cJW0QI69C",
                'tel' => "0147-259",
                'email' => "Br3i7Vrerx@B1U8.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
