<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class GetCustomerAccounts extends TestCase
{
    public function testGetCustomerAccounts0()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "713aed7a-4b05-4a1c-a31a-855f6c9f8c13"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts1()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "713aed7a-4b05-4a1c-a31a-855f6c9f8c13",
            [
                'email' => "LBWMCYifXD@XPCb.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts2()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "713aed7a-4b05-4a1c-a31a-855f6c9f8c13",
            [
                'tel' => "0005-3286-821",
                'email' => "15VzfSNwUP@ij0J.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts3()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "713aed7a-4b05-4a1c-a31a-855f6c9f8c13",
            [
                'external_id' => "eKaE",
                'tel' => "0479673704",
                'email' => "5VctC8ahSG@576Y.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts4()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "713aed7a-4b05-4a1c-a31a-855f6c9f8c13",
            [
                'status' => "suspended",
                'external_id' => "k",
                'tel' => "0006-7484-251",
                'email' => "sd2aOEu5ug@I0fc.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts5()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "713aed7a-4b05-4a1c-a31a-855f6c9f8c13",
            [
                'is_suspended' => FALSE,
                'status' => "active",
                'external_id' => "mGRUw7sMhCFW",
                'tel' => "0324985",
                'email' => "ZSUPXBsmOb@vnHU.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts6()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "713aed7a-4b05-4a1c-a31a-855f6c9f8c13",
            [
                'created_at_to' => "2024-02-16T21:05:45.000000+09:00",
                'is_suspended' => TRUE,
                'status' => "active",
                'external_id' => "Sciw3PX7IImkvl5vCAHh",
                'tel' => "095-049-5303",
                'email' => "p2RluFOAxJ@TKKl.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts7()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "713aed7a-4b05-4a1c-a31a-855f6c9f8c13",
            [
                'created_at_from' => "2019-11-30T01:10:09.000000+09:00",
                'created_at_to' => "2023-05-05T18:13:38.000000+09:00",
                'is_suspended' => TRUE,
                'status' => "suspended",
                'external_id' => "ENq52OLTcJlns",
                'tel' => "0775-9145-4752",
                'email' => "n7Z1wrrgdx@WfKk.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts8()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "713aed7a-4b05-4a1c-a31a-855f6c9f8c13",
            [
                'per_page' => 7041,
                'created_at_from' => "2021-08-28T21:00:04.000000+09:00",
                'created_at_to' => "2015-11-25T18:11:51.000000+09:00",
                'is_suspended' => TRUE,
                'status' => "pre-closed",
                'external_id' => "pOR",
                'tel' => "00807-2523",
                'email' => "d4nadmeyKn@qGyq.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts9()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "713aed7a-4b05-4a1c-a31a-855f6c9f8c13",
            [
                'page' => 4016,
                'per_page' => 88,
                'created_at_from' => "2016-08-24T10:42:05.000000+09:00",
                'created_at_to' => "2022-09-11T16:32:43.000000+09:00",
                'is_suspended' => FALSE,
                'status' => "pre-closed",
                'external_id' => "l34SSSOxW72gqSjd8QPzbjt0rt7Umer",
                'tel' => "02567-299",
                'email' => "vGgvAZbyLJ@1Lea.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
