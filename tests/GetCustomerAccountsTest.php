<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class GetCustomerAccounts extends TestCase
{
    public function testGetCustomerAccounts0()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "cdc8e564-1835-402f-8358-c48c14ce78ab"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts1()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "cdc8e564-1835-402f-8358-c48c14ce78ab",
            [
                'email' => "iFWL9oU011@XoGo.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts2()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "cdc8e564-1835-402f-8358-c48c14ce78ab",
            [
                'tel' => "0505-684",
                'email' => "PpOt9Y3msx@tcs0.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts3()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "cdc8e564-1835-402f-8358-c48c14ce78ab",
            [
                'external_id' => "RQEq2AUltkkF5RV8aSNO9GQn",
                'tel' => "04-2099-678",
                'email' => "bbFQzPdXDp@ujuz.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts4()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "cdc8e564-1835-402f-8358-c48c14ce78ab",
            [
                'status' => "pre-closed",
                'external_id' => "kg0dnSdALdNv5r8w",
                'tel' => "03986592794",
                'email' => "1H3xUdHsES@YPWy.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts5()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "cdc8e564-1835-402f-8358-c48c14ce78ab",
            [
                'is_suspended' => FALSE,
                'status' => "pre-closed",
                'external_id' => "ErNbO9OH",
                'tel' => "0221-5615335",
                'email' => "HZ6h2XaPg7@28Rk.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts6()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "cdc8e564-1835-402f-8358-c48c14ce78ab",
            [
                'created_at_to' => "2023-01-12T21:39:02.000000+09:00",
                'is_suspended' => TRUE,
                'status' => "suspended",
                'external_id' => "cGA0kjIj9fnBbIK8dSJpAN6wIXIQbTWkewX",
                'tel' => "0212-60053",
                'email' => "uhtqc0lVuV@evBp.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts7()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "cdc8e564-1835-402f-8358-c48c14ce78ab",
            [
                'created_at_from' => "2023-03-07T02:52:46.000000+09:00",
                'created_at_to' => "2020-09-05T20:51:23.000000+09:00",
                'is_suspended' => FALSE,
                'status' => "suspended",
                'external_id' => "ZFsUJPsCckORoCtdXbeAqJmttYcSXDoCgw",
                'tel' => "04-01305374",
                'email' => "OKMZ3rJ8aR@Gwz6.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts8()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "cdc8e564-1835-402f-8358-c48c14ce78ab",
            [
                'per_page' => 3159,
                'created_at_from' => "2023-11-27T16:09:40.000000+09:00",
                'created_at_to' => "2021-04-06T06:43:42.000000+09:00",
                'is_suspended' => FALSE,
                'status' => "pre-closed",
                'external_id' => "kLV7UR9Ys1BTbKj9QeMGWU46l1ev23Q5PTPgtt4yAI",
                'tel' => "0372-144064",
                'email' => "fF9RSrf0Q1@pmhW.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts9()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "cdc8e564-1835-402f-8358-c48c14ce78ab",
            [
                'page' => 9935,
                'per_page' => 1660,
                'created_at_from' => "2020-11-20T10:30:34.000000+09:00",
                'created_at_to' => "2021-05-04T01:49:18.000000+09:00",
                'is_suspended' => TRUE,
                'status' => "suspended",
                'external_id' => "7EjBkQNn9uWl9JunPyftwg9sZ6EOXmzMsMVDhb",
                'tel' => "07635440825",
                'email' => "TLVhbhll0G@P4QA.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
