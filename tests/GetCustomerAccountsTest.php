<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class GetCustomerAccounts extends TestCase
{
    public function testGetCustomerAccounts0()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "55543535-882b-44f5-9f30-80a440a9c1d9"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts1()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "55543535-882b-44f5-9f30-80a440a9c1d9",
            [
                'email' => "Icm0Sp2Rlu@FOAx.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts2()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "55543535-882b-44f5-9f30-80a440a9c1d9",
            [
                'tel' => "047-0551-2657",
                'email' => "TcJlnsa7zu@y1tu.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts3()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "55543535-882b-44f5-9f30-80a440a9c1d9",
            [
                'external_id' => "dw",
                'tel' => "071-69745487",
                'email' => "fKkMLwrBpO@RQ9L.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts4()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "55543535-882b-44f5-9f30-80a440a9c1d9",
            [
                'status' => "suspended",
                'external_id' => "lnKRmCd4n",
                'tel' => "045-981479",
                'email' => "qpn3W7S36l@34SS.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts5()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "55543535-882b-44f5-9f30-80a440a9c1d9",
            [
                'is_suspended' => FALSE,
                'status' => "active",
                'external_id' => "W72gqSjd8QPzbjt0rt7UmerReZGbvGgvA",
                'tel' => "09215911045",
                'email' => "P1AnQALadF@sAzg.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts6()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "55543535-882b-44f5-9f30-80a440a9c1d9",
            [
                'created_at_to' => "2022-07-27T22:59:50.000000Z",
                'is_suspended' => TRUE,
                'status' => "pre-closed",
                'external_id' => "tuXgZDedIJqTHGgnOhGiwZBj5AvHdO2Atfc",
                'tel' => "0129-664-818",
                'email' => "3sP8V6IT9V@FC5b.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts7()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "55543535-882b-44f5-9f30-80a440a9c1d9",
            [
                'created_at_from' => "2021-03-24T19:42:09.000000Z",
                'created_at_to' => "2023-05-02T07:02:07.000000Z",
                'is_suspended' => TRUE,
                'status' => "pre-closed",
                'external_id' => "XfPASw8jPQ0h",
                'tel' => "062-07305693",
                'email' => "xkUSOX0vTg@yFK1.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts8()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "55543535-882b-44f5-9f30-80a440a9c1d9",
            [
                'per_page' => 6034,
                'created_at_from' => "2022-02-08T11:59:01.000000Z",
                'created_at_to' => "2021-10-26T00:50:23.000000Z",
                'is_suspended' => TRUE,
                'status' => "pre-closed",
                'external_id' => "7pl9MWii2exAarzlUllr",
                'tel' => "01-1105-7098",
                'email' => "bZQuPYAKNL@vTyM.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts9()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "55543535-882b-44f5-9f30-80a440a9c1d9",
            [
                'page' => 7048,
                'per_page' => 7330,
                'created_at_from' => "2022-02-14T10:49:45.000000Z",
                'created_at_to' => "2023-05-04T06:41:23.000000Z",
                'is_suspended' => FALSE,
                'status' => "suspended",
                'external_id' => "LoYSz5jRHNPv9LO3MtPyt1wTnktL8AYkBvD7caRgncONv",
                'tel' => "085-5471-045",
                'email' => "87oiAkJDB6@ZsUU.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
