<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class GetCustomerAccounts extends TestCase
{
    public function testGetCustomerAccounts0()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "3fc9e010-6bb5-41ff-a0ca-180d56ea0503"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts1()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "3fc9e010-6bb5-41ff-a0ca-180d56ea0503",
            [
                'email' => "4hcLnlsap5@3vQi.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts2()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "3fc9e010-6bb5-41ff-a0ca-180d56ea0503",
            [
                'tel' => "05-867-053",
                'email' => "KjqAlygen3@zGmq.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts3()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "3fc9e010-6bb5-41ff-a0ca-180d56ea0503",
            [
                'external_id' => "vbWWiKPC4TlgDxi",
                'tel' => "0074340",
                'email' => "egzXi6tXV8@wb8J.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts4()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "3fc9e010-6bb5-41ff-a0ca-180d56ea0503",
            [
                'status' => "suspended",
                'external_id' => "zpyuV92x9LbXw4",
                'tel' => "02563-4906",
                'email' => "OTZlUTJ0Af@gg3q.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts5()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "3fc9e010-6bb5-41ff-a0ca-180d56ea0503",
            [
                'is_suspended' => TRUE,
                'status' => "suspended",
                'external_id' => "9l2fQMLyfqgIISMXW9P603pe6MKmJBW6PeM3fS13AA2HfUviEG",
                'tel' => "07-850828",
                'email' => "l3DdhTl3zA@ocsW.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts6()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "3fc9e010-6bb5-41ff-a0ca-180d56ea0503",
            [
                'created_at_to' => "2023-12-09T18:40:49.000000+09:00",
                'is_suspended' => FALSE,
                'status' => "pre-closed",
                'external_id' => "lBjFwBGovnnDKytXK6bpA3zF38W",
                'tel' => "083-6568364",
                'email' => "bcDFiC8sxv@vRkd.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts7()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "3fc9e010-6bb5-41ff-a0ca-180d56ea0503",
            [
                'created_at_from' => "2023-02-03T20:18:07.000000+09:00",
                'created_at_to' => "2023-12-20T17:14:49.000000+09:00",
                'is_suspended' => FALSE,
                'status' => "pre-closed",
                'external_id' => "qCzDES8vQChp8JVC5McyDaNtGx57V",
                'tel' => "0708-848-5919",
                'email' => "D2OfwU9bF9@UcLR.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts8()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "3fc9e010-6bb5-41ff-a0ca-180d56ea0503",
            [
                'per_page' => 763,
                'created_at_from' => "2020-07-14T00:25:55.000000+09:00",
                'created_at_to' => "2023-03-06T02:00:00.000000+09:00",
                'is_suspended' => TRUE,
                'status' => "pre-closed",
                'external_id' => "3RadjjMSW8VJj9l3DkkuAmx4Vw2H9gfCJnY2DBsUVvgfB2paum",
                'tel' => "08675109205",
                'email' => "CXpmBbCSAS@Hqmd.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetCustomerAccounts9()
    {
        $client = $this->newClient();
        $request = new Request\GetCustomerAccounts(
            "3fc9e010-6bb5-41ff-a0ca-180d56ea0503",
            [
                'page' => 1561,
                'per_page' => 840,
                'created_at_from' => "2020-05-30T18:26:44.000000+09:00",
                'created_at_to' => "2023-01-28T20:12:54.000000+09:00",
                'is_suspended' => TRUE,
                'status' => "pre-closed",
                'external_id' => "xpHbsUyUzy93L648VPcGCA1reLcvzfStYOcDF1n5eBBxkqbB",
                'tel' => "024422770787",
                'email' => "sh8p3axVUL@XvDf.com"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
