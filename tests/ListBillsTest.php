<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class ListBills extends TestCase
{
    public function testListBills0()
    {
        $client = $this->newClient();
        $request = new Request\ListBills();
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills1()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'is_disabled' => TRUE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills2()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'upper_limit_amount' => 2165,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills3()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'lower_limit_amount' => 138,
                'upper_limit_amount' => 9059,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills4()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'shop_id' => "7ef6eb0f-325f-41b5-a814-5f8b0ddf74d7",
                'lower_limit_amount' => 2934,
                'upper_limit_amount' => 1898,
                'is_disabled' => TRUE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills5()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'shop_name' => "kOZFf6OCrzDvyXye2YX5J7kswz32xxJb5gogkv5hZzhmNsrWablOgZAXoZX3MAHgYPmjySnk7glzhXNaVAYaLNrv4APPX0VuhkKvXP9XmQeb",
                'shop_id' => "b0002fb4-b4ec-458a-89b9-afaea9b6fe9a",
                'lower_limit_amount' => 905,
                'upper_limit_amount' => 6222,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills6()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'created_to' => "2022-12-29T18:43:11.000000+09:00",
                'shop_name' => "zNi4QRVhKIgwqcZXXujn6BV89aH0zGishUXB3k1TCBIJLPgkjFM2OQzcSnWHq19FZrEznmqJPjUJTgImhGc9HJEQJmhSQSbckJ0fOiubMoC3zDcy2cOdFG6DwbVSKZ2WrdC05OlbHcOU5d",
                'shop_id' => "30c04d19-73e7-4f1c-8f7a-b6066beff33e",
                'lower_limit_amount' => 4202,
                'upper_limit_amount' => 3112,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills7()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'created_from' => "2020-09-30T17:54:06.000000+09:00",
                'created_to' => "2020-09-06T21:06:40.000000+09:00",
                'shop_name' => "0pxC3a7ehXW7AlGm4wkfy3Zcpne1CwZsTUehdZchNmtmmUiRjvHmuI3Xz9htqusezXyLXJsEvfTSncRo7it4pVulLYkSwmXDZ9TbRw3V1nu1YMpRChCHVMpSWKVi5mN7y3SPx9Uvns7gLOU5JmSxhNTmL5CoRyGeNp0HxXnZXSXNgckUAwWayJKCRYX3YIcgcnowGfiwKDxXVuCnD6rOBTI27AIAV5JepzVqhT",
                'shop_id' => "9a023bf8-b3a6-47eb-b901-83b4dfb51152",
                'lower_limit_amount' => 898,
                'upper_limit_amount' => 848,
                'is_disabled' => TRUE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills8()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'description' => "QPVohOKO497LqBx5st33IycobYifawLoyomWOOMozo5jpKaGDznlAnGQMpbxQAiLohSPUwUYCUJg68uA2AmnfrLs0DzubTwACwZ7ZhzXL6GQDOebU5xROJsENJO2NqdySldX",
                'created_from' => "2021-05-02T19:32:48.000000+09:00",
                'created_to' => "2023-06-06T17:47:37.000000+09:00",
                'shop_name' => "4xlSRqnAPOZUjwSd4H43FQ8gVS6TmMl7klMt3C13MqnL5qq1u02f7XAIyZQ65mKbppT1wZa5Ul9NliFarXnpuT0KKlK0tskfwpiMYtzv0hOHu7kauWEG06SgCTer9oFRJ4RuLmQ0Lm0BujxjuGz",
                'shop_id' => "cac56450-b6b6-45b4-867a-edc5b7bff9ab",
                'lower_limit_amount' => 919,
                'upper_limit_amount' => 6687,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills9()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'organization_code' => "x7-99Gt-s50--Ig",
                'description' => "KfoQGupNHaPUWIAEdiNMDugLuPAj9l5d",
                'created_from' => "2022-01-10T08:13:44.000000+09:00",
                'created_to' => "2023-05-27T17:15:45.000000+09:00",
                'shop_name' => "nsLeqsGdglo4RznM6xq8a41fGu54mYbxoNTpwSF7lLeXEgHqdJbSYvAjEwhC3hwMP5cgQTpj98oXR8pOFi9g2w6AFQtTwKA2dNvAhM3isQf3EbT9n4bNXT5kpK",
                'shop_id' => "03e35c38-874c-4c44-95b2-64ae1b7015b0",
                'lower_limit_amount' => 7388,
                'upper_limit_amount' => 6503,
                'is_disabled' => TRUE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills10()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'private_money_id' => "0f0d200a-5e3e-4b00-a397-0fb1148b4c05",
                'organization_code' => "H-00MrG-D-0",
                'description' => "9wFQbyZ9b8R7gO8vV0TOwj3sRQx2GjtZtc0mEUcwyMTNclRT8anSF4797Isvvx4D21T3szc3MMJD",
                'created_from' => "2021-03-02T09:15:24.000000+09:00",
                'created_to' => "2020-01-18T11:56:49.000000+09:00",
                'shop_name' => "FTd79nrIkN7710ccwkJCiZ6xsNNNx2dbtRgPRbJA41KzXwKEeW7Ee9gQ1Xqm0Mr8e4fOsttgRdKgJ5TaBhCxXy5eiKJvTnfGx9UBDNW34BZW73MgjBUp2oDstOkMl8Q8krxoNbFySRYxHdmcptN7UFKIDwRdE",
                'shop_id' => "d6b43e72-c091-462d-b494-212a61c4f6c3",
                'lower_limit_amount' => 3299,
                'upper_limit_amount' => 5797,
                'is_disabled' => TRUE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills11()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'bill_id' => "HmGF9",
                'private_money_id' => "c171689a-cb1c-4eed-b398-85f80d3029c7",
                'organization_code' => "-MV--120KZ-K6Px-I-v8-",
                'description' => "Abha6G6LUeRquIGHalY5Yqwbt4ylOmlQCP5fKdJc9lWZylYUpghwQLnf1z3MHQgtlZ8QfIVB1oXYNG4sKRFvg6YdTr0i1rSgAbA5RQHSxqR6XdxzOZtQAeiM61lw6X1TRrPjNvTKIIi1vxxW36PofA04mczd3NB71CouubUnrOayeY",
                'created_from' => "2021-04-20T06:39:20.000000+09:00",
                'created_to' => "2020-07-11T15:10:51.000000+09:00",
                'shop_name' => "RDPoksfxbnF2fGrxy8ZEF3AUO",
                'shop_id' => "f81ffc25-1d33-4bbd-85ae-254ca25273a0",
                'lower_limit_amount' => 6004,
                'upper_limit_amount' => 2161,
                'is_disabled' => TRUE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills12()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'per_page' => 9692,
                'bill_id' => "2VaR",
                'private_money_id' => "7f419f7f-7e4e-4c4e-8551-b4fd78d00b76",
                'organization_code' => "R-kaYe-c-H2V6F",
                'description' => "Oe4cac9wpR75o7qY3nB8nPSQCuln92heBPvdJw7UVSVsag3xjpGWd5xUTXHqWXtFyCcpy91pyfOCK7TKTgeKKrbUqO8R6COB4yCAIHtntGNsOhik4ZhMfBPAnIb4g4DBqdaOiPFuAuuhi1gPhyzpnclLUK4iIHGh5D",
                'created_from' => "2023-04-25T14:10:35.000000+09:00",
                'created_to' => "2021-07-06T22:29:55.000000+09:00",
                'shop_name' => "p3uoyrMNutgp8XnNinvI3nVbCIt4QRKA3PjU94wiODESl9alAgegm2kYyCxEHldPhI5ctdbixdEvbPbZHnuD2MwGagO7ObjKZrrtjXw64Bydm9TDJoJQkYypqsOj0N3ye812D1oEuXGrXVe5Sp0xk",
                'shop_id' => "c7c0f14e-6598-4d48-859e-07101400fcb7",
                'lower_limit_amount' => 1501,
                'upper_limit_amount' => 9453,
                'is_disabled' => TRUE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills13()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'page' => 6424,
                'per_page' => 7938,
                'bill_id' => "c8HFGjl",
                'private_money_id' => "9246ca89-51f9-4df5-be5b-15ccbbcf2e32",
                'organization_code' => "K6LV8e9jW93-7163F",
                'description' => "VGlzXGjsKDnroSL0HCeDWUfky0wA3qfDk6u1VqDRYUDpbQy9ZWYLW7IEXOP3FFSTbrfHpCEqcviBgZl2vN9hOC9DRIu8pJoQxnfGhIuNSwGs2LCG22cJQVXIuukN4DTWGXUHLaxVZeXeGz1E4ROoUQz9MP4aPGf6bamAbsmG1qLQVsMVSzuXGJqPMcpyX6ADmA",
                'created_from' => "2023-06-07T08:15:39.000000+09:00",
                'created_to' => "2022-03-20T03:51:12.000000+09:00",
                'shop_name' => "N7ZxF3Z4wwprsU4TcXxCLE05ybDX2Neii4jNFpRwTYhLz1l4S5u6g40ESSh8FyJtc5NsP37iz1GPLaubVdHyxhOMvTr1uXdaS2M5pjOmrWv18O5dXZIMf3RTexgLbKe7YRyxyrZmFNfcCq3bkQgoeTymjnOdTRaPFDTArRmuPmAJnui42dV27i9zwUXlIk",
                'shop_id' => "b81b73d0-b852-442b-8915-dbff2ca5ba98",
                'lower_limit_amount' => 9267,
                'upper_limit_amount' => 7708,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
