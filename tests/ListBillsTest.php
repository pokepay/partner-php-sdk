<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class ListBills extends TestCase
{
    public function testListBills0()
    {
        $client = $this->newClient();
        $request = new Request\ListBills();
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills1()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'is_disabled' => TRUE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills2()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'upper_limit_amount' => 408,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills3()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'lower_limit_amount' => 6519,
                'upper_limit_amount' => 4580,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills4()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'shop_id' => "115eb826-0f11-41dd-b6af-939adee7b90b",
                'lower_limit_amount' => 805,
                'upper_limit_amount' => 5239,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills5()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'shop_name' => "JHT6Pk6cuY7SQRxHiktnQHTkMXSZyoahPbHlMH4q3htp7twsPzpj0ixBUfobxEO1SP1YnErRSCC8G20rIed7qJimAmmCu8qFb2p6B3WhGSPx5udrutLOQcsBoZwmf4z1aERT3jcOmxZrxiIg9wc",
                'shop_id' => "cb8e31a7-1662-4bbe-9604-16265a83428d",
                'lower_limit_amount' => 7412,
                'upper_limit_amount' => 9007,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills6()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'created_to' => "2023-11-06T04:43:10.000000+09:00",
                'shop_name' => "0TFCnmbclVrnpf7HoFHgmaNFhDveAVqTyRBkbifuWISgwjSTi40sE5H0pUmJ7HPTPMqzWZpBtjouKCdT7Uh2niI6O",
                'shop_id' => "3aca137b-181e-443e-8ab1-4d10c45c1d86",
                'lower_limit_amount' => 8070,
                'upper_limit_amount' => 6320,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills7()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'created_from' => "2023-10-25T17:28:38.000000+09:00",
                'created_to' => "2021-04-30T13:26:52.000000+09:00",
                'shop_name' => "lnabmzYG05u4dT9Uxitr7zxJSDIgT8Qez6bqRm3TWDV4Z8zeN1HDkec7efvss6bYpld88QzMqe2CJ4pOI2zKRXUcIyR0pVYLshKUX1xmH8ix9Y3ibfbrRCZJuRD8u4yrHpX7KElqpSAQIeZlU96F7QcvS6UxK2LWqggACxrdfRGL4hCcCS0NQ2fe1zZkOWwCSFJvA4tKUSSZIBvsLNhuJEtRfR9pMlybIJDff",
                'shop_id' => "e6785c12-f899-4042-8d73-cdfc65dec735",
                'lower_limit_amount' => 1424,
                'upper_limit_amount' => 1880,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills8()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'description' => "mW5YyqAgLD7qryGza4AyUOnuG9I1Bc3ffYBtIQUcimKgeaqyVPRyzOqG2E7HUDA9Rbu3EENDs",
                'created_from' => "2023-11-16T00:05:05.000000+09:00",
                'created_to' => "2020-04-27T00:35:15.000000+09:00",
                'shop_name' => "J6oi03DR1oleWz0eqOIfYC6aCpKBnXIdXjcbjHKmu9AreWeaON70s0SLfW9qL",
                'shop_id' => "f8582898-48b5-4046-bed2-19519dc5a21e",
                'lower_limit_amount' => 6900,
                'upper_limit_amount' => 1809,
                'is_disabled' => TRUE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills9()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'organization_code' => "LoL5bscQ-J-edT-Z1E13ixsafJODM7",
                'description' => "dbfu1sC7go9UsMwz6oBC4ZQMaSGyEKwFC4YbnE6pvdaH6JND8P4UkCzu0r1AR3IzHoj1tjpmGBmfYu0fnhEaQ7QemFDpYyozjMXlgvS6INgloP7u6xyBJ4Ntx14nt129o7RxuE55x97vUAZ9eYDufWN5CRvOqDtR1",
                'created_from' => "2020-10-07T04:20:38.000000+09:00",
                'created_to' => "2021-11-01T14:40:04.000000+09:00",
                'shop_name' => "iCDl0brMVxsXaRiiY4kSPpjHwnTjNJR92h6K7wQrba6JOrL40yC75AFB7WE3THMJQqPK6wPZQGYdlArQQT9UHM",
                'shop_id' => "3b9ab923-7524-4b17-a49f-72bead4862eb",
                'lower_limit_amount' => 1678,
                'upper_limit_amount' => 7775,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills10()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'private_money_id' => "f774542a-a7b2-4bf2-8455-81ddee248784",
                'organization_code' => "-bX7ieS-77BBW1hDwP-3-r16TGl",
                'description' => "ZsgHhPk2ELK7I9nHLIUQCG5ELq0teiZAqbl6ShxEkPOrN4W2IUNaLBrG66IpcUzjI0ZmZpNjUJf2XIQMjrbWyueBKKF0YvQr3EGSHquRXrcYn6",
                'created_from' => "2023-04-03T12:22:24.000000+09:00",
                'created_to' => "2022-05-28T23:30:27.000000+09:00",
                'shop_name' => "9OoIyH5atLlcoG3bzJJELmvsSCXyi2q37M6ETHUrGlnz8Rj63951XiZQtEqyYfX5zzrOnIKboJWRxtjRgmAIc1wTqg60Mrpu5ygFpoirtg8oRUFWVJsSrczulN1QV1MgwoIKt9E",
                'shop_id' => "3b3f2ffa-3413-4594-bb95-a7868c693dd1",
                'lower_limit_amount' => 1046,
                'upper_limit_amount' => 7409,
                'is_disabled' => TRUE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills11()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'bill_id' => "G",
                'private_money_id' => "68b0afd0-4c05-4cf3-96ba-3b3160a4dd90",
                'organization_code' => "uLPPi",
                'description' => "2",
                'created_from' => "2021-09-01T14:32:19.000000+09:00",
                'created_to' => "2023-07-02T20:01:23.000000+09:00",
                'shop_name' => "dqgvIR2pIyzHgfWGumMKx20XFb7ONSmgvE7R7CSdiaS4x4TmvR9c0hOuUmjFD8Ps2Jci4aby6GVCUMQxufm5QByQgMFVfrX6cySl5wH6HeXrHYO3uOEvH9aocgsTWtZw4H2bNmT1I2y9yuMOihJSEV6O07v4julZavgyTmJmNPltarEZiUgWrDVcD3eT71BoDnDlIuCVdeEVuV",
                'shop_id' => "7c7b0641-41b9-483c-984d-55c9c006b334",
                'lower_limit_amount' => 776,
                'upper_limit_amount' => 9569,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills12()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'per_page' => 6846,
                'bill_id' => "u",
                'private_money_id' => "850367aa-4c70-4755-9a1a-3ac97dc52be0",
                'organization_code' => "7-Wa8Vz2--",
                'description' => "zaPAzWl0g2LqyeiagJV8h7pie5iEOUFYrMPXiSxQZOTqAXdSySHIB5ARNoNBLjPkgYXhXTzcPQW8OdqAzzv6WL1C7yM2yzO9oaXXu1Mq14oQOYqLwjbaTIh1y7GxtW7dKih7nho0zXQRIV",
                'created_from' => "2022-05-19T02:00:51.000000+09:00",
                'created_to' => "2022-08-22T18:22:30.000000+09:00",
                'shop_name' => "R5xWRVXxc1akKBvEllu4IUixmyxw863r9urawcms8OVopwQb8Cz1kKJ3BYpiIMGk9lcIVcGnXqWmFkN1dyuyUBjUdlYbLbJnH3wZ9nWM13Vdmu7Tn0R0iC4RndU6TejF1sn6ygdtBEhL8j3odhaeHvdfIvfAtlubfz",
                'shop_id' => "da40d664-2058-4eb3-9d1e-a0b6048e0784",
                'lower_limit_amount' => 307,
                'upper_limit_amount' => 7468,
                'is_disabled' => TRUE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills13()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'page' => 2912,
                'per_page' => 4216,
                'bill_id' => "8npaIU9M",
                'private_money_id' => "0a8c4fdc-7db5-4f9c-b35e-d6a34da82caf",
                'organization_code' => "--w6-k-U70",
                'description' => "65XsZvjGqKmixO59QFTfKdMAkLdeuckG4EwTFCINQC6aWdYmS4iUztvZQnTsVduVGz28UGVDP7c4tnUqrRFCFkQQQb72hSJfhTx0pu5HnPrzwWY7xX2JmsSeuZ47AkLfjque10jGIjua9bKA8N4lwOSCvUyygiZ4qA0QnCJaBdrDUjpW98f",
                'created_from' => "2023-06-21T01:36:26.000000+09:00",
                'created_to' => "2020-10-23T11:55:23.000000+09:00",
                'shop_name' => "uHTTBpsf2NbdMdW3jmGyEddDd9Y6vu5FFYySJQLqgRk2SyqtnNnq9gkeP6qvRxr6ICUayX0EVZ3dh2aU56jSEuhgwsdVCJZM61lRpCwlfHX6tTIQghfOGKq37OYomWF3oGzq7VqhXFRnoala2Gc6coYrgTHyYWwymlILOWk89W0vCaYlGT",
                'shop_id' => "8c38a816-14da-440d-b6c0-1470b9a357e6",
                'lower_limit_amount' => 7418,
                'upper_limit_amount' => 2529,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
