<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class ListBills extends TestCase
{
    public function testListBills0()
    {
        $client = $this->newClient();
        $request = new Request\ListBills();
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills1()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills2()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'upper_limit_amount' => 3859,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills3()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'lower_limit_amount' => 5446,
                'upper_limit_amount' => 2106,
                'is_disabled' => TRUE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills4()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'shop_id' => "905f3d38-f1be-42a2-958b-53f2954ab0d1",
                'lower_limit_amount' => 1367,
                'upper_limit_amount' => 1713,
                'is_disabled' => TRUE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills5()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'shop_name' => "JWWTZgcCuDt4bOl52Y9Vo2q3PiHBjRUpdSYSIHe7WRd8QgrTh5gg3jBLh2J3dK297uJriMdLcWHclyy16UsYQYNNbAndnytowLyNOYLTsHdNmWw0EndFxsvgPufRhkZSIPkBFV",
                'shop_id' => "ddfd067e-f153-47ef-b4a6-a09f9313dc67",
                'lower_limit_amount' => 7343,
                'upper_limit_amount' => 4862,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills6()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'created_to' => "2021-10-07T22:23:40.000000+09:00",
                'shop_name' => "VmaPxxkTqOmFrFIeeAGW6tZ8ccBHHSscpO2n832d6dquF6eiZ3Dd6WSyHdflPLxXMNqqALPwoGWvHelnhCvdyO5hkKi9O2P9jiZ6u3x2WBzZJZ5a5g6qUYzSlCDa2sGdGVrQ24o4nKCzYGzzQTWE3lYOg9rxxthyfXlSvfosPd1dV4mUaevGo2T7nnwUuCJVK5LAGSeliWWE3p7BNebn72rKlC8xS0lGxuRh6",
                'shop_id' => "5f13ca1a-d49e-46bf-b6b1-6cd58e74edb8",
                'lower_limit_amount' => 5770,
                'upper_limit_amount' => 5682,
                'is_disabled' => TRUE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills7()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'created_from' => "2022-07-01T21:09:27.000000+09:00",
                'created_to' => "2022-10-12T19:19:12.000000+09:00",
                'shop_name' => "yeYo5zfOAgdSLVNb11hZJnWEH9hNdPtUfATWqt0PIkhoWI2jo5XiCGDGRUSQL",
                'shop_id' => "af0c4381-f531-4656-a369-7b58b558471f",
                'lower_limit_amount' => 2875,
                'upper_limit_amount' => 6560,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills8()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'description' => "5xn7MbZoA7GyvC5m86vU4CTunlo9FHcvhpXn1f9WUvYvDDo3G7amxcKXWGa0ExI5eaGTZJemJSksAElb4iAlQjM0mI6tueKzKdA8G45Yd1ntlQmTFdCR",
                'created_from' => "2023-06-06T03:43:13.000000+09:00",
                'created_to' => "2022-12-06T22:30:59.000000+09:00",
                'shop_name' => "oNs8we7kw42AF3DTjcROuetQ8zFdMo0VY4tUGROiwu8g5jegd2tDc5SvOZdXc2AVLuF8gaKQ0OEhkP9BLs49M6H6epGVtu0HPhsCKuI2bJUyIRN5hatVHvQNYn4X1Qj8JOhaftsXxsjd7rD3p",
                'shop_id' => "0e584bb3-07a5-48ae-9114-48bd5105172e",
                'lower_limit_amount' => 1142,
                'upper_limit_amount' => 3177,
                'is_disabled' => TRUE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills9()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'organization_code' => "Lanu-57n-b-",
                'description' => "kVMeGwc0telVu2tN3qF3OiiOujRzWy8Mcj6VHKbsKvxKRJtbZ6K76VuMMSh2Ha6k65TkgQAHKvWLYfnKUDaFnoOELVFIliGUkzDwrtDxf0MXrCLcEeF0G6c7",
                'created_from' => "2023-09-19T11:09:02.000000+09:00",
                'created_to' => "2020-04-08T01:45:37.000000+09:00",
                'shop_name' => "JlexFaoQwEiDJ9lfmmbEWyFjH3f4xGeNVyW1dIZm37KxJgYVY968gMj0d8XhDCiCGbEAm8DDmMv6OU8xPn5JSHVJXh8Q94B643G49hiuGz9Mf8rtHhq6vTBJC14vJa23qnBx2rVMtQpLPCeP9dzLx5t2lgWoJQYoOSmAcuLVq3Dp4kCeEFdr2oD1k2yoz92oX",
                'shop_id' => "d54e0d50-1418-47c6-881c-f0dc74e148ba",
                'lower_limit_amount' => 5768,
                'upper_limit_amount' => 2755,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills10()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'private_money_id' => "ac7c29b0-686a-4509-9aee-b137d16766e8",
                'organization_code' => "-7--20hJQh-GkW3-H0dyEb-r---v1",
                'description' => "NOSKErJuxzhPvCMr0kZtscw8OT2IAWVb28SeWG8Bm8nEP885h5bVE5OX705Vm5JiHzOUPeHPDN54LrETsKWQEFkd4B76qVl0bvsINuFH08cHi3IruRfVcbJYOhkdNc7P4FTTn7dkmZ79WHBWuUwmPiQWsAKL3kSTc0LPbfp9enQ4U",
                'created_from' => "2021-10-01T22:07:24.000000+09:00",
                'created_to' => "2023-05-08T00:46:41.000000+09:00",
                'shop_name' => "gv1CZMBdnrAluiOKJEBcBWwa9xyy2bCL74Q4u2OMMM0xD2AQaKdW9LUbHMcMKbw9zDIEFEyvAvmcoCxUBg4yU3AAs3",
                'shop_id' => "0b25d136-ea2d-4069-86bb-6b655a921675",
                'lower_limit_amount' => 8090,
                'upper_limit_amount' => 5124,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills11()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'bill_id' => "ml3h361gu",
                'private_money_id' => "31664059-5548-4383-9d89-a601b32ac56a",
                'organization_code' => "-F5dS-u---iOj0-",
                'description' => "tyV2QJygcowmF67ESWsIRxLPg383wnSfVCO7XYJmoO0uhcJraMmDaSEahfn300LCaHLSroJkepEoifMTQ4",
                'created_from' => "2023-01-20T12:02:39.000000+09:00",
                'created_to' => "2021-10-11T20:21:08.000000+09:00",
                'shop_name' => "cvwtomMfjQ73GX2yquqoxmpJQvrLat0xlnzVZch13fLL8IaybXOFsTe5kGdJyjn39kuUAVwNBecCVcfQFB6zhe4zCjHFhQi2UCzxxgdtQx1Yj4cppg0SxOu0ayiRvxTnpbAnHVMhD4r87dViYbNhwHBT9cSJc7HHGuapEaMsGd77SVXYGZA1EEVZp38NbYd6BPccNKfybJvzwpWAlSZO0eB2VJdZjjB0xRzUNUpofUOthUva",
                'shop_id' => "d15e4f94-e942-44d7-9e1f-af0b2780b6c8",
                'lower_limit_amount' => 4139,
                'upper_limit_amount' => 9510,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills12()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'per_page' => 5531,
                'bill_id' => "5mCwqz0uQM",
                'private_money_id' => "3b2657ad-a18b-4566-aabd-7e488d6e5e44",
                'organization_code' => "t9X",
                'description' => "nzslLBpLYCslrR5KJr7bn9hdX9OCfFXn9K2AgfBHU7qrHZsxfuhIX0b4ZUJ6pPrj6eqKTlwfXx7lcxZh2WMWiFuZyBOgd5E91H2aN9YB3DkMGQHjMs0ud",
                'created_from' => "2021-04-03T08:01:22.000000+09:00",
                'created_to' => "2023-07-05T00:05:22.000000+09:00",
                'shop_name' => "jM6r3",
                'shop_id' => "5d4bd827-979e-4af6-b434-cddd21752bbc",
                'lower_limit_amount' => 9003,
                'upper_limit_amount' => 7303,
                'is_disabled' => TRUE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills13()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'page' => 1472,
                'per_page' => 4893,
                'bill_id' => "QyuFePe1",
                'private_money_id' => "f5be71e2-e415-4c87-a4df-a78a7ba0e099",
                'organization_code' => "--v9QUcWL-8O-3o-q5-I",
                'description' => "3vRVXGOFVfx8FrjqoA5E4KYCphXNJtgj4ic1Op9HqPn1KxYeayAuIYuThxbz5j4cYeTsOXVH6PySc1Y3BYCjC5cml4lO7",
                'created_from' => "2020-10-23T16:34:53.000000+09:00",
                'created_to' => "2022-05-08T05:48:48.000000+09:00",
                'shop_name' => "XglfbnYtHnNg1NkaSDjP6uDVtUyLVbXorzMg2DQBwv6196UaWLP9gcHImqqB0",
                'shop_id' => "1ffc0612-617d-4c1e-999d-f43ece07ac18",
                'lower_limit_amount' => 6623,
                'upper_limit_amount' => 2033,
                'is_disabled' => TRUE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
