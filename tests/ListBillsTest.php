<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class ListBills extends TestCase
{
    public function testListBills0()
    {
        $client = $this->newClient();
        $request = new Request\ListBills();
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills1()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'is_disabled' => TRUE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills2()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'upper_limit_amount' => 1233,
                'is_disabled' => TRUE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills3()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'lower_limit_amount' => 101,
                'upper_limit_amount' => 1810,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills4()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'shop_id' => "2094a0df-0e4d-4313-ab91-3f6528c54b52",
                'lower_limit_amount' => 8681,
                'upper_limit_amount' => 4675,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills5()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'shop_name' => "coRDXTsPVJwnN2rF93lIuvSHta7GSQZVxz1KR894lZ9VSDqzw1PIiG1hENZ6vYGmJyJOrpsfnMGyPjhGHLYlN44j48kFu0j5sXKpCCUYwKr7tPXqAbYyBisKhueiIE2AygZQaqD8Cj3PoWn0EwPPPiAppJUkgpGKZxfGv",
                'shop_id' => "6da09200-3718-40b7-a63b-8b32509a5622",
                'lower_limit_amount' => 5605,
                'upper_limit_amount' => 7782,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills6()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'created_to' => "2023-05-13T22:48:44.000000+09:00",
                'shop_name' => "BuoE7oCizs2uOz8wg5GLOa91kCWJsTkX6nrFPEkmljb7uVlMngVZAUee2SyG4ZBAk0UkxRecrVYFxbhExkdFnrXV6q7bhaTptheWGcXMOziBKEvx7XRuXWBEpavpBrb9pesZ5eME1Mr5ROBJaf5XSRYDNdcplI5RLNThD9q0qaszdVn",
                'shop_id' => "03cefe83-b62d-45e8-ae96-f65b88d49e5a",
                'lower_limit_amount' => 4729,
                'upper_limit_amount' => 3712,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills7()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'created_from' => "2023-05-13T06:26:29.000000+09:00",
                'created_to' => "2020-05-15T16:57:33.000000+09:00",
                'shop_name' => "iwZRNWdnCofniiwdfeqfebfkNDm3oF2ataT9OfhqZxb7b4iykxxtmifABAuHo2oHHwZtwKC8PkyRJ5ceIUWl47QI0GC03gYQhbfhoVOPkrFiHKfy47LIt",
                'shop_id' => "04f0e498-cc9c-4d62-a6b6-c9d88803f634",
                'lower_limit_amount' => 6446,
                'upper_limit_amount' => 4694,
                'is_disabled' => TRUE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills8()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'description' => "QowHns1mzUp0aXAc0BCldlcXLE2nOoB0vBdcUvYdiluu9JduxjpixIU7IVf38UEiWiADNzpuMzZinePNL4H03UBRk3YZDcnHcGV2Eb0w9BEQ09gLVdbciiE8t8GIV0hcQdRP1L7XsUnuC3rlKHOlgLgGSAK4CVnt",
                'created_from' => "2021-10-14T02:22:26.000000+09:00",
                'created_to' => "2022-11-19T15:30:36.000000+09:00",
                'shop_name' => "vycDFRdT1noFbdLqDAPaRkYrJF1mE1eSKUkKsnlVtHjyCIXkY8oot3LmcGMHuBLU1XObgsGBvMKyiANRk1iVPR82kaW0N51uohQXRLiYxqdf2FEFHz6oq2sbhaYLwMKAeP33VXIJ2jyUenRGIISPjnPqHL85BvlvPJZSvKeAsNDZw8WCA39ayjalHDaKGIh4LPWzKlWLZSyYC0i4VvWDcTAWCSRztH88kN9oH9uMSuZFo",
                'shop_id' => "b2d23dc4-2abe-4c8b-8a85-5c85c3ff666e",
                'lower_limit_amount' => 8444,
                'upper_limit_amount' => 5321,
                'is_disabled' => TRUE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills9()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'organization_code' => "--",
                'description' => "jECJkl35ajecnNxLmQpE2gnV4atvHUZybrT5IwlSgRvgwaMfz4V2UawZBGipNwSefuRv4MjrfYE",
                'created_from' => "2022-12-20T13:48:42.000000+09:00",
                'created_to' => "2020-11-06T00:41:15.000000+09:00",
                'shop_name' => "URhY624dPTZJCDM93mO3JOCZaNHcr2MNti4q4Ih6Zz9TvY58HRlLQstyZ4RDyx8HvRPa1HluwcjmQzBfuQZUDwaQEQuavMP2ZIpNldbNCUL2snM86pCX7Shz86PF8acZSdNDnuezhnx",
                'shop_id' => "3bfb11e1-34e2-4fab-9a58-312af29293c4",
                'lower_limit_amount' => 8645,
                'upper_limit_amount' => 1556,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills10()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'private_money_id' => "8e65acd1-e66e-4d6c-b4c0-e322e73d1b76",
                'organization_code' => "G-zk-62be7s1tkAoX---Y1Hs-",
                'description' => "dC4Ui3RYHNCEfUVshwF0TcPmlbS5z9PcXwZaXLd5ZVKRB4D291ufqSasid118dLiq5sambxzGsxH4ezIX3bP7bOTNoAkl01gWhk4499zcP3RU5fs8dlYRQH",
                'created_from' => "2023-05-04T05:03:43.000000+09:00",
                'created_to' => "2020-01-17T00:30:28.000000+09:00",
                'shop_name' => "7VJ7N6tSK9srEAZopgTsoYb",
                'shop_id' => "405f8db0-8f58-41b9-ae23-e337ec4b7ef1",
                'lower_limit_amount' => 245,
                'upper_limit_amount' => 5796,
                'is_disabled' => TRUE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills11()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'bill_id' => "G",
                'private_money_id' => "33d7ece0-620e-47d0-b8a5-343c4da21738",
                'organization_code' => "-Z2cYi1H74----Zn0-",
                'description' => "fgrpgecUFAgluk9S3X3em1vwlOGieEQvPnM41yHkDV3Wr7ifXXQXMO6IDOICqfKaqKav1bOiU4a486fWouenSeGJuFxJDSERPQ44vjuW9SnvNYhcIHducu5EqU2KR7NzkiGYsa6mD",
                'created_from' => "2021-04-17T09:10:58.000000+09:00",
                'created_to' => "2020-11-05T10:10:29.000000+09:00",
                'shop_name' => "RWG9rEhdWOKsRC93RMEddpUyvEpSi6SIIHH2Pteqn9c48lf0SlhJn468PymuvbRvfFqPfynrjcQ9JWVf1PoVYbaHJbixv1WrvyjpoxaKAVnqOHGUn5iRgL4A4Z",
                'shop_id' => "b5f2cd5f-2135-493c-9add-b4a7e1aa1de4",
                'lower_limit_amount' => 8472,
                'upper_limit_amount' => 3744,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills12()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'per_page' => 1813,
                'bill_id' => "TR0ztRx",
                'private_money_id' => "b7dcd332-32d0-4dcc-88a9-771c42a9f37d",
                'organization_code' => "5VY",
                'description' => "BnhaEXAyIyaay2Syor3HyxNBH1CnACjKH1DdYiF8IztKeOSqjRQGitjxX4zx1YTGzACUOEkDzfpISMlgsgirr9kGjU18VufdqvafACSJ0Ljzyu4i0lnPjZT3OHrOeCqPlHfmF4U5a9Nhx2UqiDLG1RGl9Bv3Ayyo",
                'created_from' => "2020-12-28T02:38:00.000000+09:00",
                'created_to' => "2020-09-11T03:06:50.000000+09:00",
                'shop_name' => "oq0jAqBuePyrr8V2GO97hPpZXOPrgZ5qwflcYYIoUcAew1GGeXdneaWItVBtSv4swUJGYTHferlbDdZIOLS7ZBU4DJ3rKLRUer8QIJ1pW9y0ClIoWDzzZIzMd9T5AhgGU16mPKVlopPtJHqj4FrU0GATxweKVDBhar7TIWshlZZvb6weD7doNRdOVifA9xsWDU1KcZfZT0N13EiTbZ3qKh2Cfuj0CZj",
                'shop_id' => "a75207dd-32f1-4469-9e9f-4be893c8268f",
                'lower_limit_amount' => 9377,
                'upper_limit_amount' => 7072,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills13()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'page' => 2938,
                'per_page' => 775,
                'bill_id' => "8ZhT",
                'private_money_id' => "d8307ed0-e4af-44f0-93bd-aa26fb97a0be",
                'organization_code' => "q046Y-8A-mcO787F",
                'description' => "qUk78JvmSjnPgsoEmgTZ1V5ev1iTuAgGUOTQFtlnilDhThMx8K7Pdt6LlXogE3PADm6rXD0fWogbyOzGXITgfFno8OSbD1Wd1mK",
                'created_from' => "2020-01-14T14:06:21.000000+09:00",
                'created_to' => "2021-08-13T12:30:30.000000+09:00",
                'shop_name' => "AP68p94mD9XU09Q6LuIs2iWPXZeAxVOUjGCIinXD4apQotgIEE",
                'shop_id' => "a334186f-abe6-4594-8787-4afee43af5a6",
                'lower_limit_amount' => 8054,
                'upper_limit_amount' => 9149,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
