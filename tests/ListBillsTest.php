<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class ListBills extends TestCase
{
    public function testListBills0()
    {
        $client = $this->newClient();
        $request = new Request\ListBills();
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills1()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills2()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'upper_limit_amount' => 1867,
                'is_disabled' => TRUE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills3()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'lower_limit_amount' => 5251,
                'upper_limit_amount' => 6182,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills4()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'shop_id' => "201f40fc-3261-4532-b8ad-5dfe8d66d31c",
                'lower_limit_amount' => 4035,
                'upper_limit_amount' => 1530,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills5()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'shop_name' => "gJta6hj",
                'shop_id' => "985423f3-68c3-44c7-a628-2fd93e8a96c7",
                'lower_limit_amount' => 4097,
                'upper_limit_amount' => 5711,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills6()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'created_to' => "2021-08-31T12:52:35.000000+09:00",
                'shop_name' => "XQTgvgOVARWbRyxVzTeG2WRZlUDUAlMdCvkQ3iBffH0M23nZgKYMoNiL5cB1nRO2A3aNKyvRJjQmlMm9KOZgtOxZgUdtMV9JCy75V1LIsqIQbnET2KKWfj4P2O45SEqyiEFKEigTm1oWH6aqnYK90EjJlwASjSQLXMbfY3jnzIFVdnvaU3FJtHR3zSput5vucpQLQ1bdvfO5hVcvN6tktaTTgAeAIAs",
                'shop_id' => "ab09a6bc-b709-4087-936d-c6007f8e7da0",
                'lower_limit_amount' => 780,
                'upper_limit_amount' => 4872,
                'is_disabled' => TRUE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills7()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'created_from' => "2021-07-16T07:16:01.000000+09:00",
                'created_to' => "2021-09-07T04:22:32.000000+09:00",
                'shop_name' => "vY751KYoREWbgSjv6Eg8s8CrGgqcGwfPxiagif7xV6s74wch9iUpqAReFj2a2hb6whQkcIF8gTMB7gRnueeh5KvCeBmm8j03HtPXHSdl27yjYYQl6ZNgCsqneWodKxDYMBoRHpB",
                'shop_id' => "0a02ef6a-7fe6-4d88-9ba3-17d51cedbe5c",
                'lower_limit_amount' => 9119,
                'upper_limit_amount' => 2684,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills8()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'description' => "GFE3fhAkYnvug8trzxbULad6jq3mJn85HaO3uMGwqfJcxY30xUGE7sWqnIVkjLhaWBWquJGlcpxxO4HqYu1MVpsu5sIbK6d8nmUu0QFyxeYr6s5784cwLTlUW",
                'created_from' => "2022-04-24T13:30:41.000000+09:00",
                'created_to' => "2022-07-06T00:32:21.000000+09:00",
                'shop_name' => "RgzDwhmwB6CqC5F0o7ZGmBPgFLnFYx0RS5NYY649mbPZBnoAVMQjpbdajbmqDFEnDEW8hGhyZ6iQGal8AcRl5OOKlQtes20egYMMgRNjkH",
                'shop_id' => "9c65f07c-064e-4d6a-ac78-645336502d70",
                'lower_limit_amount' => 5038,
                'upper_limit_amount' => 4158,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills9()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'organization_code' => "5-x4MR3oMz-4EN-E-a4w-F-ZMq",
                'description' => "O5Y9PGKnnRi5NGsEXOC0YONo7JgyzfOb24Lu5TLK6zYHC33hnjKyfX4fyGo5d0TAZ1WuG5juKvG3x4oAxwTa8itzXXOG2SATqoWsBUUXKAv8PF5tZbVUAlGEbnrNOxWaWeZP98XRh2jOftVccg2cckwPtfN3yT",
                'created_from' => "2022-01-31T17:54:07.000000+09:00",
                'created_to' => "2023-01-30T16:50:09.000000+09:00",
                'shop_name' => "T5Vh2N0UyvUNuXBsaN54X4JMFdl8ts1yu3waAxoqn4506wCKFuYbGZgoNZz8E8gDXP5IdAXKHiGIqNmjjedcRSd7iNFu5VRlHL0XoQUJAJoL2WnuOoU0XmNd7K7",
                'shop_id' => "ebf72dca-10de-4dea-8426-16ff6a4589be",
                'lower_limit_amount' => 8323,
                'upper_limit_amount' => 7572,
                'is_disabled' => TRUE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills10()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'private_money_id' => "3a5ba80b-671f-4bfc-99d2-c3e5398b833b",
                'organization_code' => "gk-T-S-Yz1A-4h-41c-",
                'description' => "EW22FERQT2QMexZnFv2k6AW2dVUM",
                'created_from' => "2020-09-12T15:22:29.000000+09:00",
                'created_to' => "2023-06-02T04:47:32.000000+09:00",
                'shop_name' => "CG8dACvahylhnNcQwfn2l7DrGkfQhfxflDs9iVTdDnfhyKAyTEb9lcdBgiluGCtEK2haiyU4fDzh8h2nsOa9RwU6RLKdWpcBnq9yNROGTieAJbhwiq4MCvCyjcs9qSVGqQAKy9pjKTj3XXKWvvDbH664ZFX5F4Layo2qaRwa8lzTNFP0BFbVvkmsaBhGW5Wz34di5TAfgh0TKiU9poZ4I6svwGSzXld3",
                'shop_id' => "b84b861e-8d22-4b06-a538-f286df202428",
                'lower_limit_amount' => 844,
                'upper_limit_amount' => 6237,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills11()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'bill_id' => "sC9s",
                'private_money_id' => "bf9503c4-6c2f-43a5-9b7d-f8981cca1fc4",
                'organization_code' => "-5a-345K--1a",
                'description' => "lwpws5CGvsdCOIgk47nRnWfNoH4O4bGxKAmcLfpgZ0LsElkiYeiBjxl7aYPdm9lOgYdAuVcH6YJaCtdacDfgxJs0CsPmVMKKlVy0hW7mXBY0UtntxHQj1vp0JwsIw741uKRj9cE1kuIFB1ztO2GaXhDJEFOEQt0wo6KjTPTP8YB9yKOHSC56Ki4ZygY754Q924jz7",
                'created_from' => "2021-09-11T09:07:44.000000+09:00",
                'created_to' => "2020-12-16T00:26:09.000000+09:00",
                'shop_name' => "bOBR00uMCjIaZkq1tbQKpFaEgmJZCvEqrgrzwP5xrBNCglg44zwHpLAfs5bDPYNId1rL6QTVBuOyxzU1YfBzzo9LNjqqewhKM",
                'shop_id' => "ab877462-912b-47b0-83e0-1e5d94c0147c",
                'lower_limit_amount' => 2393,
                'upper_limit_amount' => 711,
                'is_disabled' => TRUE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills12()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'per_page' => 5518,
                'bill_id' => "0RaTPqloH",
                'private_money_id' => "b5df377f-9611-45d5-b09f-cc280e6b34f5",
                'organization_code' => "jgdw-b3",
                'description' => "wrXzFtuFCbqUhypX7FmvJD6wMn1NWOY467F3DyTbiS1fE4XpStkZTV6Qc48yvp5zcEYMnD9bOr76MY2vjSxtCdZPHP28vVB5shEVrhNXANVvuXgJuoDwDGO4emw5ciG",
                'created_from' => "2022-08-18T16:55:57.000000+09:00",
                'created_to' => "2023-01-14T22:56:43.000000+09:00",
                'shop_name' => "xsfqUWkrbPBEyozg3i6zVyIZyLzIaSAEam9pXGfGu8UwJw4clWC9a8kaRRCgV",
                'shop_id' => "dc328ff4-9dd4-4d36-a1a8-137f6ccf33b2",
                'lower_limit_amount' => 9141,
                'upper_limit_amount' => 3697,
                'is_disabled' => FALSE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListBills13()
    {
        $client = $this->newClient();
        $request = new Request\ListBills(
            [
                'page' => 2998,
                'per_page' => 4812,
                'bill_id' => "iZYFVaF",
                'private_money_id' => "2185d70a-ef63-4f15-84fe-9534138afe3b",
                'organization_code' => "kJ8-P5vD-VRt-8Nh-93-",
                'description' => "3XXFc0uKT4V5j9wWAbNDJ0tborNHQMKURyVIsrQD8FMksU20gzllvOHGni8HkNjP7lPXF5F2GMbXAUmJpey7UUsjsVOtjxJRdz35L4y5ebAvcsRmCFG7ZCQJ8tYzX6ZTQKt9HlFGF551mnvfdwSSdjSpZlSQSbrVDZqSOWrjbTJDATLCSou",
                'created_from' => "2022-04-17T19:29:08.000000+09:00",
                'created_to' => "2021-01-16T07:30:14.000000+09:00",
                'shop_name' => "XNQioUdQxlShDCm1CKViw60UeNqWcjAxL1GKVeQHZuGPEygaV10NXTv0eho5YP94o80H0vX1akvR6MY7kBuXm2wLBzyyncr3D5S5Ez4rlV",
                'shop_id' => "cd81c8bf-b2a2-422f-95a8-2f61f4aafdb6",
                'lower_limit_amount' => 4831,
                'upper_limit_amount' => 2834,
                'is_disabled' => TRUE
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
