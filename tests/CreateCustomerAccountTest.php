<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateCustomerAccount extends TestCase
{
    public function testCreateCustomerAccount0()
    {
        $client = $this->newClient();
        $request = new Request\CreateCustomerAccount(
            "47c94e7e-68c8-4ba9-af94-ce62e4620ab8"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCustomerAccount1()
    {
        $client = $this->newClient();
        $request = new Request\CreateCustomerAccount(
            "47c94e7e-68c8-4ba9-af94-ce62e4620ab8",
            [
                'external_id' => "TwhxD5QHhkZKjcmSrouERjQTug0bq1Vx9j"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCustomerAccount2()
    {
        $client = $this->newClient();
        $request = new Request\CreateCustomerAccount(
            "47c94e7e-68c8-4ba9-af94-ce62e4620ab8",
            [
                'account_name' => "SXI1Srly73xHxUBcknLOxhIMo9FzDj31LOww7pPUbTIEbU7t9ak4tLMhSCN1dLufqIaq9VPZZcaxGHdqDxpHv2rrXeDHksE3egtrpFiCcoIENv1FNXfWHeuzkZQpRI7lkkRZic2G2ZBJ7VxnuYxQLXM3ULhLaDQIZPLWOSTxiuGfyEnhDlZe306zyRiggMAbDct2Tc9Ew4vhdkl2CqDs2FpSU7DRyfsVjoTvIr0yy6ZUZKy3eL",
                'external_id' => "uUBKBEThM4qULaICy8wljqT77vIZIOwmTsNLjmoa"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCustomerAccount3()
    {
        $client = $this->newClient();
        $request = new Request\CreateCustomerAccount(
            "47c94e7e-68c8-4ba9-af94-ce62e4620ab8",
            [
                'user_name' => "9EjEZqCNPFkEA1bTr9cUa91Tf5GZnSgQ3EubsJLK8Um6mUpnjjvpN8q7uPu2SSxrWQeXIsIjuZV6cnJ",
                'account_name' => "733A244SAHQtqNgoC9MqFpCNOr0YEP9Dnz0l7KOAPeTBymMiW",
                'external_id' => "nXdi4LMgaLzot"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
