<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateCustomerAccount extends TestCase
{
    public function testCreateCustomerAccount0()
    {
        $client = $this->newClient();
        $request = new Request\CreateCustomerAccount(
            "d8b7c7dd-5a73-4064-a349-76b83ada86d0"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCustomerAccount1()
    {
        $client = $this->newClient();
        $request = new Request\CreateCustomerAccount(
            "d8b7c7dd-5a73-4064-a349-76b83ada86d0",
            [
                'external_id' => "DT08v74BI2VPe8qds4I2MEA4gJjHt"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCustomerAccount2()
    {
        $client = $this->newClient();
        $request = new Request\CreateCustomerAccount(
            "d8b7c7dd-5a73-4064-a349-76b83ada86d0",
            [
                'account_name' => "d0BbRBDVeSYn8uvrsJwmXqAKgViXf2eJim1RdN4XCU5aG5xcoPdJ6AA1qyCCpsvposWm2l41CxysbDiZ7jcWk9v3rFUsJH0jVcUr5HWJNhtXiYy5phVTxCRdiZLpJEvBgW4klcH2ny0NUmrDOqBFYNnMLa09HShYwuBZNHwHLuF2sQorRpPsZtE76w8OXjsudRpCiPYz",
                'external_id' => "ozDVed5HY97wwuPUMWYXfSOYkBqdKQHMj0"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCustomerAccount3()
    {
        $client = $this->newClient();
        $request = new Request\CreateCustomerAccount(
            "d8b7c7dd-5a73-4064-a349-76b83ada86d0",
            [
                'user_name' => "xj5uvmLIH1QsPN0PjhwTGf2mN1F2zk6ohGQXXOWGMzSPyYX4Gz7T7Okc8H49W9k1eK7Preq8n0M5cjWnymvcVzayJGxdqzoO9uXS4XBDN0o0Mu7ieKvzIZjqj6ciQDbUqTLqf5I0WmQsV3ZqnN3F5j5hei5eenuWOLqxpAqKhr1PiatJCFbxFePHe8f",
                'account_name' => "p7pWtBDbGEkzsRtHz3ymmInXbIX7AIIYKuFyd9WkOS8uJqFVIWZBtq3jnfd5KTcWHD2AadOYe9kazoxyRuU9Z8Q2HvADi2W3bSFZd8xGhm9VbcZgOZ4yYRMkHKY2yx9gLKmBFLvqK55BnlHTaFsTxQXtMZL6XWgDmeak1eoliBFeYUr35I7ta0sw71srL0z9GEG3PXvnl3BKA",
                'external_id' => "PvmXPfih5KNNjURd2N8Uca7AszKQRtnK9OFQ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
