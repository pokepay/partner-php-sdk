<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateCustomerAccount extends TestCase
{
    public function testCreateCustomerAccount0()
    {
        $client = $this->newClient();
        $request = new Request\CreateCustomerAccount(
            "5d0d79eb-130a-47d1-bde5-7e4fcf2bfc2f"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCustomerAccount1()
    {
        $client = $this->newClient();
        $request = new Request\CreateCustomerAccount(
            "5d0d79eb-130a-47d1-bde5-7e4fcf2bfc2f",
            [
                'external_id' => "PrTAo5HhYx5jCaGbLEuJCfBO4W1IV2UViZVHRWPkd"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCustomerAccount2()
    {
        $client = $this->newClient();
        $request = new Request\CreateCustomerAccount(
            "5d0d79eb-130a-47d1-bde5-7e4fcf2bfc2f",
            [
                'account_name' => "3cWX27LHxVCRXJ7RR9vhNIu31vkGd5KFMjSHWQRA9E535lViSyzzCHjVEEg0SpYDFFDY1quxNkSS1vmCLOUldc17zrM7imjJVYnMFmZVKbnQskJ4SJWYdnxMjsH9rlpcWw1Vg5A3jIY5TVDn7VAyGhf1a2i4Xb006Y5FN9bW9vksFBm8sMwbh1WFtpEmCrFqNwdLZ15QmFMvlNaa2goLZ5E9OEvOUIiBwbJ5GuqfgOe",
                'external_id' => "nVnbOf1mceXbMKgmiS2lNCj0co"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCustomerAccount3()
    {
        $client = $this->newClient();
        $request = new Request\CreateCustomerAccount(
            "5d0d79eb-130a-47d1-bde5-7e4fcf2bfc2f",
            [
                'user_name' => "TfFCchnpKA",
                'account_name' => "XXDxQv4bOJ9FCs7r9SIiPLZxhYcpGO5FAV5Tmz4fnzfWLRafbjHHiTlinfVLWJIyGq0eGZ3LjtgQn48RP8UioFkI4pFJl8",
                'external_id' => "49K0SiRVrDmJ5TPkLuNgnu18c0Kn6PzJQm"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
