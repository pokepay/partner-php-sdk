<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateCustomerAccount extends TestCase
{
    public function testCreateCustomerAccount0()
    {
        $client = $this->newClient();
        $request = new Request\CreateCustomerAccount(
            "414d2aa6-58f1-4f73-8b5b-bce5db6bcbf6"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCustomerAccount1()
    {
        $client = $this->newClient();
        $request = new Request\CreateCustomerAccount(
            "414d2aa6-58f1-4f73-8b5b-bce5db6bcbf6",
            [
                'external_id' => "wf74MOSivcFUZJvXte"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCustomerAccount2()
    {
        $client = $this->newClient();
        $request = new Request\CreateCustomerAccount(
            "414d2aa6-58f1-4f73-8b5b-bce5db6bcbf6",
            [
                'account_name' => "ulqtxcYPQ0C4rMvLnpp9poLt7r3tpLHaahFVpBAaqZZmb79K2azh50GUUAov2j",
                'external_id' => "jqeaLs49pNlR9yVA"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCustomerAccount3()
    {
        $client = $this->newClient();
        $request = new Request\CreateCustomerAccount(
            "414d2aa6-58f1-4f73-8b5b-bce5db6bcbf6",
            [
                'user_name' => "dkEfqHrCywPVUfZnshwTW3MV1IZpcqHOuhvNM7eP7gDM3KZGZESCUZ5zOe8mHPUAdCKqvPl04PwJDTFhCMRv5OzIXKC0MIu755oVQ3qafe",
                'account_name' => "C3qcgx0xN1NHs9C",
                'external_id' => "KMzyjcgFSAlteR"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
