<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateCustomerAccount extends TestCase
{
    public function testCreateCustomerAccount0()
    {
        $client = $this->newClient();
        $request = new Request\CreateCustomerAccount(
            "82be6cf0-cd1b-4183-bbf6-cdce4367f0ca"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCustomerAccount1()
    {
        $client = $this->newClient();
        $request = new Request\CreateCustomerAccount(
            "82be6cf0-cd1b-4183-bbf6-cdce4367f0ca",
            [
                'external_id' => "V5mmEQch5NQk0F5TmVHlBy6y8vXJQBNnOgAchIQSDHeynj5J"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCustomerAccount2()
    {
        $client = $this->newClient();
        $request = new Request\CreateCustomerAccount(
            "82be6cf0-cd1b-4183-bbf6-cdce4367f0ca",
            [
                'account_name' => "P5D2gqco1BeGgumOgO01br7BdaU7JWKMswc4lp8yTKZWPg5gj3zsQ7X5oAseEcKA93MtdhdLTNBcIJJ96ZeSKzy4E9wTzwz1hLdrZdxZjwlM0fmGVKTnzW1cygBuu9R9z8XpQozpIE2MwggYCfGIIJpRIFBYUL1bGwQrrpbLA3d7KAfj3GgNTl6y515kpoz8",
                'external_id' => "Xcivqw3jFEwJXrg8BuNXbQ3DNThOKlZSA8"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCustomerAccount3()
    {
        $client = $this->newClient();
        $request = new Request\CreateCustomerAccount(
            "82be6cf0-cd1b-4183-bbf6-cdce4367f0ca",
            [
                'user_name' => "XNgEoYYii46QjFsn6NBFYPfPAPZeqyyWLt89mX1TGTwh4USjy81TtVw72PPIKtGZa0lcYuo6DyPumzoGJfahtayHpEPlkfCUVDwGe20yfjCy1B9CwOYBL9Yv0vtHgEO8gTGMXr8gxgprKV4HKRreA2ygdq9qqmgSywo6AZiFHgIEVjP8Y34o79V0OcVaTyOVxcn8CyIdGCmdHli",
                'account_name' => "sZWkLN0YrneAd36C3TW43kIUkpHvSrt9pSudk30tsbbebdq0gYQG73ROv20sdXbR4Fl2zDvgkwmT1Xwzg9baNXYWgAzONdgwaEyvytRzsU2TveLqCzDxwrEv0FWphPP",
                'external_id' => "DA19e9GmdQ1CedHRHwZz64RjT2jq97sW8BtCmJ6cA"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
