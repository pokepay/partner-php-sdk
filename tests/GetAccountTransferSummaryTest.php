<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class GetAccountTransferSummary extends TestCase
{
    public function testGetAccountTransferSummary0()
    {
        $client = $this->newClient();
        $request = new Request\GetAccountTransferSummary(
            "429cd902-9960-41b5-b4af-281f21de9444"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetAccountTransferSummary1()
    {
        $client = $this->newClient();
        $request = new Request\GetAccountTransferSummary(
            "429cd902-9960-41b5-b4af-281f21de9444",
            [
                'transfer_types' => ["exchange-inflow"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetAccountTransferSummary2()
    {
        $client = $this->newClient();
        $request = new Request\GetAccountTransferSummary(
            "429cd902-9960-41b5-b4af-281f21de9444",
            [
                'to' => "2020-12-12T06:39:28.000000+09:00",
                'transfer_types' => ["payment"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetAccountTransferSummary3()
    {
        $client = $this->newClient();
        $request = new Request\GetAccountTransferSummary(
            "429cd902-9960-41b5-b4af-281f21de9444",
            [
                'from' => "2022-05-09T12:15:44.000000+09:00",
                'to' => "2022-02-18T02:38:45.000000+09:00",
                'transfer_types' => ["use-coupon", "refund-exchange-inflow", "exchange-inflow", "topup", "refund-exchange-outflow", "refund-topup", "campaign-topup", "refund-coupon", "refund-campaign", "payment"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
