<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateBank extends TestCase
{
    public function testCreateBank0()
    {
        $client = $this->newClient();
        $request = new Request\CreateBank(
            "528e1122-9e40-4382-82b2-97dc79d33e2f",
            "9efd5351-7117-4f8f-8a50-b551cbeb2539",
            "Y2Rpsj0heI1pcWBx1T31cQtfbPC",
            "ATbfETgM8KooCtS8z1fc4bmpdj"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateBank1()
    {
        $client = $this->newClient();
        $request = new Request\CreateBank(
            "528e1122-9e40-4382-82b2-97dc79d33e2f",
            "9efd5351-7117-4f8f-8a50-b551cbeb2539",
            "Y2Rpsj0heI1pcWBx1T31cQtfbPC",
            "ATbfETgM8KooCtS8z1fc4bmpdj",
            [
                'birthdate' => "KCTf"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateBank2()
    {
        $client = $this->newClient();
        $request = new Request\CreateBank(
            "528e1122-9e40-4382-82b2-97dc79d33e2f",
            "9efd5351-7117-4f8f-8a50-b551cbeb2539",
            "Y2Rpsj0heI1pcWBx1T31cQtfbPC",
            "ATbfETgM8KooCtS8z1fc4bmpdj",
            [
                'email' => "j1GK9RSuRp@80JI.com",
                'birthdate' => "G"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
