<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateBank extends TestCase
{
    public function testCreateBank0()
    {
        $client = $this->newClient();
        $request = new Request\CreateBank(
            "e33bb56d-4d06-496d-806d-1d4740086498",
            "beaebe56-8ece-4f5a-a19e-02928617948d",
            "4ojpzpaL4FnJp6zyDadJ1sStlggTI7YOMAb9dk5tlMTtf3giQXXA63AYSJ5B7Hb2l230txEdY",
            "G"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateBank1()
    {
        $client = $this->newClient();
        $request = new Request\CreateBank(
            "e33bb56d-4d06-496d-806d-1d4740086498",
            "beaebe56-8ece-4f5a-a19e-02928617948d",
            "4ojpzpaL4FnJp6zyDadJ1sStlggTI7YOMAb9dk5tlMTtf3giQXXA63AYSJ5B7Hb2l230txEdY",
            "G",
            [
                'birthdate' => "4WZfW"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateBank2()
    {
        $client = $this->newClient();
        $request = new Request\CreateBank(
            "e33bb56d-4d06-496d-806d-1d4740086498",
            "beaebe56-8ece-4f5a-a19e-02928617948d",
            "4ojpzpaL4FnJp6zyDadJ1sStlggTI7YOMAb9dk5tlMTtf3giQXXA63AYSJ5B7Hb2l230txEdY",
            "G",
            [
                'email' => "e7prIpg4qh@XSxK.com",
                'birthdate' => "UW"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
