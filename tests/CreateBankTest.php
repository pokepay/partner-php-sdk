<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateBank extends TestCase
{
    public function testCreateBank0()
    {
        $client = $this->newClient();
        $request = new Request\CreateBank(
            "e2613e4d-b0d5-45a8-8ae7-edc30e6aa1f6",
            "2378b859-80a4-432e-bdd5-891eef7af850",
            "GWSN7HO67h2N1MrWZJwfYONwKjp6exIycidChnfNnkHcwDk7CWjiZHQs9AMN2MXYNQzpQCMvjaFkDZjOgMh9Lnb3Z1LET8ZBSrnWolKqdc",
            "PkcymgMZ3aM7"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateBank1()
    {
        $client = $this->newClient();
        $request = new Request\CreateBank(
            "e2613e4d-b0d5-45a8-8ae7-edc30e6aa1f6",
            "2378b859-80a4-432e-bdd5-891eef7af850",
            "GWSN7HO67h2N1MrWZJwfYONwKjp6exIycidChnfNnkHcwDk7CWjiZHQs9AMN2MXYNQzpQCMvjaFkDZjOgMh9Lnb3Z1LET8ZBSrnWolKqdc",
            "PkcymgMZ3aM7",
            [
                'birthdate' => "qG1B"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateBank2()
    {
        $client = $this->newClient();
        $request = new Request\CreateBank(
            "e2613e4d-b0d5-45a8-8ae7-edc30e6aa1f6",
            "2378b859-80a4-432e-bdd5-891eef7af850",
            "GWSN7HO67h2N1MrWZJwfYONwKjp6exIycidChnfNnkHcwDk7CWjiZHQs9AMN2MXYNQzpQCMvjaFkDZjOgMh9Lnb3Z1LET8ZBSrnWolKqdc",
            "PkcymgMZ3aM7",
            [
                'email' => "ZoNH7g1pev@zs3l.com",
                'birthdate' => "RQ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
