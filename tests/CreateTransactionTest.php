<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTransaction extends TestCase
{
    public function testCreateTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "04799551-57d2-44c1-99d0-935f0ba457f9",
            "89296511-b3fe-4c6d-a552-178285397c97",
            "a8ee8466-512e-41a8-8681-5d4ff1a02148"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "04799551-57d2-44c1-99d0-935f0ba457f9",
            "89296511-b3fe-4c6d-a552-178285397c97",
            "a8ee8466-512e-41a8-8681-5d4ff1a02148",
            [
                'description' => "sPVjb9UC"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "04799551-57d2-44c1-99d0-935f0ba457f9",
            "89296511-b3fe-4c6d-a552-178285397c97",
            "a8ee8466-512e-41a8-8681-5d4ff1a02148",
            [
                'point_expires_at' => "2020-09-01T03:43:30.000000+09:00",
                'description' => "PcYx5YXiYOW0oa5SUOR88F7Ubd6EIlmfbIWBjq1h3aM3MFSn6Z9Xp0dYAIwKPnm62HiK775FUjJKUwWsCFULHC5xu9xwKzEEFrv0p5VC2XFSxIKMXYPxeKc6v3uyZaCEMZ2Ju8UbXHSU9E0Qlg3ge"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "04799551-57d2-44c1-99d0-935f0ba457f9",
            "89296511-b3fe-4c6d-a552-178285397c97",
            "a8ee8466-512e-41a8-8681-5d4ff1a02148",
            [
                'point_amount' => 3554,
                'point_expires_at' => "2021-12-19T11:45:32.000000+09:00",
                'description' => "vAwjzG8UYapgA4DXNtjsg9PgQ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransaction4()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "04799551-57d2-44c1-99d0-935f0ba457f9",
            "89296511-b3fe-4c6d-a552-178285397c97",
            "a8ee8466-512e-41a8-8681-5d4ff1a02148",
            [
                'money_amount' => 2716,
                'point_amount' => 8016,
                'point_expires_at' => "2020-04-07T19:42:20.000000+09:00",
                'description' => "n4dGIxCAVXu8wPFdMI0g8RX9GwTm1EaeDH0runisLV"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
