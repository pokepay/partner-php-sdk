<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTransaction extends TestCase
{
    public function testCreateTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "8e25c7d9-f464-4db9-8626-69aa96cf69d4",
            "fe189182-20d9-4bcc-9bb0-b61465bf9ee2",
            "78fd62fb-1a3c-4a6b-83ab-ae15c3d05781"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "8e25c7d9-f464-4db9-8626-69aa96cf69d4",
            "fe189182-20d9-4bcc-9bb0-b61465bf9ee2",
            "78fd62fb-1a3c-4a6b-83ab-ae15c3d05781",
            [
                'description' => "VqSRIdac4BtBwC2bbOKrqEvtHSmLf6gZqSXb2Lr55RtyiRtGJ1HUxolj1KPz6vAaVd"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "8e25c7d9-f464-4db9-8626-69aa96cf69d4",
            "fe189182-20d9-4bcc-9bb0-b61465bf9ee2",
            "78fd62fb-1a3c-4a6b-83ab-ae15c3d05781",
            [
                'point_expires_at' => "2019-06-30T08:46:10.000000+09:00",
                'description' => "g4zOt2LPb0nLBvCfu5QWsdUnRrH9KHVuXFGKt4lw9lRVMCAhIxweHf4mhVFw56RKD"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "8e25c7d9-f464-4db9-8626-69aa96cf69d4",
            "fe189182-20d9-4bcc-9bb0-b61465bf9ee2",
            "78fd62fb-1a3c-4a6b-83ab-ae15c3d05781",
            [
                'point_amount' => 4444,
                'point_expires_at' => "2019-07-13T22:26:43.000000+09:00",
                'description' => "CYdf"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransaction4()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "8e25c7d9-f464-4db9-8626-69aa96cf69d4",
            "fe189182-20d9-4bcc-9bb0-b61465bf9ee2",
            "78fd62fb-1a3c-4a6b-83ab-ae15c3d05781",
            [
                'money_amount' => 2592,
                'point_amount' => 1096,
                'point_expires_at' => "2021-11-30T11:41:07.000000+09:00",
                'description' => "y6kNARZB0e7gSo7Ck5GjWL9QXL9sfwRokQiO2gJLOs7NWiVmOaSDg31Umvi1k0xZepHVlU5UCBk1mC260SZIPf7lUxpBEw"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
