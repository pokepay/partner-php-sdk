<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTransaction extends TestCase
{
    public function testCreateTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "49bff2c4-6ad4-4d89-8450-c0031314a294",
            "87352198-3ed2-4548-9e29-338eb9f94f0c",
            "899befc5-fe6c-4be0-ac9b-ccde0397b840"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "49bff2c4-6ad4-4d89-8450-c0031314a294",
            "87352198-3ed2-4548-9e29-338eb9f94f0c",
            "899befc5-fe6c-4be0-ac9b-ccde0397b840",
            [
                'description' => "QrvWUnk17KWAioiFIGH7shpxz5S2r82nr4Char2DsC6IOlQ3ZCa8lZmMT5mAFAIeN7EOzXnRCcbLOsM"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "49bff2c4-6ad4-4d89-8450-c0031314a294",
            "87352198-3ed2-4548-9e29-338eb9f94f0c",
            "899befc5-fe6c-4be0-ac9b-ccde0397b840",
            [
                'point_amount' => 6377,
                'description' => "4tjoxBAROpiRc0j39oPNkDTFwGmGihFz2z0gAPfWDnSv3peMsqUtDBVf5JNWPBp"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "49bff2c4-6ad4-4d89-8450-c0031314a294",
            "87352198-3ed2-4548-9e29-338eb9f94f0c",
            "899befc5-fe6c-4be0-ac9b-ccde0397b840",
            [
                'money_amount' => 2515,
                'point_amount' => 6144,
                'description' => "QtetKx5V0IU"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
