<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTransaction extends TestCase
{
    public function testCreateTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "82019ca4-3e32-4e8e-bd1d-66380686bebb",
            "84d370a0-ca1d-41c6-9a90-18805a80f2e7",
            "2f6c21b7-9467-417d-8dee-ecf83b323a24"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "82019ca4-3e32-4e8e-bd1d-66380686bebb",
            "84d370a0-ca1d-41c6-9a90-18805a80f2e7",
            "2f6c21b7-9467-417d-8dee-ecf83b323a24",
            [
                'description' => "Q2MHWrNb5qe328jC4vfdJt7XH76ii0OoMhVnBLAlTkyqNi"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "82019ca4-3e32-4e8e-bd1d-66380686bebb",
            "84d370a0-ca1d-41c6-9a90-18805a80f2e7",
            "2f6c21b7-9467-417d-8dee-ecf83b323a24",
            [
                'point_expires_at' => "2021-08-03T02:52:13.000000+09:00",
                'description' => "sNYNRnVWdmiRLPWqxtoi76q3Xqh3CexYSVibXxbbzsCQz5KixOodECaA8"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "82019ca4-3e32-4e8e-bd1d-66380686bebb",
            "84d370a0-ca1d-41c6-9a90-18805a80f2e7",
            "2f6c21b7-9467-417d-8dee-ecf83b323a24",
            [
                'point_amount' => 3185,
                'point_expires_at' => "2022-09-16T23:02:30.000000+09:00",
                'description' => "KynIOe8R2FkDtMhJttf2meOkJIWj4adz9OiO5HzbUqYATbbhamDln"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransaction4()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "82019ca4-3e32-4e8e-bd1d-66380686bebb",
            "84d370a0-ca1d-41c6-9a90-18805a80f2e7",
            "2f6c21b7-9467-417d-8dee-ecf83b323a24",
            [
                'money_amount' => 8064,
                'point_amount' => 9070,
                'point_expires_at' => "2021-07-04T02:45:34.000000+09:00",
                'description' => "s1rCisMnF2ITi5oylXgSytgaMmkMR5DPlgYGqB38R3Fi3q6x7ch1eeWNBHLMDgMPVb0ElUYqtAN2"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
