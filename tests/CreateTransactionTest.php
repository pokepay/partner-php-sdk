<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTransaction extends TestCase
{
    public function testCreateTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "e351e355-fa7e-4dec-854f-6488fa2da021",
            "a21c194d-fb49-47ed-b613-3d9d6f72780e",
            "8d37a547-e8a2-4a79-bcb3-c5b77a095de1"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "e351e355-fa7e-4dec-854f-6488fa2da021",
            "a21c194d-fb49-47ed-b613-3d9d6f72780e",
            "8d37a547-e8a2-4a79-bcb3-c5b77a095de1",
            [
                'description' => "3VpRlqKVbLVJ59qzi8HFxZtC5ypm8TU2Y6m10oazOnSDRVBADkHpYoJtK8deELoxPb8vCqW8"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "e351e355-fa7e-4dec-854f-6488fa2da021",
            "a21c194d-fb49-47ed-b613-3d9d6f72780e",
            "8d37a547-e8a2-4a79-bcb3-c5b77a095de1",
            [
                'point_expires_at' => "2016-05-17T22:24:43.000000+09:00",
                'description' => "rqfNGAkbzmAIS"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "e351e355-fa7e-4dec-854f-6488fa2da021",
            "a21c194d-fb49-47ed-b613-3d9d6f72780e",
            "8d37a547-e8a2-4a79-bcb3-c5b77a095de1",
            [
                'point_amount' => 1548,
                'point_expires_at' => "2024-06-02T06:53:31.000000+09:00",
                'description' => "JbwsUjFhr3NwoEyag2SfuJiolnAr0O5BazmKqHUlvI3TLRDU2wR06BrqE4xR4GA8B6QEvmEtQTqfIDfhF08aWAgYKgMRg4eijui0x4AzukqXii06wz9NdLnaFp0d8NnYZXWwwPUfmYGEVrOM4dkj0diMGxwkBMFBNKhTrrGkGVnz7dW1L5JRcqWGZ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransaction4()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "e351e355-fa7e-4dec-854f-6488fa2da021",
            "a21c194d-fb49-47ed-b613-3d9d6f72780e",
            "8d37a547-e8a2-4a79-bcb3-c5b77a095de1",
            [
                'money_amount' => 367,
                'point_amount' => 7106,
                'point_expires_at' => "2018-04-14T02:46:33.000000+09:00",
                'description' => "7J2SLBuVTFPFKYeglUQAESlFenRvUgW2C0Pk55puUaBmR66mDvQf3SzEAz6sFhOXUyleHUBygYLLJFfbbjnOxn1Ii4QyBabDj1sJ7k6dP6L13ja9VovumOjMgFfs83kB"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
