<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTransaction extends TestCase
{
    public function testCreateTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "7c060d92-ea09-40f8-9126-4b667e847f87",
            "28293aba-96e0-469c-8ff1-264e6c4457a5",
            "a2162487-9e95-413b-8b89-ddc73ed91754"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "7c060d92-ea09-40f8-9126-4b667e847f87",
            "28293aba-96e0-469c-8ff1-264e6c4457a5",
            "a2162487-9e95-413b-8b89-ddc73ed91754",
            [
                'description' => "hBSpAIG2GVjRLCF7S26ypTzMExe5LQXN3tfMMeaiT"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "7c060d92-ea09-40f8-9126-4b667e847f87",
            "28293aba-96e0-469c-8ff1-264e6c4457a5",
            "a2162487-9e95-413b-8b89-ddc73ed91754",
            [
                'point_expires_at' => "2020-04-14T13:08:25.000000+09:00",
                'description' => "RlgPRLO6iu4xB9p9hHVjuFskSUixLpvflY8M"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "7c060d92-ea09-40f8-9126-4b667e847f87",
            "28293aba-96e0-469c-8ff1-264e6c4457a5",
            "a2162487-9e95-413b-8b89-ddc73ed91754",
            [
                'point_amount' => 3034,
                'point_expires_at' => "2017-03-31T18:15:26.000000+09:00",
                'description' => "vlfPZ9XRs2DjUex8FZcru468uiy2IBQsK"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransaction4()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "7c060d92-ea09-40f8-9126-4b667e847f87",
            "28293aba-96e0-469c-8ff1-264e6c4457a5",
            "a2162487-9e95-413b-8b89-ddc73ed91754",
            [
                'money_amount' => 7650,
                'point_amount' => 894,
                'point_expires_at' => "2021-08-05T17:01:01.000000+09:00",
                'description' => "UonyUv3nTPZ701h3V5Qywi2pn04JUSx27eVHz2wOx9gOffBCzdPD5lY5ruzs73QnlHzw"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
