<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTransaction extends TestCase
{
    public function testCreateTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "d4818048-8fca-4888-8f19-2817612b1aa8",
            "5cdba98c-90a0-4aca-8072-8966bed18921",
            "6595d20e-edef-4ff8-a61a-23e046d7a536"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "d4818048-8fca-4888-8f19-2817612b1aa8",
            "5cdba98c-90a0-4aca-8072-8966bed18921",
            "6595d20e-edef-4ff8-a61a-23e046d7a536",
            [
                'description' => "QaB8ExtDmlDvZOzNZshOKFLec8sjDXhUkYqQGihjqqxv9duL"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "d4818048-8fca-4888-8f19-2817612b1aa8",
            "5cdba98c-90a0-4aca-8072-8966bed18921",
            "6595d20e-edef-4ff8-a61a-23e046d7a536",
            [
                'point_expires_at' => "2021-10-24T05:56:17.000000+09:00",
                'description' => "JGLZbWz4EQxsGI88"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "d4818048-8fca-4888-8f19-2817612b1aa8",
            "5cdba98c-90a0-4aca-8072-8966bed18921",
            "6595d20e-edef-4ff8-a61a-23e046d7a536",
            [
                'point_amount' => 3708,
                'point_expires_at' => "2022-10-14T05:19:15.000000+09:00",
                'description' => "pdJjvycm96yUezNG0dfSjFPL5saEKzcnpTHiQQ8rpLQ3zsufD2a6Uaev5xU3GUMp72tRdVrgFB5acJPtIn37PsQ51iYUV8yIAllqYPVtYTIrZmw8KBiOMiPc4ByoRfbtQ1Pvkd6bQKCEdYhh"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransaction4()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "d4818048-8fca-4888-8f19-2817612b1aa8",
            "5cdba98c-90a0-4aca-8072-8966bed18921",
            "6595d20e-edef-4ff8-a61a-23e046d7a536",
            [
                'money_amount' => 3203,
                'point_amount' => 4248,
                'point_expires_at' => "2023-05-22T22:12:25.000000+09:00",
                'description' => "LJXD6DCVg30L1rsJSBvvtomseItid"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
