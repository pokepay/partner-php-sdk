<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTransaction extends TestCase
{
    public function testCreateTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "4861db91-7698-4d9d-a8b9-d21c6724cbb8",
            "31d1d493-f1a9-4ffd-9223-693eb3bf5973",
            "cb3e846c-d7c4-41bb-a404-c55fc895efc2"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "4861db91-7698-4d9d-a8b9-d21c6724cbb8",
            "31d1d493-f1a9-4ffd-9223-693eb3bf5973",
            "cb3e846c-d7c4-41bb-a404-c55fc895efc2",
            [
                'description' => "uoJSIFUrTRne91u8KmONY"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "4861db91-7698-4d9d-a8b9-d21c6724cbb8",
            "31d1d493-f1a9-4ffd-9223-693eb3bf5973",
            "cb3e846c-d7c4-41bb-a404-c55fc895efc2",
            [
                'point_expires_at' => "2020-10-26T20:48:03.000000Z",
                'description' => "Cce6NgXmM6SU8mT9N7YdoyhvI"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "4861db91-7698-4d9d-a8b9-d21c6724cbb8",
            "31d1d493-f1a9-4ffd-9223-693eb3bf5973",
            "cb3e846c-d7c4-41bb-a404-c55fc895efc2",
            [
                'point_amount' => 9675,
                'point_expires_at' => "2023-03-28T01:25:55.000000Z",
                'description' => "gvpt3OE4bGW"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransaction4()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransaction(
            "4861db91-7698-4d9d-a8b9-d21c6724cbb8",
            "31d1d493-f1a9-4ffd-9223-693eb3bf5973",
            "cb3e846c-d7c4-41bb-a404-c55fc895efc2",
            [
                'money_amount' => 358,
                'point_amount' => 2592,
                'point_expires_at' => "2024-09-06T13:04:31.000000Z",
                'description' => "wqWxwC3DU0ZYNIFrYHkTuOzrywGRNkAeSHinr7X7r9y8K62vZdczxzKDF7OzztIRdIBCYTSHrtKwDRbFJ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
