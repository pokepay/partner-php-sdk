<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateOrganization extends TestCase
{
    public function testCreateOrganization0()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "jN28QfQLnQ9Qr2gs4rA",
            "yEVt2ws7WkJzpgGUX4mtxobZ9ZCpNJGZG6LzTWIbd8ZNVrafdiivNn4NbNLXIdoiqtrelImUNmLeKEfXUc2dQExu22E4bXnTsrAuXzcUztcjpDcIzv8TjKb1dIcQKtgPEpt",
            ["9c111359-e26e-4da4-973e-c40b7e75b4f3", "3a599482-a775-4703-84a2-4bb07be4f416", "bd2bb82f-1dcc-4849-b490-971c39efeb21", "01c9e654-72b7-4ba5-b0ec-e10e2cf23551", "e6508477-0542-4109-b4b5-5695db668cbe", "d2cfde19-a0b3-4d0c-af59-04ac82127b70", "2899f9fd-9a86-413a-8f4b-f3affe19e708", "6d7cd324-3a39-4236-856f-1ca65c818bc6", "8e5f9fc7-0c78-45d6-9b4a-f9aca2f6c400", "0f13b18f-f82f-4d0e-bddb-f97f92b4e81b"],
            "NTeRlFM4Xw@2Yne.com",
            "FRtau24yc1@kusN.com"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization1()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "jN28QfQLnQ9Qr2gs4rA",
            "yEVt2ws7WkJzpgGUX4mtxobZ9ZCpNJGZG6LzTWIbd8ZNVrafdiivNn4NbNLXIdoiqtrelImUNmLeKEfXUc2dQExu22E4bXnTsrAuXzcUztcjpDcIzv8TjKb1dIcQKtgPEpt",
            ["9c111359-e26e-4da4-973e-c40b7e75b4f3", "3a599482-a775-4703-84a2-4bb07be4f416", "bd2bb82f-1dcc-4849-b490-971c39efeb21", "01c9e654-72b7-4ba5-b0ec-e10e2cf23551", "e6508477-0542-4109-b4b5-5695db668cbe", "d2cfde19-a0b3-4d0c-af59-04ac82127b70", "2899f9fd-9a86-413a-8f4b-f3affe19e708", "6d7cd324-3a39-4236-856f-1ca65c818bc6", "8e5f9fc7-0c78-45d6-9b4a-f9aca2f6c400", "0f13b18f-f82f-4d0e-bddb-f97f92b4e81b"],
            "NTeRlFM4Xw@2Yne.com",
            "FRtau24yc1@kusN.com",
            [
                'contact_name' => "qW2yhhPFbHNPhRgnqYnUlh4JbOrMj5jFwrAdcz57ZOWsDr0Djt9M12BO"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization2()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "jN28QfQLnQ9Qr2gs4rA",
            "yEVt2ws7WkJzpgGUX4mtxobZ9ZCpNJGZG6LzTWIbd8ZNVrafdiivNn4NbNLXIdoiqtrelImUNmLeKEfXUc2dQExu22E4bXnTsrAuXzcUztcjpDcIzv8TjKb1dIcQKtgPEpt",
            ["9c111359-e26e-4da4-973e-c40b7e75b4f3", "3a599482-a775-4703-84a2-4bb07be4f416", "bd2bb82f-1dcc-4849-b490-971c39efeb21", "01c9e654-72b7-4ba5-b0ec-e10e2cf23551", "e6508477-0542-4109-b4b5-5695db668cbe", "d2cfde19-a0b3-4d0c-af59-04ac82127b70", "2899f9fd-9a86-413a-8f4b-f3affe19e708", "6d7cd324-3a39-4236-856f-1ca65c818bc6", "8e5f9fc7-0c78-45d6-9b4a-f9aca2f6c400", "0f13b18f-f82f-4d0e-bddb-f97f92b4e81b"],
            "NTeRlFM4Xw@2Yne.com",
            "FRtau24yc1@kusN.com",
            [
                'bank_account_holder_name' => "B",
                'contact_name' => "cjM96oftC7mHhiSDgXKvVy5paxKD2XcOfyMo26iqol80j1t4n3lpnoezOx6Ov6eGwjQCqxdtQnDY4S9N4HhJ5rCsXRcUZY47cpIh03BvqB7CzLjYHoO28zEE65UlKtMCe12MUV2d"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization3()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "jN28QfQLnQ9Qr2gs4rA",
            "yEVt2ws7WkJzpgGUX4mtxobZ9ZCpNJGZG6LzTWIbd8ZNVrafdiivNn4NbNLXIdoiqtrelImUNmLeKEfXUc2dQExu22E4bXnTsrAuXzcUztcjpDcIzv8TjKb1dIcQKtgPEpt",
            ["9c111359-e26e-4da4-973e-c40b7e75b4f3", "3a599482-a775-4703-84a2-4bb07be4f416", "bd2bb82f-1dcc-4849-b490-971c39efeb21", "01c9e654-72b7-4ba5-b0ec-e10e2cf23551", "e6508477-0542-4109-b4b5-5695db668cbe", "d2cfde19-a0b3-4d0c-af59-04ac82127b70", "2899f9fd-9a86-413a-8f4b-f3affe19e708", "6d7cd324-3a39-4236-856f-1ca65c818bc6", "8e5f9fc7-0c78-45d6-9b4a-f9aca2f6c400", "0f13b18f-f82f-4d0e-bddb-f97f92b4e81b"],
            "NTeRlFM4Xw@2Yne.com",
            "FRtau24yc1@kusN.com",
            [
                'bank_account' => "",
                'bank_account_holder_name' => "ｦ",
                'contact_name' => "28zEWnFZLX87qtedPzV8NdiYCurcmVOPZzwMWHgQ0VESfspW9b9NB"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization4()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "jN28QfQLnQ9Qr2gs4rA",
            "yEVt2ws7WkJzpgGUX4mtxobZ9ZCpNJGZG6LzTWIbd8ZNVrafdiivNn4NbNLXIdoiqtrelImUNmLeKEfXUc2dQExu22E4bXnTsrAuXzcUztcjpDcIzv8TjKb1dIcQKtgPEpt",
            ["9c111359-e26e-4da4-973e-c40b7e75b4f3", "3a599482-a775-4703-84a2-4bb07be4f416", "bd2bb82f-1dcc-4849-b490-971c39efeb21", "01c9e654-72b7-4ba5-b0ec-e10e2cf23551", "e6508477-0542-4109-b4b5-5695db668cbe", "d2cfde19-a0b3-4d0c-af59-04ac82127b70", "2899f9fd-9a86-413a-8f4b-f3affe19e708", "6d7cd324-3a39-4236-856f-1ca65c818bc6", "8e5f9fc7-0c78-45d6-9b4a-f9aca2f6c400", "0f13b18f-f82f-4d0e-bddb-f97f92b4e81b"],
            "NTeRlFM4Xw@2Yne.com",
            "FRtau24yc1@kusN.com",
            [
                'bank_account_type' => "saving",
                'bank_account' => "394463",
                'bank_account_holder_name' => ".",
                'contact_name' => "TiWLEN2pEb"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization5()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "jN28QfQLnQ9Qr2gs4rA",
            "yEVt2ws7WkJzpgGUX4mtxobZ9ZCpNJGZG6LzTWIbd8ZNVrafdiivNn4NbNLXIdoiqtrelImUNmLeKEfXUc2dQExu22E4bXnTsrAuXzcUztcjpDcIzv8TjKb1dIcQKtgPEpt",
            ["9c111359-e26e-4da4-973e-c40b7e75b4f3", "3a599482-a775-4703-84a2-4bb07be4f416", "bd2bb82f-1dcc-4849-b490-971c39efeb21", "01c9e654-72b7-4ba5-b0ec-e10e2cf23551", "e6508477-0542-4109-b4b5-5695db668cbe", "d2cfde19-a0b3-4d0c-af59-04ac82127b70", "2899f9fd-9a86-413a-8f4b-f3affe19e708", "6d7cd324-3a39-4236-856f-1ca65c818bc6", "8e5f9fc7-0c78-45d6-9b4a-f9aca2f6c400", "0f13b18f-f82f-4d0e-bddb-f97f92b4e81b"],
            "NTeRlFM4Xw@2Yne.com",
            "FRtau24yc1@kusN.com",
            [
                'bank_branch_code' => "752",
                'bank_account_type' => "other",
                'bank_account' => "",
                'bank_account_holder_name' => ")",
                'contact_name' => "9NzaeTptZ5kX9rLpagdWQnEnTlLyubwibc5uG9Y4cn"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization6()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "jN28QfQLnQ9Qr2gs4rA",
            "yEVt2ws7WkJzpgGUX4mtxobZ9ZCpNJGZG6LzTWIbd8ZNVrafdiivNn4NbNLXIdoiqtrelImUNmLeKEfXUc2dQExu22E4bXnTsrAuXzcUztcjpDcIzv8TjKb1dIcQKtgPEpt",
            ["9c111359-e26e-4da4-973e-c40b7e75b4f3", "3a599482-a775-4703-84a2-4bb07be4f416", "bd2bb82f-1dcc-4849-b490-971c39efeb21", "01c9e654-72b7-4ba5-b0ec-e10e2cf23551", "e6508477-0542-4109-b4b5-5695db668cbe", "d2cfde19-a0b3-4d0c-af59-04ac82127b70", "2899f9fd-9a86-413a-8f4b-f3affe19e708", "6d7cd324-3a39-4236-856f-1ca65c818bc6", "8e5f9fc7-0c78-45d6-9b4a-f9aca2f6c400", "0f13b18f-f82f-4d0e-bddb-f97f92b4e81b"],
            "NTeRlFM4Xw@2Yne.com",
            "FRtau24yc1@kusN.com",
            [
                'bank_branch_name' => "6ApR",
                'bank_branch_code' => "",
                'bank_account_type' => "saving",
                'bank_account' => "676",
                'bank_account_holder_name' => "ｦ",
                'contact_name' => "5nuODlmm9rpn022H3wQmNFzbLFmfFSz1uperYHhU5vbLxW8Yq15XpRuu89q3NykiRPYO2oQiAYMcKkXBWEu4RSjxgCW3jFlgob7yobgqdqFleVhpCebdmmx3jJLFYo72YjP5pod5QaLCZTmFLxumOnvrupx16EXCUXyPfCa"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization7()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "jN28QfQLnQ9Qr2gs4rA",
            "yEVt2ws7WkJzpgGUX4mtxobZ9ZCpNJGZG6LzTWIbd8ZNVrafdiivNn4NbNLXIdoiqtrelImUNmLeKEfXUc2dQExu22E4bXnTsrAuXzcUztcjpDcIzv8TjKb1dIcQKtgPEpt",
            ["9c111359-e26e-4da4-973e-c40b7e75b4f3", "3a599482-a775-4703-84a2-4bb07be4f416", "bd2bb82f-1dcc-4849-b490-971c39efeb21", "01c9e654-72b7-4ba5-b0ec-e10e2cf23551", "e6508477-0542-4109-b4b5-5695db668cbe", "d2cfde19-a0b3-4d0c-af59-04ac82127b70", "2899f9fd-9a86-413a-8f4b-f3affe19e708", "6d7cd324-3a39-4236-856f-1ca65c818bc6", "8e5f9fc7-0c78-45d6-9b4a-f9aca2f6c400", "0f13b18f-f82f-4d0e-bddb-f97f92b4e81b"],
            "NTeRlFM4Xw@2Yne.com",
            "FRtau24yc1@kusN.com",
            [
                'bank_code' => "",
                'bank_branch_name' => "jEtMliIf7wKoPmNQWU6zl",
                'bank_branch_code' => "380",
                'bank_account_type' => "other",
                'bank_account' => "4599",
                'bank_account_holder_name' => "-",
                'contact_name' => "EbaRlpdhTTQpQo"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization8()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "jN28QfQLnQ9Qr2gs4rA",
            "yEVt2ws7WkJzpgGUX4mtxobZ9ZCpNJGZG6LzTWIbd8ZNVrafdiivNn4NbNLXIdoiqtrelImUNmLeKEfXUc2dQExu22E4bXnTsrAuXzcUztcjpDcIzv8TjKb1dIcQKtgPEpt",
            ["9c111359-e26e-4da4-973e-c40b7e75b4f3", "3a599482-a775-4703-84a2-4bb07be4f416", "bd2bb82f-1dcc-4849-b490-971c39efeb21", "01c9e654-72b7-4ba5-b0ec-e10e2cf23551", "e6508477-0542-4109-b4b5-5695db668cbe", "d2cfde19-a0b3-4d0c-af59-04ac82127b70", "2899f9fd-9a86-413a-8f4b-f3affe19e708", "6d7cd324-3a39-4236-856f-1ca65c818bc6", "8e5f9fc7-0c78-45d6-9b4a-f9aca2f6c400", "0f13b18f-f82f-4d0e-bddb-f97f92b4e81b"],
            "NTeRlFM4Xw@2Yne.com",
            "FRtau24yc1@kusN.com",
            [
                'bank_name' => "RT6b0IY83jSy9CLjq8yj",
                'bank_code' => "8943",
                'bank_branch_name' => "nLV",
                'bank_branch_code' => "558",
                'bank_account_type' => "current",
                'bank_account' => "9992",
                'bank_account_holder_name' => "V",
                'contact_name' => "tOQ2qp6BlopujNmJIuVKWvjUjC0u3f2Lo9NqlV6uXM4yE9kd7lV6QKkz6REzoI7cZYW4c0GyNh6EpQVqX4KE4B5KRDxSSppVORQLy6PO73cHGKqjz0v27dHE8reh9b3v7zqeYS2n0EGsPPbvQ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
