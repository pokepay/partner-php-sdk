<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateOrganization extends TestCase
{
    public function testCreateOrganization0()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "wWBmrkCvT",
            "wdUnJlqaB5MbMoTIwutlWHB",
            ["9b58de4f-ff49-4565-845f-448f1cc40082", "d5508027-03d3-4b1a-b89a-c388813a4bfa", "d78938e3-6970-4d4f-af7b-35cf44c67d4a", "212c0edf-7757-49b9-9d07-960f4bf3fb15", "1c4317a9-9afa-427d-98ba-618bfe68402f"],
            "PJ0MYGHJSs@wKfT.com",
            "g1iVmZUHtO@XVfS.com"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization1()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "wWBmrkCvT",
            "wdUnJlqaB5MbMoTIwutlWHB",
            ["9b58de4f-ff49-4565-845f-448f1cc40082", "d5508027-03d3-4b1a-b89a-c388813a4bfa", "d78938e3-6970-4d4f-af7b-35cf44c67d4a", "212c0edf-7757-49b9-9d07-960f4bf3fb15", "1c4317a9-9afa-427d-98ba-618bfe68402f"],
            "PJ0MYGHJSs@wKfT.com",
            "g1iVmZUHtO@XVfS.com",
            [
                'contact_name' => "s9nEbKYoBvTibmu8ddq4kMComkFD0lk0HcxWoSB99BDT6bYKxqlRQpkMUxRUpBYCjy6znOHzeeaQRZbcE3l8c4OtYbY4Kua1skNFdagh1OkNjNcDRug2nRCxqCKVJhVg9RsBqm5KyVPq0fU1OUJxvzgYRH0WY6AZPx8unp9XZ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization2()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "wWBmrkCvT",
            "wdUnJlqaB5MbMoTIwutlWHB",
            ["9b58de4f-ff49-4565-845f-448f1cc40082", "d5508027-03d3-4b1a-b89a-c388813a4bfa", "d78938e3-6970-4d4f-af7b-35cf44c67d4a", "212c0edf-7757-49b9-9d07-960f4bf3fb15", "1c4317a9-9afa-427d-98ba-618bfe68402f"],
            "PJ0MYGHJSs@wKfT.com",
            "g1iVmZUHtO@XVfS.com",
            [
                'bank_account_holder_name' => "ｦ",
                'contact_name' => "kaNM9CUYOhj"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization3()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "wWBmrkCvT",
            "wdUnJlqaB5MbMoTIwutlWHB",
            ["9b58de4f-ff49-4565-845f-448f1cc40082", "d5508027-03d3-4b1a-b89a-c388813a4bfa", "d78938e3-6970-4d4f-af7b-35cf44c67d4a", "212c0edf-7757-49b9-9d07-960f4bf3fb15", "1c4317a9-9afa-427d-98ba-618bfe68402f"],
            "PJ0MYGHJSs@wKfT.com",
            "g1iVmZUHtO@XVfS.com",
            [
                'bank_account' => "9",
                'bank_account_holder_name' => "O",
                'contact_name' => "6XoAJWbLeyL6YmA24katAXtBCYc5V0MXRS9m6TbQFX9qKs4vj3KzZmLW6JhwaMufXFZLutaB8My1HiPC7MjcGaK3qjZHvmUIrcQSa9uyEYGwWEOQKZM6a3eUrfrNu2B2UNBn0ytnSLixSVyKkgxd8THBdU5ZcdNLVxFJZJl7TXWfh4cVYdsHlP3QwzHH13dAMnwWm6QXQA7g27VdnEWeBXkpFJl2VIGVx"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization4()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "wWBmrkCvT",
            "wdUnJlqaB5MbMoTIwutlWHB",
            ["9b58de4f-ff49-4565-845f-448f1cc40082", "d5508027-03d3-4b1a-b89a-c388813a4bfa", "d78938e3-6970-4d4f-af7b-35cf44c67d4a", "212c0edf-7757-49b9-9d07-960f4bf3fb15", "1c4317a9-9afa-427d-98ba-618bfe68402f"],
            "PJ0MYGHJSs@wKfT.com",
            "g1iVmZUHtO@XVfS.com",
            [
                'bank_account_type' => "saving",
                'bank_account' => "6",
                'bank_account_holder_name' => "ｱ",
                'contact_name' => "1f6dVigLxS7eK8C0RPoMk6JdFgNSing2NrzMFZJPV9aFgKFVA6ExmwN5PCRYUQZaWBgl9YYXB1rZWBjfiCtK0VPnqYrsKSCLz9KlfAhfnGplt9SfnhZF4raBHJsCWdyjXIrZ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization5()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "wWBmrkCvT",
            "wdUnJlqaB5MbMoTIwutlWHB",
            ["9b58de4f-ff49-4565-845f-448f1cc40082", "d5508027-03d3-4b1a-b89a-c388813a4bfa", "d78938e3-6970-4d4f-af7b-35cf44c67d4a", "212c0edf-7757-49b9-9d07-960f4bf3fb15", "1c4317a9-9afa-427d-98ba-618bfe68402f"],
            "PJ0MYGHJSs@wKfT.com",
            "g1iVmZUHtO@XVfS.com",
            [
                'bank_branch_code' => "355",
                'bank_account_type' => "current",
                'bank_account' => "",
                'bank_account_holder_name' => "\\",
                'contact_name' => "unw0LV4QwehPvVQOTvXSpeBZcS2dYKRrqhjHUqZcHcEY7MAUUqRJPifDYYB4RqeBalrH1svmN0DMcSzfEo2PqqgiXTr6csOpmFx5n90Dc3cElDonB355y3ltjAP5fw2CqAK8WVAIbNmi6CftEuKP6H"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization6()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "wWBmrkCvT",
            "wdUnJlqaB5MbMoTIwutlWHB",
            ["9b58de4f-ff49-4565-845f-448f1cc40082", "d5508027-03d3-4b1a-b89a-c388813a4bfa", "d78938e3-6970-4d4f-af7b-35cf44c67d4a", "212c0edf-7757-49b9-9d07-960f4bf3fb15", "1c4317a9-9afa-427d-98ba-618bfe68402f"],
            "PJ0MYGHJSs@wKfT.com",
            "g1iVmZUHtO@XVfS.com",
            [
                'bank_branch_name' => "vUyfI4ntteTL1TbyXMEs5VNaegTME57VWIcsFbBwEm",
                'bank_branch_code' => "042",
                'bank_account_type' => "saving",
                'bank_account' => "68728",
                'bank_account_holder_name' => "ﾇ",
                'contact_name' => "LwABvEoi7mN5W4AJGreMGRGn20XQzfBPfSxWIYhgInvpQ3BNpzCY7Rdx9jF5NaQ0NuC1KY44kWOdFWxfzR9VCBbWQ1riVcHnBavTLzE4zSnvsvkduu4NskX9I0PeEDGGNnH1eEgmu56wz8h0nyCYGScMKc4tkRIVcSKezwDzOCLAw8yHmgg459Fk8gMp"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization7()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "wWBmrkCvT",
            "wdUnJlqaB5MbMoTIwutlWHB",
            ["9b58de4f-ff49-4565-845f-448f1cc40082", "d5508027-03d3-4b1a-b89a-c388813a4bfa", "d78938e3-6970-4d4f-af7b-35cf44c67d4a", "212c0edf-7757-49b9-9d07-960f4bf3fb15", "1c4317a9-9afa-427d-98ba-618bfe68402f"],
            "PJ0MYGHJSs@wKfT.com",
            "g1iVmZUHtO@XVfS.com",
            [
                'bank_code' => "9941",
                'bank_branch_name' => "MgiTtWMG8UVd4l5Iz0oDGxyGjSPTYjby4uKORKrIqFVOmZlUjrByTx2spBiLyMVk",
                'bank_branch_code' => "830",
                'bank_account_type' => "saving",
                'bank_account' => "08252",
                'bank_account_holder_name' => "ｦ",
                'contact_name' => "2VA3obzjBcg57jMyJwu7TNF7zRWuYz8Q5nzCS4OuHV976u7mjmXJpk4bxLti9ZUufKtsdwyi7dt8uifXLe2Cbr2NRJodlXGD1wnNeHuRK5mGd79bEOOGLJ1rmCz2dDc4rsl4NyLvtGKY5qLfFZcREz8bRj2LUEPcAKnD3dtYFkC7Ai8tpxKM1uH3lausNwIzqYmYvrnkFcy1byg8E6iQbiH49MLdsSU2vt6WY5THUsLDF9BK8UaIP5di"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization8()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "wWBmrkCvT",
            "wdUnJlqaB5MbMoTIwutlWHB",
            ["9b58de4f-ff49-4565-845f-448f1cc40082", "d5508027-03d3-4b1a-b89a-c388813a4bfa", "d78938e3-6970-4d4f-af7b-35cf44c67d4a", "212c0edf-7757-49b9-9d07-960f4bf3fb15", "1c4317a9-9afa-427d-98ba-618bfe68402f"],
            "PJ0MYGHJSs@wKfT.com",
            "g1iVmZUHtO@XVfS.com",
            [
                'bank_name' => "fywjSvPI0Thl4aatTAQ5KREOHeNVzScbrEqMkTf9",
                'bank_code' => "3879",
                'bank_branch_name' => "d3HS37NvvaQTMK90aAeyK78fRnYWX5eGJJTddH",
                'bank_branch_code' => "698",
                'bank_account_type' => "current",
                'bank_account' => "",
                'bank_account_holder_name' => "T",
                'contact_name' => "inrJ9sqNxu2x7MUfW4ez3igLN6TgDvZcxwFkjhNwOcev4MzbejmxVwNFdhb6VCr6XCUU4LsZJcpDPP8f8CIpd3PFF1cCb1Cg4JY6fdx3EMnNslzmZtnOgHFcMv8Jpt0RDIwZ5iVqSwAw9MZfQCQTDyQtCabn"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
