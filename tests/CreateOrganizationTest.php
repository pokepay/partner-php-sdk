<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateOrganization extends TestCase
{
    public function testCreateOrganization0()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "nedbEkL6VCbZlYCZFu0YjXrvi",
            "k1kbCzvMElblaTUskxDWTi4syFdijXYZ6Fkp0v2rObj5KP7CaX5R9O7hnOQMfDj4u8or1Z5ajnFBytvfCWU5lvasIan6Df8qsq2k",
            ["4726f102-1645-4f54-b175-0d7c6e1229cd", "1a7aa9ab-ab98-4ab3-937b-060be8d09cd1", "1a8aa2f5-567f-40ea-9dc0-705735f0a546", "dd47e997-c41f-41c4-922b-53c58edd3e03"],
            "153B47G8gA@IFr9.com",
            "zY1ABG4Q6S@1AZ8.com"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization1()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "nedbEkL6VCbZlYCZFu0YjXrvi",
            "k1kbCzvMElblaTUskxDWTi4syFdijXYZ6Fkp0v2rObj5KP7CaX5R9O7hnOQMfDj4u8or1Z5ajnFBytvfCWU5lvasIan6Df8qsq2k",
            ["4726f102-1645-4f54-b175-0d7c6e1229cd", "1a7aa9ab-ab98-4ab3-937b-060be8d09cd1", "1a8aa2f5-567f-40ea-9dc0-705735f0a546", "dd47e997-c41f-41c4-922b-53c58edd3e03"],
            "153B47G8gA@IFr9.com",
            "zY1ABG4Q6S@1AZ8.com",
            [
                'contact_name' => "1ee9F1zaeUGprRtPpZgZzOhvmvIjVKe7aM7QiN4LuTtB8ZF5mN9clYyKl8cUsYw8CW8rHVcmWZsjKlFT0f7did2pSfVDNNjekhaUaqNZOry7pQcwkQvvHfTZTUiaSBniTvgiFcf"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization2()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "nedbEkL6VCbZlYCZFu0YjXrvi",
            "k1kbCzvMElblaTUskxDWTi4syFdijXYZ6Fkp0v2rObj5KP7CaX5R9O7hnOQMfDj4u8or1Z5ajnFBytvfCWU5lvasIan6Df8qsq2k",
            ["4726f102-1645-4f54-b175-0d7c6e1229cd", "1a7aa9ab-ab98-4ab3-937b-060be8d09cd1", "1a8aa2f5-567f-40ea-9dc0-705735f0a546", "dd47e997-c41f-41c4-922b-53c58edd3e03"],
            "153B47G8gA@IFr9.com",
            "zY1ABG4Q6S@1AZ8.com",
            [
                'bank_account_holder_name' => "/",
                'contact_name' => "WfXoobW27D2zSsjxSJQCC2TKE3m70u0i2"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization3()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "nedbEkL6VCbZlYCZFu0YjXrvi",
            "k1kbCzvMElblaTUskxDWTi4syFdijXYZ6Fkp0v2rObj5KP7CaX5R9O7hnOQMfDj4u8or1Z5ajnFBytvfCWU5lvasIan6Df8qsq2k",
            ["4726f102-1645-4f54-b175-0d7c6e1229cd", "1a7aa9ab-ab98-4ab3-937b-060be8d09cd1", "1a8aa2f5-567f-40ea-9dc0-705735f0a546", "dd47e997-c41f-41c4-922b-53c58edd3e03"],
            "153B47G8gA@IFr9.com",
            "zY1ABG4Q6S@1AZ8.com",
            [
                'bank_account' => "63733",
                'bank_account_holder_name' => "\\",
                'contact_name' => "3HknLhb4mGHjaX24jJAlJFQ82Mhy"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization4()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "nedbEkL6VCbZlYCZFu0YjXrvi",
            "k1kbCzvMElblaTUskxDWTi4syFdijXYZ6Fkp0v2rObj5KP7CaX5R9O7hnOQMfDj4u8or1Z5ajnFBytvfCWU5lvasIan6Df8qsq2k",
            ["4726f102-1645-4f54-b175-0d7c6e1229cd", "1a7aa9ab-ab98-4ab3-937b-060be8d09cd1", "1a8aa2f5-567f-40ea-9dc0-705735f0a546", "dd47e997-c41f-41c4-922b-53c58edd3e03"],
            "153B47G8gA@IFr9.com",
            "zY1ABG4Q6S@1AZ8.com",
            [
                'bank_account_type' => "current",
                'bank_account' => "7",
                'bank_account_holder_name' => "/",
                'contact_name' => "Sux0jeobdQD1VXjUggH7qMtHhSfZdXUyjb1NxKa8yAWf3eI4rn2GKxT8MfsHveV88627AlMJYf8MI0c9iCp3raZonaiDazAfoVN5ZcNoMxEFE11voG9m7gWIlidcsFhnnSlOPQSKVW980GqQVfPuvUPiEFV6mDyiAjmPC8FhIFplNkUQpOFZAAuAkdYYYV8q02r77ePIgPu4dPH"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization5()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "nedbEkL6VCbZlYCZFu0YjXrvi",
            "k1kbCzvMElblaTUskxDWTi4syFdijXYZ6Fkp0v2rObj5KP7CaX5R9O7hnOQMfDj4u8or1Z5ajnFBytvfCWU5lvasIan6Df8qsq2k",
            ["4726f102-1645-4f54-b175-0d7c6e1229cd", "1a7aa9ab-ab98-4ab3-937b-060be8d09cd1", "1a8aa2f5-567f-40ea-9dc0-705735f0a546", "dd47e997-c41f-41c4-922b-53c58edd3e03"],
            "153B47G8gA@IFr9.com",
            "zY1ABG4Q6S@1AZ8.com",
            [
                'bank_branch_code' => "",
                'bank_account_type' => "saving",
                'bank_account' => "2",
                'bank_account_holder_name' => "-",
                'contact_name' => "Q97lNoNEqqi11P4GN23Eb6NlDd7BTwpYu4Valw5xiIJ7Q1Cipp2CPMRifbrHbdPk0z0U5np6zSSSsJChBCfGVrTTzFEA"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization6()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "nedbEkL6VCbZlYCZFu0YjXrvi",
            "k1kbCzvMElblaTUskxDWTi4syFdijXYZ6Fkp0v2rObj5KP7CaX5R9O7hnOQMfDj4u8or1Z5ajnFBytvfCWU5lvasIan6Df8qsq2k",
            ["4726f102-1645-4f54-b175-0d7c6e1229cd", "1a7aa9ab-ab98-4ab3-937b-060be8d09cd1", "1a8aa2f5-567f-40ea-9dc0-705735f0a546", "dd47e997-c41f-41c4-922b-53c58edd3e03"],
            "153B47G8gA@IFr9.com",
            "zY1ABG4Q6S@1AZ8.com",
            [
                'bank_branch_name' => "3cEkuniAENmbJtM74yoK3yNaovdjb7u",
                'bank_branch_code' => "250",
                'bank_account_type' => "current",
                'bank_account' => "1773566",
                'bank_account_holder_name' => "N",
                'contact_name' => "zKMwihh3UCJATPnnGfbS"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization7()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "nedbEkL6VCbZlYCZFu0YjXrvi",
            "k1kbCzvMElblaTUskxDWTi4syFdijXYZ6Fkp0v2rObj5KP7CaX5R9O7hnOQMfDj4u8or1Z5ajnFBytvfCWU5lvasIan6Df8qsq2k",
            ["4726f102-1645-4f54-b175-0d7c6e1229cd", "1a7aa9ab-ab98-4ab3-937b-060be8d09cd1", "1a8aa2f5-567f-40ea-9dc0-705735f0a546", "dd47e997-c41f-41c4-922b-53c58edd3e03"],
            "153B47G8gA@IFr9.com",
            "zY1ABG4Q6S@1AZ8.com",
            [
                'bank_code' => "2480",
                'bank_branch_name' => "y1LpRX9w3aEMSDM7H6DKpM",
                'bank_branch_code' => "",
                'bank_account_type' => "other",
                'bank_account' => "21106",
                'bank_account_holder_name' => "1",
                'contact_name' => "N4VGIihJYcZH1yqyLKdrb7VdvBferrdPPsgFTBp21GVpuNthlN8cTNxtClPPAh3ydu7juMaO7kqGjaASQkqyw2Q45pim16jWY8Li2yJuAILC9WmiQzTAP0hsvYk94ECXfwyrT6FNWSeiP"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization8()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "nedbEkL6VCbZlYCZFu0YjXrvi",
            "k1kbCzvMElblaTUskxDWTi4syFdijXYZ6Fkp0v2rObj5KP7CaX5R9O7hnOQMfDj4u8or1Z5ajnFBytvfCWU5lvasIan6Df8qsq2k",
            ["4726f102-1645-4f54-b175-0d7c6e1229cd", "1a7aa9ab-ab98-4ab3-937b-060be8d09cd1", "1a8aa2f5-567f-40ea-9dc0-705735f0a546", "dd47e997-c41f-41c4-922b-53c58edd3e03"],
            "153B47G8gA@IFr9.com",
            "zY1ABG4Q6S@1AZ8.com",
            [
                'bank_name' => "DkaNGUUFy37",
                'bank_code' => "",
                'bank_branch_name' => "VBCxguWkgEaSRxikajDhky1e9MUM8ZY9eEBDTjF",
                'bank_branch_code' => "418",
                'bank_account_type' => "current",
                'bank_account' => "3094491",
                'bank_account_holder_name' => "ï½£",
                'contact_name' => "OfsuO3LMtzPm5pmHiztzTLcjSeNyveotr1SbLY9f9RM3h2SXQaAm6iMSYVoPQWfV62UhTGJS1L9KLOsA2Q2Z23Mwd98ipOldTUQCXPcZtLDZ6t1d7NhS3tIbiaQ9UqJHQZFkEmVia7WMZwoONY9mYcjUD3BWfN3hpObBbd0WPCuqh90wnUEefdvvGn56xgqcINC0Ma"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
