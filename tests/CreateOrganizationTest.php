<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateOrganization extends TestCase
{
    public function testCreateOrganization0()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "yvcn732KUY",
            "pvpwWJTv2DUcmsWBTf3SfgLVNlOhNoRUioebBno3HZhnyNZ5Q77U04aLs4hmy4C28WnCRfz2leovb1R7O6QOgboW2zpcaLxa2QZma6CRo8nyJO9Y3f9djMgk8QSZwJ1udEIb7zDJ6KZTEk0m",
            ["168a35c4-be7f-4452-87f1-46bf34566564", "a3e61a38-206a-4b97-9047-04e996067b68", "a4142ec6-e632-4329-925c-70faa15dc3ef", "55523aa6-cb80-4cb2-8719-bea3cbcdb6ce", "67b30b8e-90b3-419d-bb87-e6510d43c723", "6bb12cc0-4f59-4c44-9f7c-d49f0d28bf83", "700c66ad-49c7-4836-830d-46a63b39d228", "37d6948c-e143-45da-9331-c65bc0677810"],
            "PVe5LZzi2N@mWBl.com",
            "uHrzflOytN@d3RO.com"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization1()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "yvcn732KUY",
            "pvpwWJTv2DUcmsWBTf3SfgLVNlOhNoRUioebBno3HZhnyNZ5Q77U04aLs4hmy4C28WnCRfz2leovb1R7O6QOgboW2zpcaLxa2QZma6CRo8nyJO9Y3f9djMgk8QSZwJ1udEIb7zDJ6KZTEk0m",
            ["168a35c4-be7f-4452-87f1-46bf34566564", "a3e61a38-206a-4b97-9047-04e996067b68", "a4142ec6-e632-4329-925c-70faa15dc3ef", "55523aa6-cb80-4cb2-8719-bea3cbcdb6ce", "67b30b8e-90b3-419d-bb87-e6510d43c723", "6bb12cc0-4f59-4c44-9f7c-d49f0d28bf83", "700c66ad-49c7-4836-830d-46a63b39d228", "37d6948c-e143-45da-9331-c65bc0677810"],
            "PVe5LZzi2N@mWBl.com",
            "uHrzflOytN@d3RO.com",
            [
                'contact_name' => "mH"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization2()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "yvcn732KUY",
            "pvpwWJTv2DUcmsWBTf3SfgLVNlOhNoRUioebBno3HZhnyNZ5Q77U04aLs4hmy4C28WnCRfz2leovb1R7O6QOgboW2zpcaLxa2QZma6CRo8nyJO9Y3f9djMgk8QSZwJ1udEIb7zDJ6KZTEk0m",
            ["168a35c4-be7f-4452-87f1-46bf34566564", "a3e61a38-206a-4b97-9047-04e996067b68", "a4142ec6-e632-4329-925c-70faa15dc3ef", "55523aa6-cb80-4cb2-8719-bea3cbcdb6ce", "67b30b8e-90b3-419d-bb87-e6510d43c723", "6bb12cc0-4f59-4c44-9f7c-d49f0d28bf83", "700c66ad-49c7-4836-830d-46a63b39d228", "37d6948c-e143-45da-9331-c65bc0677810"],
            "PVe5LZzi2N@mWBl.com",
            "uHrzflOytN@d3RO.com",
            [
                'bank_account_holder_name' => ",",
                'contact_name' => "AHnX3LOs6P3dxLhDjrt4CFESWJnPCLUxGLtrgoghS3pPHE574eeX1ksH4R2MgyW6z149JBRZmQUgzecqWdDVSstoEtPVoykbtA6l7WDayqQLAKXyhWYdlIHfSBBKI1KQ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization3()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "yvcn732KUY",
            "pvpwWJTv2DUcmsWBTf3SfgLVNlOhNoRUioebBno3HZhnyNZ5Q77U04aLs4hmy4C28WnCRfz2leovb1R7O6QOgboW2zpcaLxa2QZma6CRo8nyJO9Y3f9djMgk8QSZwJ1udEIb7zDJ6KZTEk0m",
            ["168a35c4-be7f-4452-87f1-46bf34566564", "a3e61a38-206a-4b97-9047-04e996067b68", "a4142ec6-e632-4329-925c-70faa15dc3ef", "55523aa6-cb80-4cb2-8719-bea3cbcdb6ce", "67b30b8e-90b3-419d-bb87-e6510d43c723", "6bb12cc0-4f59-4c44-9f7c-d49f0d28bf83", "700c66ad-49c7-4836-830d-46a63b39d228", "37d6948c-e143-45da-9331-c65bc0677810"],
            "PVe5LZzi2N@mWBl.com",
            "uHrzflOytN@d3RO.com",
            [
                'bank_account' => "6986",
                'bank_account_holder_name' => ")",
                'contact_name' => "oN7AsxjaX4bkzoW5SSzFCKjOEE829PJZq44v95w5OTBAsM3ixdWcd35lzGg9k8zX5Zx6rdzZ6Kiw60EKpO7FL05ARSiRG2UPRPUxcw9rvtxOfCP20hUm1E2Nlz5V1CO5TSFyNtopqI6bCrDgQTiB"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization4()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "yvcn732KUY",
            "pvpwWJTv2DUcmsWBTf3SfgLVNlOhNoRUioebBno3HZhnyNZ5Q77U04aLs4hmy4C28WnCRfz2leovb1R7O6QOgboW2zpcaLxa2QZma6CRo8nyJO9Y3f9djMgk8QSZwJ1udEIb7zDJ6KZTEk0m",
            ["168a35c4-be7f-4452-87f1-46bf34566564", "a3e61a38-206a-4b97-9047-04e996067b68", "a4142ec6-e632-4329-925c-70faa15dc3ef", "55523aa6-cb80-4cb2-8719-bea3cbcdb6ce", "67b30b8e-90b3-419d-bb87-e6510d43c723", "6bb12cc0-4f59-4c44-9f7c-d49f0d28bf83", "700c66ad-49c7-4836-830d-46a63b39d228", "37d6948c-e143-45da-9331-c65bc0677810"],
            "PVe5LZzi2N@mWBl.com",
            "uHrzflOytN@d3RO.com",
            [
                'bank_account_type' => "other",
                'bank_account' => "",
                'bank_account_holder_name' => "(",
                'contact_name' => "uv10dzqDmxXKufPIjjJpzSXKPSRMVYMVxniANdM0yy6srRZNC9bYJUFWp4SJDd9Vw0ghvUwHY4GPMgqa4p3NBV6jnDEmNinmBAkCQlWqd4VgtaT7nx9nCCSGOYqsqY3PQB7j8S1LcJM99jV6h5DQ4TL9sXbFiutZ4wFjGxBLsRpox6uXLc6he8Kxv6FPaZ8I6AxiybIUdjn2JlMSQ6V8dRYS"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization5()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "yvcn732KUY",
            "pvpwWJTv2DUcmsWBTf3SfgLVNlOhNoRUioebBno3HZhnyNZ5Q77U04aLs4hmy4C28WnCRfz2leovb1R7O6QOgboW2zpcaLxa2QZma6CRo8nyJO9Y3f9djMgk8QSZwJ1udEIb7zDJ6KZTEk0m",
            ["168a35c4-be7f-4452-87f1-46bf34566564", "a3e61a38-206a-4b97-9047-04e996067b68", "a4142ec6-e632-4329-925c-70faa15dc3ef", "55523aa6-cb80-4cb2-8719-bea3cbcdb6ce", "67b30b8e-90b3-419d-bb87-e6510d43c723", "6bb12cc0-4f59-4c44-9f7c-d49f0d28bf83", "700c66ad-49c7-4836-830d-46a63b39d228", "37d6948c-e143-45da-9331-c65bc0677810"],
            "PVe5LZzi2N@mWBl.com",
            "uHrzflOytN@d3RO.com",
            [
                'bank_branch_code' => "",
                'bank_account_type' => "current",
                'bank_account' => "1220",
                'bank_account_holder_name' => " ",
                'contact_name' => "bqn0MLycuAIyd8Tc91YrDumA0BEPaxu5hz8quH88gYqQC45YQseyms9QyHVorEq6zLZyg3cEPs9bN7e1D"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization6()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "yvcn732KUY",
            "pvpwWJTv2DUcmsWBTf3SfgLVNlOhNoRUioebBno3HZhnyNZ5Q77U04aLs4hmy4C28WnCRfz2leovb1R7O6QOgboW2zpcaLxa2QZma6CRo8nyJO9Y3f9djMgk8QSZwJ1udEIb7zDJ6KZTEk0m",
            ["168a35c4-be7f-4452-87f1-46bf34566564", "a3e61a38-206a-4b97-9047-04e996067b68", "a4142ec6-e632-4329-925c-70faa15dc3ef", "55523aa6-cb80-4cb2-8719-bea3cbcdb6ce", "67b30b8e-90b3-419d-bb87-e6510d43c723", "6bb12cc0-4f59-4c44-9f7c-d49f0d28bf83", "700c66ad-49c7-4836-830d-46a63b39d228", "37d6948c-e143-45da-9331-c65bc0677810"],
            "PVe5LZzi2N@mWBl.com",
            "uHrzflOytN@d3RO.com",
            [
                'bank_branch_name' => "JRmWCvXV5f7NFxRTTWOKh4cp2t8rtdj0F82hhuu2d72PSRB",
                'bank_branch_code' => "",
                'bank_account_type' => "other",
                'bank_account' => "7021737",
                'bank_account_holder_name' => ",",
                'contact_name' => "ZnRNAv7oeQjUez1G0bwCFurxmaLHHuXDOcuycPW2WYY40yWZt9ZjHKqLir6qmCF3zfoEN4hG6jzrPFiN4YTSJ9o4hVc0u6tzaZ3sbYKCNybmAlkaNJiOvuRswwQSmiJco3KwhjqpMqyENnnotJKNM2DvQSu0"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization7()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "yvcn732KUY",
            "pvpwWJTv2DUcmsWBTf3SfgLVNlOhNoRUioebBno3HZhnyNZ5Q77U04aLs4hmy4C28WnCRfz2leovb1R7O6QOgboW2zpcaLxa2QZma6CRo8nyJO9Y3f9djMgk8QSZwJ1udEIb7zDJ6KZTEk0m",
            ["168a35c4-be7f-4452-87f1-46bf34566564", "a3e61a38-206a-4b97-9047-04e996067b68", "a4142ec6-e632-4329-925c-70faa15dc3ef", "55523aa6-cb80-4cb2-8719-bea3cbcdb6ce", "67b30b8e-90b3-419d-bb87-e6510d43c723", "6bb12cc0-4f59-4c44-9f7c-d49f0d28bf83", "700c66ad-49c7-4836-830d-46a63b39d228", "37d6948c-e143-45da-9331-c65bc0677810"],
            "PVe5LZzi2N@mWBl.com",
            "uHrzflOytN@d3RO.com",
            [
                'bank_code' => "",
                'bank_branch_name' => "F",
                'bank_branch_code' => "",
                'bank_account_type' => "current",
                'bank_account' => "",
                'bank_account_holder_name' => "ｦ",
                'contact_name' => "zeNINZktFZU0JpHpSrpNbF8O3WzYFSGY9bWV5jbNBEz14f9BIpTXI2luGWaGy1CoCYoYmaLr1BLYdgsrsB7nf3z7z76OYqLZhd2VmnwZ1YQAtf2GPfHYeeJWiJLn1TOWVNqKCYgaN6maSZWJn127yVjYZzSkjksojB4PnV9sBfF1BkHf1A87wLQ9bOIRS2WYI5ck8HRSP5FHw4UX4tGWi4N1WpwhPzDe8V1DYdcKn6nAl4cEX71br7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization8()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization(
            "yvcn732KUY",
            "pvpwWJTv2DUcmsWBTf3SfgLVNlOhNoRUioebBno3HZhnyNZ5Q77U04aLs4hmy4C28WnCRfz2leovb1R7O6QOgboW2zpcaLxa2QZma6CRo8nyJO9Y3f9djMgk8QSZwJ1udEIb7zDJ6KZTEk0m",
            ["168a35c4-be7f-4452-87f1-46bf34566564", "a3e61a38-206a-4b97-9047-04e996067b68", "a4142ec6-e632-4329-925c-70faa15dc3ef", "55523aa6-cb80-4cb2-8719-bea3cbcdb6ce", "67b30b8e-90b3-419d-bb87-e6510d43c723", "6bb12cc0-4f59-4c44-9f7c-d49f0d28bf83", "700c66ad-49c7-4836-830d-46a63b39d228", "37d6948c-e143-45da-9331-c65bc0677810"],
            "PVe5LZzi2N@mWBl.com",
            "uHrzflOytN@d3RO.com",
            [
                'bank_name' => "jv7EDkwXN76HyKk1SGbd2fzw9nBiK",
                'bank_code' => "",
                'bank_branch_name' => "YeHN7C4dOhcXyEVzhZku2OJwUM0kt",
                'bank_branch_code' => "",
                'bank_account_type' => "other",
                'bank_account' => "2",
                'bank_account_holder_name' => ".",
                'contact_name' => "hZgpKbkXWC5tLFNUhqVPCyC44juCu9OYkti8QhcNElbkx4K7ompotaJBLyz8KN17fLxPU1GvU5oJnH6hOfBgmDSuxOmphkziTG6p4HsLeIcNrFvlQBIX1JBgnrD1yLFlL5kbgs6xUgxf"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
