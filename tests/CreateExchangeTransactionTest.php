<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateExchangeTransaction extends TestCase
{
    public function testCreateExchangeTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateExchangeTransaction(
            "fd0b6e38-028f-4907-bc10-93e0a357dba8",
            "7c7f67fe-c845-4916-a875-368459247c7b",
            "8cd49678-0d12-4d4c-92f5-86cac56619a7",
            1200
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateExchangeTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateExchangeTransaction(
            "fd0b6e38-028f-4907-bc10-93e0a357dba8",
            "7c7f67fe-c845-4916-a875-368459247c7b",
            "8cd49678-0d12-4d4c-92f5-86cac56619a7",
            1200,
            [
                'request_id' => "579eeac7-2efc-4865-b2a3-876fcac4d67a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateExchangeTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateExchangeTransaction(
            "fd0b6e38-028f-4907-bc10-93e0a357dba8",
            "7c7f67fe-c845-4916-a875-368459247c7b",
            "8cd49678-0d12-4d4c-92f5-86cac56619a7",
            1200,
            [
                'description' => "OkBm5gGWlF4HXR4PVPmGwRT62STGf6pwIdD1fPTyzR5SDsUJGy1NDKM3Q4KoVy0L9pXDMgyKLPzeeuz9D7HNUqDfAmpMIs3QBH67kbG063uSe7vP6kx16SGlK47t8LDx8fQb19iNCe07J0pl9C",
                'request_id' => "e9a4debd-b39a-4054-8920-9f6fcc606368"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
