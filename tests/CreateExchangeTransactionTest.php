<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateExchangeTransaction extends TestCase
{
    public function testCreateExchangeTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateExchangeTransaction(
            "783c8b6a-bf2c-49e7-b985-d26ca216db3e",
            "1bb9e055-507d-44c4-9420-a54b3ef84e7c",
            "005ebf3c-82b4-406a-a83e-644a03e00e48",
            6419
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateExchangeTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateExchangeTransaction(
            "783c8b6a-bf2c-49e7-b985-d26ca216db3e",
            "1bb9e055-507d-44c4-9420-a54b3ef84e7c",
            "005ebf3c-82b4-406a-a83e-644a03e00e48",
            6419,
            [
                'request_id' => "b708d430-f36a-471a-816a-26ce3efa5457"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateExchangeTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateExchangeTransaction(
            "783c8b6a-bf2c-49e7-b985-d26ca216db3e",
            "1bb9e055-507d-44c4-9420-a54b3ef84e7c",
            "005ebf3c-82b4-406a-a83e-644a03e00e48",
            6419,
            [
                'description' => "1ZH6MoDDkoySCPKncEWYebt4RUGRqT3wcuceySCabxrgTXSxZbg1Ud9jBS9CQqv6T7eIQXHJd8SnpNPnO39WNWvjXlHUhCIHkbLQ7KL6y3Sdoxdn1tpYM1z5XMrmRY7bQCW9sPYWAKIaPAnlgG8mho7qKj",
                'request_id' => "9c1efafb-10db-4f7e-88ad-a9958194753e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
