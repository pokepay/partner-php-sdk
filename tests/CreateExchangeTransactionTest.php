<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateExchangeTransaction extends TestCase
{
    public function testCreateExchangeTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateExchangeTransaction(
            "30b38e54-4701-472a-adc8-338abe2450b8",
            "34660935-2a17-4e8e-8561-3152c73e38d7",
            "3540d404-0202-4cce-91c3-677e911de18e",
            5489.0
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateExchangeTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateExchangeTransaction(
            "30b38e54-4701-472a-adc8-338abe2450b8",
            "34660935-2a17-4e8e-8561-3152c73e38d7",
            "3540d404-0202-4cce-91c3-677e911de18e",
            5489.0,
            [
                'request_id' => "3dc8685a-08c2-4571-836b-189ab51cd4fc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateExchangeTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateExchangeTransaction(
            "30b38e54-4701-472a-adc8-338abe2450b8",
            "34660935-2a17-4e8e-8561-3152c73e38d7",
            "3540d404-0202-4cce-91c3-677e911de18e",
            5489.0,
            [
                'description' => "7vG2G1CPe6nCJXdPXSavMIC7L1PXkbArWdy4rqV1OR9dYbWBsymVxL6raa9lStAWIjI7",
                'request_id' => "baef03c0-d712-46f1-aeed-963c63c48945"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
