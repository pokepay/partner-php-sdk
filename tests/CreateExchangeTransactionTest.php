<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateExchangeTransaction extends TestCase
{
    public function testCreateExchangeTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateExchangeTransaction(
            "ae543d05-1d98-4519-b3c3-0704a9ff4186",
            "14ab6d13-e172-42de-89e4-192f1a9736c9",
            "0fc38fd1-16b4-4a41-9836-b1754c13abf0",
            6125
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateExchangeTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateExchangeTransaction(
            "ae543d05-1d98-4519-b3c3-0704a9ff4186",
            "14ab6d13-e172-42de-89e4-192f1a9736c9",
            "0fc38fd1-16b4-4a41-9836-b1754c13abf0",
            6125,
            [
                'request_id' => "9bc5380f-adf5-4aca-9287-2f6db6f392af"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateExchangeTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateExchangeTransaction(
            "ae543d05-1d98-4519-b3c3-0704a9ff4186",
            "14ab6d13-e172-42de-89e4-192f1a9736c9",
            "0fc38fd1-16b4-4a41-9836-b1754c13abf0",
            6125,
            [
                'description' => "nGpQyVF10EF7PaNv8ZkW5JwYZcZzH1gITdb28FZg7gMnxQ2MHWrNb5qe328jC4vfdJt7XH76ii0OoMhVnBLAlTkyqNi8sNYNRnVWdmiRLPWqxtoi76q3Xqh3CexYSVibXxbbzsCQz5KixOodECaA8Oq4KynIOe8R2FkDtMhJttf2meOkJIW",
                'request_id' => "f0ad22c0-15ea-460b-b461-b9e42940d587"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
