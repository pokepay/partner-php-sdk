<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateExchangeTransaction extends TestCase
{
    public function testCreateExchangeTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateExchangeTransaction(
            "29af506f-9072-433f-9dc5-adf190c6ceb6",
            "0dfe05ac-9e7b-44fa-ad98-1d4c01acf0a7",
            "d910fda9-2d27-407b-8e19-bb249777445a",
            5288
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateExchangeTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateExchangeTransaction(
            "29af506f-9072-433f-9dc5-adf190c6ceb6",
            "0dfe05ac-9e7b-44fa-ad98-1d4c01acf0a7",
            "d910fda9-2d27-407b-8e19-bb249777445a",
            5288,
            [
                'request_id' => "4b788af9-2519-4e03-88e7-03888de2041b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateExchangeTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateExchangeTransaction(
            "29af506f-9072-433f-9dc5-adf190c6ceb6",
            "0dfe05ac-9e7b-44fa-ad98-1d4c01acf0a7",
            "d910fda9-2d27-407b-8e19-bb249777445a",
            5288,
            [
                'description' => "3cEPs9bN7e1DJRmWCvXV5f7NFxRTTWOKh4cp2t8rtdj0F82hhuu2d72PSRBNNGTP71wcJLJGkIvTZnRNAv7oeQjUez1G0bwCFurxmaLHHuXDOcuycPW2WYY40yWZt9ZjHKqLir6qmCF3zfoEN4hG6jzrPFiN4YTSJ9o4hVc0u6",
                'request_id' => "ccb3c780-4174-418b-ba61-e87d22ab14da"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
