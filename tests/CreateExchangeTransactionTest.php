<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateExchangeTransaction extends TestCase
{
    public function testCreateExchangeTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateExchangeTransaction(
            "34c16932-cea4-4328-b6b0-a658b22dd6c3",
            "a2247f58-355c-4fd9-ad04-7e8dd0ceb695",
            "a2426a73-0012-4312-b3e2-f39c9b9a10ad",
            4966
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateExchangeTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateExchangeTransaction(
            "34c16932-cea4-4328-b6b0-a658b22dd6c3",
            "a2247f58-355c-4fd9-ad04-7e8dd0ceb695",
            "a2426a73-0012-4312-b3e2-f39c9b9a10ad",
            4966,
            [
                'request_id' => "473cff53-7b8b-4f9e-a2fc-d89102266d49"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateExchangeTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateExchangeTransaction(
            "34c16932-cea4-4328-b6b0-a658b22dd6c3",
            "a2247f58-355c-4fd9-ad04-7e8dd0ceb695",
            "a2426a73-0012-4312-b3e2-f39c9b9a10ad",
            4966,
            [
                'description' => "Sgbc3O1uV4Ac0fszcVfn0bmqXtzLJrEZyQwnAouaieFhka2yoZcY3EjQ2fMD7aWa",
                'request_id' => "35163ec1-256c-4bfd-afb2-f7a9b7baf669"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
