<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateExchangeTransaction extends TestCase
{
    public function testCreateExchangeTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateExchangeTransaction(
            "692d97e6-f2ed-4d5f-8c10-7870c730a28f",
            "9e558030-11c1-42a8-a9e9-66ac7f5cc996",
            "201acd88-6ecf-454a-ad99-7682ebd35172",
            5724
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateExchangeTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateExchangeTransaction(
            "692d97e6-f2ed-4d5f-8c10-7870c730a28f",
            "9e558030-11c1-42a8-a9e9-66ac7f5cc996",
            "201acd88-6ecf-454a-ad99-7682ebd35172",
            5724,
            [
                'request_id' => "eb884d61-0883-47ac-8347-9dec3047df8f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateExchangeTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateExchangeTransaction(
            "692d97e6-f2ed-4d5f-8c10-7870c730a28f",
            "9e558030-11c1-42a8-a9e9-66ac7f5cc996",
            "201acd88-6ecf-454a-ad99-7682ebd35172",
            5724,
            [
                'description' => "xBkBXF5UWT1IVvksezKenGwoydu75ECOUj4nMRgvTtizC4CnjsxC5nyC8LNmTowdyCbwSJdj5prBzewnH2wSRfN7yP2NU4MpYRYEDta0IKe7SHIeIrT7WhlGLpPedgbm2wx4RsAdRlm1m",
                'request_id' => "26af536f-bf64-4185-a3bd-17e8c14851d8"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
