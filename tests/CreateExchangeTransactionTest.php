<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateExchangeTransaction extends TestCase
{
    public function testCreateExchangeTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateExchangeTransaction(
            "f54c7d61-ad30-4f39-8204-c95b5410ec29",
            "7103e596-e74f-4b02-a6f0-6093a54a4054",
            "964a23bc-818e-46f2-895e-d2f8c680f37f",
            3324.0
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateExchangeTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateExchangeTransaction(
            "f54c7d61-ad30-4f39-8204-c95b5410ec29",
            "7103e596-e74f-4b02-a6f0-6093a54a4054",
            "964a23bc-818e-46f2-895e-d2f8c680f37f",
            3324.0,
            [
                'request_id' => "5a77dc61-c714-483e-a87a-1342b2b9d2c4"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateExchangeTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateExchangeTransaction(
            "f54c7d61-ad30-4f39-8204-c95b5410ec29",
            "7103e596-e74f-4b02-a6f0-6093a54a4054",
            "964a23bc-818e-46f2-895e-d2f8c680f37f",
            3324.0,
            [
                'description' => "xgf0eAPjokEVHRFLghiMn2sJjV2bGnLruRc9c",
                'request_id' => "215b4e32-bf9b-402a-9f03-7b06cc81461a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
