<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateExchangeTransaction extends TestCase
{
    public function testCreateExchangeTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateExchangeTransaction(
            "aa7d5627-2d0b-4bbd-a3ae-c2f5bd68bda8",
            "0ba5eb73-ebce-4c6b-903d-02b960d082a5",
            "31359032-b7a8-4395-955b-3c80ed1a57ec",
            5318
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateExchangeTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateExchangeTransaction(
            "aa7d5627-2d0b-4bbd-a3ae-c2f5bd68bda8",
            "0ba5eb73-ebce-4c6b-903d-02b960d082a5",
            "31359032-b7a8-4395-955b-3c80ed1a57ec",
            5318,
            [
                'request_id' => "9bd41548-ed16-423c-811a-dc60f2dca8f4"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateExchangeTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateExchangeTransaction(
            "aa7d5627-2d0b-4bbd-a3ae-c2f5bd68bda8",
            "0ba5eb73-ebce-4c6b-903d-02b960d082a5",
            "31359032-b7a8-4395-955b-3c80ed1a57ec",
            5318,
            [
                'description' => "r5uMSg7mI2h9L5UgNjF9pGXPoR6V6EH9oG2E8mJwg74tJdyJ5Llab29gfUQ6hTQL306GhITMLHDmfb2965KcWooPsLAa0LofoeILq2j1JbokM11iel9SifEKQQKEl5jTOYEn550ChTMJy5Ri4zQipR66DYXbWwtCBK4yI7b7ruIn1DQefV0LKmn0D6u1aqXUgLX",
                'request_id' => "04fcde16-034c-4f50-b188-f93233157f90"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
