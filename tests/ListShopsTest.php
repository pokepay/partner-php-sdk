<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class ListShops extends TestCase
{
    public function testListShops0()
    {
        $client = $this->newClient();
        $request = new Request\ListShops();
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListShops1()
    {
        $client = $this->newClient();
        $request = new Request\ListShops(
            [
                'per_page' => 9364
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListShops2()
    {
        $client = $this->newClient();
        $request = new Request\ListShops(
            [
                'page' => 1639,
                'per_page' => 8305
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListShops3()
    {
        $client = $this->newClient();
        $request = new Request\ListShops(
            [
                'with_disabled' => FALSE,
                'page' => 4517,
                'per_page' => 9429
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListShops4()
    {
        $client = $this->newClient();
        $request = new Request\ListShops(
            [
                'external_id' => "RE7AGh7IBoqtORWphg",
                'with_disabled' => TRUE,
                'page' => 8328,
                'per_page' => 2420
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListShops5()
    {
        $client = $this->newClient();
        $request = new Request\ListShops(
            [
                'email' => "LWKc18Ssms@7CHX.com",
                'external_id' => "6rxMt9IbK96Gwor8G",
                'with_disabled' => FALSE,
                'page' => 8989,
                'per_page' => 6723
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListShops6()
    {
        $client = $this->newClient();
        $request = new Request\ListShops(
            [
                'tel' => "0884320-917",
                'email' => "AzUkrq83tx@gkq3.com",
                'external_id' => "Iwyp9dIVU4oLI2iU3kf5ivX5QR",
                'with_disabled' => TRUE,
                'page' => 7771,
                'per_page' => 1468
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListShops7()
    {
        $client = $this->newClient();
        $request = new Request\ListShops(
            [
                'address' => "GQ4p2ihmRW9WAqWB2G7SeeZYoW0eah2fMhw8AppeSdq5ltqCus824zMZpNZyZWB1hA20eNSiZI1QoP7T2ehPDlvUG5HpwctbpY3xfdc1OBiMzm1GxTqExojwSlrBdvcg93qLMniZx2nokYx3KQLfApsR7V1FrSbkD5oLKq68awY4VdUm5tkRMgU3W884Xlf9G9veYCgdMRiS9HP97uiPvkAzIj60CRtOheL3XuxLjpA",
                'tel' => "05-89-826",
                'email' => "XUkX2XL4J0@lGAo.com",
                'external_id' => "GycDHA",
                'with_disabled' => TRUE,
                'page' => 8289,
                'per_page' => 367
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListShops8()
    {
        $client = $this->newClient();
        $request = new Request\ListShops(
            [
                'postal_code' => "3406605",
                'address' => "jKh5vK0odcV3vTQ5hmaZ61uthgGYtTgGs6xYtjvER4DRKF0bEIV3m9FsqAQAIjFeTIyOyT0Tc34oLTyd8WXd1bBpSFPFIMjlMGiNImHZbuwlUXMgsSiFTJmRCiGQ3pFOlg0EYgVK7xdj6A7lWiq3yuvoW356ZTeTzdHZAAafgaqJ83Q9v1X64Usrl2d4lI6cz42EOwo2ICpbZM3aeftuTQd5PW7HwNwKz77QWO5qukVc8",
                'tel' => "080-25839295",
                'email' => "07nlD9VJcO@QIJD.com",
                'external_id' => "TWTDyc",
                'with_disabled' => TRUE,
                'page' => 6226,
                'per_page' => 4373
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListShops9()
    {
        $client = $this->newClient();
        $request = new Request\ListShops(
            [
                'name' => "xUVpha05JGCclcRVoGgrrhPj4OhPUAyWOi1wRpzCX6CQAxL3dMXE0gAGLvdBZStA3Wq0qsZqWvjLtOm3FX3ZIyxL9gDIo4JCEN00kzac70SO8zlRV9NxKIrgvm6r9WyInVMi4eDFALXHZKto0YPDUeFsecDuK3F3bTzHdj7RZCLVwLoAGDJMFUZd9DoeiQPq8aENcxlmF9hc7zEGjOG5mGAc",
                'postal_code' => "1136062",
                'address' => "3mdwqbiqiwP9qUZbp8YjD3Z029JdLRXZqC7ciFffJ3jX0W3wggmGJBaxX8atLAiBjldeqs3pjWfApauPWJDNLcqHjX",
                'tel' => "00229-1515",
                'email' => "cnnbiTuxMI@QZCC.com",
                'external_id' => "TQFOuGqnATtqdNLCY8o1D72",
                'with_disabled' => FALSE,
                'page' => 7453,
                'per_page' => 9954
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListShops10()
    {
        $client = $this->newClient();
        $request = new Request\ListShops(
            [
                'private_money_id' => "aadf692d-4d59-4bed-ab0c-d8b5930292de",
                'name' => "xpYb6WJIpln",
                'postal_code' => "6445105",
                'address' => "DN8gpE49EfZTIENHGJY80zHtT",
                'tel' => "07-46272860",
                'email' => "mi1i49kcUP@YPPn.com",
                'external_id' => "F",
                'with_disabled' => TRUE,
                'page' => 5943,
                'per_page' => 7486
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListShops11()
    {
        $client = $this->newClient();
        $request = new Request\ListShops(
            [
                'organization_code' => "-A-wI-jp-T-IDB--vnzB27",
                'private_money_id' => "e06a4bf3-4633-4263-a2c5-24904a75eaa2",
                'name' => "09V2oHU6a8nryxkZIFbmH6ngTLQ1VwdO6ALoYTzrE3otH8Sd0cTR9aRq2O4jeufgzlS1GI4jcd3hjW1EgM29uMZPc7faIviDDEcRObQbkDA3vCwXK8jlTfGmESGWSiro7f01lHGRsSE27yKvO9IQSkDKr0REKV8ByHdtsKYOSrPRPKr7KOp31DGpgSFgPQjctotUUqGf27WZoxrvIpB7SucMD7AjHibEiZXzMyCO5lxDqoLKjtQMD5u9LrvCzg",
                'postal_code' => "314-6363",
                'address' => "oXgc9TbH1pXR3bmopj7TxCkA8Wu2yYsHJBSWAYmaPGr9Sv6oQPyzOTyS5W47JJRZ0dUWf4dMficffnzX54ti9Ddm62pJXQnqLy7UFHbJx1bT8Hoh2ucw6ZDybH8Yy1selyV12YdpRYHU5qHMiguPksiUm7xH1mAQAXmHNIfqd6lnElLJXJOutNBuPAaHPBe38eobnEzylxoU79HQwaPUhipxLXMA5GAVo9fjGYc0pdpWgGnh7DYZROPw0etGzFR",
                'tel' => "01379806-769",
                'email' => "XjHN8jEDif@d3MW.com",
                'external_id' => "nVNYHzSwes25x",
                'with_disabled' => TRUE,
                'page' => 733,
                'per_page' => 722
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
