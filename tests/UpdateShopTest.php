<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class UpdateShop extends TestCase
{
    public function testUpdateShop0()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "60b54217-6be0-4eca-b454-290d8d10cfe2"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop1()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "60b54217-6be0-4eca-b454-290d8d10cfe2",
            [
                'status' => "disabled"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop2()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "60b54217-6be0-4eca-b454-290d8d10cfe2",
            [
                'can_topup_private_money_ids' => [],
                'status' => "disabled"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop3()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "60b54217-6be0-4eca-b454-290d8d10cfe2",
            [
                'private_money_ids' => ["82b3bfa6-9af6-4471-82ca-bb6f29d5661f", "18d2b515-747a-47e3-b530-dc9831ca7c48", "0bdd5d8d-4c99-4737-81af-9d9ce97c24af", "65d5454d-3ddf-4a95-8dd6-c0b8e35aa7ce", "f5d3e345-2f10-464e-a02d-aab927d2612c", "ec2f32f3-6177-4577-85a4-343e6bcc055e", "eaa33926-3b79-40aa-ae5f-d70e3405b8c3", "c40c60aa-f93d-4067-9e39-cb6c2a1c1f1f", "7bfc2bbf-f850-4a2c-a68e-890502812b49", "a607a196-94ce-4037-8a06-69772df3cb90"],
                'can_topup_private_money_ids' => ["46fecaaa-afb1-45a1-a002-cb0553c10d7f", "4869400f-edcd-4030-acc1-da7623352cc4", "32cab13b-e1ba-4bc5-8330-1738ed622d41", "fa03e1c2-40e3-4af3-947c-32fa0638f50a", "87cf1c63-4dad-4572-a536-1fddb0dc6ead", "996d5981-c5b6-4fdc-9428-11fe617db1f3", "ac7a951e-a8eb-4311-8925-72e5e19500d2", "9e647298-c22f-4a67-b20c-2ad286133232", "e484c11f-6d8b-4efa-9e3e-7e96fac96c3f", "4b937f32-1a75-490a-a2ca-5da58e884ef7"],
                'status' => "disabled"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop4()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "60b54217-6be0-4eca-b454-290d8d10cfe2",
            [
                'external_id' => "fFUauxC1R0p8IEqc90qhRmJU7NSuhIfkgQX",
                'private_money_ids' => [],
                'can_topup_private_money_ids' => ["0363c63b-152b-4392-94d4-4f49a97ff225", "4ce20e08-65dd-48de-8510-025c7a631793", "2719ef3a-4428-4831-8978-670aa63e367a", "dbd555ad-aa55-4e90-8a8b-6a0eeb7309c9", "9f67342b-f6f8-429a-b756-9dbfa619862a", "67c017fe-4144-4541-a995-37f87cd1e88f", "ef47b734-1815-43c3-9c14-31585f93f867", "db80afbb-d373-4dbd-8043-66cba01c9b24", "9f6e1443-3685-4c6b-8c39-5930bbbc7254", "a3366a34-9a5c-4318-902f-1fc05acd567b"],
                'status' => "disabled"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop5()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "60b54217-6be0-4eca-b454-290d8d10cfe2",
            [
                'email' => "YadzdqIUPF@QHT3.com",
                'external_id' => "Ar5hSJ9mfftK5WW",
                'private_money_ids' => ["0faa3dad-182d-42ec-a06a-296def39d9ef", "b77c6573-bec7-4eb0-b7ac-3baa9ac54656", "d3d8173c-52d5-408b-8938-e3defc4557ec", "39cef9ea-f2fb-41c4-8ed3-233348e55802", "279669f5-1529-4634-9d0a-4286c0a90544", "5d442c07-3c54-4af5-a95a-0fc188334193"],
                'can_topup_private_money_ids' => ["8e4612f4-34a4-407d-9e60-e40c0b1d8f63", "d1d29592-d3af-450a-b3ef-dd2c274a5805", "f0bf70c8-908a-4ffe-8fe4-1bc24488efcd", "975f5608-ad12-403f-bd75-a313830b7a1d", "fd2ac11c-7fc0-40d3-a10f-6366b9ed1174", "a5f3f6c1-dafa-465a-8b28-d8bd06944065", "971a8870-1dd9-4233-9648-dd09b5153bcc", "8cc72199-629b-4704-8b5e-f54bcbcc423d", "47a06609-3f3a-44fa-8aac-e1812d800f7a"],
                'status' => "active"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop6()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "60b54217-6be0-4eca-b454-290d8d10cfe2",
            [
                'tel' => "015216254",
                'email' => "QuINbBhRUT@MfCJ.com",
                'external_id' => "z27TqXdG",
                'private_money_ids' => ["d479f922-8fdf-4e7a-8728-e23421f5e889", "698d4684-baa3-493d-bd77-33a77c7024b5", "4cd4f9e4-d8b7-45d8-aea8-be71e6545d55", "b753d6cf-8066-4b90-89e7-a77eb79e6ed5", "649f9561-9565-4ff9-af08-3895142f88f6"],
                'can_topup_private_money_ids' => ["f476826a-6be1-4fbd-8f58-8a0cceb94406", "48421754-7b0a-4aa1-bcaa-67c084bbc059", "b84af02a-e792-4a54-97f9-4c5a7c4afd77", "fc8a82ef-ba99-4d1c-aa30-5a9f364db7da", "8ed4b12d-ede9-4ed1-9b3a-2aa7f2fac1f5", "b470dd91-23f3-4d88-974b-12c1dfbcb0e2"],
                'status' => "disabled"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop7()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "60b54217-6be0-4eca-b454-290d8d10cfe2",
            [
                'address' => "5vQFelNyPYygVdlL66z8IarsrWkEfn2iFsBbs2eOK7QOrU92uX7mpFNbgvLD1S447xLKMFMKDLBKIeF0oqnL",
                'tel' => "004-103487",
                'email' => "7QTrokJzPQ@3u0m.com",
                'external_id' => "K8HMXkCP6E0",
                'private_money_ids' => ["c0924455-9765-45b9-bb9a-4858250bc283", "88407a88-852a-4b3f-8771-0c66bc77883e", "5390f973-6a60-4210-b77d-ebb5cfed7ba8", "f74b8f28-0049-4ea3-a0ab-27df04d76904"],
                'can_topup_private_money_ids' => ["10230ac2-805a-4e51-b150-6c239470c58a", "3d643bbb-e083-4c47-ab48-c2b165edeb92", "c7c5c0ab-dee8-43aa-b082-e02215cf0d3c", "cf778b1b-7a6d-4f14-bcb3-a8293344532d", "8ab4a73c-23dc-4891-9553-6efb889ed684"],
                'status' => "active"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop8()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "60b54217-6be0-4eca-b454-290d8d10cfe2",
            [
                'postal_code' => "983-8746",
                'address' => "o8RaWRG26WjzoHbgdxOa8nvOZhd9IxvWft92hNFvRYZ5iha007IKcmZM5Lw2DxnKzrdWj9IQ5hKpcL9lfq55itqGsfRtiQOEExcAgHLD3NZNSGrcBOpX0rBG7ytmceB50FZ6G6ERrbBk3GUg",
                'tel' => "01-16675",
                'email' => "dp5xon8EII@sVL5.com",
                'external_id' => "FC39Y1bqqdrTb3PlqdUc8nuHa",
                'private_money_ids' => ["bf31fa47-cbfa-41e4-9c8b-0efae3f41d9d", "9eab8fb6-c017-477b-96ae-b7ed8024ecdd", "92cc7e03-3959-4892-989d-2bcae514a9f9"],
                'can_topup_private_money_ids' => [],
                'status' => "active"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop9()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "60b54217-6be0-4eca-b454-290d8d10cfe2",
            [
                'name' => "q1n8OjVpJPW",
                'postal_code' => "0965523",
                'address' => "VvDshH66E6FHISVRJp0xvzTGTGBDjfLJfjxz96VpKWHkRepPDWDNG5e8LdXAMoG4lAIC9FQ4xoUtPbL88r5x2fmtvEsuwfqCjEs78moFqN8kgQ1FGtzFKegPK652ySoxlY7GMlhkwATBPMM2L2klgCJK7E9nTZphyVlbetG34WfbxB0TsEn75Ox4orwYsUuQuR0mUpHVAb1wPf",
                'tel' => "0643-900204",
                'email' => "nyxI9my7XJ@dSO0.com",
                'external_id' => "De7kG7Wx",
                'private_money_ids' => ["34b0f522-b654-4903-aeae-6eba0ee9f8c8", "ac12ba7e-8585-4100-a5f7-e5b820fb4cf1", "57c9a718-9e78-4fb2-ae06-9cc23e6619ff", "a3585466-521e-4591-843b-fda5f7378c09", "4147b4d2-7eeb-4013-b286-e6cf5326349d", "40f63e66-4934-45e1-83d5-90651ff57443"],
                'can_topup_private_money_ids' => ["226abfb4-5e6a-448d-8ed5-67d6c4e2d308", "c0fc80e5-9e72-4509-8837-b1267d7a6f8d", "2b697c58-bd5b-488b-bb4b-b1216186e9d2", "389c9e34-2988-4629-8cce-7c5e83f8ece8", "8b4b9034-dae3-4ab9-b6b9-933635b13825"],
                'status' => "disabled"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
