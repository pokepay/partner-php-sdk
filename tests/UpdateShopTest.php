<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class UpdateShop extends TestCase
{
    public function testUpdateShop0()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "93e3b25e-4465-44c7-97ab-37da91824770"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop1()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "93e3b25e-4465-44c7-97ab-37da91824770",
            [
                'status' => "disabled"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop2()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "93e3b25e-4465-44c7-97ab-37da91824770",
            [
                'can_topup_private_money_ids' => ["42e29551-9ea5-4671-bad5-9887b316263b", "8f2dd5c8-bac4-4d50-b250-0a6a53d9424d", "2f0a741f-9dd7-4664-8897-339fe2edab93", "cb242190-9e66-4937-9805-4d429dda0a93", "4cee20c0-36b6-4a4e-a5e9-4d4f2d8730bb", "c38a1725-e7eb-4f4a-a04f-92a197b8b15b"],
                'status' => "active"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop3()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "93e3b25e-4465-44c7-97ab-37da91824770",
            [
                'private_money_ids' => ["70eb9786-589f-4d02-b6c0-8a7fd8e286b7", "0bd166c7-cec9-4ee9-8287-28e31c01383f", "b1837a50-9a87-495d-bbdb-b0c30346937b", "888289ba-c586-4f54-bb14-9c2da1a5cb44", "f5abec92-807e-4489-8243-0583260287aa"],
                'can_topup_private_money_ids' => ["595c00e9-ce21-4bf9-ba27-30a5e6158594", "1afd20a0-95b7-4484-bb00-7531c065d62e", "85c0c1ff-22f9-4832-a6c0-f0a69f80b368", "490f7fa6-b4d0-401b-9b3a-aab489f6d440", "9f8208f5-b6ee-4a3b-a101-a27d6beaa3b4", "21e45525-be25-450e-b8ab-950259d060ab", "a03f1e48-04a6-4303-ba21-be05cff46985", "3caef636-64ef-4101-bfa1-73088d99719b", "0911f044-64a4-4da7-95c5-a6d5f6fce74d", "4482d0bc-0f59-4ced-b0ad-a603dc45694f"],
                'status' => "active"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop4()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "93e3b25e-4465-44c7-97ab-37da91824770",
            [
                'external_id' => "QtJ5X8TqOee4isCfSnhfqrYMsPZ2GLFG",
                'private_money_ids' => ["7c91011c-22eb-4b86-aa88-618630c0ff76", "9e803e19-a4d6-4ec5-b8d3-09d049826233", "f0ebb1f8-4225-49dd-90c3-afe837acd230", "0a707475-dd4c-4121-9155-1272d6feccb3", "8a2fe053-1479-41b9-ba4d-77abc0967eb7", "2c3a1d26-8648-4b93-a58f-6bd8815d41cd", "d906c65c-4c36-419f-a63f-a483602ea518"],
                'can_topup_private_money_ids' => ["93dffcf1-b83b-4c7f-ac66-d8649dbf775d", "36435dc8-1e7d-40e7-8ddd-51eaeb412340", "bc1dfcf9-29cf-4b29-a7de-7e2105cdf619", "4f6a2eb2-779d-4ded-95ce-0578113c8e25"],
                'status' => "active"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop5()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "93e3b25e-4465-44c7-97ab-37da91824770",
            [
                'email' => "i20RBpU3Vx@3obe.com",
                'external_id' => "YOquZdjIcsBO",
                'private_money_ids' => ["66d46119-2092-4083-b110-49e5e25f1094", "e86df2f9-7413-4552-971d-f446da77d7c9"],
                'can_topup_private_money_ids' => ["531530a2-acba-4b19-b330-5507e276f35c", "ded29a03-a247-46b3-9d5c-1ef420e3e8ba", "392c56ee-c221-4ade-a5db-4f6125c1f567"],
                'status' => "active"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop6()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "93e3b25e-4465-44c7-97ab-37da91824770",
            [
                'tel' => "097424559",
                'email' => "PJeu2XqpzM@zkC5.com",
                'external_id' => "hQ1CQo4WezJ2px7",
                'private_money_ids' => ["70ae6dbf-1b30-4520-a9a9-6cb1405c9196", "59c9876c-6864-4163-9504-a0a5ecabe567", "aaffa1f0-9cc2-4175-af60-386563734403", "e745a405-1a42-4f32-a684-bc84ca076254", "98639ddc-b29e-4204-8e2e-bea9e79abe27", "f57dc594-36c8-4e78-84b3-3b0aba024f70", "5ca99e27-1d25-4be7-b209-0397b30cfc1f", "865eed7c-9f29-44bb-b700-40631f2b9893", "58698fbe-188e-4236-8d49-5a83e565e76e", "f145d6a1-a541-4782-925e-1cbd6121f428"],
                'can_topup_private_money_ids' => ["a1c4f38f-a68c-43f7-8fd8-03e65de27fa3", "21376a30-3e38-4b13-8da9-e55f891bf2c2", "7aafc017-b369-4202-9d4f-4a82a5f93df2", "02d7a892-9af2-4c0c-b937-05e304253f8d", "af8e1f70-f4b3-479e-844c-b1b57925f669", "42908461-3f98-49ac-bd43-2903bbba853a", "014769c4-faef-4a88-a869-422243df9e43", "ea8c43f1-6261-4742-9380-81eb1d30a88c", "6b07508f-4a47-47eb-9861-5578a67e65da"],
                'status' => "active"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop7()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "93e3b25e-4465-44c7-97ab-37da91824770",
            [
                'address' => "cAYECHek6yFHN0vG12039gjAaGqsNZhNtMA019vqyA3LQmGzwGLqJlmETBOgr5EOqEp0P9ToXW",
                'tel' => "0913982906",
                'email' => "6QtZCxLq5M@hbdX.com",
                'external_id' => "JOMTSTEAGupCiQEnc5hwPnnESgueMAKm",
                'private_money_ids' => ["6fdc8660-f10a-492b-a142-3a5d8048e0d6", "dee72dbe-513e-43e9-9bd3-ce6e4a5dc7e0", "5edd2673-2854-4271-b1b4-07d0119b8ed6", "6206c6c7-96dc-4a72-87c5-d8bff8be53eb", "5adba2ec-1724-42f1-b324-8ccecc154b4e", "a3c08327-b2dc-4572-b0d3-52659df70cb7", "986e245c-e381-4da4-91ea-a8bb887cb648"],
                'can_topup_private_money_ids' => ["4873c4a2-4665-497a-8a56-986e2ab23429", "1ccf9dc5-4110-4d61-8512-eca4764b8f19", "4e16ec73-bc5c-4a33-ae04-c3128f43ca35", "813852d6-857b-4de3-afd8-331071dcec8d", "c2fc9f53-99ed-460a-a9d5-3e310d9bab02", "da36c0eb-5eab-48fa-afc7-7798fd50d59b", "071561d4-040e-4ce9-a190-87fd05c48a57"],
                'status' => "disabled"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop8()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "93e3b25e-4465-44c7-97ab-37da91824770",
            [
                'postal_code' => "1245392",
                'address' => "oLPVjXmMD0EbHEeT21rGH9Ms9fMlg87ac8wiRJIwgWMdUy8uG6C5PRZQB5Hg7dunrtLyV63Hr0oPGWJ9UvhTk2FX5rmzwjGJx7OiI",
                'tel' => "095-008-968",
                'email' => "6dvh48qgPB@ByD8.com",
                'external_id' => "lG2gmJRvrd",
                'private_money_ids' => [],
                'can_topup_private_money_ids' => ["1513fd69-5085-40ea-98bc-f067ea38cb58", "6c30e77b-2375-48aa-a550-860d6135bcc6", "a58fb6e6-bbf3-4b1b-87ce-1aac99fbdbbe", "4d1d651b-ae59-464f-9259-f33fa8856628", "01e296b7-1c2e-4b56-aaef-b1157573b79b", "0e545acb-75c2-4f03-b51e-0835e1159d37", "730a8681-c11c-4a42-b37c-01baf5a3762f"],
                'status' => "disabled"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop9()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "93e3b25e-4465-44c7-97ab-37da91824770",
            [
                'name' => "NDcWX14vhOnkkgEDl7KNciWSgMd3emOlxvG8bvesviiOlmpc36LGpcI4joTo9DY8OKb5KLBQMTg5jFHzudC4JqPAfHBKyxnv5Irk",
                'postal_code' => "152-2948",
                'address' => "J9eSLCjd2o20rKPkFRTOO4Fu3RxsDuJa7HSdcP732DW3vxY9WNC58Q3TvbMkJeT",
                'tel' => "063-399128",
                'email' => "DBMwBwQpNb@fUHo.com",
                'external_id' => "TKocCQmofKVn6CcNEIeKSjhiIUOJ3CmcBKK",
                'private_money_ids' => ["7a912ff8-cef0-42df-9c90-9ed9264f2716", "11784292-4c8c-4f97-a24b-3c4ee57b7d36", "41accb6a-4792-4708-9be7-f1384f133633", "b56b230f-8cbb-4b8f-85d5-728d5aa7584a", "08a0a1c3-6ec2-4e68-a02a-901119fa4cd8", "515628a2-d761-454e-866e-a21ce99049ea"],
                'can_topup_private_money_ids' => ["dacaa7ce-643a-40ea-9604-fb67ebc4357c"],
                'status' => "active"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
