<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class UpdateShop extends TestCase
{
    public function testUpdateShop0()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "12d4edb2-e698-4ebb-9c4e-5bb52ea4d217"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop1()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "12d4edb2-e698-4ebb-9c4e-5bb52ea4d217",
            [
                'status' => "disabled"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop2()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "12d4edb2-e698-4ebb-9c4e-5bb52ea4d217",
            [
                'can_topup_private_money_ids' => ["91f937b6-7edc-495d-857b-3f0dbd76d316", "59ca5ddb-25c0-4945-8f29-edbcb996e20a", "f1a86eb5-c142-4b97-a2f0-7eac00280ab0"],
                'status' => "active"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop3()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "12d4edb2-e698-4ebb-9c4e-5bb52ea4d217",
            [
                'private_money_ids' => ["a9523461-2d3d-4fa1-8d99-6ca922998284", "6a8ee715-848c-4cbc-9119-dac20abebb72", "f0117693-bfed-446e-bd64-476914410982", "997ae4c3-070d-43be-8e1d-4c7827348258", "e574af58-d500-4377-9a6a-a5c6b37b48e1", "621bc926-5cd2-4d1b-810a-39875c625afb", "53f7e6bd-9865-4b5e-94ae-a8aebf21c3f8", "798c98a4-b8a6-47df-bd93-09e6c57304e5", "9790f630-b359-421c-9e10-e98915885351"],
                'can_topup_private_money_ids' => ["91177a43-6b9a-48c8-bafc-9aed54d4732e", "2d8e3edb-e038-4f16-a87d-1f9b8ca2cd85", "d41be44f-bd07-4b7b-9d47-da959a86d638"],
                'status' => "active"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop4()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "12d4edb2-e698-4ebb-9c4e-5bb52ea4d217",
            [
                'external_id' => "cqkOxIGcWZjjM6j3edDcpZu9iiEw",
                'private_money_ids' => ["e283c6e3-d66f-4beb-ae0c-d3e5f5427be5", "458e1b9e-63a2-4384-9133-29b68538da80", "c4570fce-b3d2-4d25-b22c-cc4921b9ace0", "94dd02ea-81bc-45e8-b9bf-aac2e6bd7634", "7fccda84-7ba7-49db-be76-1acb8b3a6610", "df9c93ac-4809-4b3b-91dd-a8b72a41bd3c", "19de3622-989b-4be3-bc47-440b6042aeec", "c9e0c491-b86f-41b7-90fb-7753347f67f2", "f1592143-e46a-46e9-ade4-357b4e120eec"],
                'can_topup_private_money_ids' => ["2a6ab7ad-68bf-4577-ae39-ba21bb4e0bfd", "946b155d-58f1-4a76-a1f5-150b7ca10515", "b42f38d1-2432-4f86-ab88-bd9e7562db2b", "c2e87c44-4be8-428d-aa28-74b5c0bf42c8", "d2ae72cc-ae4a-4d63-8984-ced3f41a473d", "0d0c764e-778f-4ffc-9617-095431a02243", "1440e56d-19b3-4430-b902-634bc2253989"],
                'status' => "active"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop5()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "12d4edb2-e698-4ebb-9c4e-5bb52ea4d217",
            [
                'email' => "3y8WItCe9V@YgMy.com",
                'external_id' => "alG76q",
                'private_money_ids' => ["6e9d2845-6b8f-4cb4-81d4-6031b83e7ff6", "e359814f-b7f2-490c-82cb-d98d5854cf41", "2c2afa1e-4834-4c49-b7a5-01046f5627e7", "8fbff619-e253-43b5-8101-07672be8a121"],
                'can_topup_private_money_ids' => ["7fd30809-b38b-4d5b-a72a-b46ad08025d7", "0c76ed08-29d2-4179-a9f8-8e184c40385b", "32f5339d-dbee-4b65-8865-ca6bf6511523", "3cee9121-65d6-4686-9eb8-e9633807d407", "65d12f49-81dd-44c4-9b5b-e52f185d93d4", "c95c0330-c9a0-4c5e-9a68-27ee538e3aed", "5c1e0389-213b-45b8-a824-e4b8f2e006fb", "0fc0441e-b2e5-46f6-9b57-3c2a6a006bb6", "8d71d426-a604-47b8-9bdf-9fce1932ad3e"],
                'status' => "disabled"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop6()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "12d4edb2-e698-4ebb-9c4e-5bb52ea4d217",
            [
                'tel' => "00-1003-369",
                'email' => "R11TAHpgNT@XOxF.com",
                'external_id' => "wqh",
                'private_money_ids' => ["4349628b-078a-4582-8570-3dfd60d61e5a", "96ffacbe-18d6-40a2-9661-33440a1f2f68", "e4bd100a-c3f0-4e46-9c13-f87ba4f6de02"],
                'can_topup_private_money_ids' => [],
                'status' => "active"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop7()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "12d4edb2-e698-4ebb-9c4e-5bb52ea4d217",
            [
                'address' => "p5bfKVt9DPYJAVzV6vyI6ywfpyKilj5zg8pn57kF0DYbPLXjuwrpeD0A9IDYP4sAiFNwaac9r9GBqh0SVIl9M1spjv4mKXU1rVLf6U0K44BovHKqYzk7GBG1DZKj2tBR",
                'tel' => "0560-835",
                'email' => "L22gGga7pF@0nmL.com",
                'external_id' => "fnIYTQdqHJZ8Wn",
                'private_money_ids' => [],
                'can_topup_private_money_ids' => ["abdd9b18-5d48-4a8f-85bc-abd6ff3a35be", "19c4f3a6-c066-4b01-a7dc-3870d1b7c4c9", "bdf5d628-c8be-4442-961d-2c740db33645", "39070aa1-9bcf-4e4d-bbad-dad0f7b56332"],
                'status' => "active"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop8()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "12d4edb2-e698-4ebb-9c4e-5bb52ea4d217",
            [
                'postal_code' => "1657799",
                'address' => "gmkkDxd3MzpkzvPsPo2vcZvKaf470Dw5YI6SeAOBDBgRAgmjxZGGCqaBwJ9iXjXSEfbkdsvlfnd1NOUEcUOGTeYua5DveJsn8lhIUcgIkY0oNU4ZtZZObHmdr0N6vylnlZRhGDMxuj8A7eDOAWeoDpeF6vcSyg1N9plx7jjHK1E1PUQiuVzdT2YVVNgkhGiOaJk8HWWbXOMsyMVL1Y0FzVGqOKFoU3xJNKmuaDr4cMSAgHDAlLlP6Lo5yS",
                'tel' => "0406-63-906",
                'email' => "rq4lI3mHyv@fAo1.com",
                'external_id' => "Zkwkd2ADoyNq2PW9",
                'private_money_ids' => ["1abfaed0-695a-478f-8887-785fd0f8885c", "54683eb1-26d6-45b1-b698-7f0c354f2844", "6ecb9ae0-5aec-4363-8345-bf35658a58db", "2e0c7f87-526d-409b-bb72-6809506ee6b4", "1ecea098-e114-4d49-ad7b-9db9fead532d"],
                'can_topup_private_money_ids' => ["a8b20dfe-18f1-4c5d-83d0-74ddb45f15f1", "f25722bf-ef86-4031-9aeb-356cb242abfe", "adba3125-8d8e-487d-a9d0-7a1a5ab0180f", "f8905d86-9fd9-41c9-85e9-f7b4820d5d7e", "fc1b0366-1c1c-4367-9a7a-8cde77df3c2e", "8946fa70-1cbb-490d-aec6-fd9e3b95b5e6", "72572587-5382-4e39-9976-1f3b3cd7745d", "d95cac84-6720-4cc3-921a-3696e3e4242c", "91429d8d-8c94-47c4-a555-b638a3dcb9ca"],
                'status' => "disabled"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop9()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "12d4edb2-e698-4ebb-9c4e-5bb52ea4d217",
            [
                'name' => "OtcokEMMVhmKz2iBoGU1OxUmIl7jlWxrfEKMQ8FCs062PLb59yfzniw8Z7",
                'postal_code' => "422-0830",
                'address' => "BQdrr7bOC0AUfJnZnSogxeCWxbc4wl0P2Dqh3DSK23Mk8m6Cln0nexx5CEw583J2WEBiiOFuwneTfWH1pqqlIhFKkOnPRe3g3OqYMD6Y7flopJpL06wROQZ33dSb51CrQZVorM80jAnbL9pF2A",
                'tel' => "09696447-483",
                'email' => "IQ4AniWPzD@9CM0.com",
                'external_id' => "oL6ak44VafBlkQ",
                'private_money_ids' => ["63d1f095-52bd-41f4-a1c5-6087b3248d0e", "45f542b8-c4f8-412e-8f62-4f19e93ceb54", "dcd5eb70-bbe4-473f-8530-c925fccedad0", "32bd9f29-8fe9-4849-a42f-b5de593018de", "028f3a0f-900c-4877-9d9e-649b8b392453"],
                'can_topup_private_money_ids' => ["450fcb3f-f834-47a1-97f1-a23611042d13", "4c53e1bc-2e36-4da9-a93f-871423cc2a0f", "69593e29-cb05-4c32-805c-ffeeade8d65d", "8944cf58-62d7-4dbf-bfeb-ef7cb219baf6", "66d24ce6-33a1-4a16-b580-cd73cec38da9"],
                'status' => "disabled"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
