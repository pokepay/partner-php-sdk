<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class UpdateShop extends TestCase
{
    public function testUpdateShop0()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "05153515-1601-4d72-94cc-77464ca4833e"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop1()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "05153515-1601-4d72-94cc-77464ca4833e",
            [
                'status' => "disabled"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop2()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "05153515-1601-4d72-94cc-77464ca4833e",
            [
                'can_topup_private_money_ids' => ["95d0c771-8ceb-460a-94c7-ced1a4198364", "6ffa9fe9-240e-461d-b8fd-cf0af36c3c8e"],
                'status' => "disabled"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop3()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "05153515-1601-4d72-94cc-77464ca4833e",
            [
                'private_money_ids' => ["13fb1ca1-c2fd-4731-b0f2-33f5c343e046", "6059e2f2-6f8c-4f26-bc0d-33add0a40d11", "d9e23453-ca4f-44e6-afe6-1ad2a39ccfee", "30165b6d-bb25-4f95-b8f9-2681c6b59f00"],
                'can_topup_private_money_ids' => ["1c82a361-5edd-4de9-a1a2-38ddf08f43af", "8384f5e3-fa56-4328-9f7e-d2601e286b0b", "e85f9f79-8f97-49d2-ac14-b169cdd2e47f", "4dbf3526-8a84-4ea4-b4fa-dc7135e1c771", "c91b4646-f481-4ac8-8f13-1ce765355a10"],
                'status' => "disabled"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop4()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "05153515-1601-4d72-94cc-77464ca4833e",
            [
                'external_id' => "CcgmymCC",
                'private_money_ids' => ["3cc22513-57a2-4e96-a791-798cc86e441d", "c515c6bb-ddbf-4623-9f8b-2538929d689a", "0c2acc1a-56bb-4405-94d6-9214d06483d7", "5e3b92e3-b1e2-4da5-8623-1331da3ec384", "afe16cf0-b714-48bc-bd04-adce6d231bee", "be959dff-3cd8-4213-af39-949c308a3f3f", "4de96c05-6c0f-4536-a9a6-d3695f7fa7b5", "64a3e3b2-e6ac-4b45-a548-0622f91cf9ad"],
                'can_topup_private_money_ids' => ["6a46b67b-ced5-4969-b5e5-2ac51b835cca", "d2e939f2-9c2a-4aa4-a499-ae99a7c10e66", "1975dafb-b0d7-4886-b1e2-f4c9d0af3a4f", "d0ed54e1-98d3-49ae-90eb-7917aa86f28e", "4fc86415-50db-40e0-923b-08992238a4bd", "80917ae4-659e-4883-9e6d-57417a3e9e31"],
                'status' => "disabled"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop5()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "05153515-1601-4d72-94cc-77464ca4833e",
            [
                'email' => "4JDKqLKhdy@vUMG.com",
                'external_id' => "Q1uYQIGYC0",
                'private_money_ids' => ["56970bc7-58eb-45d3-8bec-9fbf9e559ec6", "b88b8594-87ca-410f-8a14-535c11bc881c"],
                'can_topup_private_money_ids' => ["e2cec245-70cd-4547-bf68-de07bb90618d", "9eeabc2d-7436-4402-853b-384729bb03d6"],
                'status' => "disabled"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop6()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "05153515-1601-4d72-94cc-77464ca4833e",
            [
                'tel' => "027-843280",
                'email' => "jAcit3tvq3@7RtT.com",
                'external_id' => "8ryNx9ym",
                'private_money_ids' => ["cbedb140-ad4b-49a4-b832-b44e3f8b1f85", "7ba19c04-213e-42a3-bf74-c4cd0ce3ae11", "d00569db-19be-43a6-b1df-e3c1cbffa1e6", "62a2f541-c8a1-4aab-8da4-0c9ddd939ead", "3ac46277-ef3d-41d8-ad61-11bdb8994e39", "31523493-c487-48a7-a78c-8a6518b46cc0", "cb1512d5-c4c0-48a1-b3a8-8f666a751c11", "eadd35be-4807-4245-b564-c4ce92b24aac", "bb6a69a4-7cdf-4c83-83c5-765b9f4de582", "ea9e0541-26b2-42f6-b957-9f8262c9695f"],
                'can_topup_private_money_ids' => [],
                'status' => "active"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop7()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "05153515-1601-4d72-94cc-77464ca4833e",
            [
                'address' => "m5BgQ35PgoXhycq4KVBInj5HlIvwEfoHNUwb1RC5L57M1QYfEk7r09hrGJyHjoJ1p1eQk4qJuGcbPgEVW0og3S5LtVq8cLrQu0QAScA7pnxANnpJEU61HA8eTnM03O6rGrYJS27CLy108DZbtkfZpMhDGpJfYu5cOxfsA2Z6MwAXf2kEK4fqVBkSpprvLzJLT5mNEXDalgCvBASB770w8RatRoq9OcgbDn99CuLsYkxWUbQmrx7",
                'tel' => "0869-47-2341",
                'email' => "9T7Apy0HFt@qyaE.com",
                'external_id' => "DO8f3ELuSpyymhQSQaOGC5a3KEHp9WQID",
                'private_money_ids' => ["c853d1c0-376e-45f6-96b5-62f453697d1f", "d7012d9e-20e2-4438-94de-a1b9ff1f81ca", "1f63bec7-1b8e-42fb-a815-a4bd1322349c", "f09000ab-8bab-4216-9db1-9c631f74ede9", "4f0e108d-902c-405a-90d8-3124a0d64863", "37aeb0ab-ca32-4bf9-8970-37dc8318991b", "53b300eb-fd48-4b59-91b2-1288e633e139", "39a2928e-d7ae-4058-87e6-55fc8a83219c"],
                'can_topup_private_money_ids' => [],
                'status' => "active"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop8()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "05153515-1601-4d72-94cc-77464ca4833e",
            [
                'postal_code' => "672-3028",
                'address' => "Bkqo8hvgnXQCUbHVtikheW8QRACoXCRElkPanRygbSKO4bkemu2S9QScly6WGeUgha1103q5dxfCbAijmmHmPc5qj93ZPe2dxylTa9gNYMsogWIG1FXrlrseqq7iHj8OfZ0VmoI8o4avNrxY1spuTstrfMILQRTxOO",
                'tel' => "05-536917",
                'email' => "bCo3ZMaf5K@PKxe.com",
                'external_id' => "GW2PLMndzwsr",
                'private_money_ids' => ["ce45d8f5-fe76-4cb9-bbfe-db46f6e9a727"],
                'can_topup_private_money_ids' => ["84cf3dcf-96f4-4f48-b15d-154bce6b0dcf", "7d787d8d-3bd7-41f6-aa6e-d787c6b77616", "9f775fee-87fa-4425-aa7a-805a0736e7c1", "a82b9868-2657-4914-818e-0a38a8db182c", "b832ae0c-e9c4-4b32-a494-2364c1cb112c", "1f342e7e-67aa-441b-a506-da5ca054083b", "70af61ef-532d-433a-95cc-b03b2d64a5bf", "00b49d94-f3ec-4615-95dd-1e637968d148", "9a701591-9aad-4b75-b9de-6ebbeffbb3e1"],
                'status' => "active"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop9()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "05153515-1601-4d72-94cc-77464ca4833e",
            [
                'name' => "EbRe8n3yOtWNGYstAurARpkAej7d3pmm2X1vQfnmCFJlBFCCKSrUPGtyVwMuKuLx7wL8pLgjraw5vJZi2F8G7vmLATWHC6iaIOnWYjtCIY",
                'postal_code' => "510-8059",
                'address' => "Mb1iuYBPA47905ahp1h14JVU6gHePJMI7jDAwe0E01ukac00WMWMy7jDKbKslPbfCGL8ImqkVB6eDD7VdTQtYeuArK85qwxjydPWslgjPCUCjEozJ484d6fEJTS0Ahnt980JlCwDNe9AfDs3qX8wpO2iRJGdjAKVBFPglYSmhf20UH0JI6BkouKMmtE9Qs",
                'tel' => "018650627",
                'email' => "9T5txAbgit@ff73.com",
                'external_id' => "fwdrIFEwPncIxBqbtmEJBS4ARwZAB6yx6Q",
                'private_money_ids' => ["79fc6bed-da09-4dcd-88f7-97a23f1e0e92", "919b378e-9ad1-4e4a-b914-134ce2c2e7fe", "d00c5bfc-a18a-4a7d-8e37-0a150f9aee12", "601de8de-c937-4eb2-b80a-a7d0fbbb30f3", "85cfc1a2-9b13-47ec-8d5e-0c392b482c1d", "4bffe409-59f3-464e-a6f7-700736321758", "ace55e2d-c00a-46cd-9aa1-2a72d5de6188"],
                'can_topup_private_money_ids' => ["43282708-14ad-4311-a749-57ed14bd90cc", "57ff7167-4fcc-4cdd-b2a3-b2533aecceb1", "307b298b-5c82-4933-bc68-b61cd1c91fae", "d020c2fd-7ea2-4fee-b8e6-78c5a4b0dccf", "b76cbae0-78e1-44f2-81e5-e1ea002d93a3"],
                'status' => "active"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
