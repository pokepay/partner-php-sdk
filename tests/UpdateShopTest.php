<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class UpdateShop extends TestCase
{
    public function testUpdateShop0()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "8fe43d06-f0ce-426b-87ca-83c26028602b"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop1()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "8fe43d06-f0ce-426b-87ca-83c26028602b",
            [
                'can_topup_private_money_ids' => ["97832cbe-a384-47c4-b675-a478bbbe5f10", "39237927-aa96-4d57-aff1-bee4cff911cc", "de3521bb-dd16-4d1c-b194-951d6fc04033", "95293b51-743a-4d6d-881e-cc5f79de8e5d", "99c65a52-6fe2-41da-b077-9e9241cbd422", "5fc1b3e2-2fd0-4052-bfe9-55e460f8aad6"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop2()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "8fe43d06-f0ce-426b-87ca-83c26028602b",
            [
                'private_money_ids' => ["c1b41e47-b61f-4937-9929-cac266eee2de", "ea1dae36-caa8-4368-a1de-626afdd50a85", "23a53747-233c-45ca-b2bb-a0860acb0229", "952c428f-a31e-4a9b-8380-4bca8fd7f63e"],
                'can_topup_private_money_ids' => ["a2f66a42-800f-4f78-944b-5c484a188b90", "05c82f0a-ca5b-4230-ad8e-859ea6f062d9", "0c18e6d5-5a57-42de-ab16-88add54155a3", "54f344df-bdb8-4eaf-a9a8-d61753c848f7", "1071f729-47bf-4f4a-8aa6-a9a8a8c22e02", "8af94b75-6987-484a-a53f-a9dbe6c9293f"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop3()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "8fe43d06-f0ce-426b-87ca-83c26028602b",
            [
                'external_id' => "CjlaztijN3vebjT86",
                'private_money_ids' => ["9fb0ea39-5f52-456a-bf59-5fd24025c450"],
                'can_topup_private_money_ids' => ["8c555871-271d-479b-b66e-f2bea7c3edda", "3e856731-88d9-4587-ba64-fa215198101f", "f1fc4a13-26f2-4368-9b5f-10479f37701e"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop4()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "8fe43d06-f0ce-426b-87ca-83c26028602b",
            [
                'email' => "H7XKNoGDpq@qjYU.com",
                'external_id' => "42NN7jWbTA8sT9CjYdhYyR9ZtWhMAKSZHQ",
                'private_money_ids' => ["b3540911-7015-4f32-9f08-621422ce1154", "d427726a-2161-48ad-a80b-f1e3dd67512a"],
                'can_topup_private_money_ids' => []
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop5()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "8fe43d06-f0ce-426b-87ca-83c26028602b",
            [
                'tel' => "03-45-240",
                'email' => "jku1fdQetg@L0O7.com",
                'external_id' => "lAFrk",
                'private_money_ids' => ["e11342d8-03aa-4556-9e9d-a5e91fb7349d", "e7bdaaac-f4e8-4fc9-a451-eafc8d3400d7", "c3d8b68b-6c75-44b7-bbca-581a8e567112", "c6486d1e-b9b4-474e-97d9-005ec68ece3a", "0af4f069-d0a0-42f2-a0d8-d7f27e5a32f9", "9f7138d0-10bd-4daf-90b6-21ac98331e74", "12ff7461-d2f1-483e-bf62-d092a1e82ded", "046f2287-afba-4c36-a0e8-26223e45ff73", "0078396e-7b94-4241-83a4-d640b7963b3e", "382fb339-5ce8-4aa7-854c-e15dc460c902"],
                'can_topup_private_money_ids' => ["ac377f10-22a7-461d-a30c-d03b67720d17"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop6()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "8fe43d06-f0ce-426b-87ca-83c26028602b",
            [
                'address' => "B4dzDqQ1LbTyVIgVP7fIz1xemnrDx9P7HPwLX5lwWZKuWWf4n5wNPq2rjN28QfQLnQ9Qr2gs4rAyEVt2ws7WkJzpgGUX4mtxobZ9ZCpNJGZG6LzTWIbd8ZNVrafdiivNn4NbNLXIdoiqtrelImUNmLeKEfXUc2dQExu22E4bXnTsrAuXzcUztcjpDcIzv8TjKb1dIcQKtgPEpt9Ynsu0LI4",
                'tel' => "01172-559",
                'email' => "3YpOK96EoF@GxVJ.com",
                'external_id' => "N",
                'private_money_ids' => ["358fe354-6916-4616-a465-aa2f54a0c2a0", "252d9f2e-5a52-4008-a091-8928d1faa96c", "25cecaa6-3ac6-4bcd-a534-b9d879e77df7", "173b722e-64b2-4c59-ae09-c465e526dcc6", "23398aa8-f9db-487c-92f4-2912122fc4e1", "999b8960-24be-4318-a017-0417383eacf5", "8bdbdab2-3baf-4181-86e0-f9a7ebe6afbf", "ec109401-0a34-4b23-8079-e41266dc3e23", "5eddc724-8863-4a31-9d6b-59f51c333f73", "63d7eb4e-ee37-4df1-97b2-f1abd27f15a7"],
                'can_topup_private_money_ids' => ["dd69c5e8-68e8-481b-90c6-6e8b44511a85", "9b2e2e62-aa04-457e-bf48-fa9fa8cc2dce", "a803dad0-aee8-4352-bf16-53be59da9319", "a987fefd-3003-4911-a76e-ee85f6b9a1f1", "547879d9-b26e-4e15-9587-e7196d3abd6c", "953ab4e8-747e-4689-b4ca-7be02f7af162", "f6215f3f-378b-41cf-b2cd-d0eae6ea17ab", "232fd7bd-9735-46ea-86f7-c172fd813804", "aa7b6589-6241-4b64-8f0b-f12225e5e90f"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop7()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "8fe43d06-f0ce-426b-87ca-83c26028602b",
            [
                'postal_code' => "305-6793",
                'address' => "Dr0Djt9M12BOno1AcjM96oftC7mHhiSDgXKvVy5paxKD2XcOfyMo26iqol80j1t4n3lpnoezOx6Ov6eGwjQCqxdtQnDY4S9N4HhJ5rCsXRcUZY47cpIh03BvqB7CzLjYHoO28zEE65UlKtMCe12MUV2dxrA2428zEWnFZLX87qtedPzV8NdiYCurcmVOPZzwMWHgQ0VESfspW9b9NBdczTSynCfTiWLEN2pEbq7ZeB8PVJkE9NzaeTptZ5kX9",
                'tel' => "001771-036",
                'email' => "EnTlLyubwi@bc5u.com",
                'external_id' => "G9Y4cn6ApRZ5NX6gFb5nuOD",
                'private_money_ids' => ["82556e3c-52ed-4d39-b223-e6f0e03555ee", "a02342b0-2c32-41b2-9afc-c1c8e7e88c3b", "e712ed0e-c1b3-4c03-b7d1-030ceda8db89", "4812526d-bfce-48c6-ba9b-540441cefbaa", "3d162fc0-d27a-4d62-8cc6-30bd03dc006d", "81a540e6-ada4-4f7f-aac6-2ad3fe00a37a", "dcac5eb1-ba5b-41f5-b0e5-3bac48a590f2", "0a4f9c1f-6594-40d9-8868-4955d1399dde", "de4a1935-f381-40f6-8f05-558100de1562", "4df5394c-68ba-4a20-b857-f60573da7db8"],
                'can_topup_private_money_ids' => ["079f7259-b5bb-41aa-b198-46b1f517e5fb", "78b213dd-1e1f-4e1c-b558-71f09deb442e", "81621452-8975-405d-b538-b83916546e71", "3a1230b3-1f81-464e-bcba-fd093d9393ae", "01547ebd-d979-41eb-9eaa-1ae965e17f52", "bf016f9d-7b50-4782-847e-b19895d8fa59", "f2851427-a21d-453a-8f24-4b9babe088b2", "88fb4def-3727-4351-8f5c-f1fb364f8b23", "1c2353a2-3e69-407d-8159-c0cd26e472e3", "933bee4b-259a-4bfc-abd8-f442138eefba"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop8()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "8fe43d06-f0ce-426b-87ca-83c26028602b",
            [
                'name' => "WEu4RSjxgCW3jFlgob7yobgqdqFleVhpCebdmmx3jJLFYo72YjP5pod5QaLCZTmFLxumOnvrupx16EXCUXyPfCabjEtM",
                'postal_code' => "9967740",
                'address' => "mNQWU6zl3h0ZGoCe5IIfEbaRlpdhTTQpQoSRT6b0IY83jSy9CLjq8yjjxInoBnLVw5NxHP7CI9Yb5tOQ2qp6BlopujNmJIuVKWvjUjC0u3f2Lo9NqlV6uXM4yE9kd7lV6QKkz6REzoI7cZYW4c0GyNh6EpQVqX4KE4B5KRDxSSppVORQLy6PO73cHGKqjz0v27dHE8reh9b3v7zqeYS2n0EGsPPbv",
                'tel' => "063-91977",
                'email' => "mgCWNKDP1e@nxAK.com",
                'external_id' => "BD2FhNoFZKIbAgSoRCKxxDEWQZO",
                'private_money_ids' => ["b317b279-057a-49b4-8d25-d782a9dfd02d", "77aee57e-6fad-4304-a391-1434656c9a08", "5053c608-fa05-438e-82d7-07783def9150", "790b6353-4727-4c08-9837-1755b4d1d31c", "51288ee1-8099-405f-aa8b-d4d64124bf9c", "1e0d7e04-4a48-4670-8ad6-88080cc8eee9", "47d45040-ab86-43b4-b0fc-4b5af969af7d", "75f703e0-fa59-4eda-8fc7-bacb8fbf55cc", "a6eda8d3-f865-4809-ab8b-e677f3eda9a8"],
                'can_topup_private_money_ids' => ["b72a8a2e-4bca-4e0a-a1f5-86612c7922ce", "fdfb5cb9-543a-4537-9b4f-53dbb54a83e2", "ca314bd5-5ca6-474e-953b-a3d12c89515a", "fbef9f9a-09b0-46c1-b008-807d163a46d2", "a5eee15e-2477-426b-8c5d-f0ab6bab2f32", "bce4c95a-2c32-4d94-affd-3d89e778356d"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
