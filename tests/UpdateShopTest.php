<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class UpdateShop extends TestCase
{
    public function testUpdateShop0()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "0e12bc64-4ebc-47be-ae9e-cf00cdde5263"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop1()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "0e12bc64-4ebc-47be-ae9e-cf00cdde5263",
            [
                'can_topup_private_money_ids' => ["1a490339-fe81-4dff-9985-af66eb67e910", "f4e69882-9aff-43a8-bf13-24185a245147", "7df818c8-6ecc-4d9f-abe3-63f71a0e18f9", "e22f2d3c-6114-47e5-bf2b-a4a28cd730a9", "41a523a6-5f6c-4ce0-9bc1-d5fbe7c0aae7", "91c68e9d-d196-4435-91ca-c703a4980f72", "22c07200-5937-417a-9200-d48bbb2de1bf", "3d055ec5-8465-464f-8a37-d56e72956cd5"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop2()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "0e12bc64-4ebc-47be-ae9e-cf00cdde5263",
            [
                'private_money_ids' => ["ccd0c084-77ba-4571-9e91-3b78ab6cc7a9", "ae195858-97ea-41b7-b47e-41990e67896a", "b0f677bd-8836-4a20-aeb4-8596b1249c07", "beb453b3-0189-4824-86c1-eac9184b7a0c"],
                'can_topup_private_money_ids' => ["cfb3dd05-7d94-49dc-a18a-238ad79b19c0", "06b9a482-cb6b-478a-b9f1-3938e6154807", "9090a091-9022-4e3e-9f51-65c8d9de2657", "1846c299-427c-4e4b-a5db-4d94802bed7b", "4ee5a882-ea7c-4397-a188-ca13a0d14ace", "c5611972-6881-4be9-a310-a7a3ce3988b3"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop3()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "0e12bc64-4ebc-47be-ae9e-cf00cdde5263",
            [
                'external_id' => "MBQYWsKtvnxoQJLloM94TQVFchkaVLn",
                'private_money_ids' => ["c52b80c0-2edb-4658-b101-57217e340f31", "9a4b970a-b28b-41ca-a3a0-4670e085eeda", "cac84123-6de6-4928-9aa4-15216305fd55", "b253dd8e-7748-47b2-9522-53f34b90944b", "38917c9f-bf22-43c3-b816-e26eb363eed2"],
                'can_topup_private_money_ids' => ["f4209b75-e2d3-4a83-af4c-fece9d8a32c1", "d86d2f06-a48d-47c0-8f80-fa17e64b968c", "c239786c-9712-4ff9-b47c-d0511443c1fd"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop4()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "0e12bc64-4ebc-47be-ae9e-cf00cdde5263",
            [
                'email' => "R5kzfucn7L@ZFZw.com",
                'external_id' => "RIJGw",
                'private_money_ids' => ["3c2673c6-3fad-40d3-9a1e-9f32fc540395", "ff6e7971-b082-4855-b394-738cd2141f4c"],
                'can_topup_private_money_ids' => ["b78e762b-648b-4e9b-9b66-8df27a9d9784", "d84350f0-ddf1-4d8d-af6c-54298f6f5572", "43db52c5-e154-4695-ae8d-255ce9ad55e7", "f9b47dfa-9833-43cf-9039-0ef7cba3540b", "00ae89ec-0a79-4d51-b013-e9d4b6d7e457", "4947b266-49d2-4386-a134-e694a4233cbe", "7ede11c7-32f8-4e32-b11d-24db44e9d57a", "2d10321a-084d-4737-9d57-c25b92a2d549", "24ab2d51-1747-4344-b3d0-26730e2263a6"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop5()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "0e12bc64-4ebc-47be-ae9e-cf00cdde5263",
            [
                'tel' => "041532823",
                'email' => "JPjtVj6RA5@8jW2.com",
                'external_id' => "8noWbhryHKQAP2bBeZkmIh2UeN7Z047tEp9",
                'private_money_ids' => ["e70ee64d-e3ee-4adf-9561-4a1c238c49cd", "0ffbe9cb-9313-4deb-9c2a-e3500303db54", "ddd347a1-bb54-464f-8ee8-2b34cb2af84b", "ea5a7507-7107-4eec-8ffc-6c5f016985c6"],
                'can_topup_private_money_ids' => ["03a3844b-a696-42dc-8404-6e6771c1b992", "07fa8ff4-29e9-46f8-b3f1-8ae056a21f0e", "b0f2c120-dc56-4454-99f2-85f23af3eead", "e81cadc0-cc7d-4583-bb53-cf48b18e06fb", "f878931b-435a-4ab1-81e1-4230a505e6f4", "9618f5bf-3d7a-451c-a634-a0bf067e0bac", "fe0ea1c5-107a-485c-94eb-b0803e2963fc", "988c2625-f713-46a6-b5e8-057b44059489"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop6()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "0e12bc64-4ebc-47be-ae9e-cf00cdde5263",
            [
                'address' => "UCHWp85qyAYWUJWst1yIlHOt0XiM6Q",
                'tel' => "028-29403",
                'email' => "wcuCesxkTg@eUlI.com",
                'external_id' => "lQ",
                'private_money_ids' => ["044f78bb-3f5c-4f4c-b59c-d9bd25a34c74", "d4d77200-4937-41b8-b052-7db82534965e", "cd35634c-b012-4135-96f2-844cd5b35d78", "25b46301-bf9f-40a6-ba7e-b15ec62e6a9a", "1b6b80d2-d789-4283-9112-ae3c239f496c", "3d687756-6c75-478a-a42f-ceb08fda47dc"],
                'can_topup_private_money_ids' => ["f4e91560-95e4-44eb-adc8-9481ec8c27d7", "d0d0f59b-e927-4764-90dd-b5d5d648ee98", "0c428be9-6d00-408a-ba56-47acec9262bd", "60427415-8ac4-4daa-b1e5-8748ed87ee5e", "bf947585-3450-4006-a3d1-88d6bace351b", "7f990cfc-5274-4799-919d-702360279503", "e535e5ec-c34f-41ea-ba53-c51c3cf57fa9", "a6a340c2-78b3-4731-854d-027fc0cb01f8", "af007490-9f15-4706-b15b-58b82d951fd3", "fe26f421-8dd8-49f0-b8bb-f2536d49f4c8"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop7()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "0e12bc64-4ebc-47be-ae9e-cf00cdde5263",
            [
                'postal_code' => "8270952",
                'address' => "7KvoeklIR5ig74Fkbtbb0SlK2KbT8BQ8WxGHxi6f0cuW1ZhxLtCHCm7yUfJm7Fg98YgjSKRGLQpNx8ciNrKweGJtnGqdSp90ci6D0iGddOVzLT6tirwJLurByrAGwszVwlQAuTXTWtKg2YB5YxVquVYsbDyysRisRQ9ectqoj4yKOsEPCrpQPvSjUDltH57ysDpO4lTbJ9dqwKn5NSHIJ7mbc5qbOnYCYxA4AjI47p6qtIsaCpt80GzH1F",
                'tel' => "06553785381",
                'email' => "eJGFXqwAY7@5stQ.com",
                'external_id' => "6SAh4",
                'private_money_ids' => ["d978f180-9631-491c-a63d-81dab892eae9", "d6d5c35f-6040-403a-a916-91e9fc0d0f06", "39fc0438-722d-465d-a002-820d408d3e87", "7a698f34-91df-4276-b99c-b3e20fcaa026", "85f3e311-5301-4787-8a81-bc841da68364", "a8770ab1-bb4a-4173-a6b0-527fbc4099ea", "1931a982-302d-42e0-9285-9612838a8b8a", "f9035960-030d-40b3-b298-66c060aa9082"],
                'can_topup_private_money_ids' => ["34603e2a-9fe2-4723-bb3e-1ff7f7a68774", "03768797-1b01-491f-9778-06f9e097c16e", "0a83d8b2-1c46-4926-8629-0388136bf4c1", "c8beb20b-b960-4e06-a82a-573110bd6f14", "0ba9d37a-8bae-4781-95e5-c6a6b72c7be4", "e329a4c7-d345-4ff0-a6ae-e99a3a6afa7d", "76a59d4e-16fa-48f4-99df-388351c64472", "0e087e5a-e3c8-413c-b41c-d6413d769b00", "95f952f9-4cf4-45d4-8878-b7560cc72ef6", "5e3ea71d-215b-49a6-a8c8-3d2b956ccf56"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop8()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "0e12bc64-4ebc-47be-ae9e-cf00cdde5263",
            [
                'name' => "jPvTnTRbAGxJFBzSBdN9rH7Ml90EeuZgaP20pyyEjfyZnRCBHpzVqBZqNRFUo9BhqQxq9FR8VF2gH7EAnlFEgMmyi8jmBN0T80aLvrKoRyTXgPVT4AzeoZEOYuu1RyqlWwyCNVezTDDCUN00F2Vhn3XqmCSMDzeEDKcNHBIUBy90lbfxByyLgJllatyS0exoVZwnX2Y3MjJVkSKFu78PD8Nsi0ghqRiHIikuwLQA",
                'postal_code' => "398-1709",
                'address' => "orDHLBFs4pFpuxUcIrb43g0nK7tb3btHVGJJQejQb3sdWfi2Z2Wvmx0ZqLEwxwj8U4A4KZBQdvuQb5QYDYt7CyctlhtAXqf6uerXtmVp3iPqRhb6DnnO4ty38IkhtTfaQWLqhFbA6TsT4rGSzhCtzrrQIFeK35Z3EF7SWnLL5qkYPGTd8wILW6Ubji6nDVo",
                'tel' => "0774-20-059",
                'email' => "96vZBp0zzw@PN5D.com",
                'external_id' => "Ihcy9tg03Xeu2UN5sKl9",
                'private_money_ids' => ["88bec65e-920f-4b88-a9e6-d8596416fbca", "9d2677ad-e260-4e16-b8ed-e6e141b54ccf", "d81ac31f-c699-42b8-b4bd-9d57a0f6b903", "9b030e23-0012-4497-9d4b-a82045aa9416", "61e0d203-2ce9-4827-a5f1-1b06fc773d70", "fbd664fa-873f-47f9-a0c6-9efb2db88577", "26e110e3-037e-48b0-9b3b-9b16b210b24f", "c2b1d8fc-4406-4fb5-b191-d85dcaef2044", "5f6bac48-fa96-4f07-b60c-21e369c2353c"],
                'can_topup_private_money_ids' => ["d12f3564-27f9-4b93-bf56-ee5a298b9285"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
