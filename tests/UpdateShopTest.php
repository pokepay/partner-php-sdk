<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class UpdateShop extends TestCase
{
    public function testUpdateShop0()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "6f12334f-a167-4e4e-a807-fbe8ab55411a"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop1()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "6f12334f-a167-4e4e-a807-fbe8ab55411a",
            [
                'status' => "disabled"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop2()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "6f12334f-a167-4e4e-a807-fbe8ab55411a",
            [
                'can_topup_private_money_ids' => ["78cae4fb-1ddb-4ec2-916a-145f4f39b756", "286454f3-39c3-4bec-bc92-0dd0e055a0a7", "f31fc5aa-6892-4150-af0f-59e4ba7f4034", "52507b35-1612-4ae2-951c-ae21d52e5fc2", "7b50ab9b-e8ff-4f9c-af76-5f45751c8860", "04cc9b85-75d3-4b6f-b5af-4e4f5c65e3b7"],
                'status' => "active"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop3()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "6f12334f-a167-4e4e-a807-fbe8ab55411a",
            [
                'private_money_ids' => ["478fa0f7-a328-4f77-927b-d0a701e7e0dc", "67f6c42b-200e-406c-8a14-61cee9b9af5a", "73263ca3-ec2d-46bf-9086-eec67f126a66", "d784f1bb-4519-4a85-89b6-38af68114ea7"],
                'can_topup_private_money_ids' => ["3bd35ec7-909b-4930-99ac-6fa2973b4b65", "ab8fefd6-dcae-4dab-ab89-a2a68560a329", "d491704c-5a51-40cc-a568-6fe3939a23b7", "6d7f6f19-c31f-4f68-a214-aef5ff452f76", "2d8e50b3-807e-4317-82df-728895504a0a", "c87eff16-2d38-4fd3-9013-83872318372e", "dc230ab8-c670-4321-abc8-88bb9dca46b3", "50bbf665-f271-41af-8f3a-6278af9ed31e"],
                'status' => "active"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop4()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "6f12334f-a167-4e4e-a807-fbe8ab55411a",
            [
                'external_id' => "cOR3TFR9a8hMUMtt7RdIKeKSciqwdkkgv",
                'private_money_ids' => ["08ba235f-a4fd-4d71-93da-0bd176c6bd70", "df8b8245-b0f7-4327-b121-ea78a6bfe000"],
                'can_topup_private_money_ids' => [],
                'status' => "active"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop5()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "6f12334f-a167-4e4e-a807-fbe8ab55411a",
            [
                'email' => "xIpXTryBWY@7YmT.com",
                'external_id' => "tJYjps5n0FjmTFv",
                'private_money_ids' => ["09acbf50-0390-45df-be7f-f0020f78d55a", "f90d78ea-4aad-4e3e-9658-fe388b041a99", "5a799f1c-5237-4ed0-954c-65fa44004252", "a172d429-d6c0-4532-b9ef-915415503b05", "8cd43c43-3d9f-43f6-8c12-aa80b18582b1", "2c4b96fd-34b6-46e6-9058-0d1e0ec8a96a"],
                'can_topup_private_money_ids' => ["77b3eb68-190c-4cd6-a76c-5bbb723f82cc", "0292e4f0-7e8e-43cb-a782-75f43fe77c72", "3f31d293-1909-4db0-8461-abbbc04ecb8d", "34fbac58-fc8d-41bb-adec-153081e3e2c9", "956b5938-33be-4b95-aa7d-128c5c4107c1", "af1d11b7-a81f-4d73-908a-a159b3f2bc78", "eee5efb7-a0cb-411f-929b-085eecd419d7", "693eafba-45f3-457b-b947-8ef287927866", "49a7b3af-f390-476b-a3c7-ef4686738cab"],
                'status' => "active"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop6()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "6f12334f-a167-4e4e-a807-fbe8ab55411a",
            [
                'tel' => "09477-9985",
                'email' => "gPlxnzpf9X@cHDi.com",
                'external_id' => "w8sqMTw9CGMrpupnZP3tXLGdI4BQeMKNj",
                'private_money_ids' => ["cc521cce-6a24-4b90-882f-870967b59543", "3ffd2f9f-ad36-4ae0-ae76-581a1ce01b11", "638a3d3f-30a7-4034-bf1f-354c56b1aa7f", "ae9979e4-d04a-4a39-90f1-bdaff0bd66dd", "bbecc430-e25c-41ee-a989-3f660017ab89", "588d2241-3b55-4b23-b547-36a601bcfe5d"],
                'can_topup_private_money_ids' => ["4adf9fc8-8088-4755-aec3-3795986bf50e", "773333f6-2de3-4889-b414-54412bbc5fa9"],
                'status' => "disabled"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop7()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "6f12334f-a167-4e4e-a807-fbe8ab55411a",
            [
                'address' => "lCo2a7OllUlOCGYapVIyu0AtoOYT3d8xXDGe31wijgcuuWSuuP7qXIDVYzNjNiLWADYEWxDRpy5o7rEN4eiDqYJVEg5UZOhJAbHwNLgu8Nky9WURMByjAKTzdQ2llGcXl5Cw9ahtSHvWHxDbu1GOKxoKM3BkiQ5JCNLUQPpDOoGNkBoKxTvABwe33UWeSzKCZwv4PwJOy",
                'tel' => "03-027123",
                'email' => "ItmOkY1pUO@NfZU.com",
                'external_id' => "thj8CTdPwk2g7DYhFuXWt",
                'private_money_ids' => ["7a988178-2632-428d-bce7-e848a02c1b7f"],
                'can_topup_private_money_ids' => ["0746d0dd-478e-45ed-af23-8923040dae14", "740b5173-4e11-4a83-a354-751f0dbfb859", "dfa085c1-167b-4e96-bf67-c4536a42f89b", "9e6bf26a-0064-4705-a131-771aee30cb4c", "3d79545d-9916-4b75-b43e-754ec51d4eb1", "a621752b-a37e-4147-ba97-75b43a72721a", "4c19a540-82c4-4ddc-9b11-757d810d266c"],
                'status' => "active"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop8()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "6f12334f-a167-4e4e-a807-fbe8ab55411a",
            [
                'postal_code' => "5514738",
                'address' => "2f1PjIk5LFEcZYZR1K1ULgGU5oSrsDCn36n92LJoBnxVWA0Bmx0P3sSh52djDx2E8q2Tl06IVYw4zb7KKLj26g9D4jd9Fi73fT2ekfbMypSoZArmvOOmVqy7L",
                'tel' => "089433-5046",
                'email' => "zQrUB5yHto@Gfyc.com",
                'external_id' => "JYa2GIKQCGB",
                'private_money_ids' => [],
                'can_topup_private_money_ids' => ["5181e13b-b177-45ae-9d63-f77175f74d95", "861c82bc-356e-403d-aacb-ee5c6d3c16f4", "75df21d8-d82b-4013-a37b-17d37d0a2b35", "0b1a243f-dfe3-4b3f-b4e2-66b09f807173", "542c9029-5d55-4444-a1ed-ba7dd549f88c", "9288b851-aae9-4826-8a46-e726296e87e1"],
                'status' => "disabled"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop9()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "6f12334f-a167-4e4e-a807-fbe8ab55411a",
            [
                'name' => "fIlsQjs1Uxv98uoxa9cfqdBZBSSyuPsLgc14jRH1daAJWkWpeGVt7BTtK3VwbUSgXIGfDPEPwHED0KtmDzxLUbUeg7w8cIU7UKhxLe1FMHoh3041czvU7tiTGNYlDyRk3aGMps1HN2Oi8GzWre6yIHCge3KvTMWtvAOdqc6t46b4EgFIpDVk2sqQhlAUNF0Kr6ekdB7WSGlsT24mzzvf0uixfzgMS7DAxRVXjpoYOkLYbJM46YGKDJV",
                'postal_code' => "1186654",
                'address' => "VcsouxX3xI9CHdZGkENDSkRyfWKAxjQWjCB8nFcqmENfDor1zgwF9x3xZsR5bLJPhH3FEHzbfU4cD6smAeqngifjNikqDE3OudXpYhNwFWUAKOnWlhna0lYNQbEnbMVdbi9G5aE3q4gTN93gHJA1FfneXYRV1FBu9VqwmK2QWEkaIk3Nf304AeRoMBnYRrC4cXtKQ0a4O",
                'tel' => "0118-918",
                'email' => "t2tro65RM4@SYyW.com",
                'external_id' => "Q4b5EvFhF0JaiWpip",
                'private_money_ids' => ["5582fed8-b63b-4d71-829e-01a4eadd80dc", "9fd36b4e-a167-4ffa-a635-c9e07ad4175b", "dfada2a4-6a96-4082-98aa-694637be2954", "70e7b58e-04d9-4b41-bdc8-02a7dbbefe4a", "e1e0ab64-98de-48c6-a50d-f1c7b78a95da", "89985d90-4969-4f20-b18e-6aca986fca13", "48585b49-b9e1-42db-b9ce-732f791bab2f", "103e5b2d-659b-4e40-9418-158370558772"],
                'can_topup_private_money_ids' => ["a5e2364d-a365-465d-81ac-7da6baa0f360", "b4b54805-6acb-4b98-8e18-cf55c03251ac", "7f3b5c16-c7fb-44de-9707-3425c835d5b2", "2c74fc7c-4483-440b-9f8f-a98e766a5795", "b4ddbb91-ad7c-4ba1-a08f-98016da7fb71", "bd7118ce-be0d-45af-979c-b04d12e800f2", "26a9ea1d-2c10-40f7-b44a-2fdca3ad8be1", "ac6b35f9-2409-46de-b29f-748b82022ad9", "e47c7715-7e3e-4f89-8208-a0cf7825f117"],
                'status' => "active"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
