<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class UpdateShop extends TestCase
{
    public function testUpdateShop0()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "05323bb0-6eb3-4981-9415-3868e8da401b"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop1()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "05323bb0-6eb3-4981-9415-3868e8da401b",
            [
                'status' => "disabled"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop2()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "05323bb0-6eb3-4981-9415-3868e8da401b",
            [
                'can_topup_private_money_ids' => ["120ad811-bb41-4428-ac2c-d4e5fb34062c", "d49a55cb-c9d4-40c0-b1bc-b3745f0c8202", "4ec62ef4-cb5f-46d5-a9dd-aa488b43cc6e", "d746fb9e-dc12-410c-974f-076fd9a5ce55", "25c77d1e-fd3c-4100-9536-6f5fc3d4993b", "be5781dd-eda2-457a-9db8-d374f0bf5eea", "5cd7ad25-7c99-46d5-996a-6b61032aa8ac"],
                'status' => "active"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop3()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "05323bb0-6eb3-4981-9415-3868e8da401b",
            [
                'private_money_ids' => ["7c16741d-9b2d-4d55-b774-012bd2a8922b", "21e2664b-5065-4238-bc48-694bc2ca1410", "7da5b9ed-6c8f-421d-904b-49d924879528", "ab1464af-6cb7-48c4-8294-d109e83ac670"],
                'can_topup_private_money_ids' => ["93148932-91b2-4116-8933-820dd72a1797", "ef5f759c-b40b-48d8-8f89-40e964dd034b", "2a2c3d83-4b8f-40db-9797-f4b0c21509d4", "fc1b48c5-d914-4cda-a576-577935f51a7e", "7915dfa1-987f-4256-9e8a-9ba0c21e60d5", "f452e191-f69c-4d3e-b23f-bf4cf54a08d1", "a00b2f3e-4e21-47bb-9d90-9a4f309c60bb"],
                'status' => "active"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop4()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "05323bb0-6eb3-4981-9415-3868e8da401b",
            [
                'external_id' => "TpIPv7",
                'private_money_ids' => ["b7c0f12a-8f69-41bb-959e-ebd10f355f85", "cb527cb7-304e-4a73-888a-b0c98bc5aa41", "c74c1fcf-2f52-4089-87e3-68c9db9595ab", "adab80a6-2ba7-4d1a-b887-e78f11133fe7"],
                'can_topup_private_money_ids' => ["0b7e4a03-f6a3-43b9-be39-a93aa1b9238d", "c21344f4-9081-4e79-9956-fafb7eea2253", "44ec9bb2-6642-4ebd-af00-751f9b2c7cb3", "b98871dd-0f42-48fe-a254-f568054d402c", "5dcf4fb3-496e-48ae-9374-623744fb6600", "7f032cbb-81c1-4242-8c30-a471324f6bce", "cf489e00-6a0b-4285-8c39-8adfc6e9dc3b", "a774b01c-8f29-4180-b91c-cce9274cfe54"],
                'status' => "disabled"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop5()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "05323bb0-6eb3-4981-9415-3868e8da401b",
            [
                'email' => "vD52XUEGP5@P1Pe.com",
                'external_id' => "xeVShMBbH2DZoxE2X838QpYaovQQxFZdG1",
                'private_money_ids' => ["ab73f58f-c698-46b8-9c04-c8b3288bf695", "bee921c4-09d0-4cc0-b401-de5f928cdcf0", "059caa93-f71a-48e1-a6be-d68570a105d3", "f5a8b27a-381e-4d64-b55f-79baab8ee02a", "3a96dc35-21c2-4b2b-b9e1-cc90715f16a2", "ba2ac822-e82b-4927-ad8e-5e1f7b22875a", "82521243-6154-46ea-a93d-ba38859fce3a", "3e4a96ea-a445-4a12-b3c5-f9513fbb7750", "7cdd2a97-156b-4537-98b5-1410f774daaa"],
                'can_topup_private_money_ids' => ["232ff814-b1d1-4712-831c-dc7b45559ac4", "30c821df-d8c4-4a91-81b9-9603436d7cea", "626be004-0a94-459b-bff3-ccf6ae3e04e9"],
                'status' => "disabled"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop6()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "05323bb0-6eb3-4981-9415-3868e8da401b",
            [
                'tel' => "02937722-4496",
                'email' => "1uCW1IGQ2Y@P10u.com",
                'external_id' => "PVZw9ewZxoxQQGmqTJPzl8LwqGA",
                'private_money_ids' => ["6bb4b3b8-afbf-41d5-a1aa-c054bc8d936e", "5df14b71-6393-4397-b45d-4ae6f4850d88", "ce178c3f-3a82-4f45-99de-462553b13fed", "554d2af8-b822-4f04-9d1e-5a53dd82f2f1", "a44ae3be-8b54-408a-8b34-cf19a4275c51", "69e06a31-b0a7-44de-9cb2-625b009ccff3"],
                'can_topup_private_money_ids' => ["749cccb0-92a5-4e68-9c84-d089ac4b2a39", "9e15c272-a311-49a3-b57c-8382dee84d7d", "4646e7c0-bbde-4550-b9e7-a7c66d17cb07", "bb85c037-cf79-48e2-ba19-e148c65189ab"],
                'status' => "active"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop7()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "05323bb0-6eb3-4981-9415-3868e8da401b",
            [
                'address' => "zC4pu",
                'tel' => "06-94852",
                'email' => "509L9Jko8G@1j7a.com",
                'external_id' => "hBUi9tR0jhMggol69lmNY",
                'private_money_ids' => ["245825e8-f960-4b4d-b1c3-9b5827e05f15"],
                'can_topup_private_money_ids' => ["d97e44d6-7f16-4725-9a64-6757fedf89e9", "fe03b757-3d0b-4732-915b-822806e7bd77", "26fce058-987d-4366-8ba4-cc704bd6925c", "46efe527-9cae-4bd6-95df-4eca336c552b", "9315aa63-2de8-41e5-8bf7-54e48e19583d", "a2e0a59f-8bbd-4dd8-876a-3fac68a4f506"],
                'status' => "disabled"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop8()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "05323bb0-6eb3-4981-9415-3868e8da401b",
            [
                'postal_code' => "2106014",
                'address' => "1SwBNlZFpECm5pjxncpSGYdc5AwjCti8OOmzmbjYIu9aQ1OeIVACk2ivUndO2lbCjD0m43s3QHez0StkOoqHDc0nWv5CHZoYshzS4QuDbg2cQbLVtf0NUHotEPKtPbmE1asWcYk2ABBcCvaglSYlFJ",
                'tel' => "04-849-510",
                'email' => "QLbYq25ue6@eTm5.com",
                'external_id' => "LoA18nwKqrmrOS1iKxmVi",
                'private_money_ids' => ["e4717135-80c7-4c6e-bc9f-c02245b4892e", "5d9e3416-6a2a-4eec-968b-f37f97e28972", "41be189e-a916-408c-8ee6-59472b12e6c3", "b27889de-e62f-4e02-babb-acddb70d9614", "c5e18e1a-6c16-4521-87f3-6bd42a37eb20", "1c6f9ac5-f3bb-4804-8f08-2c4cc03ae6dc", "57ded2ac-900b-446e-9807-6bb03165623c", "cb70fa04-7a18-4e9d-a701-aa7868a7a404", "df2cbd5a-42d9-44fd-837c-b94903e3058a", "1c545f3a-10d0-48b6-b38b-023d6d9c1815"],
                'can_topup_private_money_ids' => ["53fc280c-6ff2-4990-ba61-0cb6dec3e906", "a4b9064f-83de-453d-afec-446f6cc116a3", "ec4af13e-422f-4dda-b074-9875506bbba6", "e588b082-8a62-448a-a25f-7c2ed08fb171", "82b84135-99f5-42e8-acf8-c3b8a13d7d66", "72a3da30-8732-423b-8c8e-b02d400a683d", "4453ee2c-8c68-4f27-b40f-e5c6804092f9"],
                'status' => "disabled"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop9()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "05323bb0-6eb3-4981-9415-3868e8da401b",
            [
                'name' => "5dwXY9o7jHgqtH1U42SkttkSSruWJBxhKVhQqObEYZqxsm5Zl2IEs0QFYJ5MNsA8OMW0jWJXAhB067KYKzH616NUgGEhwMr3bAGpbBr0z5DUy4a4J3PKZpO5LrfnM0m9W7UFBvQAXFXlgJ66Gmr5X4SS1m1miuwdhgiW3j6Ll0hTkpg97kiRvp",
                'postal_code' => "5235804",
                'address' => "RzseCkfsnW4GmzXoeiw6q6sRP5r4H00plUJsfZEnsuOrZBMrzCAdtlUOXVkLtlxWjsohgTAzzeKR4hWFezaKfr3Md532Mp",
                'tel' => "04736053",
                'email' => "vcQCRlslY2@0Dhy.com",
                'external_id' => "BHT2f90oK2UH",
                'private_money_ids' => ["e15e4d55-b5dc-4c2e-a6b8-0171bef1c835", "4661879d-1c32-4667-8f41-b39ea3329c6b", "0f83dcd8-f407-443e-927e-ba1f0fec8981"],
                'can_topup_private_money_ids' => ["70645f62-2f4e-47fc-8c5d-517326552e43", "4054e88e-99f3-450d-a681-af13795a4cf5", "22150bc3-e36f-4e6b-b969-b7e2b40e7407", "97564eac-20b5-48ec-bac8-ce5b2007871a", "ab5fba97-ba2a-4f5d-9fb3-8b47e5c4ccf7", "7302057e-6678-4f9f-a020-106d2b7ee5fd"],
                'status' => "disabled"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
