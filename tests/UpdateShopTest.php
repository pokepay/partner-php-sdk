<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class UpdateShop extends TestCase
{
    public function testUpdateShop0()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "38a31d98-f78c-48a3-84b7-62111ec76897"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop1()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "38a31d98-f78c-48a3-84b7-62111ec76897",
            [
                'status' => "disabled"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop2()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "38a31d98-f78c-48a3-84b7-62111ec76897",
            [
                'can_topup_private_money_ids' => ["a31cd628-4929-4080-b2c6-bbb5c806364e", "2ec911f5-21c4-49e4-829b-3ec6374f4f13", "12bb8b6e-c235-4f5e-8a17-45d1ffb075e3", "33025e43-9637-41fd-bea7-a946e04afafb"],
                'status' => "disabled"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop3()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "38a31d98-f78c-48a3-84b7-62111ec76897",
            [
                'private_money_ids' => ["2bb2fbb9-eea1-406c-9b79-a0a46a612067", "f6090266-858f-4692-9fd7-ca3643e7f61c"],
                'can_topup_private_money_ids' => [],
                'status' => "active"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop4()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "38a31d98-f78c-48a3-84b7-62111ec76897",
            [
                'external_id' => "CPx3hSIa",
                'private_money_ids' => ["4da4f116-3063-4851-a717-5723026ac64b", "30c3cd92-9467-4c08-9af4-f16ef46496bc", "7cffd012-ba07-4d0f-bae0-b0d28033b20e", "a7be00c4-4c9c-4b71-9da8-0f28ee74d2e6", "af5bd75c-c2c4-461f-92c8-82391ef88afc", "21e78ad8-4cc9-4256-a9cf-223fe4ac32dd", "8c3d3365-2319-469e-9e86-caf76bccb2e4", "28eeafcf-85d9-4dbc-a69b-df28c5949759", "aee0df02-5c39-49e6-87a6-9da110992532", "f433c6a9-15ab-4004-9f27-de71de2578e2"],
                'can_topup_private_money_ids' => ["b26a95d3-34d6-4641-b94f-a4c7147fe86c", "2aa05bcc-6846-4949-83db-907204ec6e74"],
                'status' => "disabled"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop5()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "38a31d98-f78c-48a3-84b7-62111ec76897",
            [
                'email' => "9cMGfBLUh3@3xiw.com",
                'external_id' => "ARxxwrpKde1RsgdH98vjaiIrR",
                'private_money_ids' => ["65452652-468e-403f-8660-4a869a4aea32", "e2a3d8b2-4b61-475a-b26e-fe39d0deca94", "5ab40c81-e386-4a00-be91-deab683a3867", "90a6ccfc-f933-4aea-878c-443dfa39169a", "840bcda5-354f-4267-b705-df17df213a7e", "9b347bd6-d596-432a-b2a9-42688503bd4e"],
                'can_topup_private_money_ids' => ["7b7eab1a-03bf-4659-9f05-95a24d8adb2e", "d1e0bbce-6ea2-433b-9153-825f925603f2", "66678fc4-7c96-4fd0-b484-f2798cae9dad", "ee7303d8-6a55-4825-8e85-e068963cc865", "cda4f8d4-1e28-444d-95ed-b59eed8fe55f"],
                'status' => "disabled"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop6()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "38a31d98-f78c-48a3-84b7-62111ec76897",
            [
                'tel' => "0151092088",
                'email' => "3g0jiz0QQn@7JTs.com",
                'external_id' => "V",
                'private_money_ids' => ["52d0e34a-1586-4bee-8430-20737c055c3e", "8fac38eb-4cb8-4cf2-ab6a-3e5165058b36", "a4108b03-212e-4f70-be0c-8eb4a025f002", "d4fc7e76-48e8-4369-a6fb-84b8f92134bd", "1a69cb95-93ec-4c97-998d-341a156ffece", "7b7b16c1-af4a-417a-9af3-efe099372773"],
                'can_topup_private_money_ids' => ["f6509498-c76c-4262-89ba-1192fad6f1dd", "68c4f2e4-1b22-47af-8f71-c8c3e14e4d2f", "967f4d52-7909-4ca0-9ab3-29c29fcfa003", "a7cde62f-b7ca-4c7d-a546-13b2f96a1dc5", "6e3e0668-384e-4d87-886a-a5f1b57a30c0"],
                'status' => "active"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop7()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "38a31d98-f78c-48a3-84b7-62111ec76897",
            [
                'address' => "3M37n5Mk8IaUqXxpplaLay3Od6ATd57Qogvx7aXOAWzKYP0FH1qogI9mnoTz0VMD1uoiaOFx4g63qZkfUK2demjkS3zxpAwJ93SY8RJ1kD73LXWKiHXm4PhoXzM7gihDC3LVsKMg0bmv9qY9VmDMA49d9ldeQvAuKkNqliUmSIj9z5TGBfyj",
                'tel' => "01-025-457",
                'email' => "cr13Stsm0A@HopB.com",
                'external_id' => "3VRVIXfejTAMjJuUMfDRwsfoG36jTgnccmTy",
                'private_money_ids' => ["b16144e1-46cb-4d53-9524-243f3d3b57ba", "3258bd00-b5aa-435a-98b3-972af0484250", "028993ba-35f2-4bc1-889e-9017b5cdc929", "eeabe414-8d67-415e-8415-c1701b3d8894", "7e7e4542-0fab-4a56-b3ae-d8eb7c792f8a", "aecf1d26-ba44-4146-a35d-df4cbf1ce33e"],
                'can_topup_private_money_ids' => ["669d49ee-d304-46fb-8737-fb3e8486a4b7", "3a76e88a-89e8-40d0-9a44-854d0ce98f54", "b9e015b4-75ec-41ad-8872-4a79ca75eeb2", "72753918-a15f-4fc2-bb97-7f52077bbd45"],
                'status' => "disabled"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop8()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "38a31d98-f78c-48a3-84b7-62111ec76897",
            [
                'postal_code' => "2020933",
                'address' => "vfTE2UCtchF5nGDf2RPbDTFLr4XFEU1wu5JySHuUc0xCYEAnZ4UoNyEibgyaBm5Y4m2N6ekvWOTpa86WaZtpTWQ3Gxm2bQYTu9jfefIuUOQpNvpbUaSg05MFBGNRek3wk1SA63xlZtNLzJ75o6K2CDAw7Nw7dhjV0PCBBVsAiZAKnHStGvdPBN8eO8lSjkuq8QLthqgfnrXFsV8jVpDg7T34oWar3DpQZ1Kp3",
                'tel' => "05703164-231",
                'email' => "mUqCQbLYUm@zGJc.com",
                'external_id' => "xWjgeMGgekRVYM50wTZjzkX7lAQ2U",
                'private_money_ids' => ["bce3ba8c-6d44-4f3a-910e-052a046b4e15", "68782bad-663b-4120-bef5-b82ed6024567", "b7d7d2c4-f02d-4b15-a60f-9558d6af8eb9", "7235831a-4cf2-43e6-818c-af58671489df", "9ff52c18-ee92-4ec6-a588-793fea40ed92", "afdafb9f-b9f6-4db7-9352-d5eb94e09fae"],
                'can_topup_private_money_ids' => [],
                'status' => "active"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateShop9()
    {
        $client = $this->newClient();
        $request = new Request\UpdateShop(
            "38a31d98-f78c-48a3-84b7-62111ec76897",
            [
                'name' => "NebwzsfCa9hRJUUwGE3VeykrPrYJny4E1DSlUI99GwFP8OBYn6Qz7wKHsRBC3aSd2A0SqpErvsngT5xgTZMJyCpdS6qbRquAX3IxTOCdl7DBZTFI7H08OMH30AFy6lgrGk6sm73UEHgl2Z9mKgbfB6tVSbpJn2mpfOGSmBGyd1fGwhnKKDV2OXmJUpzbMbHOa46mtjZikFovurUeQQ3Zz36IZ5VaKiTXKyqS9g0pi3I73m",
                'postal_code' => "1271877",
                'address' => "dmZXjEuIfqUcE4FQ6wYCiDtBRpEx4tSiuJWn5y39OpKKuqIgJzq",
                'tel' => "0919944-837",
                'email' => "XB5H48MsIS@BAIh.com",
                'external_id' => "Z9l6NTAVkEZus",
                'private_money_ids' => ["da20f486-93aa-492f-a00f-f49a644d3d96", "c21473c3-2239-473b-9674-4302953634b8", "40671b15-ae83-4f5a-9a90-7e01ab6a2dca", "d1cdf530-1ad0-49db-834d-14e5eaf73e91", "0a7452e9-77ef-4973-950f-ee6c3b4d4da6", "904534e8-433c-4b21-9d14-0beb12185fee", "e3fd089c-7e2f-494b-b8eb-73773ce6dd8e", "60f180e8-65d9-4640-bc47-fa980ca52b07", "dcca17d8-8367-4d98-9c3e-40569f395e3a", "fad4c45f-9626-4ef5-a7ba-99cf51c1b76f"],
                'can_topup_private_money_ids' => ["c96db5b3-89b3-4027-bfaa-7af628820453", "5afffc28-5e6f-4af3-84d0-138406cee9aa"],
                'status' => "active"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
