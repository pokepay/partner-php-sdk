<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateCampaign extends TestCase
{
    public function testCreateCampaign0()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "pGMCke10fApKjBHnAmdlKiUj9JqianI8FqIXqzelGZDONUAJfl2HMto7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhF",
            "86cba24b-62b8-4bed-95f7-cb71215c6bde",
            "2021-01-26T07:52:35.000000+09:00",
            "2023-07-19T15:30:55.000000+09:00",
            5025,
            "payment"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign1()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "pGMCke10fApKjBHnAmdlKiUj9JqianI8FqIXqzelGZDONUAJfl2HMto7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhF",
            "86cba24b-62b8-4bed-95f7-cb71215c6bde",
            "2021-01-26T07:52:35.000000+09:00",
            "2023-07-19T15:30:55.000000+09:00",
            5025,
            "payment",
            [
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign2()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "pGMCke10fApKjBHnAmdlKiUj9JqianI8FqIXqzelGZDONUAJfl2HMto7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhF",
            "86cba24b-62b8-4bed-95f7-cb71215c6bde",
            "2021-01-26T07:52:35.000000+09:00",
            "2023-07-19T15:30:55.000000+09:00",
            5025,
            "payment",
            [
                'dest_private_money_id' => "4d77c0f8-7c9f-4956-9ccf-f0564d9e8071",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign3()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "pGMCke10fApKjBHnAmdlKiUj9JqianI8FqIXqzelGZDONUAJfl2HMto7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhF",
            "86cba24b-62b8-4bed-95f7-cb71215c6bde",
            "2021-01-26T07:52:35.000000+09:00",
            "2023-07-19T15:30:55.000000+09:00",
            5025,
            "payment",
            [
                'max_point_amount' => 8296,
                'dest_private_money_id' => "1f5905ef-3b67-45e0-af9c-a6e2c2356f72",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign4()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "pGMCke10fApKjBHnAmdlKiUj9JqianI8FqIXqzelGZDONUAJfl2HMto7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhF",
            "86cba24b-62b8-4bed-95f7-cb71215c6bde",
            "2021-01-26T07:52:35.000000+09:00",
            "2023-07-19T15:30:55.000000+09:00",
            5025,
            "payment",
            [
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 6918,
                'dest_private_money_id' => "db4b6e10-3854-437d-9bab-c1429823cf2b",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign5()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "pGMCke10fApKjBHnAmdlKiUj9JqianI8FqIXqzelGZDONUAJfl2HMto7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhF",
            "86cba24b-62b8-4bed-95f7-cb71215c6bde",
            "2021-01-26T07:52:35.000000+09:00",
            "2023-07-19T15:30:55.000000+09:00",
            5025,
            "payment",
            [
                'minimum_number_for_combination_purchase' => 9391,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 5619,
                'dest_private_money_id' => "0e5219cb-f4f2-4119-b5a9-37fb5da5b769",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign6()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "pGMCke10fApKjBHnAmdlKiUj9JqianI8FqIXqzelGZDONUAJfl2HMto7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhF",
            "86cba24b-62b8-4bed-95f7-cb71215c6bde",
            "2021-01-26T07:52:35.000000+09:00",
            "2023-07-19T15:30:55.000000+09:00",
            5025,
            "payment",
            [
                'applicable_shop_ids' => ["636c1820-9a26-4773-907b-90477b34d0e3", "007be46a-5552-4278-a4bb-e5914e4db0cb", "5493bc2b-50fc-485f-ba23-a77a6d468db0", "019d7afd-7968-4dee-8821-680672124bf4", "4813a6d0-78bb-4722-853d-0c6ddd1fa49f", "cff5a1a7-2a10-45cf-951a-700da84524c6", "38ad6c7b-5b7a-4e79-a565-9231bd0531bd", "12ff47b0-6b84-44f3-8dee-3f8ccf24f131"],
                'minimum_number_for_combination_purchase' => 6761,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 4466,
                'dest_private_money_id' => "e682549c-cba0-4085-97a1-008d22f587e7",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign7()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "pGMCke10fApKjBHnAmdlKiUj9JqianI8FqIXqzelGZDONUAJfl2HMto7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhF",
            "86cba24b-62b8-4bed-95f7-cb71215c6bde",
            "2021-01-26T07:52:35.000000+09:00",
            "2023-07-19T15:30:55.000000+09:00",
            5025,
            "payment",
            [
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["395e855b-e3a5-440d-98d3-f1e35e503266", "a8aaa72b-08ec-476b-ac86-3bb288d004ca", "bec46e9d-2be4-466a-ba89-81918954dfee", "625d876a-23c0-4082-8f7e-a5efdbcca06a"],
                'minimum_number_for_combination_purchase' => 5784,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 1318,
                'dest_private_money_id' => "3f44cdbe-621a-4e7a-b4a8-105545a652f9",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign8()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "pGMCke10fApKjBHnAmdlKiUj9JqianI8FqIXqzelGZDONUAJfl2HMto7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhF",
            "86cba24b-62b8-4bed-95f7-cb71215c6bde",
            "2021-01-26T07:52:35.000000+09:00",
            "2023-07-19T15:30:55.000000+09:00",
            5025,
            "payment",
            [
                'applicable_days_of_week' => [2, 2, 6, 5, 1, 1, 4, 1, 5],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["7e106412-4b2d-47f7-b740-95f9330b6b53", "ef5fe913-5718-46b9-8235-ea0d80b10868", "324a837d-9bbb-4140-aaf4-09e73123f84e"],
                'minimum_number_for_combination_purchase' => 6346,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 4465,
                'dest_private_money_id' => "d50f833d-49d5-462a-80f0-038a95de72fa",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign9()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "pGMCke10fApKjBHnAmdlKiUj9JqianI8FqIXqzelGZDONUAJfl2HMto7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhF",
            "86cba24b-62b8-4bed-95f7-cb71215c6bde",
            "2021-01-26T07:52:35.000000+09:00",
            "2023-07-19T15:30:55.000000+09:00",
            5025,
            "payment",
            [
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [1, 2, 3, 3, 2, 5, 6, 1, 6],
                'applicable_time_ranges' => [],
                'applicable_shop_ids' => ["c2d9df2d-94a7-473e-9cd4-78e2e8a7301e"],
                'minimum_number_for_combination_purchase' => 3958,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 8532,
                'dest_private_money_id' => "1fd257c9-7840-4fa6-9879-40019bb9717d",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign10()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "pGMCke10fApKjBHnAmdlKiUj9JqianI8FqIXqzelGZDONUAJfl2HMto7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhF",
            "86cba24b-62b8-4bed-95f7-cb71215c6bde",
            "2021-01-26T07:52:35.000000+09:00",
            "2023-07-19T15:30:55.000000+09:00",
            5025,
            "payment",
            [
                'amount_based_point_rules' => [],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [5, 0, 0, 5, 6, 6],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["f9e41001-127d-48f3-b952-9d5397f8495b", "d3641656-c017-4d49-bc75-96214dde0952"],
                'minimum_number_for_combination_purchase' => 9692,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 802,
                'dest_private_money_id' => "b59f09ed-f9d5-4367-afe4-96395376a176",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign11()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "pGMCke10fApKjBHnAmdlKiUj9JqianI8FqIXqzelGZDONUAJfl2HMto7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhF",
            "86cba24b-62b8-4bed-95f7-cb71215c6bde",
            "2021-01-26T07:52:35.000000+09:00",
            "2023-07-19T15:30:55.000000+09:00",
            5025,
            "payment",
            [
                'subject' => "money",
                'amount_based_point_rules' => [],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [5, 4, 6, 0, 1, 6, 0, 1],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["29f5854c-0947-410a-b415-71b4b5835020", "218a2b70-3aa3-4f89-809b-efe5b9deedb6", "9ebc747d-af15-44c2-8332-06532262878a"],
                'minimum_number_for_combination_purchase' => 7782,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 8115,
                'dest_private_money_id' => "34bb95d1-a96e-4a5e-80e9-a12f383d452f",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign12()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "pGMCke10fApKjBHnAmdlKiUj9JqianI8FqIXqzelGZDONUAJfl2HMto7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhF",
            "86cba24b-62b8-4bed-95f7-cb71215c6bde",
            "2021-01-26T07:52:35.000000+09:00",
            "2023-07-19T15:30:55.000000+09:00",
            5025,
            "payment",
            [
                'is_exclusive' => FALSE,
                'subject' => "money",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [4, 3, 4, 5, 3, 1, 2, 1, 4],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["03d5ff9a-3306-4600-9da0-d843495ab46a", "b3d3c652-195b-4812-9b0c-733074e680fb", "d0f9ae59-c17c-4346-adf6-edb498660730", "8a3c7e5f-57a4-4016-952e-7b2f879529cd", "c2f86635-b077-4906-9b85-e314da86bba6", "44234401-311e-4c5a-a701-d575fa9ad6e5", "7aa0069a-4324-480a-8db6-f915e5440eb7", "8f1156e5-c515-4903-a8a6-6db08b87f19e"],
                'minimum_number_for_combination_purchase' => 8410,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 8947,
                'dest_private_money_id' => "09325d05-e7ac-43fb-9d4f-bbaa079c243e",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign13()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "pGMCke10fApKjBHnAmdlKiUj9JqianI8FqIXqzelGZDONUAJfl2HMto7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhF",
            "86cba24b-62b8-4bed-95f7-cb71215c6bde",
            "2021-01-26T07:52:35.000000+09:00",
            "2023-07-19T15:30:55.000000+09:00",
            5025,
            "payment",
            [
                'point_expires_in_days' => 9030,
                'is_exclusive' => FALSE,
                'subject' => "money",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [4, 6, 0],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["6c0731ae-4a87-465a-b480-0b6a722a52d2", "44d1e5c6-8082-4ece-a136-c67f8cf3f71d", "ec607884-0f24-49e8-a97b-312518633a6f", "a24d5b42-f44f-421b-be94-89e9dd964268", "10b5069b-d493-4ba0-9bbc-fce4da842b7f", "fc34212d-dc04-4248-a776-f2e5ab2ae0ea", "a379ed96-2990-463b-a210-521b6c634923", "0d0da1cc-01fe-4ae6-a837-84c8abca658a"],
                'minimum_number_for_combination_purchase' => 4943,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 2479,
                'dest_private_money_id' => "941cc00f-36a8-4268-850d-6e285a49d892",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign14()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "pGMCke10fApKjBHnAmdlKiUj9JqianI8FqIXqzelGZDONUAJfl2HMto7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhF",
            "86cba24b-62b8-4bed-95f7-cb71215c6bde",
            "2021-01-26T07:52:35.000000+09:00",
            "2023-07-19T15:30:55.000000+09:00",
            5025,
            "payment",
            [
                'point_expires_at' => "2017-11-02T14:44:55.000000+09:00",
                'point_expires_in_days' => 753,
                'is_exclusive' => FALSE,
                'subject' => "money",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [6, 6, 6, 0, 3, 2, 1, 5, 6, 3],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => [],
                'minimum_number_for_combination_purchase' => 4174,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 9922,
                'dest_private_money_id' => "57fe9f7e-2401-4e50-afe2-51c8cc3027d8",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign15()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "pGMCke10fApKjBHnAmdlKiUj9JqianI8FqIXqzelGZDONUAJfl2HMto7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhF",
            "86cba24b-62b8-4bed-95f7-cb71215c6bde",
            "2021-01-26T07:52:35.000000+09:00",
            "2023-07-19T15:30:55.000000+09:00",
            5025,
            "payment",
            [
                'status' => "disabled",
                'point_expires_at' => "2023-12-25T21:52:01.000000+09:00",
                'point_expires_in_days' => 3829,
                'is_exclusive' => FALSE,
                'subject' => "money",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [4, 0, 6, 1, 3],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["2643a857-39d8-4a5c-84e5-eded2fc4d2b2", "3f780606-ca72-4167-93fa-258a2e358c1d", "eefd2883-6fbe-46fc-bab3-68b5c671bbe1", "fd1938dd-cffb-4822-a551-a4854a941bb4", "c030f044-698e-4c39-92b4-4c6b1aa98052", "39248615-82b9-4153-b0d8-e62f0d630554"],
                'minimum_number_for_combination_purchase' => 3557,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 6126,
                'dest_private_money_id' => "e9aaa548-8563-4943-b063-64c7b1aee8fe",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign16()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "pGMCke10fApKjBHnAmdlKiUj9JqianI8FqIXqzelGZDONUAJfl2HMto7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhF",
            "86cba24b-62b8-4bed-95f7-cb71215c6bde",
            "2021-01-26T07:52:35.000000+09:00",
            "2023-07-19T15:30:55.000000+09:00",
            5025,
            "payment",
            [
                'description' => "AfEKgLlOIWqFFofKhzWzCAqp2ZanhrL16oNA3cZ4NnyIEjaN6dYZY4p9bZgscBV3pXiPPiW",
                'status' => "enabled",
                'point_expires_at' => "2025-07-13T14:54:25.000000+09:00",
                'point_expires_in_days' => 5280,
                'is_exclusive' => TRUE,
                'subject' => "all",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [],
                'applicable_days_of_week' => [5, 0, 5, 5, 4, 6, 6, 3, 2],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["12c143f5-e8e3-4b2d-b3fc-15acbf9a33ed", "a375327a-5bb0-47c7-9901-8ddb0e180ef7", "043440d9-e384-407f-b813-f535e6c20812", "365b7582-7ecb-4615-b86b-7d81d9a59b46", "55f41839-b543-439c-a2e3-7915f8aedbcf"],
                'minimum_number_for_combination_purchase' => 9618,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 5529,
                'dest_private_money_id' => "2d8e650f-d82f-44db-a946-cb87a5df7443",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign17()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "pGMCke10fApKjBHnAmdlKiUj9JqianI8FqIXqzelGZDONUAJfl2HMto7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhF",
            "86cba24b-62b8-4bed-95f7-cb71215c6bde",
            "2021-01-26T07:52:35.000000+09:00",
            "2023-07-19T15:30:55.000000+09:00",
            5025,
            "payment",
            [
                'bear_point_shop_id' => "aca9f200-0f2e-41a1-91da-bf372c21a0f7",
                'description' => "QECuEigH9T54l9EXWThBhNBtq0Hlr5VUDcRjPWhcWE5Ed0Dp6qm5enNIYlp4WuULLQB3hzZG357PPnWlMQlOO65IFrI1BJMiWPv5dAbUBWta68v79KNgsodWT1kP64chZLEzZTeXAsCUOeSILicKJugPMhkbNW44x5lpize",
                'status' => "enabled",
                'point_expires_at' => "2021-06-24T04:37:36.000000+09:00",
                'point_expires_in_days' => 7040,
                'is_exclusive' => TRUE,
                'subject' => "money",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [1, 6, 5],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["ec283ddf-657b-4b72-ae04-2ce5c9424e8e", "5b803f4d-d253-4581-9b3a-0b7fdce4832d", "0e65163d-e0ee-4599-939d-95694b9a9967", "6e52e50e-9962-4734-9962-90333405adf4", "67b91a36-71eb-486d-b679-5e8ff1284868", "a39e287c-eba8-4d7c-8e0f-7103ab1d61ea", "d01bb222-17c4-4637-a209-f9d9021a0321"],
                'minimum_number_for_combination_purchase' => 6279,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 7691,
                'dest_private_money_id' => "83a826bb-bfec-4f16-a0bc-5ebe907d9c21",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
