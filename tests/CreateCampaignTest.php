<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateCampaign extends TestCase
{
    public function testCreateCampaign0()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "bqrekxj6KVFbs",
            "84694c9d-745c-4d1a-89a4-de3d53f46506",
            "2019-09-10T16:55:51.000000+09:00",
            "2023-12-12T05:45:19.000000+09:00",
            3948,
            "payment"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign1()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "bqrekxj6KVFbs",
            "84694c9d-745c-4d1a-89a4-de3d53f46506",
            "2019-09-10T16:55:51.000000+09:00",
            "2023-12-12T05:45:19.000000+09:00",
            3948,
            "payment",
            [
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign2()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "bqrekxj6KVFbs",
            "84694c9d-745c-4d1a-89a4-de3d53f46506",
            "2019-09-10T16:55:51.000000+09:00",
            "2023-12-12T05:45:19.000000+09:00",
            3948,
            "payment",
            [
                'dest_private_money_id' => "be7ffeb9-65f8-4e25-98d3-90a9eea70749",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign3()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "bqrekxj6KVFbs",
            "84694c9d-745c-4d1a-89a4-de3d53f46506",
            "2019-09-10T16:55:51.000000+09:00",
            "2023-12-12T05:45:19.000000+09:00",
            3948,
            "payment",
            [
                'max_point_amount' => 4240,
                'dest_private_money_id' => "e6f307a5-9ca0-45fe-b6b3-429227846dcf",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign4()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "bqrekxj6KVFbs",
            "84694c9d-745c-4d1a-89a4-de3d53f46506",
            "2019-09-10T16:55:51.000000+09:00",
            "2023-12-12T05:45:19.000000+09:00",
            3948,
            "payment",
            [
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 2077,
                'dest_private_money_id' => "3c33fb6e-afb3-4853-a57e-77c8acd11ab7",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign5()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "bqrekxj6KVFbs",
            "84694c9d-745c-4d1a-89a4-de3d53f46506",
            "2019-09-10T16:55:51.000000+09:00",
            "2023-12-12T05:45:19.000000+09:00",
            3948,
            "payment",
            [
                'minimum_number_for_combination_purchase' => 8727,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 3949,
                'dest_private_money_id' => "ce4285ea-7620-4829-8c71-28076bf5b6c5",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign6()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "bqrekxj6KVFbs",
            "84694c9d-745c-4d1a-89a4-de3d53f46506",
            "2019-09-10T16:55:51.000000+09:00",
            "2023-12-12T05:45:19.000000+09:00",
            3948,
            "payment",
            [
                'applicable_shop_ids' => ["3fddc470-f4ba-4107-aa2a-3b715ec7a743", "856c2297-e2e3-49d0-accf-8fbd49eac005", "3d03cf70-5b57-4c26-a56a-f52c1390d12f", "a8985f69-01f6-4302-aaa9-9aef33c8aacf"],
                'minimum_number_for_combination_purchase' => 5615,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 8748,
                'dest_private_money_id' => "3383df97-eb19-4783-8676-1964adfae4f7",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign7()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "bqrekxj6KVFbs",
            "84694c9d-745c-4d1a-89a4-de3d53f46506",
            "2019-09-10T16:55:51.000000+09:00",
            "2023-12-12T05:45:19.000000+09:00",
            3948,
            "payment",
            [
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["2eac1e07-2986-473c-9d2a-782ff9886530", "2b79ef0b-93d9-45bb-8617-ac76b04bfc7d", "397a7aec-6ce4-4c3b-b33c-b649192b5565", "8cbe1eca-7517-4111-b9e8-883fd054912d", "aabf6412-00af-4454-bd6c-81d277bee022"],
                'minimum_number_for_combination_purchase' => 4456,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 2901,
                'dest_private_money_id' => "5cd4aad4-3fdd-46a2-bd32-9fba7fa3464e",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign8()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "bqrekxj6KVFbs",
            "84694c9d-745c-4d1a-89a4-de3d53f46506",
            "2019-09-10T16:55:51.000000+09:00",
            "2023-12-12T05:45:19.000000+09:00",
            3948,
            "payment",
            [
                'applicable_days_of_week' => [3, 1, 0, 0, 4, 2, 4, 2],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["de4a2210-576f-452c-a2ab-bb06e156e2cc", "76b80722-3bfd-443f-9b88-821d38553eea", "ee86774d-1514-4ded-91be-afcccdde0ca1", "945adb53-4a07-4cfd-8815-88d1198eb216", "fa6cd33f-0219-430d-8499-491406c733ad", "2da1f120-1787-4110-80e8-888356816465", "ff407eb4-5274-42c8-8350-2d3e27199508", "efe8dbdc-bae4-4dec-8076-40cb02dadf60", "e431de78-4c8d-4543-99bf-cc38b9ae965e"],
                'minimum_number_for_combination_purchase' => 3601,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 1040,
                'dest_private_money_id' => "17bcd1aa-297b-4a95-9440-83efb29c9e02",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign9()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "bqrekxj6KVFbs",
            "84694c9d-745c-4d1a-89a4-de3d53f46506",
            "2019-09-10T16:55:51.000000+09:00",
            "2023-12-12T05:45:19.000000+09:00",
            3948,
            "payment",
            [
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [6, 1, 3, 3, 6, 1, 0, 6],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["1ca983f1-8f16-4749-8386-f9059e89d23b", "ba77ac90-8912-4f74-8013-9fb7145f8c42", "45f17650-f3c5-4b7b-a8c9-7a8918f2a0a6", "de5b897e-5a8d-4716-813e-32f33a2bb315", "e34c3f20-84c8-4b1c-a977-b2391552de2f"],
                'minimum_number_for_combination_purchase' => 6669,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 5098,
                'dest_private_money_id' => "591c09e1-2fa8-44df-ad88-468842cb2178",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign10()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "bqrekxj6KVFbs",
            "84694c9d-745c-4d1a-89a4-de3d53f46506",
            "2019-09-10T16:55:51.000000+09:00",
            "2023-12-12T05:45:19.000000+09:00",
            3948,
            "payment",
            [
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["4bbdd7ef-ec21-4d61-bb44-079c0eb9b376", "c747c736-f203-40d5-9f36-19d3603ff958", "ef5d16cc-a06b-4198-bb8d-431135028b1f", "476067c0-5180-472f-9748-fbe19e693314", "fff80864-3a8e-4bb9-a34f-3590b776a90e", "769bd2ae-222f-4b53-a240-413cf52e9b23", "9ee6f9d2-44e5-4a91-aa31-b7999080ccd4", "8ea232f7-9362-4232-a104-1872d04f5f76", "04cd68f0-53e9-4f77-a0ca-9507221c3ca7", "49ecce4c-2d7c-4298-bbbc-ffd3b6821ef9"],
                'minimum_number_for_combination_purchase' => 9961,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 9968,
                'dest_private_money_id' => "c0fc73f1-c3d9-4560-b6da-da6e044202f7",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign11()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "bqrekxj6KVFbs",
            "84694c9d-745c-4d1a-89a4-de3d53f46506",
            "2019-09-10T16:55:51.000000+09:00",
            "2023-12-12T05:45:19.000000+09:00",
            3948,
            "payment",
            [
                'subject' => "all",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [5, 5, 4, 3, 4, 3, 3, 4, 3, 1],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => [],
                'minimum_number_for_combination_purchase' => 6097,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 2696,
                'dest_private_money_id' => "16b52a0a-008c-43e6-a67a-cee982126686",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign12()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "bqrekxj6KVFbs",
            "84694c9d-745c-4d1a-89a4-de3d53f46506",
            "2019-09-10T16:55:51.000000+09:00",
            "2023-12-12T05:45:19.000000+09:00",
            3948,
            "payment",
            [
                'is_exclusive' => FALSE,
                'subject' => "money",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [2, 0],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["19760078-71e1-44d3-92f5-00aa990d70bb", "74899646-7783-4423-a501-fe7667f81c87", "b02d11e3-257c-47ea-b373-c02b8874d80c", "77441aaf-bc1f-41af-95b2-3ad1672e8fee", "cb77e988-6303-4e5e-b833-dee7beb678db", "95ece3be-7ed7-4916-86c8-257f34d20737", "78c9a768-24bc-46bd-8630-aaa689c4450f", "6cee271f-ecd4-4902-8438-ce2742d3e903", "2fa4d94e-c768-4c37-a5ef-3e1f8999785b"],
                'minimum_number_for_combination_purchase' => 2896,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 2065,
                'dest_private_money_id' => "e166de17-d5a8-413a-98b6-ce2ad8cd2f3a",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign13()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "bqrekxj6KVFbs",
            "84694c9d-745c-4d1a-89a4-de3d53f46506",
            "2019-09-10T16:55:51.000000+09:00",
            "2023-12-12T05:45:19.000000+09:00",
            3948,
            "payment",
            [
                'point_expires_in_days' => 5402,
                'is_exclusive' => FALSE,
                'subject' => "money",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => [],
                'minimum_number_for_combination_purchase' => 5639,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 1813,
                'dest_private_money_id' => "6b8953fa-ecd7-4efa-ac0d-34672b9a7b01",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign14()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "bqrekxj6KVFbs",
            "84694c9d-745c-4d1a-89a4-de3d53f46506",
            "2019-09-10T16:55:51.000000+09:00",
            "2023-12-12T05:45:19.000000+09:00",
            3948,
            "payment",
            [
                'point_expires_at' => "2017-10-29T03:34:40.000000+09:00",
                'point_expires_in_days' => 9842,
                'is_exclusive' => FALSE,
                'subject' => "money",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [],
                'applicable_days_of_week' => [],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["1ef64615-a586-48af-8573-f615760be668", "c4144e0c-fd0f-4711-8910-c61f80977107", "2893803b-37c8-467a-a288-8618a60143f5", "8aac4ee3-fe66-4944-9b68-41c922f41724", "6206d592-9ea3-4f7b-8400-0e33d53980bc", "9b735821-0771-48e5-9bbf-cb6d65d6b96c", "3b4f596f-7403-4412-b70c-67cad7ecd9cd"],
                'minimum_number_for_combination_purchase' => 5327,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 4265,
                'dest_private_money_id' => "0e9d266d-ef47-489b-9bd5-1465e3b9130a",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign15()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "bqrekxj6KVFbs",
            "84694c9d-745c-4d1a-89a4-de3d53f46506",
            "2019-09-10T16:55:51.000000+09:00",
            "2023-12-12T05:45:19.000000+09:00",
            3948,
            "payment",
            [
                'status' => "enabled",
                'point_expires_at' => "2025-05-13T17:38:18.000000+09:00",
                'point_expires_in_days' => 2752,
                'is_exclusive' => FALSE,
                'subject' => "all",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [4, 1, 6, 5, 2, 1, 1, 4, 1, 6],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["ec871c5d-3b30-4620-95f5-66db6c69519c", "0e37629e-02bf-4463-a3b5-887bcac225f5", "1485bae7-bc91-4b7e-9532-97d31ed5ecfc", "0f960c70-0f8a-42c4-afe5-32c718d50ec0", "8f4a6f72-b920-4379-8abb-2683f77d6349", "fc204909-3519-4d1e-bd35-8d5d3d169acf", "159ee39a-ee51-45d1-b925-4fc7dbd3f582"],
                'minimum_number_for_combination_purchase' => 7280,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 7529,
                'dest_private_money_id' => "e06e2410-d2e1-4b1d-8089-759951d9f9d3",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign16()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "bqrekxj6KVFbs",
            "84694c9d-745c-4d1a-89a4-de3d53f46506",
            "2019-09-10T16:55:51.000000+09:00",
            "2023-12-12T05:45:19.000000+09:00",
            3948,
            "payment",
            [
                'description' => "9O2M3fskqX8WbkxbWTp66iGj1lRR9XuMVcs2zeQQbQwb",
                'status' => "disabled",
                'point_expires_at' => "2020-05-06T10:41:23.000000+09:00",
                'point_expires_in_days' => 6054,
                'is_exclusive' => TRUE,
                'subject' => "all",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [2, 1, 6, 1],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["0a670ec7-8f02-4470-9f80-751390d609ce", "da0ab7a6-8ede-446b-892b-e7e97aa2c302", "bb4d1e55-d044-475b-98ae-1976f8c463f3", "a20de583-84ba-40ab-a4a5-3e3039ca6037", "edd0abbd-854c-4369-8233-8dc793fc99f9", "5655ffbc-bc99-49ad-861e-a4924d2da7a2", "0c1b8512-9145-4de4-b423-6fb6fd545a47", "8deadd47-b281-414a-b1c7-d3a24613a058", "bb781e6f-a535-43e0-ae88-e1ba012e5a0f", "efe897d5-9e50-4684-a22d-d5ab0faa009f"],
                'minimum_number_for_combination_purchase' => 7207,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 8647,
                'dest_private_money_id' => "bee2cf2d-d7ca-43aa-b51a-4ebe00997e53",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign17()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "bqrekxj6KVFbs",
            "84694c9d-745c-4d1a-89a4-de3d53f46506",
            "2019-09-10T16:55:51.000000+09:00",
            "2023-12-12T05:45:19.000000+09:00",
            3948,
            "payment",
            [
                'bear_point_shop_id' => "09acb4e3-2172-4145-87e3-bf592d5edcb5",
                'description' => "6vYJqEcansSsP2ceIvKP9bgYanQbVQM9Z6RG0kCsPdzwEr5mXGzuLW3FkWi9ZhIojVZoApe0Vc",
                'status' => "enabled",
                'point_expires_at' => "2017-04-26T00:53:14.000000+09:00",
                'point_expires_in_days' => 857,
                'is_exclusive' => TRUE,
                'subject' => "money",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [6, 5, 5, 2, 3, 4, 4, 5, 3],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => [],
                'minimum_number_for_combination_purchase' => 6433,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 3880,
                'dest_private_money_id' => "60a4fcb1-c009-4ccc-87c9-aefb536ecf8b",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
