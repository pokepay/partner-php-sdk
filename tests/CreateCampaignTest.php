<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateCampaign extends TestCase
{
    public function testCreateCampaign0()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "p9nzTkIJ0BAEY399xd4I7xCbSFsF6eD10dxpgUOCFQxiZAVWLNySq9lbI9OdlxCoFcf05QDMWHytO12Fe7qao6OCc3V",
            "dde5c746-e876-403e-9d01-fdeb7d6dd8a6",
            "2022-02-25T01:29:18.000000+09:00",
            "2023-11-15T18:18:55.000000+09:00",
            969,
            "payment"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign1()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "p9nzTkIJ0BAEY399xd4I7xCbSFsF6eD10dxpgUOCFQxiZAVWLNySq9lbI9OdlxCoFcf05QDMWHytO12Fe7qao6OCc3V",
            "dde5c746-e876-403e-9d01-fdeb7d6dd8a6",
            "2022-02-25T01:29:18.000000+09:00",
            "2023-11-15T18:18:55.000000+09:00",
            969,
            "payment",
            [
                'budget_caps_amount' => 135983459
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign2()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "p9nzTkIJ0BAEY399xd4I7xCbSFsF6eD10dxpgUOCFQxiZAVWLNySq9lbI9OdlxCoFcf05QDMWHytO12Fe7qao6OCc3V",
            "dde5c746-e876-403e-9d01-fdeb7d6dd8a6",
            "2022-02-25T01:29:18.000000+09:00",
            "2023-11-15T18:18:55.000000+09:00",
            969,
            "payment",
            [
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 215952121
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign3()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "p9nzTkIJ0BAEY399xd4I7xCbSFsF6eD10dxpgUOCFQxiZAVWLNySq9lbI9OdlxCoFcf05QDMWHytO12Fe7qao6OCc3V",
            "dde5c746-e876-403e-9d01-fdeb7d6dd8a6",
            "2022-02-25T01:29:18.000000+09:00",
            "2023-11-15T18:18:55.000000+09:00",
            969,
            "payment",
            [
                'dest_private_money_id' => "d2b476b9-85ce-4a60-8104-8384dd11f91c",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 427060423
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign4()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "p9nzTkIJ0BAEY399xd4I7xCbSFsF6eD10dxpgUOCFQxiZAVWLNySq9lbI9OdlxCoFcf05QDMWHytO12Fe7qao6OCc3V",
            "dde5c746-e876-403e-9d01-fdeb7d6dd8a6",
            "2022-02-25T01:29:18.000000+09:00",
            "2023-11-15T18:18:55.000000+09:00",
            969,
            "payment",
            [
                'max_total_point_amount' => 2940,
                'dest_private_money_id' => "05b7b652-0333-4ccd-a479-7e3adac12de3",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 1316461273
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign5()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "p9nzTkIJ0BAEY399xd4I7xCbSFsF6eD10dxpgUOCFQxiZAVWLNySq9lbI9OdlxCoFcf05QDMWHytO12Fe7qao6OCc3V",
            "dde5c746-e876-403e-9d01-fdeb7d6dd8a6",
            "2022-02-25T01:29:18.000000+09:00",
            "2023-11-15T18:18:55.000000+09:00",
            969,
            "payment",
            [
                'max_point_amount' => 1520,
                'max_total_point_amount' => 1729,
                'dest_private_money_id' => "e57502c5-aaa4-4891-9544-bf2b5d469aef",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 1124759622
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign6()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "p9nzTkIJ0BAEY399xd4I7xCbSFsF6eD10dxpgUOCFQxiZAVWLNySq9lbI9OdlxCoFcf05QDMWHytO12Fe7qao6OCc3V",
            "dde5c746-e876-403e-9d01-fdeb7d6dd8a6",
            "2022-02-25T01:29:18.000000+09:00",
            "2023-11-15T18:18:55.000000+09:00",
            969,
            "payment",
            [
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 3852,
                'max_total_point_amount' => 7432,
                'dest_private_money_id' => "10c6561b-1dcd-4d63-9d25-70abcb5da8e1",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 172570087
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign7()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "p9nzTkIJ0BAEY399xd4I7xCbSFsF6eD10dxpgUOCFQxiZAVWLNySq9lbI9OdlxCoFcf05QDMWHytO12Fe7qao6OCc3V",
            "dde5c746-e876-403e-9d01-fdeb7d6dd8a6",
            "2022-02-25T01:29:18.000000+09:00",
            "2023-11-15T18:18:55.000000+09:00",
            969,
            "payment",
            [
                'minimum_number_for_combination_purchase' => 9122,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 9755,
                'max_total_point_amount' => 1470,
                'dest_private_money_id' => "35b36cce-3c42-4e8f-a63b-d59fc1aa2a49",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 2010692123
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign8()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "p9nzTkIJ0BAEY399xd4I7xCbSFsF6eD10dxpgUOCFQxiZAVWLNySq9lbI9OdlxCoFcf05QDMWHytO12Fe7qao6OCc3V",
            "dde5c746-e876-403e-9d01-fdeb7d6dd8a6",
            "2022-02-25T01:29:18.000000+09:00",
            "2023-11-15T18:18:55.000000+09:00",
            969,
            "payment",
            [
                'applicable_shop_ids' => ["d58e94ad-d586-4ea0-ad0e-fb6809df30e5", "d399393f-d18f-4078-9461-87b351aebde1", "463cfa00-2fd3-46bc-bd90-dda227ad0295", "f970e18d-e46b-4820-9303-01ffb8ace73b", "e7e5bf5f-d666-46e6-a254-8805e28a5d7e", "a1afe55e-f828-439d-ad65-28c7f76d9cef"],
                'minimum_number_for_combination_purchase' => 648,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 1958,
                'max_total_point_amount' => 8084,
                'dest_private_money_id' => "3d482065-9358-4ff6-8e46-6fce640728d6",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 1650173719
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign9()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "p9nzTkIJ0BAEY399xd4I7xCbSFsF6eD10dxpgUOCFQxiZAVWLNySq9lbI9OdlxCoFcf05QDMWHytO12Fe7qao6OCc3V",
            "dde5c746-e876-403e-9d01-fdeb7d6dd8a6",
            "2022-02-25T01:29:18.000000+09:00",
            "2023-11-15T18:18:55.000000+09:00",
            969,
            "payment",
            [
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["5d3bb60f-8a41-4012-8022-9be851276bc1", "59d930fa-441c-4757-81e5-85bfd89118cb"],
                'minimum_number_for_combination_purchase' => 653,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 6427,
                'max_total_point_amount' => 447,
                'dest_private_money_id' => "97f80eae-0ead-4d29-be24-6e340bae54d8",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 2098797719
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign10()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "p9nzTkIJ0BAEY399xd4I7xCbSFsF6eD10dxpgUOCFQxiZAVWLNySq9lbI9OdlxCoFcf05QDMWHytO12Fe7qao6OCc3V",
            "dde5c746-e876-403e-9d01-fdeb7d6dd8a6",
            "2022-02-25T01:29:18.000000+09:00",
            "2023-11-15T18:18:55.000000+09:00",
            969,
            "payment",
            [
                'applicable_days_of_week' => [0, 6, 3, 1, 5],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["f4f9d685-d467-4868-acdb-80e6909d4d95", "2a5209d5-70c2-4396-9f6d-c2074c95b2eb", "393e3323-f12b-4a6d-84f5-9f722086ba29", "df038f57-23ff-4d7e-b7b3-5511d106fa44", "49463701-3c2b-4b18-a5db-fe5b3d42b8ae", "0ae1f191-75dc-4cfd-aa9b-d04bd22f408f", "30560e20-825f-493b-b9d7-1db1f43f69d9", "f266ce11-e58e-47b7-a39a-aa05373bf0d4", "2c7827f7-5f05-4f42-a27c-223a67d71404", "51a82cf0-de44-4336-8711-31d2e4fda4b6"],
                'minimum_number_for_combination_purchase' => 3764,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 4090,
                'max_total_point_amount' => 7904,
                'dest_private_money_id' => "3fe9ac82-f4b5-4c90-b98f-793e3c427b2a",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 166458551
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign11()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "p9nzTkIJ0BAEY399xd4I7xCbSFsF6eD10dxpgUOCFQxiZAVWLNySq9lbI9OdlxCoFcf05QDMWHytO12Fe7qao6OCc3V",
            "dde5c746-e876-403e-9d01-fdeb7d6dd8a6",
            "2022-02-25T01:29:18.000000+09:00",
            "2023-11-15T18:18:55.000000+09:00",
            969,
            "payment",
            [
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [1, 4, 4, 5, 1, 4, 3],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["b94e7c1b-89f4-4801-b017-1eae2faa0d56", "75a3b2a9-e218-4019-b476-2a6e0a64548d", "e3cf8bfe-d7f8-45cc-ac38-acf00b8e8fe1", "172ec8dc-c9a0-41c2-a2a5-a694ee2f2e55", "32bde03b-55f8-4101-b812-005850408474", "1642edb2-528d-4a0f-aaa5-fc0ca96b6368", "3b16ccf4-d442-4309-bac7-518e2963dfce", "d9437b94-0699-460e-b319-5e446571fe97", "b4458066-3edb-4020-b978-c28107a89f57"],
                'minimum_number_for_combination_purchase' => 5716,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 6194,
                'max_total_point_amount' => 3900,
                'dest_private_money_id' => "0b7d64d8-1767-41df-a3cf-08bfce2169a2",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 911016495
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign12()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "p9nzTkIJ0BAEY399xd4I7xCbSFsF6eD10dxpgUOCFQxiZAVWLNySq9lbI9OdlxCoFcf05QDMWHytO12Fe7qao6OCc3V",
            "dde5c746-e876-403e-9d01-fdeb7d6dd8a6",
            "2022-02-25T01:29:18.000000+09:00",
            "2023-11-15T18:18:55.000000+09:00",
            969,
            "payment",
            [
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [4, 2, 5, 2, 4, 5, 3],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["624e8c00-f1a8-4243-825f-4fb6b1aabb83", "5e847b8f-5cd0-49fe-9518-dd4312a7fc0b", "68927532-ff3e-48f1-9d3d-9f2786a18502", "08c26955-a175-48a8-b4b4-12e59372734c"],
                'minimum_number_for_combination_purchase' => 5383,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 2363,
                'max_total_point_amount' => 9577,
                'dest_private_money_id' => "8c86f6c2-6fcc-4fc3-9cb1-17bc7fb50ea2",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 1214218267
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign13()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "p9nzTkIJ0BAEY399xd4I7xCbSFsF6eD10dxpgUOCFQxiZAVWLNySq9lbI9OdlxCoFcf05QDMWHytO12Fe7qao6OCc3V",
            "dde5c746-e876-403e-9d01-fdeb7d6dd8a6",
            "2022-02-25T01:29:18.000000+09:00",
            "2023-11-15T18:18:55.000000+09:00",
            969,
            "payment",
            [
                'subject' => "all",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [4, 6],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["b98e6575-253b-4dcb-a8cb-9b4a986a6148", "14cd5060-2c96-4ae0-a9b7-af0a250cc68e", "ee70b265-25e8-492d-bb98-e0d65750a874"],
                'minimum_number_for_combination_purchase' => 9763,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 6059,
                'max_total_point_amount' => 8046,
                'dest_private_money_id' => "f93b415c-f938-456f-967e-5daa405121d3",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 957487239
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign14()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "p9nzTkIJ0BAEY399xd4I7xCbSFsF6eD10dxpgUOCFQxiZAVWLNySq9lbI9OdlxCoFcf05QDMWHytO12Fe7qao6OCc3V",
            "dde5c746-e876-403e-9d01-fdeb7d6dd8a6",
            "2022-02-25T01:29:18.000000+09:00",
            "2023-11-15T18:18:55.000000+09:00",
            969,
            "payment",
            [
                'is_exclusive' => TRUE,
                'subject' => "all",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [6, 4, 6, 6, 6, 1, 2, 5],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["296b8a07-ec78-4798-a363-c428f5a558fe", "677b693f-5779-4643-bdb0-4d956619fd9c", "527ae5c0-2e40-4a56-94ac-578b00afbf6d", "0e966618-6d9a-423b-981f-d82e0978e964", "8e110d0c-312f-4514-ba3e-9c0b1d6e78b7", "027d1cc5-47ae-4124-b44e-dc102a59f6c5", "e3ad06e6-46ee-43cf-9690-877e7f1df1d0", "3821c5be-553d-4b10-b7f3-17f17a07bec4", "10e34768-7193-4bf1-b980-997751cdd2c5", "cc4a857e-2a62-4829-94fc-38c9740e7a18"],
                'minimum_number_for_combination_purchase' => 215,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 6322,
                'max_total_point_amount' => 343,
                'dest_private_money_id' => "00f8baf4-74eb-429b-bf89-bec9b906f537",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 2070652775
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign15()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "p9nzTkIJ0BAEY399xd4I7xCbSFsF6eD10dxpgUOCFQxiZAVWLNySq9lbI9OdlxCoFcf05QDMWHytO12Fe7qao6OCc3V",
            "dde5c746-e876-403e-9d01-fdeb7d6dd8a6",
            "2022-02-25T01:29:18.000000+09:00",
            "2023-11-15T18:18:55.000000+09:00",
            969,
            "payment",
            [
                'point_expires_in_days' => 4102,
                'is_exclusive' => TRUE,
                'subject' => "all",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [1, 6, 5, 0, 3],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["b590eca8-8466-4f2d-8225-0d40de1a50d4", "a2c6f55d-4625-4e37-8b92-f31c18ace93a"],
                'minimum_number_for_combination_purchase' => 6106,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 917,
                'max_total_point_amount' => 5728,
                'dest_private_money_id' => "ec94611b-84d6-441a-a9b0-52601d47cfa2",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 1953480385
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign16()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "p9nzTkIJ0BAEY399xd4I7xCbSFsF6eD10dxpgUOCFQxiZAVWLNySq9lbI9OdlxCoFcf05QDMWHytO12Fe7qao6OCc3V",
            "dde5c746-e876-403e-9d01-fdeb7d6dd8a6",
            "2022-02-25T01:29:18.000000+09:00",
            "2023-11-15T18:18:55.000000+09:00",
            969,
            "payment",
            [
                'point_expires_at' => "2022-01-03T05:44:12.000000+09:00",
                'point_expires_in_days' => 2,
                'is_exclusive' => FALSE,
                'subject' => "all",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [0, 6, 0, 4, 0, 6, 5],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["aced2f44-9998-47e0-bc16-5e7be93f9ad0", "352f9302-62ac-41b1-85de-0824384756f7", "e6d7e13b-aedd-4640-956b-fdbdca1e8c3d", "18f6d773-805b-4243-9d44-5fec0d1628ed", "38834d57-5069-4af6-aaa7-771cea50416e"],
                'minimum_number_for_combination_purchase' => 3922,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 2760,
                'max_total_point_amount' => 8583,
                'dest_private_money_id' => "2a140439-0dff-4cd6-a5d7-50825630df02",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 870053080
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign17()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "p9nzTkIJ0BAEY399xd4I7xCbSFsF6eD10dxpgUOCFQxiZAVWLNySq9lbI9OdlxCoFcf05QDMWHytO12Fe7qao6OCc3V",
            "dde5c746-e876-403e-9d01-fdeb7d6dd8a6",
            "2022-02-25T01:29:18.000000+09:00",
            "2023-11-15T18:18:55.000000+09:00",
            969,
            "payment",
            [
                'status' => "enabled",
                'point_expires_at' => "2020-10-01T09:48:51.000000+09:00",
                'point_expires_in_days' => 6164,
                'is_exclusive' => FALSE,
                'subject' => "all",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [3, 6, 4],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["6dae24bb-5cb3-482b-8e92-dcb4ace5b3c0", "639d2474-46d4-4671-981b-1d4602502b2b", "22c4a153-e948-4715-b158-736d7da67374", "63d91f2f-adef-41f9-834c-4285fdf09a2e", "15b62012-238f-410d-9bd2-ab6e274918d1", "b9dbb089-abfd-45eb-becc-55991a86f1be", "ee9b429e-47fe-4e34-a768-7c0188ace3a6"],
                'minimum_number_for_combination_purchase' => 9464,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 5025,
                'max_total_point_amount' => 8499,
                'dest_private_money_id' => "26526914-0703-49c3-b757-449d2bfd384a",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 539024912
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign18()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "p9nzTkIJ0BAEY399xd4I7xCbSFsF6eD10dxpgUOCFQxiZAVWLNySq9lbI9OdlxCoFcf05QDMWHytO12Fe7qao6OCc3V",
            "dde5c746-e876-403e-9d01-fdeb7d6dd8a6",
            "2022-02-25T01:29:18.000000+09:00",
            "2023-11-15T18:18:55.000000+09:00",
            969,
            "payment",
            [
                'description' => "uMaHPi2g0vKL",
                'status' => "enabled",
                'point_expires_at' => "2022-01-06T01:26:39.000000+09:00",
                'point_expires_in_days' => 386,
                'is_exclusive' => TRUE,
                'subject' => "money",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [3, 0, 3, 6, 3],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["5e205e13-c594-4910-accc-605ea8b0e55c", "7264cef1-2aa8-4094-9002-a8e528c59a5e"],
                'minimum_number_for_combination_purchase' => 9884,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 4088,
                'max_total_point_amount' => 2280,
                'dest_private_money_id' => "d914ad9c-e293-42ab-aead-8a7df7d19926",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 205621722
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign19()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "p9nzTkIJ0BAEY399xd4I7xCbSFsF6eD10dxpgUOCFQxiZAVWLNySq9lbI9OdlxCoFcf05QDMWHytO12Fe7qao6OCc3V",
            "dde5c746-e876-403e-9d01-fdeb7d6dd8a6",
            "2022-02-25T01:29:18.000000+09:00",
            "2023-11-15T18:18:55.000000+09:00",
            969,
            "payment",
            [
                'bear_point_shop_id' => "04dd5044-f30f-40e2-b39e-7942a76f3e28",
                'description' => "bHcuJy5KIz1NHoXb7Cg0CHyouxGcdVC5sgGbP10vOoCQjB6JFcBkJVodxMbhDhHqc2IffmJ4OATLqgoRdesZgtXJektmbBT3ENWC0yZKoRXe7aIt6ldSewBIfN2dIUWx8nwaVvN6P4imCAbBUmbOzoTonIWjHQ5ckRp4gZ7EW5SHVsQuqXp4b9DTh4pEMZ",
                'status' => "enabled",
                'point_expires_at' => "2021-11-23T00:30:51.000000+09:00",
                'point_expires_in_days' => 3892,
                'is_exclusive' => FALSE,
                'subject' => "money",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [4, 6, 3, 3, 1, 5, 4],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["b95e5d3d-f9b8-4c6a-b11e-b55f8ef5c612", "2ab59de9-7798-4b26-9e1b-db68022de982", "491ba364-7716-42f9-9251-3401828042a2", "fd9b56f5-2415-4b4f-9e74-92ce36aafd44", "52270d29-1835-4fc6-9b23-cafbb61bc3a1", "f2629195-7fba-4c12-9bbf-fdf75439868e", "ff8da3aa-8c99-489a-9861-3c140357a846", "040d69e6-df13-4248-a141-44a26260fcaf", "7dae1219-987d-4e3e-b727-f00c5aca5b3a", "75f708c8-b0ef-441b-9566-63bb70b1be86"],
                'minimum_number_for_combination_purchase' => 5516,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 4794,
                'max_total_point_amount' => 468,
                'dest_private_money_id' => "fbe1df6d-f0ed-4170-a96f-c9fa026cc5fb",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 1822255902
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
