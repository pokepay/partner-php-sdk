<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateCampaign extends TestCase
{
    public function testCreateCampaign0()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "WbR6ddJz83a1dexqVQlm68J0QtAIJNm",
            "ccfa3d2a-9a00-45a4-a7eb-ecf6ca84045f",
            "2023-02-06T11:50:05.000000+09:00",
            "2023-01-14T11:22:48.000000+09:00",
            2978,
            "payment"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign1()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "WbR6ddJz83a1dexqVQlm68J0QtAIJNm",
            "ccfa3d2a-9a00-45a4-a7eb-ecf6ca84045f",
            "2023-02-06T11:50:05.000000+09:00",
            "2023-01-14T11:22:48.000000+09:00",
            2978,
            "payment",
            [
                'budget_caps_amount' => 1751163316
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign2()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "WbR6ddJz83a1dexqVQlm68J0QtAIJNm",
            "ccfa3d2a-9a00-45a4-a7eb-ecf6ca84045f",
            "2023-02-06T11:50:05.000000+09:00",
            "2023-01-14T11:22:48.000000+09:00",
            2978,
            "payment",
            [
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 187361416
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign3()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "WbR6ddJz83a1dexqVQlm68J0QtAIJNm",
            "ccfa3d2a-9a00-45a4-a7eb-ecf6ca84045f",
            "2023-02-06T11:50:05.000000+09:00",
            "2023-01-14T11:22:48.000000+09:00",
            2978,
            "payment",
            [
                'dest_private_money_id' => "b6c7d650-d029-43f3-9fe8-aed37ba93096",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 1338921701
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign4()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "WbR6ddJz83a1dexqVQlm68J0QtAIJNm",
            "ccfa3d2a-9a00-45a4-a7eb-ecf6ca84045f",
            "2023-02-06T11:50:05.000000+09:00",
            "2023-01-14T11:22:48.000000+09:00",
            2978,
            "payment",
            [
                'max_total_point_amount' => 6492,
                'dest_private_money_id' => "b448d689-a37b-4911-a208-55c0f68700f7",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 863805857
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign5()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "WbR6ddJz83a1dexqVQlm68J0QtAIJNm",
            "ccfa3d2a-9a00-45a4-a7eb-ecf6ca84045f",
            "2023-02-06T11:50:05.000000+09:00",
            "2023-01-14T11:22:48.000000+09:00",
            2978,
            "payment",
            [
                'max_point_amount' => 2809,
                'max_total_point_amount' => 950,
                'dest_private_money_id' => "da5db735-10f0-4e43-8789-ec6d38373e65",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 1266385788
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign6()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "WbR6ddJz83a1dexqVQlm68J0QtAIJNm",
            "ccfa3d2a-9a00-45a4-a7eb-ecf6ca84045f",
            "2023-02-06T11:50:05.000000+09:00",
            "2023-01-14T11:22:48.000000+09:00",
            2978,
            "payment",
            [
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 7929,
                'max_total_point_amount' => 8190,
                'dest_private_money_id' => "845518e9-4491-46a5-a1e5-8d636dcd9783",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 1940498144
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign7()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "WbR6ddJz83a1dexqVQlm68J0QtAIJNm",
            "ccfa3d2a-9a00-45a4-a7eb-ecf6ca84045f",
            "2023-02-06T11:50:05.000000+09:00",
            "2023-01-14T11:22:48.000000+09:00",
            2978,
            "payment",
            [
                'minimum_number_for_combination_purchase' => 9889,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 6772,
                'max_total_point_amount' => 309,
                'dest_private_money_id' => "3f1f3cba-8d73-48b3-9865-d3b85e277970",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 958111410
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign8()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "WbR6ddJz83a1dexqVQlm68J0QtAIJNm",
            "ccfa3d2a-9a00-45a4-a7eb-ecf6ca84045f",
            "2023-02-06T11:50:05.000000+09:00",
            "2023-01-14T11:22:48.000000+09:00",
            2978,
            "payment",
            [
                'applicable_shop_ids' => ["6995a787-296b-4e10-9010-c9948ad01f99", "489f2d18-2169-4090-8b6a-062d4e64dbb8", "e0ec7e87-4efd-4eca-869c-9361b61758f8"],
                'minimum_number_for_combination_purchase' => 4201,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 9033,
                'max_total_point_amount' => 8059,
                'dest_private_money_id' => "97b90526-5e9a-49ee-8fe0-4a4a733190e1",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 2000977113
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign9()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "WbR6ddJz83a1dexqVQlm68J0QtAIJNm",
            "ccfa3d2a-9a00-45a4-a7eb-ecf6ca84045f",
            "2023-02-06T11:50:05.000000+09:00",
            "2023-01-14T11:22:48.000000+09:00",
            2978,
            "payment",
            [
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["761b91cb-aef5-4f4d-bf98-177196e5881c"],
                'minimum_number_for_combination_purchase' => 7024,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 9511,
                'max_total_point_amount' => 3313,
                'dest_private_money_id' => "d4480e1f-0ed7-4eb2-81cc-3bc4d6400fb8",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 1497707379
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign10()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "WbR6ddJz83a1dexqVQlm68J0QtAIJNm",
            "ccfa3d2a-9a00-45a4-a7eb-ecf6ca84045f",
            "2023-02-06T11:50:05.000000+09:00",
            "2023-01-14T11:22:48.000000+09:00",
            2978,
            "payment",
            [
                'applicable_days_of_week' => [4, 0],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["f1be1587-8814-4778-94fd-8d43c903ee83", "c1d1a042-c693-40e1-8b29-781e4388cb58", "a0e6bebd-efe7-4458-9ef5-4d107b7d004f"],
                'minimum_number_for_combination_purchase' => 772,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 7117,
                'max_total_point_amount' => 3698,
                'dest_private_money_id' => "ab44069c-0652-4c32-8b69-d60b9913fa69",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 1669879272
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign11()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "WbR6ddJz83a1dexqVQlm68J0QtAIJNm",
            "ccfa3d2a-9a00-45a4-a7eb-ecf6ca84045f",
            "2023-02-06T11:50:05.000000+09:00",
            "2023-01-14T11:22:48.000000+09:00",
            2978,
            "payment",
            [
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [2, 4, 6, 6, 0, 4, 2, 1, 6, 2],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["63483f6b-66e7-442c-9edb-1ee61d4ad2f0", "c12e1ce7-c2e9-4184-bde9-3286600faf15", "faa2d7cc-cc02-45ed-abcc-489c8d148cdc", "2d194c5a-3a8d-48ed-8a26-6ae9fbf3ad95", "c34e3e94-def7-4f68-b531-bebaf6a18864", "bfbba8b8-da8d-468e-851b-599188111b5e", "d450fe92-cdaa-4b40-987d-40066e1fbfa0", "f627cc2c-c8e1-43fc-988e-5be3bd9ac841", "da35cf2e-8afc-45c8-ac13-bdc88c3c9f19", "c27526ef-4956-4af8-934d-839e6c3aab51"],
                'minimum_number_for_combination_purchase' => 4707,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 3552,
                'max_total_point_amount' => 4907,
                'dest_private_money_id' => "5d49f309-cde8-4752-a8f2-096116e033f7",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 1379553441
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign12()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "WbR6ddJz83a1dexqVQlm68J0QtAIJNm",
            "ccfa3d2a-9a00-45a4-a7eb-ecf6ca84045f",
            "2023-02-06T11:50:05.000000+09:00",
            "2023-01-14T11:22:48.000000+09:00",
            2978,
            "payment",
            [
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [6, 2],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["6911086f-d648-4d63-800d-eb82bfcbc03a", "f2653165-95b3-4a92-913f-7b4e0e4dae7f", "d7014b3c-7654-4e0c-a947-c7833f69c81c", "5132e85d-092c-4fb6-93d8-e3357a28758d", "0a607cd0-1a1a-4a98-a9c7-48d12794b3d5", "b53a633b-39f0-4159-aa64-19f88bfb9350", "7a1ad17d-e4c0-4fb8-a9ec-e7760e5d2051"],
                'minimum_number_for_combination_purchase' => 1322,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 8174,
                'max_total_point_amount' => 2853,
                'dest_private_money_id' => "d3840ec5-6edd-4d4b-8cb9-f89a0875a4a6",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 925529993
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign13()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "WbR6ddJz83a1dexqVQlm68J0QtAIJNm",
            "ccfa3d2a-9a00-45a4-a7eb-ecf6ca84045f",
            "2023-02-06T11:50:05.000000+09:00",
            "2023-01-14T11:22:48.000000+09:00",
            2978,
            "payment",
            [
                'subject' => "money",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [6, 0, 4, 2, 3, 0, 5, 2, 2],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["800dfb70-68e6-4bf1-8fbb-7c5b9b56ca68", "4e8e40b0-ad98-4cb7-a850-deff63a01707", "4a56fd4e-63cc-4867-b2fa-5a9a8bc294b0", "14a2bfac-c397-4ee1-ae7b-ef44604816bd", "d0625732-67ef-4769-8789-47f4c3ab6328", "7e3de019-880f-4c98-bae5-9c85ddf93182", "646d7342-d0ae-4b8c-b2dd-5ad18024bdda", "dcf1d901-6803-4874-94f6-a4a105875329"],
                'minimum_number_for_combination_purchase' => 9307,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 2569,
                'max_total_point_amount' => 2022,
                'dest_private_money_id' => "4d23f035-9c8f-4cce-a446-230628fc560c",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 242874399
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign14()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "WbR6ddJz83a1dexqVQlm68J0QtAIJNm",
            "ccfa3d2a-9a00-45a4-a7eb-ecf6ca84045f",
            "2023-02-06T11:50:05.000000+09:00",
            "2023-01-14T11:22:48.000000+09:00",
            2978,
            "payment",
            [
                'is_exclusive' => FALSE,
                'subject' => "all",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [3, 1, 3, 2, 6, 3, 0],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["6f1a4f66-731b-4430-96d3-a64f3bb1ea54", "46786a03-959f-4aaf-8911-c82cb079d15f", "c6f3b594-fd5e-4a20-8108-154d6245a37c", "15095a50-8234-459f-ae68-bcda4371f40a", "03a5b3c5-af56-420a-a672-a18d96ca6c30", "f712059f-13ea-4b06-9356-5fddd5cba81e", "b4e84f0e-e454-43c5-9dca-3ba11c0c394d", "6157e8b2-499e-43ba-b0e2-842f114f9639", "5c92d4c7-039d-4aec-aa67-4da459ff4027"],
                'minimum_number_for_combination_purchase' => 335,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 7896,
                'max_total_point_amount' => 7693,
                'dest_private_money_id' => "06505303-b461-4685-8f16-e7aaecffb9b2",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 1312791415
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign15()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "WbR6ddJz83a1dexqVQlm68J0QtAIJNm",
            "ccfa3d2a-9a00-45a4-a7eb-ecf6ca84045f",
            "2023-02-06T11:50:05.000000+09:00",
            "2023-01-14T11:22:48.000000+09:00",
            2978,
            "payment",
            [
                'point_expires_in_days' => 8907,
                'is_exclusive' => FALSE,
                'subject' => "money",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [5, 4, 2, 4, 5, 1, 4, 4, 1, 2],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["0882c217-0a4d-4310-a0fe-b9b612fc7680", "06aaa803-a115-4b5e-9325-582b24f44a26"],
                'minimum_number_for_combination_purchase' => 5834,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 7100,
                'max_total_point_amount' => 7857,
                'dest_private_money_id' => "2398d2dc-cc3f-4757-94e8-f099e148735f",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 1409338370
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign16()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "WbR6ddJz83a1dexqVQlm68J0QtAIJNm",
            "ccfa3d2a-9a00-45a4-a7eb-ecf6ca84045f",
            "2023-02-06T11:50:05.000000+09:00",
            "2023-01-14T11:22:48.000000+09:00",
            2978,
            "payment",
            [
                'point_expires_at' => "2023-10-22T15:18:59.000000+09:00",
                'point_expires_in_days' => 7901,
                'is_exclusive' => TRUE,
                'subject' => "all",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [0],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["c25f0c17-f8f3-4826-a509-df495524a1cc", "bc109f39-9ff4-42e4-a5ae-e51959fc24cd", "4f26591d-e15d-4622-99ef-50bae7a0e65c", "ae05ee66-a605-41e6-b5b9-2bb4e3286703", "6fa1e94b-b0f6-47e5-9973-32e3faf9f93a", "40c3943e-e298-40c5-94d0-72d88823bc57", "4f3735b0-0b1a-4162-a527-d0bea9ce8455", "2ab0f86b-7498-49da-b950-f5956af4e9b0", "44c12e00-7338-46cf-84d0-57ae6d3adaf6", "daeaabab-a5ed-4862-a24a-6d9f0f918c5b"],
                'minimum_number_for_combination_purchase' => 4157,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 5739,
                'max_total_point_amount' => 6945,
                'dest_private_money_id' => "227ae137-c5d9-4d57-a82f-1a635b736db0",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 858507149
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign17()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "WbR6ddJz83a1dexqVQlm68J0QtAIJNm",
            "ccfa3d2a-9a00-45a4-a7eb-ecf6ca84045f",
            "2023-02-06T11:50:05.000000+09:00",
            "2023-01-14T11:22:48.000000+09:00",
            2978,
            "payment",
            [
                'status' => "enabled",
                'point_expires_at' => "2023-05-26T14:13:22.000000+09:00",
                'point_expires_in_days' => 9805,
                'is_exclusive' => TRUE,
                'subject' => "money",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [6],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["f72a7c9d-8c37-4bf7-9d21-c3c8482c815b", "7fa1dbea-90f8-421a-9ff9-ae08d19b8c39", "37537390-000e-4ce1-a933-75d7d8ee70eb", "3ad18cc6-1d8a-4745-9f59-21f0cc6043fe", "e977d0b6-9b25-427f-b1e6-2b2b8c0c5926", "585a9460-a820-4fbf-8d03-480b96530c9b", "6717c70b-8bf3-4bd0-87e9-25152c7bd2a6"],
                'minimum_number_for_combination_purchase' => 6626,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 968,
                'max_total_point_amount' => 5210,
                'dest_private_money_id' => "8df0bddb-1f3d-4979-a32d-25039a96353d",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 1638294561
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign18()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "WbR6ddJz83a1dexqVQlm68J0QtAIJNm",
            "ccfa3d2a-9a00-45a4-a7eb-ecf6ca84045f",
            "2023-02-06T11:50:05.000000+09:00",
            "2023-01-14T11:22:48.000000+09:00",
            2978,
            "payment",
            [
                'description' => "bMJmtd036cLUsApcS4apTeNTVgqNvumgCUCkJdoOjH3kE8WhksxhlcugHV4u1YYhunGeY3VlItkcxNtromAunfP7TljFc0GWbz079mfK024iCsRCPSI1NW2NABxt3KPWSgCBQkDSDtul2",
                'status' => "disabled",
                'point_expires_at' => "2021-12-27T03:46:46.000000+09:00",
                'point_expires_in_days' => 2714,
                'is_exclusive' => FALSE,
                'subject' => "money",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [5],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["086457a9-6e8f-425d-aea6-8711607a0daa", "83726cb9-4a62-4840-950a-680b43ce40a2"],
                'minimum_number_for_combination_purchase' => 8579,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 4628,
                'max_total_point_amount' => 2093,
                'dest_private_money_id' => "c926d1fd-5187-4cf2-9af3-db5cb6e06709",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 439152352
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign19()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "WbR6ddJz83a1dexqVQlm68J0QtAIJNm",
            "ccfa3d2a-9a00-45a4-a7eb-ecf6ca84045f",
            "2023-02-06T11:50:05.000000+09:00",
            "2023-01-14T11:22:48.000000+09:00",
            2978,
            "payment",
            [
                'bear_point_shop_id' => "a85935d0-7bd1-4e14-93bb-0eeaf68dfdc2",
                'description' => "qrUSCFUEICPCAyQWT3bVsecKq6veq0A9xqeXBpsq2ukf1JYwcbISH87EwiDUOep1ML8q3zJGCxptbw",
                'status' => "disabled",
                'point_expires_at' => "2020-02-10T08:48:33.000000+09:00",
                'point_expires_in_days' => 8149,
                'is_exclusive' => FALSE,
                'subject' => "money",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [3, 4, 2, 1, 3, 6],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["5fa636f9-9de8-4975-b9c8-1da22e3f80d1", "10b7ce83-8bac-4908-b25a-f147086864d6"],
                'minimum_number_for_combination_purchase' => 4696,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 3507,
                'max_total_point_amount' => 9949,
                'dest_private_money_id' => "ed21b425-3de1-48f5-9b2d-cde9674cea20",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 665253800
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
