<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateCampaign extends TestCase
{
    public function testCreateCampaign0()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "32yceHkpeJS53rQYrIERvl0KriuNlh",
            "2fbfec21-b0d0-43b5-922f-cea35d4549f7",
            "2021-12-29T19:19:26.000000Z",
            "2021-09-29T16:33:42.000000Z",
            3282,
            "topup"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign1()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "32yceHkpeJS53rQYrIERvl0KriuNlh",
            "2fbfec21-b0d0-43b5-922f-cea35d4549f7",
            "2021-12-29T19:19:26.000000Z",
            "2021-09-29T16:33:42.000000Z",
            3282,
            "topup",
            [
                'budget_caps_amount' => 404261566
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign2()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "32yceHkpeJS53rQYrIERvl0KriuNlh",
            "2fbfec21-b0d0-43b5-922f-cea35d4549f7",
            "2021-12-29T19:19:26.000000Z",
            "2021-09-29T16:33:42.000000Z",
            3282,
            "topup",
            [
                'applicable_transaction_metadata' => ["key" => "rank", "value" => "bronze"]
        ,
                'budget_caps_amount' => 1472227188
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign3()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "32yceHkpeJS53rQYrIERvl0KriuNlh",
            "2fbfec21-b0d0-43b5-922f-cea35d4549f7",
            "2021-12-29T19:19:26.000000Z",
            "2021-09-29T16:33:42.000000Z",
            3282,
            "topup",
            [
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'applicable_transaction_metadata' => ["key" => "rank", "value" => "bronze"]
        ,
                'budget_caps_amount' => 7908965
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign4()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "32yceHkpeJS53rQYrIERvl0KriuNlh",
            "2fbfec21-b0d0-43b5-922f-cea35d4549f7",
            "2021-12-29T19:19:26.000000Z",
            "2021-09-29T16:33:42.000000Z",
            3282,
            "topup",
            [
                'dest_private_money_id' => "87443aed-40d3-45a9-ae12-f9ae3191efee",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'applicable_transaction_metadata' => ["key" => "rank", "value" => "bronze"]
        ,
                'budget_caps_amount' => 298846853
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign5()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "32yceHkpeJS53rQYrIERvl0KriuNlh",
            "2fbfec21-b0d0-43b5-922f-cea35d4549f7",
            "2021-12-29T19:19:26.000000Z",
            "2021-09-29T16:33:42.000000Z",
            3282,
            "topup",
            [
                'max_total_point_amount' => 8524,
                'dest_private_money_id' => "f51dd646-9c6f-41a5-aa63-8e03aa8a62cc",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'applicable_transaction_metadata' => ["key" => "rank", "value" => "bronze"]
        ,
                'budget_caps_amount' => 208565968
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign6()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "32yceHkpeJS53rQYrIERvl0KriuNlh",
            "2fbfec21-b0d0-43b5-922f-cea35d4549f7",
            "2021-12-29T19:19:26.000000Z",
            "2021-09-29T16:33:42.000000Z",
            3282,
            "topup",
            [
                'max_point_amount' => 3649,
                'max_total_point_amount' => 118,
                'dest_private_money_id' => "de39c775-04bd-49ff-b518-64721a76abda",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'applicable_transaction_metadata' => ["key" => "rank", "value" => "bronze"]
        ,
                'budget_caps_amount' => 2121041378
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign7()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "32yceHkpeJS53rQYrIERvl0KriuNlh",
            "2fbfec21-b0d0-43b5-922f-cea35d4549f7",
            "2021-12-29T19:19:26.000000Z",
            "2021-09-29T16:33:42.000000Z",
            3282,
            "topup",
            [
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 3846,
                'max_total_point_amount' => 1250,
                'dest_private_money_id' => "d5f88e0f-4ed0-4335-96a4-e309f138df7a",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'applicable_transaction_metadata' => ["key" => "rank", "value" => "bronze"]
        ,
                'budget_caps_amount' => 251167319
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign8()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "32yceHkpeJS53rQYrIERvl0KriuNlh",
            "2fbfec21-b0d0-43b5-922f-cea35d4549f7",
            "2021-12-29T19:19:26.000000Z",
            "2021-09-29T16:33:42.000000Z",
            3282,
            "topup",
            [
                'minimum_number_for_combination_purchase' => 6134,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 3160,
                'max_total_point_amount' => 9539,
                'dest_private_money_id' => "923d5e6e-f9cd-4954-9108-2183bf1ddb07",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'applicable_transaction_metadata' => ["key" => "rank", "value" => "bronze"]
        ,
                'budget_caps_amount' => 1513268234
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign9()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "32yceHkpeJS53rQYrIERvl0KriuNlh",
            "2fbfec21-b0d0-43b5-922f-cea35d4549f7",
            "2021-12-29T19:19:26.000000Z",
            "2021-09-29T16:33:42.000000Z",
            3282,
            "topup",
            [
                'minimum_number_of_amount' => 4211,
                'minimum_number_for_combination_purchase' => 978,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 2485,
                'max_total_point_amount' => 2571,
                'dest_private_money_id' => "a937e186-7127-4086-86b2-ebffae347414",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'applicable_transaction_metadata' => ["key" => "rank", "value" => "bronze"]
        ,
                'budget_caps_amount' => 612645158
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign10()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "32yceHkpeJS53rQYrIERvl0KriuNlh",
            "2fbfec21-b0d0-43b5-922f-cea35d4549f7",
            "2021-12-29T19:19:26.000000Z",
            "2021-09-29T16:33:42.000000Z",
            3282,
            "topup",
            [
                'minimum_number_of_products' => 2376,
                'minimum_number_of_amount' => 1380,
                'minimum_number_for_combination_purchase' => 3590,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 2420,
                'max_total_point_amount' => 4677,
                'dest_private_money_id' => "cf9981f4-70bc-46a6-834d-d1b3c74ccdac",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'applicable_transaction_metadata' => ["key" => "rank", "value" => "bronze"]
        ,
                'budget_caps_amount' => 1170764954
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign11()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "32yceHkpeJS53rQYrIERvl0KriuNlh",
            "2fbfec21-b0d0-43b5-922f-cea35d4549f7",
            "2021-12-29T19:19:26.000000Z",
            "2021-09-29T16:33:42.000000Z",
            3282,
            "topup",
            [
                'blacklisted_shop_ids' => ["e83b132c-dd17-4ec0-8b8c-7d880953aa5e", "a6899c53-6621-401d-8559-0862b0dcd4f5", "55059d98-4fe1-477e-ba4f-cee0d0a6dff9", "c8e7b2a7-d6b1-40c1-97f4-624a16d29219", "97fc9014-95aa-4d9c-a062-4ea65ca9c410", "9d623c7b-61da-43e0-8c99-20dc47f4bac6"],
                'minimum_number_of_products' => 247,
                'minimum_number_of_amount' => 8537,
                'minimum_number_for_combination_purchase' => 6029,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 8261,
                'max_total_point_amount' => 7893,
                'dest_private_money_id' => "597a05f2-05ff-4e25-9b80-7e6ebd9d470d",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'applicable_transaction_metadata' => ["key" => "rank", "value" => "bronze"]
        ,
                'budget_caps_amount' => 1252258204
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign12()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "32yceHkpeJS53rQYrIERvl0KriuNlh",
            "2fbfec21-b0d0-43b5-922f-cea35d4549f7",
            "2021-12-29T19:19:26.000000Z",
            "2021-09-29T16:33:42.000000Z",
            3282,
            "topup",
            [
                'applicable_shop_ids' => ["2e7d403c-b4ac-49ea-9b9a-67106e9915b6", "0ac2d1bb-a3f2-43c5-b9e0-53486e2e6e75", "4510615e-1c93-432b-973f-b1c7503f41ed", "48dd102c-ba35-4b07-bb16-940960e8c5dc", "5e15318e-ff1f-46a4-b804-99a552a1fda0", "14c1e56d-b67f-4618-bb0b-dd919a7472a8", "53e26a89-ef5d-43c2-8550-ef84a09cf89a", "8bf61b16-6f45-4a72-99a5-3ceade6b24d6", "6b6a85b2-6034-4c9b-bc26-03f81787b8cb", "7bdea653-dd9c-4c62-a6da-620fec6a6de9"],
                'blacklisted_shop_ids' => ["6b7e475b-6dba-4ca2-8645-c823ef7c2f60", "f9bb7831-a16d-430b-b832-a4fa123ab093", "2ec3f29a-ee7e-4f13-bb47-2854fbf34e5c", "c27cb131-7778-4282-8828-477ca0dc7e3f", "55e9c6a8-fc9d-4f66-84dc-132dc97378d5", "525c72e6-0e25-42ff-b48b-0b3b186699c9", "d2a3e81c-025d-4621-9e33-4fb0acc5af06"],
                'minimum_number_of_products' => 1355,
                'minimum_number_of_amount' => 1575,
                'minimum_number_for_combination_purchase' => 5242,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 8010,
                'max_total_point_amount' => 6481,
                'dest_private_money_id' => "21d25d85-9d71-4164-8bc3-43be03962d29",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'applicable_transaction_metadata' => ["key" => "rank", "value" => "bronze"]
        ,
                'budget_caps_amount' => 1067832517
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign13()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "32yceHkpeJS53rQYrIERvl0KriuNlh",
            "2fbfec21-b0d0-43b5-922f-cea35d4549f7",
            "2021-12-29T19:19:26.000000Z",
            "2021-09-29T16:33:42.000000Z",
            3282,
            "topup",
            [
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["31f14c3d-4189-4827-aed4-0d5293051b76", "1c01fff2-0c8b-4769-bea0-72cdd648c6a4", "ae30ee4d-eb1d-43f1-891f-76a1b00ae054", "830262ad-c800-45a1-9ffd-57b84e439918", "03d816a2-a5d9-4017-b227-e41fdd537bf7", "8341e050-2896-4678-a057-ab89f315428f", "8272e857-a0fd-4f1c-bb10-89585e5ab792", "216d3c45-7883-4007-8b55-78ef8b118c02"],
                'blacklisted_shop_ids' => ["a473ef7c-3e2c-4f67-a18e-b6b0cc963d94", "c6e3ae25-789a-467a-80d8-4bf3aa513edd"],
                'minimum_number_of_products' => 5750,
                'minimum_number_of_amount' => 8466,
                'minimum_number_for_combination_purchase' => 6861,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 1282,
                'max_total_point_amount' => 4646,
                'dest_private_money_id' => "48abd7a3-c4ed-46e2-90a7-b231e8adce23",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'applicable_transaction_metadata' => ["key" => "rank", "value" => "bronze"]
        ,
                'budget_caps_amount' => 748526441
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign14()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "32yceHkpeJS53rQYrIERvl0KriuNlh",
            "2fbfec21-b0d0-43b5-922f-cea35d4549f7",
            "2021-12-29T19:19:26.000000Z",
            "2021-09-29T16:33:42.000000Z",
            3282,
            "topup",
            [
                'applicable_days_of_week' => [5, 3, 3, 6, 5, 0, 2, 4, 3, 2],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["22a79fea-27e3-4b9d-be88-92ba719cfc93", "27acf789-44e0-4d13-9f74-b4af79f9e935", "941800f9-1b51-4ba7-81ce-9a1c7cacac00", "c020b329-cfe0-4da3-99ea-4356a8bde0db", "bb62c3ee-42bf-4d9c-bdc0-4733e2729ca3", "30751092-9c35-4772-848d-9ee88f762c96", "784a4807-3ab0-4bb4-a489-a3acd13588e0"],
                'blacklisted_shop_ids' => ["1c3d378a-9fc0-4e20-b6e8-aa1b44a95992"],
                'minimum_number_of_products' => 4818,
                'minimum_number_of_amount' => 7944,
                'minimum_number_for_combination_purchase' => 2072,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 6234,
                'max_total_point_amount' => 481,
                'dest_private_money_id' => "a14792fc-37b5-447c-965b-631781833b6c",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'applicable_transaction_metadata' => ["key" => "rank", "value" => "bronze"]
        ,
                'budget_caps_amount' => 1073703717
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign15()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "32yceHkpeJS53rQYrIERvl0KriuNlh",
            "2fbfec21-b0d0-43b5-922f-cea35d4549f7",
            "2021-12-29T19:19:26.000000Z",
            "2021-09-29T16:33:42.000000Z",
            3282,
            "topup",
            [
                'blacklisted_product_rules' => [["product_code" => "4912345678904", "classification_code" => "c123"]
        , ["product_code" => "4912345678904", "classification_code" => "c123"]
        , ["product_code" => "4912345678904", "classification_code" => "c123"]
        ],
                'applicable_days_of_week' => [5, 4, 0, 4, 2],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["1d3e4a3d-9bc6-4028-a612-0ca2a1341e06", "24ff08f5-c7ba-4868-a8a8-d5f8930fcad0", "b8412d4e-cf1d-47ff-b81a-604a9911e302", "50720665-8f14-41e4-816f-0d8260f61f83", "76da8fb6-5e0f-4b3c-8449-469ebb605a42", "57f86731-465e-404a-b740-33c9778a54df", "6fbc4234-6dc8-4074-8cc8-75504578a36c", "6a62b0c8-5bbf-4746-a7c5-40754ca0e150", "71fcf047-78ff-44bb-9a9f-b16f71a3be33", "787a93c7-7ceb-460d-a428-a1f98945efe7"],
                'blacklisted_shop_ids' => ["314189d3-bc94-4279-8486-83fa092a642f", "e03f13d1-3dc0-469c-b1c0-2cbd42da93e5", "618a8654-d7f8-4523-8a42-de72ab9a72fb", "4c321a53-58e4-4847-82b4-62dbbb1368db", "0b40ce74-a232-497d-92f0-4722cc729950", "251354fb-bd0f-4821-8b81-63b30c323fcb", "d13a9e6f-06e8-4f2b-a2cf-68ae0e4622da"],
                'minimum_number_of_products' => 788,
                'minimum_number_of_amount' => 3188,
                'minimum_number_for_combination_purchase' => 7746,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 4537,
                'max_total_point_amount' => 5902,
                'dest_private_money_id' => "9814bca9-dd9b-4865-b06b-8e612088345f",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'applicable_transaction_metadata' => ["key" => "rank", "value" => "bronze"]
        ,
                'budget_caps_amount' => 2029384388
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign16()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "32yceHkpeJS53rQYrIERvl0KriuNlh",
            "2fbfec21-b0d0-43b5-922f-cea35d4549f7",
            "2021-12-29T19:19:26.000000Z",
            "2021-09-29T16:33:42.000000Z",
            3282,
            "topup",
            [
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'blacklisted_product_rules' => [["product_code" => "4912345678904", "classification_code" => "c123"]
        ],
                'applicable_days_of_week' => [2],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["277862e2-b9eb-400f-84ee-d6b16fbcfb5a", "ed650299-8011-44f2-92a9-ff1f835400cf"],
                'blacklisted_shop_ids' => ["9367ec8d-e0e1-4b66-9394-5e081157169b", "a2cfa9fb-8ad5-46fa-8ed4-f7c2dc81e191", "21925cbd-9f87-4a11-9849-f1d67813c47f"],
                'minimum_number_of_products' => 3474,
                'minimum_number_of_amount' => 690,
                'minimum_number_for_combination_purchase' => 1086,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 7836,
                'max_total_point_amount' => 9241,
                'dest_private_money_id' => "7b8db7ac-e9c7-4cfd-89f0-f98a16e775b1",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'applicable_transaction_metadata' => ["key" => "rank", "value" => "bronze"]
        ,
                'budget_caps_amount' => 928594189
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign17()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "32yceHkpeJS53rQYrIERvl0KriuNlh",
            "2fbfec21-b0d0-43b5-922f-cea35d4549f7",
            "2021-12-29T19:19:26.000000Z",
            "2021-09-29T16:33:42.000000Z",
            3282,
            "topup",
            [
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'blacklisted_product_rules' => [["product_code" => "4912345678904", "classification_code" => "c123"]
        , ["product_code" => "4912345678904", "classification_code" => "c123"]
        , ["product_code" => "4912345678904", "classification_code" => "c123"]
        , ["product_code" => "4912345678904", "classification_code" => "c123"]
        ],
                'applicable_days_of_week' => [0, 4, 0, 5, 1, 1],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["fe5dc4cb-cf3e-47d1-b38c-261f8a8d1baf", "64f173af-f72b-4fc1-93ed-f064010f4ed6", "a3620327-5089-4418-932a-3ba3208dd801", "d886eed1-4822-41a4-bf90-6fff8e498872", "30cc310d-d355-4fbd-9ee9-ad0e64487712", "bd81d168-cd4e-4af5-b2e6-d67fc9c3860b", "501734a5-86b4-4ebb-8b28-e03ce0cd4836"],
                'blacklisted_shop_ids' => ["137be536-f73d-4c95-ac5a-c67798d17e0a"],
                'minimum_number_of_products' => 1038,
                'minimum_number_of_amount' => 1204,
                'minimum_number_for_combination_purchase' => 7129,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 3772,
                'max_total_point_amount' => 4448,
                'dest_private_money_id' => "d7ca944f-f8e6-413a-b671-9247dc85b289",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'applicable_transaction_metadata' => ["key" => "rank", "value" => "bronze"]
        ,
                'budget_caps_amount' => 1366859454
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign18()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "32yceHkpeJS53rQYrIERvl0KriuNlh",
            "2fbfec21-b0d0-43b5-922f-cea35d4549f7",
            "2021-12-29T19:19:26.000000Z",
            "2021-09-29T16:33:42.000000Z",
            3282,
            "topup",
            [
                'subject' => "money",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'blacklisted_product_rules' => [["product_code" => "4912345678904", "classification_code" => "c123"]
        , ["product_code" => "4912345678904", "classification_code" => "c123"]
        , ["product_code" => "4912345678904", "classification_code" => "c123"]
        , ["product_code" => "4912345678904", "classification_code" => "c123"]
        , ["product_code" => "4912345678904", "classification_code" => "c123"]
        , ["product_code" => "4912345678904", "classification_code" => "c123"]
        , ["product_code" => "4912345678904", "classification_code" => "c123"]
        , ["product_code" => "4912345678904", "classification_code" => "c123"]
        , ["product_code" => "4912345678904", "classification_code" => "c123"]
        , ["product_code" => "4912345678904", "classification_code" => "c123"]
        ],
                'applicable_days_of_week' => [3, 3, 3],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["315260e1-7647-4e3b-aa2f-49b24fe41070", "1da33c39-b581-44e9-8072-64d60b01a80e"],
                'blacklisted_shop_ids' => ["0932947e-672b-4ba7-a3a2-852995b4fb10", "34ff8f8d-febd-464d-a4cf-234fb766c4cd", "1632478b-1792-46ba-86de-5e8b50b087c5"],
                'minimum_number_of_products' => 4090,
                'minimum_number_of_amount' => 7686,
                'minimum_number_for_combination_purchase' => 8049,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 1449,
                'max_total_point_amount' => 7042,
                'dest_private_money_id' => "4699e6b2-51a5-44f3-9d9f-c162c9b63a05",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'applicable_transaction_metadata' => ["key" => "rank", "value" => "bronze"]
        ,
                'budget_caps_amount' => 428959679
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign19()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "32yceHkpeJS53rQYrIERvl0KriuNlh",
            "2fbfec21-b0d0-43b5-922f-cea35d4549f7",
            "2021-12-29T19:19:26.000000Z",
            "2021-09-29T16:33:42.000000Z",
            3282,
            "topup",
            [
                'is_exclusive' => FALSE,
                'subject' => "money",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'blacklisted_product_rules' => [["product_code" => "4912345678904", "classification_code" => "c123"]
        , ["product_code" => "4912345678904", "classification_code" => "c123"]
        , ["product_code" => "4912345678904", "classification_code" => "c123"]
        , ["product_code" => "4912345678904", "classification_code" => "c123"]
        ],
                'applicable_days_of_week' => [1, 6, 6],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["1725d300-5e67-48ff-a179-22721bfdfccf", "62d005b7-1a7d-4f95-ac23-44efcb0c2ce1", "8beaeafc-6b91-4d92-8149-c5d05fa20815", "3cbb0cfe-17aa-4d3c-8716-624a29332437", "c7df64ca-2347-4c42-bec3-3b00e1548f9f", "ccedbd0b-1eb1-4e17-af91-e43506b339bc", "4f448452-a905-4ba0-9c5e-99a53f0c3a63", "08ae7609-c839-463e-b677-edbb9446e466"],
                'blacklisted_shop_ids' => ["f4c9e8f2-80d7-42f2-8b64-64b80c468920", "59fc8dda-f4e3-4a6b-ae60-c7e44d387796", "8729de97-7c50-4e6e-9c70-e09ecb48001f", "be9d0ab3-c8ee-4dbf-a8a5-4c1201194f12", "3e4c0adb-c413-4b91-bccc-156fae2b56cd", "e6c42624-9681-43e5-af02-fbecd647f8e5", "a34ee48e-e4b3-4e70-9b70-8fcfcd028ca8"],
                'minimum_number_of_products' => 4131,
                'minimum_number_of_amount' => 7296,
                'minimum_number_for_combination_purchase' => 7888,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 7211,
                'max_total_point_amount' => 2765,
                'dest_private_money_id' => "46343905-42e5-487d-8361-b49b5355045f",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'applicable_transaction_metadata' => ["key" => "rank", "value" => "bronze"]
        ,
                'budget_caps_amount' => 601600727
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign20()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "32yceHkpeJS53rQYrIERvl0KriuNlh",
            "2fbfec21-b0d0-43b5-922f-cea35d4549f7",
            "2021-12-29T19:19:26.000000Z",
            "2021-09-29T16:33:42.000000Z",
            3282,
            "topup",
            [
                'point_expires_in_days' => 3334,
                'is_exclusive' => TRUE,
                'subject' => "money",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'blacklisted_product_rules' => [["product_code" => "4912345678904", "classification_code" => "c123"]
        , ["product_code" => "4912345678904", "classification_code" => "c123"]
        , ["product_code" => "4912345678904", "classification_code" => "c123"]
        ],
                'applicable_days_of_week' => [3, 3],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["7c85eb77-a868-495f-b0b9-d6045bb2c13e", "b78bf37f-ce7d-433c-b627-a9aa6a0d51df", "d8317293-b676-4508-9929-cd40c097e006"],
                'blacklisted_shop_ids' => ["2d3e6b97-4f59-42eb-a67c-0af1c7c7dac1"],
                'minimum_number_of_products' => 2931,
                'minimum_number_of_amount' => 6034,
                'minimum_number_for_combination_purchase' => 9345,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 5881,
                'max_total_point_amount' => 960,
                'dest_private_money_id' => "e4dce728-b9f4-48c8-8661-025173c6d820",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'applicable_transaction_metadata' => ["key" => "rank", "value" => "bronze"]
        ,
                'budget_caps_amount' => 202568973
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign21()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "32yceHkpeJS53rQYrIERvl0KriuNlh",
            "2fbfec21-b0d0-43b5-922f-cea35d4549f7",
            "2021-12-29T19:19:26.000000Z",
            "2021-09-29T16:33:42.000000Z",
            3282,
            "topup",
            [
                'point_expires_at' => "2022-10-22T14:06:26.000000Z",
                'point_expires_in_days' => 2802,
                'is_exclusive' => TRUE,
                'subject' => "all",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'blacklisted_product_rules' => [["product_code" => "4912345678904", "classification_code" => "c123"]
        , ["product_code" => "4912345678904", "classification_code" => "c123"]
        , ["product_code" => "4912345678904", "classification_code" => "c123"]
        , ["product_code" => "4912345678904", "classification_code" => "c123"]
        , ["product_code" => "4912345678904", "classification_code" => "c123"]
        , ["product_code" => "4912345678904", "classification_code" => "c123"]
        , ["product_code" => "4912345678904", "classification_code" => "c123"]
        ],
                'applicable_days_of_week' => [6],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["efe9b773-4c9d-445c-9ac9-bca4440fde3d", "53f46506-9df1-4359-a7c2-cf6ce1bd6a1b", "02142139-feb9-45f8-a558-d9d321f590a9"],
                'blacklisted_shop_ids' => ["0a7fb047-d08f-47a5-a0fe-fd766c9e87b3", "de8e4292-6dcf-44f6-9c6e-afb3051aa853", "af29f425-4c7e-47c8-b716-1d8be8f18f6c", "ce4285ea-7620-4829-8c71-28076bf5b6c5", "f08aaf64-c470-44ba-87aa-fd2a00b03b71", "5ec7a743-2297-42e3-902c-5ccfdaf98fbd", "49eac005-cf70-4b57-a625-426acfc5f52c", "1390d12f-5f69-41f6-82aa-caa930d09aef", "33c8aacf-95ee-48a9-ab97-eb19195f5783", "6ae7e486-9776-4964-b7a5-17dc9795cb85"],
                'minimum_number_of_products' => 7688,
                'minimum_number_of_amount' => 1853,
                'minimum_number_for_combination_purchase' => 9521,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 5082,
                'max_total_point_amount' => 5564,
                'dest_private_money_id' => "ea979086-9a17-4c76-bdec-6ce426b04c3b",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'applicable_transaction_metadata' => ["key" => "rank", "value" => "bronze"]
        ,
                'budget_caps_amount' => 1585298100
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign22()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "32yceHkpeJS53rQYrIERvl0KriuNlh",
            "2fbfec21-b0d0-43b5-922f-cea35d4549f7",
            "2021-12-29T19:19:26.000000Z",
            "2021-09-29T16:33:42.000000Z",
            3282,
            "topup",
            [
                'status' => "enabled",
                'point_expires_at' => "2021-10-14T15:51:45.000000Z",
                'point_expires_in_days' => 2112,
                'is_exclusive' => FALSE,
                'subject' => "money",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'blacklisted_product_rules' => [["product_code" => "4912345678904", "classification_code" => "c123"]
        , ["product_code" => "4912345678904", "classification_code" => "c123"]
        , ["product_code" => "4912345678904", "classification_code" => "c123"]
        ],
                'applicable_days_of_week' => [3, 4, 4, 5, 2, 5, 2, 2],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["2ee0a769-24f0-4868-94da-e6a49a2d9c52", "a277141c-28ec-4ccc-822f-f5dce8460319", "de4a2210-576f-452c-a2ab-bb06e156e2cc", "76b80722-3bfd-443f-9b88-821d38553eea"],
                'blacklisted_shop_ids' => ["a8e73ded-a891-42be-8ca1-db5361324a07", "c842dcfd-8f48-4215-9116-d33f956c0219", "3ec9230d-d484-4799-94ad-f120c6841787", "98b6d110-e4c0-4de8-8365-7eb401345274", "add272c8-2283-4150-be08-dbdc4fb2bae4"],
                'minimum_number_of_products' => 705,
                'minimum_number_of_amount' => 3191,
                'minimum_number_for_combination_purchase' => 204,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 7801,
                'max_total_point_amount' => 3214,
                'dest_private_money_id' => "2703a543-6b19-4ebf-b85e-4e10ba37690c",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'applicable_transaction_metadata' => ["key" => "rank", "value" => "bronze"]
        ,
                'budget_caps_amount' => 428209746
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign23()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "32yceHkpeJS53rQYrIERvl0KriuNlh",
            "2fbfec21-b0d0-43b5-922f-cea35d4549f7",
            "2021-12-29T19:19:26.000000Z",
            "2021-09-29T16:33:42.000000Z",
            3282,
            "topup",
            [
                'description' => "ojNKN0zqICt7BPEI",
                'status' => "disabled",
                'point_expires_at' => "2023-10-27T22:37:01.000000Z",
                'point_expires_in_days' => 1815,
                'is_exclusive' => FALSE,
                'subject' => "all",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'blacklisted_product_rules' => [["product_code" => "4912345678904", "classification_code" => "c123"]
        ],
                'applicable_days_of_week' => [4, 1, 1, 4, 4, 1, 1, 0, 5],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["42cb2178-8461-4aad-932c-8a50ce07857a", "66e499fc-981a-47ef-a161-e4fb93833944", "e35e079c-b376-4736-83d5-c59f358a0e36", "882619d3-f958-46cc-ab98-c2fbe7ac018d", "c7644311-8b1f-47c0-802f-9d174392b548", "768afbe1-3314-4864-8eb9-3963629e6e4f", "4cee3590-a90e-42ae-af53-2e227305bd40", "0428413c-9b23-49d2-a591-73ea3cfc5831", "30eeb799-ccd4-42f7-a232-05219d726b04"],
                'blacklisted_shop_ids' => ["d04f5f76-68f0-43e9-b7a0-f7ca024e9507", "221c3ca7-ce4c-4d7c-987b-c8bcec97ffd3", "b6821ef9-66e8-47fc-aff1-c3d910072560"],
                'minimum_number_of_products' => 6767,
                'minimum_number_of_amount' => 760,
                'minimum_number_for_combination_purchase' => 9688,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 4059,
                'max_total_point_amount' => 5006,
                'dest_private_money_id' => "2093fee4-da6f-4433-943b-d68bb93f9474",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'applicable_transaction_metadata' => ["key" => "rank", "value" => "bronze"]
        ,
                'budget_caps_amount' => 751349228
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign24()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "32yceHkpeJS53rQYrIERvl0KriuNlh",
            "2fbfec21-b0d0-43b5-922f-cea35d4549f7",
            "2021-12-29T19:19:26.000000Z",
            "2021-09-29T16:33:42.000000Z",
            3282,
            "topup",
            [
                'bear_point_shop_id' => "0db2f041-f80d-4ba4-a0d0-d91a71dc0a87",
                'description' => "fziyB2HYxaS",
                'status' => "enabled",
                'point_expires_at' => "2022-09-26T15:19:17.000000Z",
                'point_expires_in_days' => 171,
                'is_exclusive' => FALSE,
                'subject' => "money",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'blacklisted_product_rules' => [["product_code" => "4912345678904", "classification_code" => "c123"]
        , ["product_code" => "4912345678904", "classification_code" => "c123"]
        , ["product_code" => "4912345678904", "classification_code" => "c123"]
        , ["product_code" => "4912345678904", "classification_code" => "c123"]
        , ["product_code" => "4912345678904", "classification_code" => "c123"]
        , ["product_code" => "4912345678904", "classification_code" => "c123"]
        ],
                'applicable_days_of_week' => [6, 3],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["c1f2c02b-d80c-4aaf-9faf-0d5519b87fb2", "87113ad1-8fee-4988-835e-893803bbd333", "e7f3dee7-78db-43be-9716-b086cf4839c8", "017b257f-0737-4768-bcbd-184649231630"],
                'blacklisted_shop_ids' => ["89c4450f-271f-4cd4-8204-2b3885f6ce27", "42d3e903-d94e-4768-b765-b8efd5fb3e1f", "8999785b-4b4f-40a9-9017-d5a8c110c13a", "67601118-c2b6-4e2a-ba19-436121c3a27c", "ed9ad373-04bc-4b2e-aa1d-e2cfd2488380", "67b7f47b-56ff-4eef-b8b0-73d2c3d35606", "e7bd8dd2-8714-43fa-97fa-252c95dc1e0d"],
                'minimum_number_of_products' => 5451,
                'minimum_number_of_amount' => 9737,
                'minimum_number_for_combination_purchase' => 7706,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 1773,
                'max_total_point_amount' => 4078,
                'dest_private_money_id' => "532da7fc-ccf8-4a6e-a0ae-8b9ebba2368e",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'applicable_transaction_metadata' => ["key" => "rank", "value" => "bronze"]
        ,
                'budget_caps_amount' => 199584620
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
