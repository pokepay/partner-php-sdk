<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateCampaign extends TestCase
{
    public function testCreateCampaign0()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "thK9v",
            "3db77f9d-702f-4925-b1a5-e22d61644b46",
            "2021-05-09T10:47:24.000000+09:00",
            "2022-03-27T22:23:11.000000+09:00",
            1684,
            "payment"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign1()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "thK9v",
            "3db77f9d-702f-4925-b1a5-e22d61644b46",
            "2021-05-09T10:47:24.000000+09:00",
            "2022-03-27T22:23:11.000000+09:00",
            1684,
            "payment",
            [
                'budget_caps_amount' => 9895141
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign2()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "thK9v",
            "3db77f9d-702f-4925-b1a5-e22d61644b46",
            "2021-05-09T10:47:24.000000+09:00",
            "2022-03-27T22:23:11.000000+09:00",
            1684,
            "payment",
            [
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 1062047886
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign3()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "thK9v",
            "3db77f9d-702f-4925-b1a5-e22d61644b46",
            "2021-05-09T10:47:24.000000+09:00",
            "2022-03-27T22:23:11.000000+09:00",
            1684,
            "payment",
            [
                'dest_private_money_id' => "1401bcb5-03b9-4fd3-843f-247427f8efa0",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 1937997354
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign4()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "thK9v",
            "3db77f9d-702f-4925-b1a5-e22d61644b46",
            "2021-05-09T10:47:24.000000+09:00",
            "2022-03-27T22:23:11.000000+09:00",
            1684,
            "payment",
            [
                'max_total_point_amount' => 9066,
                'dest_private_money_id' => "7771c896-ca4d-45a1-87ea-742a583feffb",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 739152164
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign5()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "thK9v",
            "3db77f9d-702f-4925-b1a5-e22d61644b46",
            "2021-05-09T10:47:24.000000+09:00",
            "2022-03-27T22:23:11.000000+09:00",
            1684,
            "payment",
            [
                'max_point_amount' => 1679,
                'max_total_point_amount' => 8996,
                'dest_private_money_id' => "62257672-8fd2-45ae-be40-f6738fa08d3a",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 1636375656
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign6()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "thK9v",
            "3db77f9d-702f-4925-b1a5-e22d61644b46",
            "2021-05-09T10:47:24.000000+09:00",
            "2022-03-27T22:23:11.000000+09:00",
            1684,
            "payment",
            [
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 5155,
                'max_total_point_amount' => 765,
                'dest_private_money_id' => "b92986f4-64f8-4627-b0f4-b49fb1c49c64",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 699597459
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign7()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "thK9v",
            "3db77f9d-702f-4925-b1a5-e22d61644b46",
            "2021-05-09T10:47:24.000000+09:00",
            "2022-03-27T22:23:11.000000+09:00",
            1684,
            "payment",
            [
                'minimum_number_for_combination_purchase' => 8456,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 9938,
                'max_total_point_amount' => 9447,
                'dest_private_money_id' => "724cfac4-046f-4344-a023-6d5da5390bcc",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 1019608661
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign8()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "thK9v",
            "3db77f9d-702f-4925-b1a5-e22d61644b46",
            "2021-05-09T10:47:24.000000+09:00",
            "2022-03-27T22:23:11.000000+09:00",
            1684,
            "payment",
            [
                'applicable_shop_ids' => ["230b09e9-8ed0-4298-86c5-1a283917235d", "0b074cff-6ba7-4bc0-a0cd-24573cc13e09", "90c64929-f34a-48e9-a6f8-453965ea9c16", "ef030026-19af-4996-b1bb-b8daf103c202"],
                'minimum_number_for_combination_purchase' => 3597,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 5212,
                'max_total_point_amount' => 1634,
                'dest_private_money_id' => "74468513-7b2a-459b-8a4f-9cbdab8fc965",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 1480739204
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign9()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "thK9v",
            "3db77f9d-702f-4925-b1a5-e22d61644b46",
            "2021-05-09T10:47:24.000000+09:00",
            "2022-03-27T22:23:11.000000+09:00",
            1684,
            "payment",
            [
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["e07f0e49-3d76-4adf-bf29-7ec667ad6d1a", "b050e21a-4c02-47f4-8e33-d95f2b301820"],
                'minimum_number_for_combination_purchase' => 5050,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 582,
                'max_total_point_amount' => 3806,
                'dest_private_money_id' => "4fec97b1-491c-454d-8e07-fa89df59a2a6",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 1263854774
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign10()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "thK9v",
            "3db77f9d-702f-4925-b1a5-e22d61644b46",
            "2021-05-09T10:47:24.000000+09:00",
            "2022-03-27T22:23:11.000000+09:00",
            1684,
            "payment",
            [
                'applicable_days_of_week' => [3, 3, 0, 3, 4, 4, 3, 6, 6],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["4c82303b-9fe4-471c-9873-5c771fdcfd89", "9514dff7-8efd-4265-83fe-6bb4f73376e1", "e99676c9-2efb-4af7-be4c-b63d32dadbc2", "e1ab7f09-efa2-47f9-888e-3181163fbb9c"],
                'minimum_number_for_combination_purchase' => 800,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 8595,
                'max_total_point_amount' => 9729,
                'dest_private_money_id' => "04d5fe87-e712-4795-8216-069728b6ff9a",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 503652979
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign11()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "thK9v",
            "3db77f9d-702f-4925-b1a5-e22d61644b46",
            "2021-05-09T10:47:24.000000+09:00",
            "2022-03-27T22:23:11.000000+09:00",
            1684,
            "payment",
            [
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [5, 2, 2, 5, 5, 1],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["208a04c0-7600-4d14-ad5a-8432045b0397", "cc91a8dc-be39-42fc-bcf3-0fb24e0e3972", "1a487dbf-986e-44ad-8511-5ab581aaba6c", "935d1dc2-e7d8-469a-8d4a-36627f4fbec0"],
                'minimum_number_for_combination_purchase' => 5965,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 8226,
                'max_total_point_amount' => 4615,
                'dest_private_money_id' => "fcf39784-0fd1-4957-8ce6-3a5701bbc620",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 1477976994
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign12()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "thK9v",
            "3db77f9d-702f-4925-b1a5-e22d61644b46",
            "2021-05-09T10:47:24.000000+09:00",
            "2022-03-27T22:23:11.000000+09:00",
            1684,
            "payment",
            [
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [3, 2, 1, 6],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["cc306b4d-6ffe-4925-86f6-130daf9d4a14"],
                'minimum_number_for_combination_purchase' => 8815,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 6673,
                'max_total_point_amount' => 9130,
                'dest_private_money_id' => "2cab2f9b-c099-4f9e-9026-ded15c29a7e8",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 1586632601
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign13()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "thK9v",
            "3db77f9d-702f-4925-b1a5-e22d61644b46",
            "2021-05-09T10:47:24.000000+09:00",
            "2022-03-27T22:23:11.000000+09:00",
            1684,
            "payment",
            [
                'subject' => "money",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [0, 4, 2, 1],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["06c4f3a6-e25e-4f99-8568-070ebfceca97", "ff19e2d9-7a2b-4a04-baaf-3eacb1149146", "04a6887e-88cf-49a3-a62c-6a8099718587", "2bc7b5f9-f1ea-4822-920c-58d5bd5a216d"],
                'minimum_number_for_combination_purchase' => 7195,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 7155,
                'max_total_point_amount' => 64,
                'dest_private_money_id' => "4c561948-a12d-41de-bbc8-a45c97e1fa0f",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 686437869
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign14()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "thK9v",
            "3db77f9d-702f-4925-b1a5-e22d61644b46",
            "2021-05-09T10:47:24.000000+09:00",
            "2022-03-27T22:23:11.000000+09:00",
            1684,
            "payment",
            [
                'is_exclusive' => FALSE,
                'subject' => "all",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [1, 6, 5, 1],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["7b903568-7026-4a2b-b0d8-39d5866e77bc", "dcd4583b-5f6f-4c0e-bea2-bcef827f9186", "44d1fb53-b298-42f1-a552-224657677f82", "7225867e-af81-4543-a5bf-c112c94cb585", "6d2edde4-31b7-4345-a324-19b744517a7c", "0c3bb622-8d42-455f-8032-4cc73015829f"],
                'minimum_number_for_combination_purchase' => 1645,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 3640,
                'max_total_point_amount' => 7104,
                'dest_private_money_id' => "12746f16-0a91-4260-b09b-4c59aaec8c62",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 1024419155
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign15()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "thK9v",
            "3db77f9d-702f-4925-b1a5-e22d61644b46",
            "2021-05-09T10:47:24.000000+09:00",
            "2022-03-27T22:23:11.000000+09:00",
            1684,
            "payment",
            [
                'point_expires_in_days' => 5655,
                'is_exclusive' => TRUE,
                'subject' => "money",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [4, 2, 0, 2, 4, 1, 2, 1],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["658e1706-895c-4697-96ec-8798af238247"],
                'minimum_number_for_combination_purchase' => 8551,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 5730,
                'max_total_point_amount' => 8273,
                'dest_private_money_id' => "c814fc21-ddc6-44f1-acaf-122468580a79",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 1058555611
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign16()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "thK9v",
            "3db77f9d-702f-4925-b1a5-e22d61644b46",
            "2021-05-09T10:47:24.000000+09:00",
            "2022-03-27T22:23:11.000000+09:00",
            1684,
            "payment",
            [
                'point_expires_at' => "2023-08-18T10:49:44.000000+09:00",
                'point_expires_in_days' => 3210,
                'is_exclusive' => FALSE,
                'subject' => "all",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [1, 3, 4, 3, 0, 5, 5, 3, 5],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["7898448d-328b-497c-aea7-870fc2d83353", "5ab02ffb-4e2b-4240-94a6-87a665dddb07", "83a26ac2-af2f-4bb2-9dc6-fbdc188bd1c0", "989cdc6c-fde0-44f0-8e1e-70291caf9603", "e2c0f1a6-4490-4b41-aca5-e2fcbe99d0a7", "67ca86b1-0171-40f2-8ae4-1e169842e066", "bd1c8289-9bb2-4571-98fe-452dfaf95b00"],
                'minimum_number_for_combination_purchase' => 8695,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 1449,
                'max_total_point_amount' => 4183,
                'dest_private_money_id' => "acce0083-f2e8-4d88-b345-120e16c475e9",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 1035856162
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign17()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "thK9v",
            "3db77f9d-702f-4925-b1a5-e22d61644b46",
            "2021-05-09T10:47:24.000000+09:00",
            "2022-03-27T22:23:11.000000+09:00",
            1684,
            "payment",
            [
                'status' => "enabled",
                'point_expires_at' => "2021-03-02T21:07:57.000000+09:00",
                'point_expires_in_days' => 5998,
                'is_exclusive' => TRUE,
                'subject' => "money",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [0, 1, 4, 0, 6, 6, 4],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["b52304fc-7f8b-49da-bc4e-158095dc1d35", "a111792d-f5fe-40d0-bb1f-b0fdd3ef878c", "40da5733-b750-4a78-a059-83194f52d025", "f8413300-7588-4289-a023-e6d3fba436f2", "40149719-63d6-444a-937c-e6ac816df854"],
                'minimum_number_for_combination_purchase' => 5918,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 2460,
                'max_total_point_amount' => 4333,
                'dest_private_money_id' => "76c85342-6031-48cf-b1d0-cabd06d25628",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 1885631792
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign18()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "thK9v",
            "3db77f9d-702f-4925-b1a5-e22d61644b46",
            "2021-05-09T10:47:24.000000+09:00",
            "2022-03-27T22:23:11.000000+09:00",
            1684,
            "payment",
            [
                'description' => "9uvQQrvMHFl2STdGeP7eOgNCC4qN",
                'status' => "disabled",
                'point_expires_at' => "2023-10-28T14:00:07.000000+09:00",
                'point_expires_in_days' => 2306,
                'is_exclusive' => TRUE,
                'subject' => "all",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [4, 4, 0],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["d898d701-2c98-4ae0-83ae-9598687e682a", "82b6759b-874d-4d26-be7e-48e68ea592cc", "f3f16f74-619e-49c4-bb35-aa62e75f7259", "f5aad154-d23b-42b0-9d07-c8cab1ba11ab", "31d2b0ef-b35d-46c6-a236-b95d214d9d9c", "f36e2ba4-f95c-49fa-9f6e-1c280d9c853f", "81e2536d-86be-402e-8083-19be3923d438", "ff0b515c-b053-4b1c-9bd5-2fcba19de5ca", "2808a99b-b5e6-40c9-b90a-8252a45605ec", "a47513d6-72c9-4b11-9fdc-e5f1ccd5da8b"],
                'minimum_number_for_combination_purchase' => 4051,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 6217,
                'max_total_point_amount' => 9367,
                'dest_private_money_id' => "f648e38b-6f2c-48bb-b6f2-6f3c400df975",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 1979941809
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign19()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "thK9v",
            "3db77f9d-702f-4925-b1a5-e22d61644b46",
            "2021-05-09T10:47:24.000000+09:00",
            "2022-03-27T22:23:11.000000+09:00",
            1684,
            "payment",
            [
                'bear_point_shop_id' => "222b7359-2387-45e7-8c72-9d9535b27f23",
                'description' => "JtU5H6NvwOk7h02Jb2Bqa65dI5ZsZDi3YP306JiO0Qfx0CQvwwMmrGuCmN5KqtnO8Lru1o7xOtajt96QZ7afPJEj9M9d7rcJlGwFEdG1Qm3kyBkQtBMatbsEIMshedR9KAsEibopv5pmfkZnNeSO0lXc3a8n8w3dQsZeCyuaL83GQAtSI5HwQc1G5lg3V",
                'status' => "disabled",
                'point_expires_at' => "2021-07-24T05:39:46.000000+09:00",
                'point_expires_in_days' => 9855,
                'is_exclusive' => FALSE,
                'subject' => "money",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [4, 0, 6, 4, 0, 2, 2],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["b33f9d12-8903-4367-b012-d63f7f407f34", "7530e8f0-aeee-4041-ae5d-2e37661f5ec4", "ca55d857-aab4-4f14-a9d3-16ff5aca94a5", "34bfd0e3-b63a-4e66-9326-52e4ed394303"],
                'minimum_number_for_combination_purchase' => 86,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 2134,
                'max_total_point_amount' => 377,
                'dest_private_money_id' => "022e8cba-8459-41f2-b2b6-eaf78bd9dfe0",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        ,
                'budget_caps_amount' => 557540481
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
