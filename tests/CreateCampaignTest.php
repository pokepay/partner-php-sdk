<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateCampaign extends TestCase
{
    public function testCreateCampaign0()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "to7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhFK8mUwq4sfxVOVqIgogobrlTBvrKruisPGcjRxKz0hnHtPEmOFzye10sMn1hLqgZ4Scflk2JdjznjOojFztUyYyUwwyS9B5htgNIDpUpzKyj3BEvYp1TbuySIy9vMfjs9RSVIuRLJamUgod9vJRMh5laf7A",
            "b80a36e1-b8bf-496f-834c-0947d8c5510a",
            "2023-08-17T06:52:24.000000+09:00",
            "2020-07-12T19:13:49.000000+09:00",
            9410,
            "external-transaction"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign1()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "to7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhFK8mUwq4sfxVOVqIgogobrlTBvrKruisPGcjRxKz0hnHtPEmOFzye10sMn1hLqgZ4Scflk2JdjznjOojFztUyYyUwwyS9B5htgNIDpUpzKyj3BEvYp1TbuySIy9vMfjs9RSVIuRLJamUgod9vJRMh5laf7A",
            "b80a36e1-b8bf-496f-834c-0947d8c5510a",
            "2023-08-17T06:52:24.000000+09:00",
            "2020-07-12T19:13:49.000000+09:00",
            9410,
            "external-transaction",
            [
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign2()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "to7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhFK8mUwq4sfxVOVqIgogobrlTBvrKruisPGcjRxKz0hnHtPEmOFzye10sMn1hLqgZ4Scflk2JdjznjOojFztUyYyUwwyS9B5htgNIDpUpzKyj3BEvYp1TbuySIy9vMfjs9RSVIuRLJamUgod9vJRMh5laf7A",
            "b80a36e1-b8bf-496f-834c-0947d8c5510a",
            "2023-08-17T06:52:24.000000+09:00",
            "2020-07-12T19:13:49.000000+09:00",
            9410,
            "external-transaction",
            [
                'dest_private_money_id' => "64340653-878a-4e65-acb2-95d105f5a96e",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign3()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "to7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhFK8mUwq4sfxVOVqIgogobrlTBvrKruisPGcjRxKz0hnHtPEmOFzye10sMn1hLqgZ4Scflk2JdjznjOojFztUyYyUwwyS9B5htgNIDpUpzKyj3BEvYp1TbuySIy9vMfjs9RSVIuRLJamUgod9vJRMh5laf7A",
            "b80a36e1-b8bf-496f-834c-0947d8c5510a",
            "2023-08-17T06:52:24.000000+09:00",
            "2020-07-12T19:13:49.000000+09:00",
            9410,
            "external-transaction",
            [
                'max_total_point_amount' => 4353,
                'dest_private_money_id' => "a4040ee9-a12f-452f-b1e4-225ca93f92ad",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign4()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "to7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhFK8mUwq4sfxVOVqIgogobrlTBvrKruisPGcjRxKz0hnHtPEmOFzye10sMn1hLqgZ4Scflk2JdjznjOojFztUyYyUwwyS9B5htgNIDpUpzKyj3BEvYp1TbuySIy9vMfjs9RSVIuRLJamUgod9vJRMh5laf7A",
            "b80a36e1-b8bf-496f-834c-0947d8c5510a",
            "2023-08-17T06:52:24.000000+09:00",
            "2020-07-12T19:13:49.000000+09:00",
            9410,
            "external-transaction",
            [
                'max_point_amount' => 7108,
                'max_total_point_amount' => 10,
                'dest_private_money_id' => "911c3cb9-5da4-413b-bced-93db80e113f9",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign5()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "to7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhFK8mUwq4sfxVOVqIgogobrlTBvrKruisPGcjRxKz0hnHtPEmOFzye10sMn1hLqgZ4Scflk2JdjznjOojFztUyYyUwwyS9B5htgNIDpUpzKyj3BEvYp1TbuySIy9vMfjs9RSVIuRLJamUgod9vJRMh5laf7A",
            "b80a36e1-b8bf-496f-834c-0947d8c5510a",
            "2023-08-17T06:52:24.000000+09:00",
            "2020-07-12T19:13:49.000000+09:00",
            9410,
            "external-transaction",
            [
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 6464,
                'max_total_point_amount' => 3930,
                'dest_private_money_id' => "c96e6c4f-4dcf-4b38-9a06-16005a85ff1d",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign6()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "to7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhFK8mUwq4sfxVOVqIgogobrlTBvrKruisPGcjRxKz0hnHtPEmOFzye10sMn1hLqgZ4Scflk2JdjznjOojFztUyYyUwwyS9B5htgNIDpUpzKyj3BEvYp1TbuySIy9vMfjs9RSVIuRLJamUgod9vJRMh5laf7A",
            "b80a36e1-b8bf-496f-834c-0947d8c5510a",
            "2023-08-17T06:52:24.000000+09:00",
            "2020-07-12T19:13:49.000000+09:00",
            9410,
            "external-transaction",
            [
                'minimum_number_for_combination_purchase' => 2465,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 1619,
                'max_total_point_amount' => 6492,
                'dest_private_money_id' => "6246e812-649b-4d0c-b0fb-ae594787c17c",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign7()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "to7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhFK8mUwq4sfxVOVqIgogobrlTBvrKruisPGcjRxKz0hnHtPEmOFzye10sMn1hLqgZ4Scflk2JdjznjOojFztUyYyUwwyS9B5htgNIDpUpzKyj3BEvYp1TbuySIy9vMfjs9RSVIuRLJamUgod9vJRMh5laf7A",
            "b80a36e1-b8bf-496f-834c-0947d8c5510a",
            "2023-08-17T06:52:24.000000+09:00",
            "2020-07-12T19:13:49.000000+09:00",
            9410,
            "external-transaction",
            [
                'applicable_shop_ids' => ["56165bed-66f6-4db4-b05f-57a461851016", "f7ca24d5-be2e-4b2f-8d35-b07780343906", "d0c9659b-8c85-4314-a601-311e471eac5a", "4ac9a4e7-2001-4575-a59a-4324dcb5e80a", "da2c8b0d-25b6-4915-b7e5-c51540ca7903", "c661b5a8-e3a6-4db0-9ed9-398ac602736c"],
                'minimum_number_for_combination_purchase' => 8947,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 9212,
                'max_total_point_amount' => 350,
                'dest_private_money_id' => "36716a4f-bbaa-443e-b88a-e345aad3351b",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign8()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "to7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhFK8mUwq4sfxVOVqIgogobrlTBvrKruisPGcjRxKz0hnHtPEmOFzye10sMn1hLqgZ4Scflk2JdjznjOojFztUyYyUwwyS9B5htgNIDpUpzKyj3BEvYp1TbuySIy9vMfjs9RSVIuRLJamUgod9vJRMh5laf7A",
            "b80a36e1-b8bf-496f-834c-0947d8c5510a",
            "2023-08-17T06:52:24.000000+09:00",
            "2020-07-12T19:13:49.000000+09:00",
            9410,
            "external-transaction",
            [
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["1c6490b3-2a4c-48b7-a7d7-36b64063c870", "aaa766d6-4aad-494f-8d78-31aea6b04a87", "a159a65a-ed34-4980-aad2-e5c654048082", "49d18ece-ee61-4936-bf1d-78844d9b0f24", "4bc2f9e8-2229-427b-a56f-5b42651df44f", "b2b6721b-957e-4294-a968-069bd5e5d493", "1b3b4ba0-be5b-42ff-bce4-2b7ffc34212d", "a0b1dc04-f248-40a7-b6e5-e0eaa379ed96", "9e8e2990-063b-4722-901b-49230d0da1cc"],
                'minimum_number_for_combination_purchase' => 511,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 7224,
                'max_total_point_amount' => 1225,
                'dest_private_money_id' => "abca658a-ecd5-434e-95ae-c00fd77436a8",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign9()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "to7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhFK8mUwq4sfxVOVqIgogobrlTBvrKruisPGcjRxKz0hnHtPEmOFzye10sMn1hLqgZ4Scflk2JdjznjOojFztUyYyUwwyS9B5htgNIDpUpzKyj3BEvYp1TbuySIy9vMfjs9RSVIuRLJamUgod9vJRMh5laf7A",
            "b80a36e1-b8bf-496f-834c-0947d8c5510a",
            "2023-08-17T06:52:24.000000+09:00",
            "2020-07-12T19:13:49.000000+09:00",
            9410,
            "external-transaction",
            [
                'applicable_days_of_week' => [5, 5, 0, 2, 1, 5, 0, 3],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["064b6d45-11ba-416e-962e-a48877e822e3", "a1404bfa-ebf9-452d-8f3e-a45b5f7b7368", "7588d1e0-d04d-4d0a-97c1-9f7e33de2401", "719dfe50-f1af-4ee2-88d8-e003f62f85f9", "67b7fd3a-8ef4-4613-a483-feea17e06d5b", "826a47d5-8154-42b8-8619-e66be8fb3345", "bc3ff43d-ba36-4857-985c-934454f230e5", "9eaeeded-d2b2-4606-b267-afd321cbf6fa", "8b51258a-8c1d-4883-befc-3bfaa98cd7b3", "884f68b5-bbe1-48dd-bb22-24252c015f51"],
                'minimum_number_for_combination_purchase' => 9350,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 7226,
                'max_total_point_amount' => 4371,
                'dest_private_money_id' => "7814e3b4-4c6b-4052-95b9-d15311dcd130",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign10()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "to7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhFK8mUwq4sfxVOVqIgogobrlTBvrKruisPGcjRxKz0hnHtPEmOFzye10sMn1hLqgZ4Scflk2JdjznjOojFztUyYyUwwyS9B5htgNIDpUpzKyj3BEvYp1TbuySIy9vMfjs9RSVIuRLJamUgod9vJRMh5laf7A",
            "b80a36e1-b8bf-496f-834c-0947d8c5510a",
            "2023-08-17T06:52:24.000000+09:00",
            "2020-07-12T19:13:49.000000+09:00",
            9410,
            "external-transaction",
            [
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [6, 4, 4, 5],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["80181943-76b0-4263-87fe-0c4612f3d73c", "98aeea40-c484-481e-9541-c88fe92b5693", "9fa9cbe6-1b92-42ba-8ec5-07cbe21b5267"],
                'minimum_number_for_combination_purchase' => 9037,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 1148,
                'max_total_point_amount' => 4878,
                'dest_private_money_id' => "cea44a7d-8d2e-4ecf-86c9-fad7b7abf571",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign11()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "to7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhFK8mUwq4sfxVOVqIgogobrlTBvrKruisPGcjRxKz0hnHtPEmOFzye10sMn1hLqgZ4Scflk2JdjznjOojFztUyYyUwwyS9B5htgNIDpUpzKyj3BEvYp1TbuySIy9vMfjs9RSVIuRLJamUgod9vJRMh5laf7A",
            "b80a36e1-b8bf-496f-834c-0947d8c5510a",
            "2023-08-17T06:52:24.000000+09:00",
            "2020-07-12T19:13:49.000000+09:00",
            9410,
            "external-transaction",
            [
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [6, 2, 5, 4, 6, 0],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["b6bc827a-71d7-440f-867a-0f5f367e2d43", "8f2a1541-153e-408a-b1bc-cdaa0be82370", "998ccd5d-11b2-417c-acda-3d61ef026496", "ebae336e-7e1b-440f-a8dc-5cf2cdadda4c", "5b7cae3d-b4a8-4eb1-b6ef-ffab2dee894e", "42626e41-b933-49e3-ba7c-9dbe249aeca6", "e9b398da-ce34-464e-aebb-12de184d1879", "6235a749-7afc-4245-aae1-f94e471e7536"],
                'minimum_number_for_combination_purchase' => 5249,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 1572,
                'max_total_point_amount' => 8867,
                'dest_private_money_id' => "3d989b06-fd85-495a-94d9-8e20c1af50df",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign12()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "to7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhFK8mUwq4sfxVOVqIgogobrlTBvrKruisPGcjRxKz0hnHtPEmOFzye10sMn1hLqgZ4Scflk2JdjznjOojFztUyYyUwwyS9B5htgNIDpUpzKyj3BEvYp1TbuySIy9vMfjs9RSVIuRLJamUgod9vJRMh5laf7A",
            "b80a36e1-b8bf-496f-834c-0947d8c5510a",
            "2023-08-17T06:52:24.000000+09:00",
            "2020-07-12T19:13:49.000000+09:00",
            9410,
            "external-transaction",
            [
                'subject' => "money",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [],
                'applicable_time_ranges' => [],
                'applicable_shop_ids' => ["ec49fdaf-2f06-451a-a25a-db67f3b46622", "40a8ce73-be88-4eff-a6e3-f88f56d19b42", "71355128-2756-40c0-9d8a-bbb3377d5e0c", "e76bc070-fe58-4c69-90d0-a4feed9ff3e9", "819bbbd7-f3b2-4519-be9f-358065f1e097", "6b153971-5220-4589-9fd5-dce08cc2b26d", "e87c35dd-d4b4-4386-86fb-1a62427fc08c", "5d660851-7c85-43f5-a32d-f6f31a4e61fc", "a75815ac-33ed-427a-b0c7-2c5986ecf201"],
                'minimum_number_for_combination_purchase' => 3548,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 218,
                'max_total_point_amount' => 9093,
                'dest_private_money_id' => "56c8407f-2c38-4813-b512-758279417ecb",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign13()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "to7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhFK8mUwq4sfxVOVqIgogobrlTBvrKruisPGcjRxKz0hnHtPEmOFzye10sMn1hLqgZ4Scflk2JdjznjOojFztUyYyUwwyS9B5htgNIDpUpzKyj3BEvYp1TbuySIy9vMfjs9RSVIuRLJamUgod9vJRMh5laf7A",
            "b80a36e1-b8bf-496f-834c-0947d8c5510a",
            "2023-08-17T06:52:24.000000+09:00",
            "2020-07-12T19:13:49.000000+09:00",
            9410,
            "external-transaction",
            [
                'is_exclusive' => FALSE,
                'subject' => "money",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [3, 4, 2, 3, 5, 1, 2, 5, 0],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["8e99cb87-7443-4200-aea1-6e11fd0d34da", "5569bf37-a0f7-43a6-ae51-7ae0df55552f", "2a0e8e24-7f45-4e5b-83f5-6fa5c1f66421", "ca0179ad-43c5-4de9-a89d-c0e7dbd203a1", "76cd587f-6448-439f-b9d4-06b55d7c4ba1", "50fa0e34-4d6c-4f8c-9eb9-06c5ab2032d8"],
                'minimum_number_for_combination_purchase' => 7765,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 9667,
                'max_total_point_amount' => 6761,
                'dest_private_money_id' => "0827f94e-d9c2-43af-b471-0830247399db",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign14()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "to7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhFK8mUwq4sfxVOVqIgogobrlTBvrKruisPGcjRxKz0hnHtPEmOFzye10sMn1hLqgZ4Scflk2JdjznjOojFztUyYyUwwyS9B5htgNIDpUpzKyj3BEvYp1TbuySIy9vMfjs9RSVIuRLJamUgod9vJRMh5laf7A",
            "b80a36e1-b8bf-496f-834c-0947d8c5510a",
            "2023-08-17T06:52:24.000000+09:00",
            "2020-07-12T19:13:49.000000+09:00",
            9410,
            "external-transaction",
            [
                'point_expires_in_days' => 4809,
                'is_exclusive' => TRUE,
                'subject' => "money",
                'amount_based_point_rules' => [],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [5, 6, 1, 5, 2, 5, 4, 3, 2],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => [],
                'minimum_number_for_combination_purchase' => 9176,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 4189,
                'max_total_point_amount' => 6462,
                'dest_private_money_id' => "418f3623-d7e3-4ba4-9e13-74578ac49481",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign15()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "to7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhFK8mUwq4sfxVOVqIgogobrlTBvrKruisPGcjRxKz0hnHtPEmOFzye10sMn1hLqgZ4Scflk2JdjznjOojFztUyYyUwwyS9B5htgNIDpUpzKyj3BEvYp1TbuySIy9vMfjs9RSVIuRLJamUgod9vJRMh5laf7A",
            "b80a36e1-b8bf-496f-834c-0947d8c5510a",
            "2023-08-17T06:52:24.000000+09:00",
            "2020-07-12T19:13:49.000000+09:00",
            9410,
            "external-transaction",
            [
                'point_expires_at' => "2015-12-23T14:14:50.000000+09:00",
                'point_expires_in_days' => 1671,
                'is_exclusive' => FALSE,
                'subject' => "all",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [],
                'applicable_days_of_week' => [2, 0, 4, 0],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["fdf8316d-fb09-4185-9dbd-c70fe61c43fc"],
                'minimum_number_for_combination_purchase' => 4500,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 8502,
                'max_total_point_amount' => 5350,
                'dest_private_money_id' => "f5b6768c-3aee-4b7d-ad92-bf8e7405ec4e",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign16()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "to7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhFK8mUwq4sfxVOVqIgogobrlTBvrKruisPGcjRxKz0hnHtPEmOFzye10sMn1hLqgZ4Scflk2JdjznjOojFztUyYyUwwyS9B5htgNIDpUpzKyj3BEvYp1TbuySIy9vMfjs9RSVIuRLJamUgod9vJRMh5laf7A",
            "b80a36e1-b8bf-496f-834c-0947d8c5510a",
            "2023-08-17T06:52:24.000000+09:00",
            "2020-07-12T19:13:49.000000+09:00",
            9410,
            "external-transaction",
            [
                'status' => "disabled",
                'point_expires_at' => "2022-04-19T01:18:44.000000+09:00",
                'point_expires_in_days' => 7153,
                'is_exclusive' => TRUE,
                'subject' => "money",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [0, 5, 4, 4, 4, 3, 1],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["cefbcc0e-1f1c-457b-a201-237c7ce0cf89", "0b8911b3-7568-4bde-ba03-2ea201921f5a"],
                'minimum_number_for_combination_purchase' => 7132,
                'exist_in_each_product_groups' => FALSE,
                'max_point_amount' => 5184,
                'max_total_point_amount' => 7293,
                'dest_private_money_id' => "e1a1d8b3-08b5-465e-adb7-bb0bc13a6150",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign17()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "to7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhFK8mUwq4sfxVOVqIgogobrlTBvrKruisPGcjRxKz0hnHtPEmOFzye10sMn1hLqgZ4Scflk2JdjznjOojFztUyYyUwwyS9B5htgNIDpUpzKyj3BEvYp1TbuySIy9vMfjs9RSVIuRLJamUgod9vJRMh5laf7A",
            "b80a36e1-b8bf-496f-834c-0947d8c5510a",
            "2023-08-17T06:52:24.000000+09:00",
            "2020-07-12T19:13:49.000000+09:00",
            9410,
            "external-transaction",
            [
                'description' => "nWlMQlOO65IFrI1BJMiWPv5dAbUBWta68v79KNgsodWT1kP64chZLEzZTeXAsCUOeSILicKJugPMhkbNW",
                'status' => "enabled",
                'point_expires_at' => "2021-04-16T14:37:35.000000+09:00",
                'point_expires_in_days' => 5813,
                'is_exclusive' => TRUE,
                'subject' => "money",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [4, 3, 4, 0, 4],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["62b5a9e9-521c-40ab-a07a-491a90e68c65", "d9219f6c-9888-4578-bf36-b18e71acbb7d", "45c517da-d6f7-4ab3-81ce-d05d38d0ebeb", "58937524-f9a7-4ddf-bb72-41ae4c2a0a04", "a7c92ce5-4e8e-4f4d-9381-5adb0d7dbc3a", "a99c0b7f-832d-463d-ae99-4593f8dd329d", "92d69569-9967-450e-a234-48d9adb3f062", "17e29033-adf4-4a36-ab6d-5e76aa4d1879", "1ae15e8f-4868-487c-a87c-c30ea56da60f"],
                'minimum_number_for_combination_purchase' => 8683,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 6085,
                'max_total_point_amount' => 5688,
                'dest_private_money_id' => "bd8577a2-1109-49d9-a186-62fe51976f2d",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCampaign18()
    {
        $client = $this->newClient();
        $request = new Request\CreateCampaign(
            "to7yaW0Gkt1pOBZosxcU6W1vFMKN952VUdQ3t63Wpysg20fNhPhFK8mUwq4sfxVOVqIgogobrlTBvrKruisPGcjRxKz0hnHtPEmOFzye10sMn1hLqgZ4Scflk2JdjznjOojFztUyYyUwwyS9B5htgNIDpUpzKyj3BEvYp1TbuySIy9vMfjs9RSVIuRLJamUgod9vJRMh5laf7A",
            "b80a36e1-b8bf-496f-834c-0947d8c5510a",
            "2023-08-17T06:52:24.000000+09:00",
            "2020-07-12T19:13:49.000000+09:00",
            9410,
            "external-transaction",
            [
                'bear_point_shop_id' => "28cd3631-9e0a-46bb-ac16-be60edba18bc",
                'description' => "gzqIh5MLpUpAeuRnJqWXlTPA3BNnPJo0CH10GQb96Jzcef7f3He1f0QYEkgJnc3iiJ3NDVFkNizSfk2HEbXxayxzM2cghdc2Ljaj2GsuiV9UsDnl2m8nhmhWmlD5AgJ4dO8VEt3hyN01xWKpyfSJX1OiNUbqHXuSEWeM8VLmM8qznKIn9uBoqN3XKkwmXFn",
                'status' => "enabled",
                'point_expires_at' => "2020-11-24T15:21:52.000000+09:00",
                'point_expires_in_days' => 7501,
                'is_exclusive' => TRUE,
                'subject' => "money",
                'amount_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "subject_more_than_or_equal" => 1000, "subject_less_than" => 5000]
        ],
                'product_based_point_rules' => [["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        , ["point_amount" => 5, "point_amount_unit" => "percent", "product_code" => "4912345678904", "is_multiply_by_count" => TRUE, "required_count" => 2]
        ],
                'applicable_days_of_week' => [3, 5, 2, 0, 6, 1, 1, 2, 6, 2],
                'applicable_time_ranges' => [["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        , ["from" => "12:00", "to" => "23:59"]
        ],
                'applicable_shop_ids' => ["3cc2abe3-396d-4ec6-b8ee-7e013cd1c838", "03220bd6-c89d-4386-aeea-5ac6b5fd5c91", "3f61025b-efef-4cc5-897d-6973f8194db5", "c4e163e6-5eab-43bf-879e-cd3652d0d908", "d20e9714-2bb4-4809-ad76-157c12616dd8"],
                'minimum_number_for_combination_purchase' => 2380,
                'exist_in_each_product_groups' => TRUE,
                'max_point_amount' => 958,
                'max_total_point_amount' => 7108,
                'dest_private_money_id' => "36b231a3-de30-4479-898b-422e4aa0a3e0",
                'applicable_account_metadata' => ["key" => "sex", "value" => "male"]
        
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
