<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class UpdateCashtray extends TestCase
{
    public function testUpdateCashtray0()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCashtray(
            "ecf44e31-0fef-4bd8-828e-490d9b99a57c"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCashtray1()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCashtray(
            "ecf44e31-0fef-4bd8-828e-490d9b99a57c",
            [
                'expires_in' => 6741
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCashtray2()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCashtray(
            "ecf44e31-0fef-4bd8-828e-490d9b99a57c",
            [
                'description' => "YUSGpygg7wBGIjvRT6txnavCQQKHsIvoRCh25C1Az2YLh1E15h1KfExxiEjr6OAmi7PZf9U3mszbrj5NlGTFteBCT8kQ913MW1TgtCy4TZZ2aDj5tnr4",
                'expires_in' => 588
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCashtray3()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCashtray(
            "ecf44e31-0fef-4bd8-828e-490d9b99a57c",
            [
                'amount' => 612.0,
                'description' => "KHVYaIhmd0F9F2vD",
                'expires_in' => 8706
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
