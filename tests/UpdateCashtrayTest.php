<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class UpdateCashtray extends TestCase
{
    public function testUpdateCashtray0()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCashtray(
            "93e484e9-0c71-4de2-85bc-c3efa0b802b4"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCashtray1()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCashtray(
            "93e484e9-0c71-4de2-85bc-c3efa0b802b4",
            [
                'expires_in' => 5884
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCashtray2()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCashtray(
            "93e484e9-0c71-4de2-85bc-c3efa0b802b4",
            [
                'description' => "9Y",
                'expires_in' => 6937
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testUpdateCashtray3()
    {
        $client = $this->newClient();
        $request = new Request\UpdateCashtray(
            "93e484e9-0c71-4de2-85bc-c3efa0b802b4",
            [
                'amount' => 574.0,
                'description' => "uYkIYRIq52HgJVnQllpxtQzNAwJc36FUVQ1pZ1xfI966fkRJwEQplzkQOR0FB6TahYhDW0JUkIFUsKKq7tMTM748pl9He2DVokSBqaEip32bSlBVRHUtV3F9R4ZLGDOcDq0YLRezhvrHJzTq2LSI8ktZx4tB88I2OTtohOzU61vSI29jkLAWm",
                'expires_in' => 6112
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
