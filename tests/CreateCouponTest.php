<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateCoupon extends TestCase
{
    public function testCreateCoupon0()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_amount' => 5734
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon1()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_amount' => 1637,
                'storage_id' => "02024cb4-2c93-4b58-950d-ba8b35b0d430"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon2()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_amount' => 5393,
                'min_amount' => 5746,
                'storage_id' => "8a44a667-ead7-4dcc-a7b6-d6d89d6e9496"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon3()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_amount' => 3918,
                'usage_limit' => 7166,
                'min_amount' => 5384,
                'storage_id' => "8d30476c-2dfa-4de2-a9e7-c67f08be9366"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon4()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_amount' => 6110,
                'code' => "v71YbgYeR6",
                'usage_limit' => 2465,
                'min_amount' => 2324,
                'storage_id' => "ea514fe9-237a-4dd2-8f5c-795448fd341c"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon5()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_amount' => 3732,
                'is_public' => FALSE,
                'code' => "yu0",
                'usage_limit' => 2874,
                'min_amount' => 3610,
                'storage_id' => "18df5cef-18a6-4473-8c3d-95cf344b1d84"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon6()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_amount' => 5048,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "GG",
                'usage_limit' => 2686,
                'min_amount' => 2187,
                'storage_id' => "b28f0606-631a-41f5-9d8d-740a881a8fd4"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon7()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_amount' => 5029,
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "ytTo5Jr",
                'usage_limit' => 5310,
                'min_amount' => 2163,
                'storage_id' => "f0b3b512-e18c-4b4b-b6c1-b670332d1758"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon8()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_amount' => 2359,
                'display_ends_at' => "2021-05-07T18:43:23.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "S7XL4bN89",
                'usage_limit' => 8369,
                'min_amount' => 8500,
                'storage_id' => "94c86594-73f0-424b-b64b-c43c2c8dd117"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon9()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_amount' => 1442,
                'display_starts_at' => "2020-10-16T03:26:21.000000+09:00",
                'display_ends_at' => "2022-02-11T13:28:44.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "LyRusPK",
                'usage_limit' => 8843,
                'min_amount' => 3848,
                'storage_id' => "228cb328-3c07-4def-adf8-7d2e24f79dff"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon10()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_amount' => 1705,
                'discount_upper_limit' => 4311,
                'display_starts_at' => "2022-09-02T11:56:07.000000+09:00",
                'display_ends_at' => "2022-07-10T20:32:56.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "s",
                'usage_limit' => 7190,
                'min_amount' => 4153,
                'storage_id' => "f0daff0a-48ad-413d-8441-c8f05a4fee94"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon11()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_amount' => 3536,
                'description' => "UVSMxepuA59PQSA0bdLDDWNz1wHSVeaujg6CrrTeIV0D8gtCpGzqpMFmjWZqjEVAhQwVsHC",
                'discount_upper_limit' => 5988,
                'display_starts_at' => "2023-02-26T19:54:59.000000+09:00",
                'display_ends_at' => "2020-10-08T23:42:13.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "Q424C",
                'usage_limit' => 864,
                'min_amount' => 801,
                'storage_id' => "29797e8a-391e-46e8-b44e-c39ffd8d6114"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon12()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_amount' => 5377,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["76837a50-45e5-45bc-b15c-fb2341aef591"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon13()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_amount' => 20,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["ad48e450-38aa-4851-875a-3855cf4c2eea", "76b215eb-2bf6-4387-842d-af5dc90bc2ce", "0f22fc41-7e73-460a-96c6-8d3909f35586", "bb76713c-1f3c-4e6b-9b5f-df6fca51c118", "a59ff66a-414a-4a1f-8936-660c709b5ad4"],
                'storage_id' => "48c6f4e6-d498-4733-81d0-47840696a65f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon14()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_amount' => 757,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["bd00065e-32e9-43f0-9b62-9d5d2c347156"],
                'min_amount' => 9174,
                'storage_id' => "8066e006-0060-44bb-a936-59197530f586"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon15()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_amount' => 6472,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["2fd8d36a-dfaa-4135-a2b3-89cc53b0d0f1", "49328b82-2f0e-40c5-b751-e951510bed0c", "066fd95d-88e3-421a-9e80-2c02a33999d3", "8e935080-1d73-4426-8fcd-0fe35a00ffb7", "3294aa62-a7a0-431d-8bb4-1354db15aaf7", "e14618e3-f527-4b44-a6a9-9394b6ba62ec"],
                'usage_limit' => 6408,
                'min_amount' => 8803,
                'storage_id' => "a13b86e6-9dfa-4eaf-ad6f-910d45b36cff"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon16()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_amount' => 6528,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["f3712644-ad24-4457-b06b-dccc10146173", "931f629c-aa85-4f4b-8478-d15dbd9cb3c1", "ac42cc1e-b622-49b7-b5b2-3f67ba0bab75", "6958c811-542a-46d8-96b8-ab6fdc8f6c93"],
                'code' => "4",
                'usage_limit' => 5401,
                'min_amount' => 7875,
                'storage_id' => "2e9129b3-a294-4ace-96e4-22de4d0c94fd"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon17()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_amount' => 7756,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["f1fd58ca-9f03-4c02-a069-18e8ae780152", "5fc4155a-fb96-499e-9e5e-db187c4033bb"],
                'is_public' => TRUE,
                'code' => "5RLWwsm7Lb",
                'usage_limit' => 7104,
                'min_amount' => 9471,
                'storage_id' => "185d0fb5-f734-4279-bda8-785aa2eada9a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon18()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_amount' => 4250,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["7b7a1bbc-883a-4a19-905a-4a365a268df5", "1cf21b6e-9b21-4e32-93f4-7ab445a5f50d", "1f1746d7-889e-447b-b646-783a7c6d1f47", "fa50b301-59f3-44ce-813b-efee8faec2e5", "488e00a3-3827-46b4-8833-edc23749274a", "ae2e6b7e-df0e-4b69-91c9-b4178602a24b", "9b98bdf6-a940-442a-a5aa-23fb724b103e", "d71c078d-1668-47aa-90b4-77d88592bbe2"],
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "O",
                'usage_limit' => 2604,
                'min_amount' => 2100,
                'storage_id' => "53d1ab41-0cbc-4e38-a393-f24ab2d55c39"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon19()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_amount' => 4180,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["bc7bb714-b9a2-44a9-aae9-ce0753fd3c43", "f9c464e8-ab8b-4ed4-a3e6-d6755e41d7d1", "140a031f-3121-46d7-a6a9-5ec0a660f732", "6c34ab59-c525-47ea-bf01-ce617536df4d", "ebb0f372-bb2a-4be6-9344-73e5d6958cf6", "39288b1c-1630-44fd-9a0e-bd3351afc0ce", "e1d957b6-e541-409b-86db-67d142a08a62"],
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "D39yi",
                'usage_limit' => 2409,
                'min_amount' => 8816,
                'storage_id' => "404d60b8-b513-4313-9fa2-309df004d585"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon20()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_amount' => 789,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["a842cb84-4a11-4809-b5e2-76d2f1538297", "12d4660d-23fd-45dc-8611-cec3769f736c", "1cca6aff-f5f4-469e-8d52-e8a2f8a779b6", "f6f8573d-845f-48d9-9893-af9306a35751", "d0a535fc-eaa0-4e3f-ba17-ee9ea303beb6", "c9a4d3cd-7141-4322-8a54-03a18eb901ce"],
                'display_ends_at' => "2020-08-19T21:42:46.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "VjAhAP",
                'usage_limit' => 2513,
                'min_amount' => 7653,
                'storage_id' => "1c841f3a-1b8b-44ae-88aa-ec46076e693b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon21()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_amount' => 114,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["87c2099e-4db2-4554-842b-d6ef7e411cf1", "6414634f-4c94-451e-afbb-bf909c1ffb67", "2a906631-0eb9-4837-9ca4-de8758d75174", "4f1815fa-097e-4656-84ee-4a1ff3ced199", "0faaeb4c-5f5a-4cee-8987-d57a10929f68", "6f64e789-0fe3-4b98-ba60-47eb232067a1", "607d77a6-0ddb-478e-bb6b-553b82382a36"],
                'display_starts_at' => "2023-01-02T03:53:05.000000+09:00",
                'display_ends_at' => "2023-10-03T02:54:48.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "kiQrWlAu",
                'usage_limit' => 3198,
                'min_amount' => 2608,
                'storage_id' => "4d75d3c6-c722-40fc-9bc1-1bb78c83565a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon22()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_amount' => 1486,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["60cce0c8-dad2-4eee-ab21-e2bb85b966dd", "e0875f63-6f81-4fc1-a878-49046195ad5c", "01c27479-4eff-4bde-b7d7-0d4ac85ff44c", "40baa934-380a-4559-b0d4-15ea28722746", "6fbdfacb-41a8-4146-9ae5-9870ceb02dac", "c76c869b-67c1-45cc-9dbc-0cc80df3fbe9", "a810f949-7129-4be6-acaa-ce9cfec2b8e5"],
                'discount_upper_limit' => 3074,
                'display_starts_at' => "2022-07-26T19:57:04.000000+09:00",
                'display_ends_at' => "2022-04-08T01:47:46.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "aN",
                'usage_limit' => 3206,
                'min_amount' => 538,
                'storage_id' => "752fe34a-9682-4ba0-a42e-7c3434ab19f4"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon23()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_amount' => 300,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["f863661d-9fd2-494e-8f1a-a4b7064a0573", "80f3136b-f484-4150-9c0f-61489dd07df1", "df4fd0a6-f344-45e7-a7c6-dae9f41508a7", "24f54843-078b-47df-adf0-4c1492618787", "d8542e24-82bd-4d8b-8b45-26600dc42248", "61c6b1f9-a34f-4279-8c50-2b5d0edbebd4", "c6c2ae28-f44a-4961-ab7c-b973509131fd"],
                'description' => "myGZJFZs2wWQi0Go5icdxueTYRaMyh7CffzxvMDXDYP0cVTSc5zq58Omwhi2AQzdkUWjjBqVJj97DILOSag4J6agk7IvHwIlgYrsCdQEaC3IB3i795o5gMJJyO31VPlWPCrX2Q3cviEJQm3Ie5HOtVhbOGVawHLYHBUHqLNFuyzow",
                'discount_upper_limit' => 6414,
                'display_starts_at' => "2021-06-20T06:51:29.000000+09:00",
                'display_ends_at' => "2021-05-08T11:56:41.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "pFhUO6U4",
                'usage_limit' => 8521,
                'min_amount' => 3031,
                'storage_id' => "6b9b3b1a-a6e8-4806-9bf0-484c98bdf7eb"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon24()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_percentage' => 6289.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon25()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_percentage' => 3046.0,
                'storage_id' => "61878cd1-8dd7-4a3a-bbb2-ceba449fd81a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon26()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_percentage' => 9523.0,
                'min_amount' => 7750,
                'storage_id' => "2ef72b40-16a9-427d-8ad3-a71600c7fb07"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon27()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_percentage' => 7758.0,
                'usage_limit' => 8869,
                'min_amount' => 8742,
                'storage_id' => "e75168f1-3434-4f35-bbe4-72cb14ee20c9"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon28()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_percentage' => 99.0,
                'code' => "5W",
                'usage_limit' => 4991,
                'min_amount' => 1281,
                'storage_id' => "293fb4e7-e0dd-482d-b774-d9878bf37a72"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon29()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_percentage' => 9257.0,
                'is_public' => FALSE,
                'code' => "LiAM",
                'usage_limit' => 7225,
                'min_amount' => 5373,
                'storage_id' => "1a55b4c0-e05f-40d9-adaf-577c4615b76c"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon30()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_percentage' => 3368.0,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "Pwf3jm0",
                'usage_limit' => 2674,
                'min_amount' => 8441,
                'storage_id' => "677e21cb-8299-466d-958e-9cdb962e499b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon31()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_percentage' => 8879.0,
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "hLs",
                'usage_limit' => 4928,
                'min_amount' => 219,
                'storage_id' => "f28426d4-bbea-46d3-b2c6-a78650ea45a4"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon32()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_percentage' => 3700.0,
                'display_ends_at' => "2024-02-03T07:16:14.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "BeJv2",
                'usage_limit' => 5265,
                'min_amount' => 2,
                'storage_id' => "314cacad-8344-40a0-af7e-ad7731b6d633"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon33()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_percentage' => 5007.0,
                'display_starts_at' => "2021-04-21T18:29:53.000000+09:00",
                'display_ends_at' => "2020-05-10T10:06:23.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "Yvd",
                'usage_limit' => 2841,
                'min_amount' => 462,
                'storage_id' => "ecda6e2d-477b-4888-af53-ab786428c387"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon34()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_percentage' => 3901.0,
                'discount_upper_limit' => 9796,
                'display_starts_at' => "2022-10-26T17:44:26.000000+09:00",
                'display_ends_at' => "2024-01-14T10:00:54.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "Zc",
                'usage_limit' => 7751,
                'min_amount' => 5936,
                'storage_id' => "db1c147a-916b-4730-9936-2a357e81b26f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon35()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_percentage' => 7955.0,
                'description' => "NiEcHLn2i4nYzdNeQmk3l7bP5Z6dxwkKtPkj0oBUASB1VjEpqMpooCdGcpsb0LloTo4JlOp4KY8PA2PtChlXqDiELwUNiDmZkcGKa0q5q0MjXR7D813zJ7xww71usbDOamdPXMPenGwiRygfHMH91O3KHLzucQd",
                'discount_upper_limit' => 5575,
                'display_starts_at' => "2020-12-15T11:35:51.000000+09:00",
                'display_ends_at' => "2022-10-12T01:45:17.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "TPpu6M",
                'usage_limit' => 7967,
                'min_amount' => 7704,
                'storage_id' => "880b17e1-1848-4ae2-9245-6a3d98f428e8"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon36()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_percentage' => 3108.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["459a57b5-3c19-4ba8-8b55-e0ab1a1397f5", "7a194382-8773-4854-8398-2cb1555224aa", "8bcad004-dd71-41ce-a1eb-c39ce6effef1"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon37()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_percentage' => 1098.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["3344787c-ee71-42a7-9116-17167620f3bc", "b86f1b46-4a62-482f-9e84-d733c13392cd", "d8889126-e1e0-436f-80e3-269a09342c70", "0f918148-e9ef-439f-be95-dec0ef31e10f", "92bdd512-29f7-4646-9669-4f1b304ee967", "59c78724-3ebe-47c4-9238-152e34c2d93c", "467441bc-eb54-4883-af9d-98a8d9b58804", "025b8072-03fd-45d6-bb81-b717644f8654"],
                'storage_id' => "25b961eb-64d0-4bcc-8b0a-5efe51f3b28c"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon38()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_percentage' => 6910.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["388b2f83-1c87-4ae3-96fc-4051f32aeb2b", "5d5cf0c3-2320-4d98-acf8-868facb7f3fa"],
                'min_amount' => 7375,
                'storage_id' => "512688b2-fe75-4d16-a3b9-ac6bcdc9a0e6"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon39()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_percentage' => 2080.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["a512dc60-f18f-46e6-a148-7e1572fe8bdc", "8c57a855-cd20-40c4-8009-749aef02b101", "ed4a91ff-6b5b-4d46-9855-d780db4abcc1", "456d5475-1a01-4711-9243-a886894f4b83", "3f050ca6-e0e3-4557-8352-2cf3bd980303", "6ef40afd-0797-49fe-9528-b3c966158cde", "1da89dea-e8f8-46c3-86ac-6305661aec74", "e1d9749b-0868-4af1-ae84-2769c29528b9", "ccb7900e-eeef-4a61-b72b-857220311734"],
                'usage_limit' => 8927,
                'min_amount' => 7102,
                'storage_id' => "6fc543eb-a0fb-490d-b004-70e002ae6af7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon40()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_percentage' => 3069.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["23863fb5-bdbd-468d-bdb1-7d0d7baab81a", "a3733661-0faf-4e9d-99f0-94f3f7def489", "14914871-ad11-49e9-a2e2-615579d6fd25", "9fa69072-a44a-4644-b529-aac151932d51", "fdf3257c-24c8-4147-a001-e6c75bf46334", "a28a8b5e-4dc4-4ff7-88a0-6e0202e7a250", "328da853-f9f5-4858-8b5d-8c1ee5020143"],
                'code' => "2VsLsC43l",
                'usage_limit' => 6681,
                'min_amount' => 8834,
                'storage_id' => "5fc7b0f3-c299-403f-9aa2-d28de2779796"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon41()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_percentage' => 3954.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["cd0173ca-8164-4a78-ab68-c983cc3ca934", "923bd44a-c802-4d8e-a516-1f18318bc994"],
                'is_public' => FALSE,
                'code' => "VgvSq4Fe",
                'usage_limit' => 4348,
                'min_amount' => 2621,
                'storage_id' => "3df76337-ba7e-4309-a7c9-59afd4cd38c2"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon42()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_percentage' => 871.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["6ec871ba-f581-40c8-91f2-f56cf05cd7dd", "17297451-67d2-4328-8583-8ee862cc1366", "5ecb3f4a-f877-4497-be82-b3dca4848cd3", "71a1b75c-1253-4f50-a19e-5f7982dc6866"],
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "9yEIO9y",
                'usage_limit' => 1882,
                'min_amount' => 6128,
                'storage_id' => "1f255c23-bfcb-4991-b29b-565cc71e8b54"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon43()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_percentage' => 5746.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["824510e8-6223-4495-8f3d-3d249d700832", "49520ccb-c43e-4695-9e3a-68e24b4c888c", "b49f81dc-3867-435c-b22f-197cf49ef675", "0b3ef6f2-b9ca-4fc6-9725-76fddad074ac", "fe321fc1-0780-4b1b-90d5-16254e6e6a41", "d8d065d7-0219-4798-8e2c-9618f851ede3"],
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "jWHCALjv",
                'usage_limit' => 3799,
                'min_amount' => 2260,
                'storage_id' => "47ed1d5c-4890-4a50-bfa1-ea7ce811bc29"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon44()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_percentage' => 4070.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["8bed466e-9cee-4a06-8388-6be41eea8b15", "996822b3-09d9-4640-9c43-af52746d70aa", "d1924758-fe80-4c28-9855-2f084a8cad93", "8b5b4456-6d63-4b25-a94a-a7fcbacc6bd8", "ad15242e-aad6-4862-82f4-4442dea8b4a7", "2b3e6d47-791b-42a9-ba53-fa5d362aa3a5", "7f4e2d8f-fb32-4cc0-8997-aba0e3cfefb3", "e7604240-ace8-4a6a-a1c4-601999d64b1e", "8dd221d2-a325-44db-a2cb-26316d4a2b13"],
                'display_ends_at' => "2023-12-14T08:09:17.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "y",
                'usage_limit' => 2785,
                'min_amount' => 1403,
                'storage_id' => "9fc5be4c-3124-485c-a4aa-f2f0b08dd880"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon45()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_percentage' => 6022.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["1ca94266-0553-4fcd-a470-05993aa5e0bd", "603678fb-5ece-4178-bdda-f88dfc1d8fa0", "189c62f6-f54d-42d9-9306-9867cb578aad", "0bd07959-c302-4260-9f95-a771f96ce6a0", "5d1b5397-5c7d-44fe-a07f-78ed58075c46", "38b566fc-3c22-4436-b79c-42b7f8fc8496", "c5ff7542-d73f-4da6-a4cf-5f020abb4a34", "100d77ef-db12-4e18-94ba-c54f09fed2f6", "238d35ba-e3f7-4e57-8fa4-fcebc1b6d6c5", "bd55fbfc-cae3-4d5c-a376-7d64f0418704"],
                'display_starts_at' => "2022-07-18T07:08:45.000000+09:00",
                'display_ends_at' => "2023-02-23T10:08:12.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "WJDAkwvbh",
                'usage_limit' => 2299,
                'min_amount' => 7889,
                'storage_id' => "afdfb405-e921-4958-a24a-daf642b57f8b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon46()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_percentage' => 3672.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["9806cdee-f13d-47ca-b46d-cb59c5739ce5", "705afedd-ec86-42ea-a1f1-092eab0e606c", "5087ea65-b148-4bac-aa8a-d5283ea93014", "2dc3ab57-8abf-4994-9e71-99be2ffb38e2", "654237db-0db4-4e7c-bf02-2efb7a9482ff", "932a7edc-dca3-4180-8474-8a5619fcaf63", "ccc75b05-d3f2-41ea-996c-7f2d4e397f5b", "0651d97a-40a9-4e75-8ffb-503c1bd90946", "aaf54155-ff8d-4114-935e-b6042e25b282"],
                'discount_upper_limit' => 7039,
                'display_starts_at' => "2022-05-29T10:48:27.000000+09:00",
                'display_ends_at' => "2021-07-11T03:22:27.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "MKGgxIhLA",
                'usage_limit' => 7114,
                'min_amount' => 32,
                'storage_id' => "01f2fd4f-2354-4a14-9e04-dc0bc41287cb"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon47()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "9dff1135-9ecc-4269-8e83-11bf9dd68835",
            "N0eoCoDCSpBvB64ag9eRECYHl2ic60odXPlBAsnFCTX1mrsz1EuzJ3xpDuIpRJmt8Oedlm91nFGDXfLWLHkKswU2u3tOe03r6b1RGMFALpz",
            "2020-03-12T07:37:07.000000+09:00",
            "2020-12-05T12:38:30.000000+09:00",
            "de5573df-0140-4540-9d6b-05b67a82aaec",
            [
                'discount_percentage' => 7102.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["bcf7af0d-14da-4dde-ae59-950e0e32e814", "e05cfa46-56a8-4be7-989f-042aff41fb78", "e352a40f-243d-41af-9b94-cfeb320e009d", "2e1ffbb2-e1ba-43a3-96ad-210e79eb0e8f", "0755264c-1ade-40a7-97fe-48831dcafe2f", "cd24b163-7478-4d55-8dc4-f8640707ce42", "c58b1352-ccc9-4046-b347-68cc7335a60b"],
                'description' => "cPvQWY9GrTWlxeOQP2pBViQzmAMHOErY1Y2ky7Vy0pw9i5yvQk6u6YfAk",
                'discount_upper_limit' => 7264,
                'display_starts_at' => "2023-04-08T12:30:37.000000+09:00",
                'display_ends_at' => "2022-12-27T14:44:44.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "u78Qlz",
                'usage_limit' => 3881,
                'min_amount' => 8953,
                'storage_id' => "6c04b419-f0fa-4e1a-87f9-d8d2b62cef9a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
