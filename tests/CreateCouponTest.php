<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateCoupon extends TestCase
{
    public function testCreateCoupon0()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_amount' => 1060
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon1()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_amount' => 3379,
                'storage_id' => "a9eb9087-202c-40cd-9514-16576f35e54a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon2()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_amount' => 9685,
                'min_amount' => 7293,
                'storage_id' => "c4c62b1a-9e79-4be1-960c-93ab97fb924f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon3()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_amount' => 2576,
                'usage_limit' => 1439,
                'min_amount' => 9700,
                'storage_id' => "05437602-2860-4f02-8947-7f08621a4fae"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon4()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_amount' => 4438,
                'code' => "gwkA",
                'usage_limit' => 103,
                'min_amount' => 1517,
                'storage_id' => "8ac94385-783e-4d14-9ff2-057b2af5eb6f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon5()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_amount' => 6015,
                'is_public' => TRUE,
                'code' => "fJ",
                'usage_limit' => 2957,
                'min_amount' => 8362,
                'storage_id' => "b73f3b74-2f57-483b-b479-f01dff252ef7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon6()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_amount' => 7817,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "pfWl",
                'usage_limit' => 4115,
                'min_amount' => 2960,
                'storage_id' => "6722b241-1a28-4e05-a8c0-07e8af14bad2"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon7()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_amount' => 684,
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "4",
                'usage_limit' => 9189,
                'min_amount' => 8269,
                'storage_id' => "6934de7b-c3a2-46b0-8f8b-3bdf7984dae1"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon8()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_amount' => 5674,
                'display_ends_at' => "2023-05-20T10:45:34.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "j",
                'usage_limit' => 9825,
                'min_amount' => 7547,
                'storage_id' => "764f6cf4-779c-4444-827b-b04b14074d77"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon9()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_amount' => 3091,
                'display_starts_at' => "2020-11-05T03:00:17.000000+09:00",
                'display_ends_at' => "2020-10-09T14:57:53.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "bt",
                'usage_limit' => 2974,
                'min_amount' => 9036,
                'storage_id' => "89af475a-5859-4416-bd8b-eeeda5595767"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon10()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_amount' => 7412,
                'discount_upper_limit' => 7766,
                'display_starts_at' => "2023-05-21T06:24:16.000000+09:00",
                'display_ends_at' => "2020-01-01T00:34:15.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "C",
                'usage_limit' => 848,
                'min_amount' => 4391,
                'storage_id' => "224974e0-3032-4bae-8fee-f46b587edd1b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon11()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_amount' => 8088,
                'description' => "U4m1gf9UJkLIlshr79uVqlIJYzae24i8tnq1NqmaDtYGdldqRJmKsTBO1kfFELBRwEoASqDF9G4Wed7ullqDvNw1yuwpNBnAL423YcxnDN41IBIaWw2IAULlKHcBOENA3baa2Q7sqGh9ZDqSSGO0M5FpDdkp1tTYvzRP4rMyStpybQbyP8uEyPh3vCjjjsz2NMSe1yI0dSwgFriP0O9vXCeO6qnElfCes5h0JrIVHeo",
                'discount_upper_limit' => 5924,
                'display_starts_at' => "2022-02-02T00:09:29.000000+09:00",
                'display_ends_at' => "2021-09-29T09:00:28.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "xpB",
                'usage_limit' => 8201,
                'min_amount' => 4837,
                'storage_id' => "3355404e-e15d-482c-b202-9bc826d21de0"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon12()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_amount' => 4096,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["99dc4c43-fd70-4222-95a0-5372f914423a", "4637b110-1cc3-40b9-ac35-bad54d3f84f7", "f9e8b834-73b7-4d65-b755-115e35d1835c", "04d9f407-a63b-43d8-8d1d-2ada9bcec307"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon13()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_amount' => 8903,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["aba4ea0b-d82e-4aa1-a68f-16cc84d530de", "59fab50d-af74-4461-8b4f-04105fd58614", "46981709-cedc-4726-b0d0-4df6081ff059", "da5dec3a-295b-4d32-bdf0-0f5533424780", "77d7f35e-b41d-41f4-922c-dc3f417c6563", "83bbf82e-5f69-4a8a-b097-1c980c707890", "76e8edea-9032-4e8c-8bdc-574c3ef5bffc", "22e4494e-85d5-48e2-9cd9-8a62bde8f8d2"],
                'storage_id' => "1d82bd19-28ea-487e-bc8e-7c5265fd878a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon14()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_amount' => 3753,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["a5dd8e3c-1238-467a-9fc6-448515bc2c7f", "38d2d926-9ca7-4623-a338-928e6c90abcb", "307e0477-7d56-4ea5-b78a-9386dc1b55df", "02b07998-ba08-4fa0-85f4-168aff28deda"],
                'min_amount' => 1450,
                'storage_id' => "edec0110-d726-4f67-a4a4-efa372560e10"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon15()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_amount' => 5194,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["4941a644-36b9-4f32-8d43-b1a30dfc5d25"],
                'usage_limit' => 5695,
                'min_amount' => 4953,
                'storage_id' => "39d909f3-5856-4ae6-a526-7bd987443378"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon16()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_amount' => 5300,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["bdc4f2fe-7937-4874-a09a-f28de2b2fdaa", "7e031f3e-e91f-4aa5-b4fe-4e9101c4c6ba", "f79fa75a-360d-423e-b818-ec1127c532d8", "674d5512-1735-496a-8147-5d69d2c8aeb3", "154980c2-33b7-4c9b-92ec-c021e84a2783", "634b0c96-1740-45e6-991e-2eef2e7d7c54"],
                'code' => "0XYw",
                'usage_limit' => 6739,
                'min_amount' => 4873,
                'storage_id' => "7b1a32d8-0ac7-4907-b1d4-fef56bac4129"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon17()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_amount' => 2296,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["37ae95af-bc9a-496a-a503-0d1ef5153d8d", "77ae2526-6ce6-4535-b333-572ae35bfcc7", "e0bd6315-fdc8-4e69-82e5-d0efc3bdd6f2"],
                'is_public' => FALSE,
                'code' => "n3Y",
                'usage_limit' => 8453,
                'min_amount' => 6247,
                'storage_id' => "40133f47-e8a8-4ba0-a166-f292c63c7c0a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon18()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_amount' => 2405,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["f509c068-9000-4ddc-aa7b-232ec23a8c6a", "667a49f4-a01b-4448-accc-e070c7e87434", "3e9d22fc-cb51-4d7f-bad3-a5015bfe3ebc", "6068d58d-83e8-40ec-8e22-7d033fc0cc44", "accf0154-c2fa-4999-9c77-c0da44c678e5", "c71470ad-5ea4-4c64-9fe5-ecef0a64c002", "2aefc74f-daa4-41d3-8447-ef688b8a206b", "64e112b3-7d60-4ec4-a2d3-19785bce1028", "b709038c-4715-4864-9648-3ed5d091f8f3", "0a7bc14a-a26e-4c23-9b87-603e94d7732c"],
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "iJJsw",
                'usage_limit' => 5730,
                'min_amount' => 6245,
                'storage_id' => "c99ef51d-6c0d-40b1-af84-1c04d0d71354"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon19()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_amount' => 9250,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["4b9038b9-fb6e-4f1e-9948-e242aee65d3c", "96ab4d40-6346-42a6-859d-8ff6d3e9d02d"],
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "fdO7",
                'usage_limit' => 4876,
                'min_amount' => 5234,
                'storage_id' => "85696e29-fa34-4d47-ba76-ef57d95418bf"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon20()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_amount' => 7988,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["24509a9f-b7b9-41fd-bce8-02fba8de89ed", "e5a6683a-bd6f-4abf-b6a0-1383222019e8", "8b003a3d-954d-45a7-97e7-2b4e8ccb2493", "05f8518d-f741-4ae0-b42d-a62968964cb7", "6791d3a0-d7c7-4ae9-ad03-6771ec323854", "118ec39c-bf80-4196-908f-46abc21fae7f"],
                'display_ends_at' => "2022-02-11T23:56:19.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "HMikWx",
                'usage_limit' => 4973,
                'min_amount' => 3468,
                'storage_id' => "b5c257ae-713b-47ec-ad28-8a2da81b3755"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon21()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_amount' => 7298,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["bfd5d60a-01d4-4088-9541-2e5691336c8e", "f85a4bae-75b3-416c-9e19-5640138e5001", "583058e8-a397-4d0f-bcac-34c6f9cd7404", "b66aaf58-551d-486a-85f4-39fc734896cf", "b77ec334-2a86-4928-9d09-70597a954b48", "3a871787-ca64-4711-8653-7119c92ff112", "4fa7d5c6-6726-463c-a9e9-d515f34e8f6e", "7aab257e-84f9-4773-b936-f8d267b58700"],
                'display_starts_at' => "2023-06-12T22:52:10.000000+09:00",
                'display_ends_at' => "2022-10-11T10:57:36.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "PWRuM",
                'usage_limit' => 7913,
                'min_amount' => 8286,
                'storage_id' => "7bfaf1f1-4dc2-4934-a8b8-c6fe16cff47a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon22()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_amount' => 5087,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["baf08aed-5025-491c-a1a4-47778fbc7dd7", "f94b1f4d-489c-486f-9a26-1121f282813e", "21853ffd-fdac-42bd-9992-ae2b029bde3d", "415926f4-70df-4c17-a5cc-9bbb7fe469f1", "071e900d-5742-4e43-bc6c-472b99356017", "721e58a9-dab2-4ecd-b436-e3d9f7cb1377", "c3135a9c-336e-4f42-984e-00a37eab9335", "6b61c870-213b-4867-a329-08699f9312e6"],
                'discount_upper_limit' => 9652,
                'display_starts_at' => "2021-10-11T02:10:18.000000+09:00",
                'display_ends_at' => "2022-09-07T02:22:46.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "WCjt",
                'usage_limit' => 5252,
                'min_amount' => 7264,
                'storage_id' => "21756106-7316-43bd-beac-fd85221b2cac"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon23()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_amount' => 9645,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["f3529006-9528-4164-8fc6-ae440836cca5", "6dac13fa-f3b4-4eb7-8f5c-da79639550f9", "c58cd2a5-060d-4db5-b2a8-1128cff39c5f", "9a3feeff-4076-4276-980b-15f2fe83de1b", "570e4cfb-7496-4fe4-8333-b07b52730140", "b1bfc019-6e7a-4cd8-bb41-434b2fea4602", "183e7f05-2258-4941-9fc9-ab98b0ed879f", "6e30c004-e8db-4e88-b8bb-79a83467d362", "d9e9b6c0-876c-46cc-a874-ddb5e3be5b07"],
                'description' => "AYsF1CZqqsuIQYqRHdsBElZHz3SNZ0BYp1QPMDtFRGu7aBuWnUU5jQUj25p4iK9rjGI9eR948zbeUCMBOCgQ2y5T8uMLljbuHFStmFotGLaG8SDG8HJ69exxYEq38RiSb7XTAKGJhEZ34UxocUcAnh0kH6CBSDyjmcOSixa2i1wd8tDslcapRC8v46Yz8GvtYraMWwqCXrxp4pBcYqykwv0",
                'discount_upper_limit' => 6072,
                'display_starts_at' => "2023-05-20T02:23:00.000000+09:00",
                'display_ends_at' => "2023-11-15T23:06:47.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "Qf8nz",
                'usage_limit' => 5830,
                'min_amount' => 2285,
                'storage_id' => "a2d9d2d8-012e-4936-9000-ef2ec44d8cb7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon24()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_percentage' => 2743.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon25()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_percentage' => 7845.0,
                'storage_id' => "5ee03215-cebc-4c6e-a43e-10d3d443cb1d"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon26()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_percentage' => 1705.0,
                'min_amount' => 8004,
                'storage_id' => "33cc1bec-fedc-4a3b-b49b-af8be87ce276"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon27()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_percentage' => 9543.0,
                'usage_limit' => 7762,
                'min_amount' => 3154,
                'storage_id' => "f1731b6a-b79e-4c19-b1e9-a11a5c2f852e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon28()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_percentage' => 7769.0,
                'code' => "mpC6FrUGj",
                'usage_limit' => 1529,
                'min_amount' => 8850,
                'storage_id' => "5782244d-5e0a-4085-8271-be20c3ee1741"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon29()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_percentage' => 1944.0,
                'is_public' => TRUE,
                'code' => "ak",
                'usage_limit' => 4453,
                'min_amount' => 5614,
                'storage_id' => "5efbc287-6453-4d4c-9cc5-9290b74e809c"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon30()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_percentage' => 4624.0,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "Kkes",
                'usage_limit' => 4387,
                'min_amount' => 8671,
                'storage_id' => "9a1d4a21-ac7d-49eb-8b78-915a7fd6b206"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon31()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_percentage' => 8711.0,
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "tzaO",
                'usage_limit' => 3810,
                'min_amount' => 128,
                'storage_id' => "f6c8e682-e502-4f6e-9c86-1f3bfea1a134"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon32()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_percentage' => 5054.0,
                'display_ends_at' => "2021-01-22T05:42:44.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "POFvz",
                'usage_limit' => 867,
                'min_amount' => 2435,
                'storage_id' => "b44153b0-c178-423f-8f30-10da4fcefba2"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon33()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_percentage' => 6815.0,
                'display_starts_at' => "2021-07-05T17:12:30.000000+09:00",
                'display_ends_at' => "2021-01-23T15:25:33.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "rafBf",
                'usage_limit' => 7489,
                'min_amount' => 6003,
                'storage_id' => "4ee75d2c-2173-4ab2-b3bb-41fac486ec88"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon34()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_percentage' => 8843.0,
                'discount_upper_limit' => 6319,
                'display_starts_at' => "2021-09-02T09:43:51.000000+09:00",
                'display_ends_at' => "2021-12-05T00:15:22.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "AK1H",
                'usage_limit' => 4093,
                'min_amount' => 1219,
                'storage_id' => "f2d1605b-56e1-4b04-99ee-32fa403c205a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon35()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_percentage' => 4851.0,
                'description' => "3aGvl7PFgpaCfRcJBFPWAzQEu7kofaH3zEC7zGonZtqnuKLa5LO8cCW6XphZ1ix9hd8uKPUApcpzBZsFOzRTGZa5uWGvDNCa1sYWi545BgPxf7KISz6mXPXavkqIgwr8VrOD2dLqOdPZJfM5ZvRwDy3EywlMYYFnamorEBkKawDq0DjQOF42iE4dpw7aNfDS49eM6ydUl8dsYtSC",
                'discount_upper_limit' => 8185,
                'display_starts_at' => "2021-12-08T05:19:57.000000+09:00",
                'display_ends_at' => "2022-03-16T10:40:33.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "P3y",
                'usage_limit' => 4226,
                'min_amount' => 7750,
                'storage_id' => "29dc9d6c-29ae-4fce-9baf-d1d5ac7873e0"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon36()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_percentage' => 3087.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["683a9c4a-b6b5-4cfa-8793-469d30e5c0b0", "8c3664af-bf6a-4a2f-8905-e4f1753ecbb3", "ee039c6a-8992-47ea-9b68-65c627ada3cf", "f42971fa-dc66-4168-9bb0-f4b32830095b", "22949927-e5fa-49c9-824a-546279735bba", "79b43256-78f4-412f-a4f8-7201c84f6059", "684d1017-55c6-45e6-b154-e89832d10256", "c020baae-39eb-49b6-bb19-0b8270a344c5"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon37()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_percentage' => 900.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["79049329-e31f-4e6d-9bf3-8752faa59398", "4d6e42a2-3928-4373-a974-167a702e2fb3"],
                'storage_id' => "9bcd2ada-0ced-4f6f-9506-ccf7eed49ab8"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon38()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_percentage' => 795.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["668fafd0-105d-45f4-aed2-2ad2b425b69f", "fba904d2-a854-423d-bd42-435b1572de13", "87706ab0-2c4d-44ee-ac4c-2d8cefd6bc62", "a42f3cdd-4797-4d0c-9448-b5186d44cc3f", "b099d472-00ae-4f84-a4c3-bda7f0aba882"],
                'min_amount' => 3338,
                'storage_id' => "1ca6b0d9-0269-41b4-8f9d-d501232cfb29"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon39()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_percentage' => 8936.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["b8a11254-1c5b-445e-92cf-3ac9890dcb06", "fef9bcba-603e-4303-ab3d-227bfa3878c2"],
                'usage_limit' => 5169,
                'min_amount' => 7669,
                'storage_id' => "29eb56c0-3ff6-4eb5-8be8-312815f887ec"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon40()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_percentage' => 9299.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["7bcf3871-e3ca-496a-8470-4eef5e6ec1eb", "128b995c-df77-48e5-aad3-efc8f8511b3a", "cbd93ddd-f94e-4ac3-b20d-a17eb37e8774", "76a1ee62-9018-4bb2-8efd-f63b01a5ec3a", "1ef0ccce-c899-45cd-aed5-3f38ce009b3f", "2cdfe34f-8bc3-457b-8b99-ba7055876f7e", "39b66df1-a78d-42d2-8f2a-f68f8154dae7"],
                'code' => "ynx75nYfxi",
                'usage_limit' => 2036,
                'min_amount' => 6032,
                'storage_id' => "33cf6c34-2b75-4896-80c7-099cd501d24c"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon41()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_percentage' => 5141.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["54eda4b4-b9c8-4b54-9f48-4c47951153ee", "dc7298d4-8add-47fc-9bda-fda65c6dd96a", "31006dca-96eb-4e61-8012-6163fb3301cb", "cb981f6d-f40c-498f-8ece-3fc7fa6e6938", "7374bf23-2758-4266-9c68-ce6838181997", "22f2301e-1803-48ae-9869-1b218df69b86"],
                'is_public' => TRUE,
                'code' => "RJYW",
                'usage_limit' => 4074,
                'min_amount' => 4864,
                'storage_id' => "26ee7082-1e61-4bc1-884e-cd5a25a3edd4"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon42()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_percentage' => 8202.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["c8170b3b-4374-4067-8ace-1882138064fc", "699fb9dd-a08f-4b26-bcd3-b2dea0f4b8cc"],
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "tKCyAi",
                'usage_limit' => 2498,
                'min_amount' => 3390,
                'storage_id' => "1cd95e6e-5c5d-497d-aa88-7e8adef714ea"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon43()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_percentage' => 1391.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["ec03ea26-0474-4fcd-ac81-64e9d91f6228", "20903e26-b99e-4305-a219-643249da7dd1", "4072082e-33ce-4a8c-89a2-e7c78e74c552", "a49f257a-6b42-460b-9f89-7123fcb3aab7", "15ce5291-acb5-497c-b958-d601415834dc", "0cc5e1d5-89c1-4e0c-b0e7-900a93db1294", "84c4b4d6-9bf7-4dd6-9f32-fbff14fa7de2", "9e0267bc-e162-435a-9325-ec4201bad410", "f98e5f10-029c-4486-ad4c-d59c7b2eec3b"],
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "GPeQX",
                'usage_limit' => 8933,
                'min_amount' => 7464,
                'storage_id' => "d2b13aa2-3ce2-482d-962a-fb00f0e5e2cf"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon44()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_percentage' => 6480.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["aa48c02c-73cc-4284-9ffe-af4fded7bd87", "b97f8b8c-0b5e-43a6-8465-a2cb45485e48", "3130aef4-0763-49de-8156-af0cb5446a9f", "0b275c05-ce2f-4c99-9f78-e3c585dab66d"],
                'display_ends_at' => "2020-05-27T11:27:36.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "I82qKOKx9",
                'usage_limit' => 1160,
                'min_amount' => 2377,
                'storage_id' => "26561e80-7ad1-434f-84ca-85a7254eb154"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon45()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_percentage' => 3559.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["ae771942-9583-4594-940a-3ba6e4656567", "10cc0e9a-3e77-4d04-a3b2-eaffe635e753", "087af0ea-76e5-4cef-a5ae-839e97548715", "113b2977-9820-4b53-8abe-743b9adb27ef", "045524a6-6aa5-422d-9b05-f90b7bc0dde2", "29f2d8b9-b459-4310-a564-1a3c6025cfa7", "cbae80e9-291f-4c3f-8d70-d4d41e271849", "a7921529-2772-4a46-bef9-dca65d361b8d"],
                'display_starts_at' => "2020-09-17T20:16:29.000000+09:00",
                'display_ends_at' => "2020-07-11T20:21:50.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "ZHaF",
                'usage_limit' => 1318,
                'min_amount' => 4472,
                'storage_id' => "3a1b74fe-b1fb-4487-b6b6-c13d90cbc4df"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon46()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_percentage' => 466.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["4354a62c-d1a9-4129-a8c2-56174395fa10", "e171883b-ba16-47f4-be27-2c2982196f08", "b2028f97-2605-4734-8777-e2de3ba75044", "f83af6b9-3af6-47bc-b369-6fbe66a9f67a", "70343798-b575-4105-84b5-b2e2abe358a1", "54cad46c-cf24-453d-8c42-df0644bc7333", "08dbfc37-b216-442e-9787-97e46d702277", "a570dda4-ab5e-49b4-beba-d61e72351aab", "42b18e26-6adb-49e9-90ec-6b1b972e1eef", "6438eace-dcf7-42ac-9420-52d6ea6a806b"],
                'discount_upper_limit' => 3250,
                'display_starts_at' => "2021-01-18T00:28:59.000000+09:00",
                'display_ends_at' => "2022-05-18T03:08:42.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "2",
                'usage_limit' => 6461,
                'min_amount' => 1912,
                'storage_id' => "f3ed3c1f-9bf1-4716-a188-d5d59e1aad2b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon47()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "57b54295-58b9-4d19-9e5b-d504509cd86d",
            "7K0yHv34EJ2qPmESxdx",
            "2022-04-13T17:10:09.000000+09:00",
            "2023-05-25T11:56:25.000000+09:00",
            "ea9a6467-6d8c-4292-a86a-591d24a303ce",
            [
                'discount_percentage' => 6544.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["86b710c0-0c86-4223-a9b2-bb397f3bfcc6", "c5023907-3cff-4834-906e-decdbbeb7421", "5670ef57-189b-4531-a283-b97c3ec5d880", "372c3422-56dd-4440-a997-ed8a0281ee1f", "76379cc6-3825-498a-a765-2fc3695b9a52", "4588b8e2-3f52-4c9b-a139-702949842d3e", "0849a064-cdfd-4aee-a858-93526f520340", "137e535a-1679-4496-aec0-fd10200e145d"],
                'description' => "hBVlRivCrVx6J6LawtigQ6hnYZk4QHsITrMxDvVU6qNxZesvQX6vDr5UfuV9kSYwClqXo83hal31ISTAjDDyQflnKj0CRd6Q81C4Ylnbr0XCmMGTM4TGMaE3y9btZCDclYK2tHTMs7gEREpY4ZsdHzTobDTcE72",
                'discount_upper_limit' => 2455,
                'display_starts_at' => "2024-02-08T07:17:52.000000+09:00",
                'display_ends_at' => "2020-01-29T23:32:05.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "PO",
                'usage_limit' => 4036,
                'min_amount' => 6377,
                'storage_id' => "77524889-bfec-4cfa-bc5f-1b92cb51f723"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
