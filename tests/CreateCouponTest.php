<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateCoupon extends TestCase
{
    public function testCreateCoupon0()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_amount' => 6691
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon1()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_amount' => 2205,
                'storage_id' => "b567a276-8469-4cd5-a7cf-a32057bd9812"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon2()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_amount' => 8483,
                'min_amount' => 514,
                'storage_id' => "2ff17be9-5763-4c8d-bfad-737d624c90a8"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon3()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_amount' => 2751,
                'usage_limit' => 7195,
                'min_amount' => 4943,
                'storage_id' => "daf27f26-e6da-46f1-8cbc-adc50473f2b3"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon4()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_amount' => 3591,
                'code' => "TFrJ",
                'usage_limit' => 2069,
                'min_amount' => 8705,
                'storage_id' => "631b3684-160e-4b4b-b44e-d4c8612b55d0"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon5()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_amount' => 4854,
                'is_public' => TRUE,
                'code' => "4VhqOdqyK",
                'usage_limit' => 4552,
                'min_amount' => 4732,
                'storage_id' => "afd176e3-fdc9-404f-a150-3d214e133368"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon6()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_amount' => 1950,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "vog",
                'usage_limit' => 1503,
                'min_amount' => 8298,
                'storage_id' => "c925af1b-5980-4c10-859d-fc1cffd79232"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon7()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_amount' => 5400,
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "T9kQkxX8",
                'usage_limit' => 176,
                'min_amount' => 8494,
                'storage_id' => "f8e0a452-72ef-4c66-a4f0-55a77b3a08fc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon8()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_amount' => 137,
                'display_ends_at' => "2023-09-17T07:12:51.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "VeBxFuF7c",
                'usage_limit' => 3509,
                'min_amount' => 919,
                'storage_id' => "0feb8400-e0fb-4ad9-85dc-5106a66bcd63"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon9()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_amount' => 6344,
                'display_starts_at' => "2021-02-10T19:41:27.000000+09:00",
                'display_ends_at' => "2020-04-30T08:33:22.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "d",
                'usage_limit' => 8921,
                'min_amount' => 5903,
                'storage_id' => "baa8a7e7-a828-4ea7-bc2f-671cf7ab7bbb"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon10()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_amount' => 1114,
                'discount_upper_limit' => 1199,
                'display_starts_at' => "2020-07-15T16:26:09.000000+09:00",
                'display_ends_at' => "2020-10-01T04:09:48.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "sGmF",
                'usage_limit' => 3417,
                'min_amount' => 7817,
                'storage_id' => "8246822f-2f6b-4a96-b54c-ab129ad23f72"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon11()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_amount' => 4504,
                'description' => "MChiww3RYCIbC9pf8Wzgm4choir96Zk4wBbHbRE9tWUhNPatHCNYgstx4oloda7k12vM37GlbZJKSAFS4e",
                'discount_upper_limit' => 7633,
                'display_starts_at' => "2020-10-26T05:23:57.000000+09:00",
                'display_ends_at' => "2020-12-24T01:48:56.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "tV",
                'usage_limit' => 2478,
                'min_amount' => 5293,
                'storage_id' => "c285fd4c-422f-4425-85e9-342100258d84"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon12()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_amount' => 217,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["36491893-c3bc-40bb-9ff2-66c24494b679", "f4f03ebc-64d7-4345-b188-75e980bbf3d6", "bce80d15-c8e9-44a7-934d-76f53fd7321a", "c36a1e11-b954-4c25-82be-19a898b92789", "ad1f2b6b-9ccd-4c8d-9b7f-1545ce806fa1", "b613a237-c09a-4a09-9ffd-bc40ec670158", "df779081-cf6f-425b-a0a2-fc33edb6acdd", "75a67c3c-b1e7-4fda-a04c-b38884a7a82a", "fd1f7a7a-ccef-4eca-951f-422def59f9cf", "2daf8557-14e0-47b0-9c45-46582f5e3b02"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon13()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_amount' => 3686,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["ce301689-acc7-40fd-936b-7403579d66c0", "8c2f542a-6ea0-429e-a4c2-c7b97ab22c73", "bdbda2cd-9a2f-437b-8316-2dec64aef242", "f28ad113-8316-49fc-9325-aa6128b2f27e", "d23c9446-4fea-4dda-b4bd-6fda5df7e51a"],
                'storage_id' => "cd554cc2-991e-4fc0-8e49-e39f447d4718"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon14()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_amount' => 6768,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["a67fef7c-e711-41f2-ad57-9380d098cccd", "45031d1b-6513-4fe6-8876-7db005d4edc1", "90fafc64-4be3-4da2-8baa-063bbd8ac203", "2ed6b5b0-a52d-4e3a-bec3-7a726556bc13"],
                'min_amount' => 5043,
                'storage_id' => "e159361f-2051-4153-ba65-294a5985c44b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon15()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_amount' => 4255,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["e97c54cb-e1c8-44aa-97cf-1c87c0e3b659"],
                'usage_limit' => 1145,
                'min_amount' => 6968,
                'storage_id' => "bf19fed8-612e-4761-b16e-dd17247064e1"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon16()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_amount' => 8268,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["aa317fba-6290-4405-b779-8a0f1fa881ef"],
                'code' => "kUCk",
                'usage_limit' => 2505,
                'min_amount' => 5128,
                'storage_id' => "94013bc8-4fc4-423f-a30a-b96ae8321a40"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon17()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_amount' => 818,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["fb9ed763-3d1d-48ef-9665-84c0b4a3c722", "7a412c53-1b80-43ef-861b-2e049349a4d7", "0b1231ce-ba42-4d83-8746-e2788a9a968a", "52cf217a-7ebc-4b94-a599-70f510dd3119", "83d25e5d-4f36-48ab-8b29-4aea79e12c38", "e270a98c-2bcc-48d3-adba-267dd739acde", "80d6403f-5971-4074-bee3-1612fd90fb54", "d20a4c11-c248-4c66-9a9b-3607e1f5134e", "a5ce859e-db76-4812-aeeb-7a91dab650cc", "af043172-f648-406c-9882-9c4e122e502c"],
                'is_public' => FALSE,
                'code' => "Pf4I7mVEE",
                'usage_limit' => 2033,
                'min_amount' => 1306,
                'storage_id' => "615911e4-4b1a-4d99-83b8-345373990539"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon18()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_amount' => 9483,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["f51ede11-3fae-4a72-be1e-40733af4c554", "f67ea6d9-4327-41db-b127-5ed212959559", "711b9113-17fd-4ddf-8fb9-dbf115e193b3", "dc4017c5-e9c9-4583-b54b-f69d5370346c", "d04fc98f-9a19-451d-853d-2205b52f9dc6"],
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "9OJHZir",
                'usage_limit' => 6347,
                'min_amount' => 2196,
                'storage_id' => "23d2674b-b590-4189-8e10-f2a345880e59"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon19()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_amount' => 914,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["3605cdbf-7869-4549-bbe0-18b5606049d7", "84a8d487-5be2-48f1-9eae-32495070d273", "04c58351-fa25-4a3f-907e-15d91deb51f6", "61a43260-c6e4-4a1a-ad28-5f2695cbc480", "bb45359d-4848-4263-85bd-4433588e5026", "11437999-8e2c-4d6b-a790-701ff37b5b36", "35593c88-017e-415d-af11-e237578357e0", "108ad34d-8b70-4bb0-aabc-244379e3d8fa"],
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "zftNuETzf",
                'usage_limit' => 6424,
                'min_amount' => 7640,
                'storage_id' => "48f2529b-c8e0-416f-ae08-4e8f8060f005"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon20()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_amount' => 4498,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["4e89c2ed-1305-49ac-ba92-62deb293b93d", "e5af8e02-772e-4803-a221-c416e176de1e", "0e53f466-ee08-402c-8bca-2683c1a1720b", "9bf6f468-373c-45ce-ab7f-dbc9a1e6ff80", "2c2db4dc-f692-4a16-96b2-262c8274e1c8", "6ea735b3-e6a6-45bd-9dfc-6e26658b1830"],
                'display_ends_at' => "2023-10-23T16:51:41.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "SlKK1O1",
                'usage_limit' => 43,
                'min_amount' => 8405,
                'storage_id' => "6d63ff4b-2c05-4e4f-a921-002619defa8f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon21()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_amount' => 7289,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["f277afef-b83c-434a-8c32-a127df0c294b", "b4180414-e9c8-4971-a869-3a6f53ec440d", "057e8fc6-5700-40ef-b250-9359bb76fe08", "82a65693-c07f-46bf-9e9c-f89db2b1c87f", "fad0fe59-95c0-419e-8644-f52f397b2e85", "e9aeedad-3067-42a4-8022-c6570ca7aac0"],
                'display_starts_at' => "2020-11-07T10:25:39.000000+09:00",
                'display_ends_at' => "2021-08-06T15:25:36.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "1Zki",
                'usage_limit' => 3737,
                'min_amount' => 9936,
                'storage_id' => "aa2d6292-3b93-4b0f-9bb3-c55f160b5e6a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon22()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_amount' => 584,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["e3605b8f-0b2d-4c92-ad0b-e0ce412d470e", "f979522a-51b7-4282-8436-220bd92312ce", "2dc8c019-756a-41ff-9169-7d3ab89e8ca2", "00b7be76-b7fc-4832-be62-146a4e08658c", "d4e1fdfe-5d47-4fe5-8feb-2bd802bddecf", "11d96f56-b12e-441e-94ad-f7e265ac5116", "6937e8fb-5575-49d3-8f9c-814f3803a976", "27ba2dd6-f175-4c87-b017-460e96c95a5b", "9e37e853-82e1-4e70-b88b-98f0d8bb87b4", "892006e6-7635-449a-9d2c-6fe5b1e3868e"],
                'discount_upper_limit' => 1254,
                'display_starts_at' => "2021-07-28T01:35:32.000000+09:00",
                'display_ends_at' => "2020-07-09T23:12:58.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "yp1GcS4N",
                'usage_limit' => 5551,
                'min_amount' => 9397,
                'storage_id' => "32f84962-9c0c-4002-93b5-4e2ca10b63d4"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon23()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_amount' => 9074,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["d308861a-b901-4f51-85c0-153bfa171a59", "241daf7e-4b8d-4c7f-a444-4b795ab21bbe", "69eef41c-23d2-4a24-a2b4-4b7426a34b9a", "720d07f1-e2cb-4eef-ac71-d2cde84aca3e", "ef0d2fe7-8caa-441b-82e4-e5521f965026", "1dea5c14-46ad-4781-88f3-c0ebcb463a8e", "b5faac0b-dec6-44da-b3db-edb1f7a81ea1", "6ae61d3b-3d20-48b7-ad31-260777ed65b6", "96a2ad3f-7e28-47a2-aef2-1ad3d51196f5"],
                'description' => "3GWqnvnIS00nrMnQNFRYYqQB2LOvvxaJWdM6RyNE08AoCyr23XqnSacLmBXCHDyWfJbD0iY7FmSIIJxWwKBqcUU",
                'discount_upper_limit' => 8116,
                'display_starts_at' => "2020-05-08T14:45:55.000000+09:00",
                'display_ends_at' => "2023-04-16T11:22:24.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "W",
                'usage_limit' => 7734,
                'min_amount' => 835,
                'storage_id' => "c889ba31-03dd-471b-8a80-a62427c02310"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon24()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_percentage' => 5103.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon25()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_percentage' => 5882.0,
                'storage_id' => "f64082fe-909d-4ac0-b650-89cbd3d925c8"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon26()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_percentage' => 8978.0,
                'min_amount' => 651,
                'storage_id' => "81de954e-9209-433a-bd35-bd63c56730e7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon27()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_percentage' => 1659.0,
                'usage_limit' => 2379,
                'min_amount' => 8298,
                'storage_id' => "c27da317-c71f-4dfc-bff2-f874af0a1f40"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon28()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_percentage' => 4386.0,
                'code' => "2aO0gTJK",
                'usage_limit' => 4253,
                'min_amount' => 1438,
                'storage_id' => "795e7673-2c09-48c6-98b8-08f0e418df01"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon29()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_percentage' => 1195.0,
                'is_public' => FALSE,
                'code' => "YXQCh",
                'usage_limit' => 8587,
                'min_amount' => 4814,
                'storage_id' => "30f70094-0068-40f7-97c7-db48398e67c4"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon30()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_percentage' => 9108.0,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "RstzyfC",
                'usage_limit' => 4419,
                'min_amount' => 4187,
                'storage_id' => "3eb51a2a-c3b6-4372-b4da-185e5254fac9"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon31()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_percentage' => 2101.0,
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "9bDUlUJB",
                'usage_limit' => 5570,
                'min_amount' => 8649,
                'storage_id' => "a2b6b1e7-2d17-4f96-9cb9-891c0afc7d46"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon32()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_percentage' => 1582.0,
                'display_ends_at' => "2021-08-06T21:48:06.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "7e4a",
                'usage_limit' => 3796,
                'min_amount' => 1770,
                'storage_id' => "2cd7af62-c55a-4c69-8c3f-ab16e552f98a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon33()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_percentage' => 9825.0,
                'display_starts_at' => "2023-11-10T02:55:13.000000+09:00",
                'display_ends_at' => "2021-11-26T19:22:27.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "zqZ6lGrz",
                'usage_limit' => 5726,
                'min_amount' => 9904,
                'storage_id' => "63878f74-39a7-40d1-ae50-d3b1908c55a5"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon34()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_percentage' => 9621.0,
                'discount_upper_limit' => 2755,
                'display_starts_at' => "2023-01-23T09:06:34.000000+09:00",
                'display_ends_at' => "2021-02-23T09:01:35.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "x4AXM",
                'usage_limit' => 4354,
                'min_amount' => 8383,
                'storage_id' => "5f849e76-f284-48fa-911c-0ee823f997d9"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon35()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_percentage' => 7518.0,
                'description' => "JlrHqbdULcyqcFghqKIiyi3aAuGXWsNdhyWJyqrPAKmmZGZJNC4j2awHXlJF9A7cu6AxfU8HIO6LO5Dd5XiFWL9oU011XoGoCpelXPpOt9Y3msxtcs0WRQEq2AUltkkF5RV8aSNO9GQnDszD12NRIYvg8bbFQzPdXDpujuzOkg0dnSdALd",
                'discount_upper_limit' => 8566,
                'display_starts_at' => "2023-06-28T00:35:01.000000+09:00",
                'display_ends_at' => "2021-01-08T03:29:11.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "M328xFuB",
                'usage_limit' => 9837,
                'min_amount' => 4359,
                'storage_id' => "3686860f-fea9-479a-845f-8f31b989019a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon36()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_percentage' => 341.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["18490c3f-e7fe-433d-9bf3-2d0927aba345", "9cca4353-ffd9-4d1a-ae2b-1050d131c4d7", "08cd69f9-a1dd-4856-b987-2445c1890116", "034fccf2-73ce-438e-90e2-54cfac4012a3", "dd34658b-2a3a-415c-951c-ab39087e0ccf", "0e7e2fa7-9499-49c8-b67d-31abec15f9af", "a2508e22-83d2-44d1-a791-7e1ab0d737e5", "d652f426-9561-4e66-a345-f75cb8424153", "eb0873d3-8cd5-4c06-9048-fd9b96590a0d"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon37()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_percentage' => 9434.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["1ef794b6-3468-4383-9f32-137d015549d8", "2ea9f3e1-f3d0-49e7-bddd-e3b754c71732", "3b3d2e38-9c52-4fff-a8eb-9cf6838b57d6", "97cf8ccf-22d5-4362-a37d-c9c7648f01de", "e23cc1c1-f430-4aeb-aa8f-c55eecb1d528", "347299c0-12c9-476a-bb19-e8b9e3138ba4", "3a51ac97-9266-479b-bf28-756eafd35342", "25488e62-01a2-48bb-894b-813828fec5e4", "f1808153-f10a-40bb-9d8c-fe2e1d1e034a"],
                'storage_id' => "4c466291-9870-42c1-924e-1a06a1ae8c15"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon38()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_percentage' => 9355.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["21c3d0c9-c6d8-4ac9-9162-57262f6086e0", "f2fb5d54-ef21-4157-80eb-ea65f6d1757b", "d59d0e83-329a-40fc-b725-c32368e267d8", "c155453e-6257-4f02-b152-eb3fc78148e7", "c0d2f213-f2c4-4e60-b690-c2827ba3bb78", "cc934a3f-432a-4e10-9f65-6f2a4dff4113", "e927ec75-4568-4b91-b471-b963a49be52f", "90c37385-747d-40dc-b082-53ecd843c856"],
                'min_amount' => 8309,
                'storage_id' => "137f9285-cb56-4786-a000-c9e5304e6aff"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon39()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_percentage' => 2498.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["f5fac5fe-194b-4fa5-8921-ea5a1b8d4046"],
                'usage_limit' => 1011,
                'min_amount' => 7509,
                'storage_id' => "af08d110-a895-4f4a-9073-7c06d2828c2c"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon40()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_percentage' => 1536.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["fa431ea4-8a2a-4590-bce3-1c88bc43387f", "2b84096b-91a6-4a4f-923f-b26f799bed86", "a21d3d27-df43-4119-a174-5f12aab8fee4", "a89d2ba7-9b58-40e2-a5c1-7b7110be5022"],
                'code' => "J",
                'usage_limit' => 884,
                'min_amount' => 9259,
                'storage_id' => "57280e26-4e26-4474-80dc-f3049011a98e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon41()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_percentage' => 4195.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["3fea37c4-6e89-42ef-8198-83853f1f4dc3", "ed9e8de7-1577-49e0-aca4-69f9956292be", "674f59a9-2f70-4fd1-ae83-0da063f11efc", "872b1351-1c55-4b2b-b3ee-125e2b1878d7", "e7a79094-84cf-48bc-8b81-b1cd6bb1f160", "93aa0fda-bb33-43ae-b2ca-15385e74d707", "b66e8be1-e052-41dc-9d8e-2e4759bf9df7", "11e8155e-a618-43fa-9636-4c56cf58de44", "7260221e-47f1-4032-a96b-4ecc84ef13d6"],
                'is_public' => FALSE,
                'code' => "UR9Ys1",
                'usage_limit' => 2018,
                'min_amount' => 5323,
                'storage_id' => "a1ea7b6a-fc39-4494-8a51-7a6540c4e9fc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon42()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_percentage' => 4557.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["77c09f57-b055-4cb4-b66c-2e40c686dc31", "ed4b89c0-28e5-4a76-b20b-e7b3858acc51", "eb7faedb-2c35-4850-9f05-9edb3d12fdd4", "98069f8c-4aa1-4340-90e7-87f44b4a0792", "b3b4542e-5a74-473d-b406-a80f5e947679", "4e2f9d41-30c9-43fa-8f43-45aaa5bebd3c", "7f59ffad-3b77-42dc-a23f-d8504c6ea4c0", "acd62f31-80da-4924-a017-e7a400e0ac30"],
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "fF9RS",
                'usage_limit' => 9179,
                'min_amount' => 7270,
                'storage_id' => "ac16d6b0-878c-4c8a-bbd1-43b1d18b3fff"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon43()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_percentage' => 3824.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["f80bf2d7-e948-4381-8e7b-b9ca7a84c71e", "5f1c0ff6-86e1-4465-82b7-42875ec3e8c5", "ea00bc05-af3a-417b-aa9d-e09e1970e308", "1c1bcdc2-9cbc-4604-9823-9eebcc0307d1", "81b14791-a24e-4d14-ae39-dbf5af79e9a2", "8a82e1d7-0bec-468b-86b9-081343e51fca", "3f23cb2d-b775-4aa2-811e-375ea0720e6e", "d906941e-dcd0-4ba5-a100-dfe0166eab79", "7e211e66-0d74-4611-9cf7-f2abc7746267"],
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "Z6EO",
                'usage_limit' => 9304,
                'min_amount' => 3949,
                'storage_id' => "0ea9a38e-2c1a-417a-aecd-89f37e7e3a4d"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon44()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_percentage' => 6803.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["9891bc05-8444-4be8-9f0d-ae62c7389da1", "43d6957a-3ebe-40dd-a73e-43e62d4040c6", "adf1ebf6-ccd5-47ec-bd33-58ac6d0120d5", "605079f4-51dd-47cb-a44e-81bb295765db", "99f70450-3c88-4f92-b5a8-815441d23bcc", "0d40f3d6-7a1d-441e-9000-4768b36657e2", "bc9084e8-2abf-48ec-9bc0-ee3db3664d6c"],
                'display_ends_at' => "2022-03-23T18:12:45.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "4",
                'usage_limit' => 6465,
                'min_amount' => 4874,
                'storage_id' => "aa7d37d1-1bbd-4ee5-8f2f-f9a89ba7b99e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon45()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_percentage' => 799.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["d7847a54-8d9a-43c1-af35-99c815cb1ce8", "9a8019ac-6a59-4e78-b540-5e95f9ca6202", "c4d8b70b-04ea-4e43-a17e-ca4747eda32b"],
                'display_starts_at' => "2021-07-06T15:27:25.000000+09:00",
                'display_ends_at' => "2023-03-15T07:30:18.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "uJCfB",
                'usage_limit' => 4908,
                'min_amount' => 1585,
                'storage_id' => "30fd5683-a18e-48c9-960e-8996cc4c36b2"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon46()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_percentage' => 8405.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["e853a75a-7a56-473c-8800-b7d2294bd657", "2b3b7305-53d0-427d-ab5e-dde4ad57e2ea", "bfb1d47c-6694-4a84-b397-ac03957ff60b", "f93ce063-5e57-4618-a8a3-67d885ff8e32", "4bb6f4e0-39b7-4eba-8cc8-9f00a1cfd18c", "01ecdddb-5b78-4a09-bc7f-7fa3b9a977d6", "cbd88c5d-8cc3-4d3e-92d8-2ca4d5818992", "96f191a3-014a-4637-9252-62b93b4a82f6", "7f9a6be8-e729-4cce-8914-ff3e7c3f0883", "981d25f5-5215-4685-a08b-9db370cfcc8c"],
                'discount_upper_limit' => 3606,
                'display_starts_at' => "2020-04-24T16:30:28.000000+09:00",
                'display_ends_at' => "2022-05-10T00:35:44.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "Gd5KFM",
                'usage_limit' => 6689,
                'min_amount' => 5918,
                'storage_id' => "3ff0cbea-6953-4c7b-be3e-4e25fc26bbc8"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon47()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "35a5c2b3-d78d-4a23-b756-aa1518931c82",
            "AkI2ylOPtFPfUfw5cNQlmY98v9Ekah2FpsKs0KWXhqcS1Ua3AEPfEflYFcCoy2dXgtWk5Skp4k9Fji",
            "2020-11-12T13:23:29.000000+09:00",
            "2023-03-20T03:52:41.000000+09:00",
            "47ef2f06-3d63-4328-b9bb-1f78339a57dc",
            [
                'discount_percentage' => 9996.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["ce67f98f-0785-42db-9210-8a21966fd081", "0743d597-9212-467d-81b9-ff1b6fa09481"],
                'description' => "E535lViSyzzCHjVEEg0SpYDFFDY1quxNkSS1vmCLOUldc17zrM7imjJVYnM",
                'discount_upper_limit' => 582,
                'display_starts_at' => "2022-10-17T13:00:29.000000+09:00",
                'display_ends_at' => "2023-05-30T16:53:50.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "sk",
                'usage_limit' => 586,
                'min_amount' => 8477,
                'storage_id' => "1924dc34-4053-44ca-bc9e-4c823151a957"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
