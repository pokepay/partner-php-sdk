<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateCoupon extends TestCase
{
    public function testCreateCoupon0()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_amount' => 3290
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon1()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_amount' => 3973,
                'storage_id' => "b50fb266-d853-4197-84e6-8f0a4b3d542e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon2()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_amount' => 9470,
                'min_amount' => 6658,
                'storage_id' => "aa098f5a-7b54-402c-b4a1-3cf4c110c87e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon3()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_amount' => 3693,
                'usage_limit' => 5522,
                'min_amount' => 9716,
                'storage_id' => "4e1c4130-e004-40eb-ac45-faff728b7eb9"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon4()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_amount' => 4281,
                'code' => "bmWEwPDA",
                'usage_limit' => 3692,
                'min_amount' => 6059,
                'storage_id' => "43241bd0-e3c1-4e22-bd7d-1d921d6051ba"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon5()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_amount' => 5736,
                'is_public' => TRUE,
                'code' => "KIXyGRzgz",
                'usage_limit' => 5953,
                'min_amount' => 5559,
                'storage_id' => "cb8c9751-67dd-44f6-88b1-237f374f95d6"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon6()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_amount' => 3730,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "6HX",
                'usage_limit' => 6960,
                'min_amount' => 763,
                'storage_id' => "23920cb5-1688-4090-8376-16bcfea16d8d"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon7()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_amount' => 4965,
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "RtG4rPMZ",
                'usage_limit' => 55,
                'min_amount' => 7168,
                'storage_id' => "b22afcde-e30f-4f84-acec-070095c11f36"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon8()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_amount' => 5433,
                'display_ends_at' => "2022-02-20T22:36:13.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "zr",
                'usage_limit' => 1252,
                'min_amount' => 3118,
                'storage_id' => "d63d09e3-4ee8-40b1-a643-932087ccdfab"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon9()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_amount' => 769,
                'display_starts_at' => "2023-10-02T10:18:25.000000+09:00",
                'display_ends_at' => "2024-02-14T23:42:51.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "uHYuOmU",
                'usage_limit' => 6765,
                'min_amount' => 8580,
                'storage_id' => "35158682-afe3-48e4-b6e9-b8b43e5592bc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon10()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_amount' => 2308,
                'discount_upper_limit' => 9335,
                'display_starts_at' => "2021-06-07T20:36:13.000000+09:00",
                'display_ends_at' => "2023-12-03T13:02:04.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "Z9",
                'usage_limit' => 2084,
                'min_amount' => 5334,
                'storage_id' => "01dcaf6f-aea7-485a-bfe7-a02d0bbd5ef7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon11()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_amount' => 5329,
                'description' => "OtrrrUYkUZfyDiEARtnjkJDvXYtY0lyOw3XeU4H96ZeTaGTelnnLqybdYUoUkW6eZGCov838iOUQk6kTs",
                'discount_upper_limit' => 8390,
                'display_starts_at' => "2021-11-12T21:06:21.000000+09:00",
                'display_ends_at' => "2020-06-05T04:47:18.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "KRtzrJJ",
                'usage_limit' => 5540,
                'min_amount' => 9839,
                'storage_id' => "ee93b4bc-bf58-4903-87f9-34240ef7637e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon12()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_amount' => 5479,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["ae40b6bd-4c3e-4340-a30d-ace41f392706", "d96d6488-7f9b-4d63-8d90-d4e41038ab82", "2e811eba-2e06-4213-b1b2-0bd72b971857", "94d2ffe6-aef7-460d-9024-54003eeb0a37", "72a0cd54-0f62-42bc-8c20-1e7b1f5c8d8a", "31678fb7-f94e-4f65-bab5-49c30aed0388", "0a957150-07aa-4422-9342-0adb5fbbf8b3"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon13()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_amount' => 1266,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["e1bc5ab5-d1a2-4b90-85a2-b2f0aa5de3bc", "0100a80d-ccfb-44e1-a904-b32f236875d6", "73e749e9-e776-4490-92f5-07c87b30bb67", "a4da14c4-ce3c-4599-b71d-d8b446cdb1c8", "94eee480-728d-417b-9c77-596dfb9cafe9", "4de6fd73-91d9-43e3-ba1d-fa40beb7eedf", "65ba1954-748b-4efb-a0b5-96e28776f757", "e19c0bc1-c855-4f84-a926-aa602734825d", "b2a13932-562a-463f-b324-3b06520d93f4", "de514439-9a40-45d7-a38b-18c8e2de360d"],
                'storage_id' => "b87fd7af-bc5d-42d2-8e49-213fee057d66"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon14()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_amount' => 2991,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["014001b8-e231-4b80-9523-6a304fcc6849", "ab66cf47-1712-4454-a87b-e4c7f2f3af40", "a35416a6-5ade-4b11-ac28-143c95c2e508", "128317f1-2d41-412c-8e9c-21d457088f06", "77d05668-a503-4312-9fe0-6cc26a4e7ccc", "abf700cd-5f30-4906-bf7f-de74dc750108"],
                'min_amount' => 5524,
                'storage_id' => "a55b4908-0665-4f67-b94b-8a8ddb73d0d1"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon15()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_amount' => 320,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["4ddfde30-a905-4f6c-a19e-a325e07cb2d3", "640f1c95-61f0-4aae-9878-d18297f9d38f"],
                'usage_limit' => 104,
                'min_amount' => 9960,
                'storage_id' => "3dce6642-9d7d-4e8f-828e-e6eecaafe62e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon16()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_amount' => 8804,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["4b051bf6-385b-4d1d-9be1-dc9a5d602dab", "705c6177-cef0-4a9d-8d0a-813a40743f26", "ef8c0b13-34fe-4a2b-96fa-5847dbddb4ce", "6634b752-58b9-4662-a4e8-b37f71818b2b"],
                'code' => "uedJt",
                'usage_limit' => 1325,
                'min_amount' => 683,
                'storage_id' => "f48cc93a-166a-4f1e-8250-0c610dd02965"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon17()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_amount' => 8103,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["5b4b8c57-b525-4c01-8b39-c4aaa2430cfb", "630522c5-6787-41e2-bd3f-6020e0c4bf8f", "84c1c3d4-7c09-4d7b-ba98-b68315e3f68e", "aa746868-a9bd-43ba-bd57-dd8777e6e83c", "fe087934-a158-4d44-8ed7-8db46f791c0a", "32e39926-3ac3-4915-a89d-dd552b56ec12", "ddb6af5a-5333-45bd-9b4e-01d163288229"],
                'is_public' => TRUE,
                'code' => "AC4",
                'usage_limit' => 9794,
                'min_amount' => 2582,
                'storage_id' => "ed4d9454-34bc-41ce-bfa3-c680e31a39c5"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon18()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_amount' => 9407,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["c227ca57-8c7d-4796-91a4-40e4d1123361", "4f440264-ec45-4010-8e7f-6e0361a53de5", "1179197b-3f4a-4fea-8398-5f26f178f62f", "9f8f8842-ff6e-46fb-9809-2c5feff70cd2", "d9f47440-80f2-4848-b448-8be5e68cab93", "73ca397e-9457-4b9e-a296-7f6252ad975f", "1b919844-9ac4-4d8d-b679-65eb9ae35782", "b6e24540-d0f9-4502-a026-1b6935dc1eb4", "790a1517-f96c-49a4-b572-525ef21c6622"],
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "l0abe0c",
                'usage_limit' => 6958,
                'min_amount' => 9923,
                'storage_id' => "c7189d76-edd0-4ccf-b895-71509c5d7d4d"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon19()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_amount' => 2730,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["a826ede7-e62a-43ee-ada0-3382746985f7", "416238b3-f94d-4f5b-b8af-c36ca8959799", "96b96b08-070e-4fff-84b4-31781b7c7568", "f664c432-4b7b-44c6-8431-1f3286de9f5f", "d07c41f5-ed9d-4d10-abc8-0e5e6e02632e", "a472be88-0893-4c96-b70e-abeb04b3cb0a", "eaf5d835-1e7a-46c2-9de8-94908200cedc"],
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "pbJmdxaK",
                'usage_limit' => 5136,
                'min_amount' => 3441,
                'storage_id' => "77470b9a-aca0-4b70-a41e-f1293be19760"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon20()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_amount' => 2399,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["cfa5a1ae-c16f-421d-8f69-08cb651c01c4", "f4e400a0-2248-45d3-a3c8-cf19315bb47c", "3a763a7c-0c4b-4d28-bd81-5a6730b11e9f", "77bd465f-304d-4fc2-8af9-4a0f3e177171", "6fdad6df-879c-4fa1-a91f-0a1c22c58c30"],
                'display_ends_at' => "2020-11-03T22:23:03.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "olSA",
                'usage_limit' => 9218,
                'min_amount' => 6536,
                'storage_id' => "3ef11a07-c174-4984-bff8-f8f2c09b5d1f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon21()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_amount' => 9262,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["758c9fa0-968e-4fa0-a0d4-f0d529b345b0", "964222a4-2131-48a4-a7c0-bcc96155583e", "9194d078-bb88-473f-a267-71c5003834d5", "edd1852e-c6ee-4090-b2f0-7acdb6e40f84", "5bc6bb56-2b62-4117-aa00-bf5d42319cfd", "2fd61fd0-c187-41dc-ac1a-afd13cd7de83", "19db9b79-c337-40d0-873f-a1bb9f8a45d8", "b50a7cae-b78e-4b44-acd5-eafd8d62f022", "7617857c-a3bc-4b8d-8b1e-2900441ff870"],
                'display_starts_at' => "2023-07-03T21:14:21.000000+09:00",
                'display_ends_at' => "2022-01-08T17:52:59.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "9hQFiB",
                'usage_limit' => 512,
                'min_amount' => 4962,
                'storage_id' => "b20833d4-44f3-4c70-8068-9eedbcf13056"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon22()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_amount' => 7611,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["cb149e34-96e8-4f57-a737-30a569897ec3", "5c30a17a-57ac-4ddd-abf0-9af70ad439d2", "3d564bc7-39ac-4cdf-ba30-2aa9d554c595", "f07d0f9e-94da-444f-9084-db739c27b75a", "da46b0e3-df2c-4b21-ab45-ac28eb23e6b9", "c54cc3f4-22ce-4990-9054-00c629d52a7e", "97ba00b8-c59a-45ec-aaa1-c5b7056d0c77", "b4540da6-e536-476d-b768-539dba2f9889", "0eccae08-4400-4796-a8cb-af79a035c2be"],
                'discount_upper_limit' => 4492,
                'display_starts_at' => "2020-08-27T21:15:40.000000+09:00",
                'display_ends_at' => "2020-05-06T11:30:16.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "P",
                'usage_limit' => 6295,
                'min_amount' => 8852,
                'storage_id' => "35baff65-bd7a-401f-9510-b99aa8ff592e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon23()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_amount' => 3486,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["fdca0820-02ca-40b4-8e47-852aca00430d", "2a6574e5-41c4-47a5-8236-67ef0f2b78d3", "842a1314-6441-446c-9677-c6cee0865a11"],
                'description' => "tT4i8mQEqRMFB5BKqO7bo9H2NKa1xYJjh73YgyHQuAz5lNIf5sl7VkSqPcrCOAOHjOoz6R08GebUQWmZBGYLJnsXCvfg5PDlk3aue56HLF0EJoU",
                'discount_upper_limit' => 6564,
                'display_starts_at' => "2021-07-15T20:40:27.000000+09:00",
                'display_ends_at' => "2022-10-10T02:37:04.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "rKtwo8DuO",
                'usage_limit' => 7613,
                'min_amount' => 8404,
                'storage_id' => "b7f7c55e-fb60-4d70-8125-1ec7f259358d"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon24()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_percentage' => 3265.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon25()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_percentage' => 2207.0,
                'storage_id' => "b11b02ed-14f4-4152-a620-8fd1e7328d5d"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon26()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_percentage' => 198.0,
                'min_amount' => 8077,
                'storage_id' => "b7b71843-b0ac-41fb-8e56-d4b8ded74a70"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon27()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_percentage' => 2563.0,
                'usage_limit' => 5646,
                'min_amount' => 2725,
                'storage_id' => "8685afe5-6212-4b51-bc4a-630ebad66013"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon28()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_percentage' => 6877.0,
                'code' => "extXcXbqm",
                'usage_limit' => 7352,
                'min_amount' => 6476,
                'storage_id' => "5e28e4ea-2606-43cc-80df-e2bafb0a4b49"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon29()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_percentage' => 1225.0,
                'is_public' => TRUE,
                'code' => "kW5c",
                'usage_limit' => 6937,
                'min_amount' => 3128,
                'storage_id' => "10468a1b-aecb-47d8-bd62-2a1196e27599"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon30()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_percentage' => 8390.0,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "vciR6H",
                'usage_limit' => 6305,
                'min_amount' => 211,
                'storage_id' => "cc1d854e-9e86-4721-b3f7-3e1154504a2c"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon31()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_percentage' => 1467.0,
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "4",
                'usage_limit' => 2266,
                'min_amount' => 3158,
                'storage_id' => "e407c4da-bdc2-4a87-ab4c-d5813bcfd02e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon32()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_percentage' => 6774.0,
                'display_ends_at' => "2020-09-26T13:36:54.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "A1hNjNkdKn",
                'usage_limit' => 8728,
                'min_amount' => 9472,
                'storage_id' => "8e286e4e-cc22-413a-b4e0-05e4c3c3872c"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon33()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_percentage' => 5701.0,
                'display_starts_at' => "2023-06-20T20:03:43.000000+09:00",
                'display_ends_at' => "2021-09-23T09:52:31.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "KzEun3CYh",
                'usage_limit' => 1365,
                'min_amount' => 7668,
                'storage_id' => "1355f871-481f-44cd-a75f-b8f6efcc15b5"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon34()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_percentage' => 9398.0,
                'discount_upper_limit' => 3249,
                'display_starts_at' => "2022-02-08T10:47:50.000000+09:00",
                'display_ends_at' => "2022-03-27T17:44:13.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "E5lshw",
                'usage_limit' => 9051,
                'min_amount' => 3518,
                'storage_id' => "0018a698-994d-4a26-b73b-7d365403cc20"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon35()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_percentage' => 918.0,
                'description' => "p0vCByhF1zLtmnNHOl4jyeXAG2Ch1VqnY3H1hdx5LkCwmyDvMyOtT99ifV54LODLlmEOaKJNdZvifD1xY1v6UHhYEF8mznEAi",
                'discount_upper_limit' => 3211,
                'display_starts_at' => "2023-10-20T13:34:57.000000+09:00",
                'display_ends_at' => "2021-01-25T10:23:53.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "hUpkUSS",
                'usage_limit' => 7933,
                'min_amount' => 2690,
                'storage_id' => "d753d315-6dc3-4569-a172-513e0cf9656c"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon36()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_percentage' => 8.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["eb16ffac-7048-4b7b-a01c-f8b7b9490f6c", "248bf594-2f14-4334-98a7-d747fbb4cd77", "f3183290-8f4d-4fb3-b746-3ad940d5873d", "93e6a975-3cbb-4702-8b9d-7012e60c2a2d", "a01f4d8c-74a9-4088-b706-ae186de40436", "5cd6cefd-f5f3-4573-b671-ff02990e4f49", "6019ec56-6835-4437-83cd-ddb00e4f416a", "2fd65858-3540-42e8-a880-dc94942b2897"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon37()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_percentage' => 8022.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["b4b8bce9-eb31-4fa5-b077-1a08de7580d8", "2b6dc7ac-78cb-48f4-bca6-2a5756c5f8f4", "f1b0a4e8-4f6a-4053-9689-b2225b3cbaa1"],
                'storage_id' => "a87ced3b-78a5-4e6e-bb19-e598a189d053"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon38()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_percentage' => 8043.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["3ba614a5-5561-4e67-9d45-17007ecdf94f", "b0a3ac29-ec28-47ab-9590-0caca0e3a715", "416960f5-2181-4fce-baa9-f875a81012b6", "8c70b6e2-0d1d-458b-b2e5-3062533096c1"],
                'min_amount' => 3346,
                'storage_id' => "825a9431-a58a-4fd7-92c1-1d810e564e32"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon39()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_percentage' => 5989.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["c3da3d3e-4fe7-4c07-873f-efdfef390eeb"],
                'usage_limit' => 9943,
                'min_amount' => 3461,
                'storage_id' => "8b162b56-271e-4d9c-8ad2-134c3c0b887d"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon40()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_percentage' => 8084.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["ee8692e8-c449-417a-8499-0c2e326479d1", "d634367d-49b9-41b1-9932-07dd7027ac5f", "82dfc373-0c26-45bb-a0ae-ec24845319dc", "bd22a24e-2dcc-4949-b7a1-6c67a0698930", "166280f4-b180-4422-ac5f-bc034c304fec", "80e71543-cd83-4c83-bc57-29d4e517c180"],
                'code' => "BeC",
                'usage_limit' => 282,
                'min_amount' => 8324,
                'storage_id' => "f15622d9-4a56-4e9b-ae5f-33571c8736a8"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon41()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_percentage' => 3932.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["49f53f38-c834-49a2-97f1-44b432f3512d", "82b37227-6e4f-4098-9cb5-9c9703328e85", "575b493c-e00b-46d0-85bf-9ebb9e3de903", "acf875f4-576a-436e-aa9c-4915711a96f5", "4bd5135f-e3f8-41f1-8297-2c360e22bdb9", "3b81cde6-b3ed-43dd-8592-bd436e7bd65c", "65b1152c-2c03-4e06-8834-01058c178a92", "29a6a3ea-e1be-431e-97af-a6ba5a0548b7", "272ef1a3-237e-462b-ab6e-d2e13e676748", "3aa5e705-96ef-4221-b9c4-93b30746a23c"],
                'is_public' => TRUE,
                'code' => "zIp66",
                'usage_limit' => 9198,
                'min_amount' => 454,
                'storage_id' => "b71f7f94-8a6c-42a1-8b64-b8fc77b3b580"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon42()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_percentage' => 3256.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["a6592e83-8fcd-43bf-b791-4ea12601fd35", "93e6b4e0-5af4-4e33-9ab4-8da07d8a83be", "afd6eade-f3d6-44ac-8f53-4c61381cc531", "c775366c-3d9d-433d-9588-f11d35cb4575", "2bcac6d8-97b8-42c8-81d6-faebc57f9d29", "edbe365a-bc0a-4c52-af29-5fc347db32e3", "e3fd7b5b-f16c-469c-85c1-d8fa47d151ae"],
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "Y4779g",
                'usage_limit' => 1120,
                'min_amount' => 6283,
                'storage_id' => "3b23bd72-350c-4d5e-a03b-98c07ec4b201"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon43()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_percentage' => 2927.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["43a2439a-0311-49a4-b5ae-1212966d53fa", "e5013446-ed60-44b3-9937-ddaa94098ed5", "8f632009-19e3-4ed2-961a-a8daae33876b", "f756980f-c652-4660-b949-8b678cbd78d7", "e97bd0fc-9a53-4ef3-8043-9d0549dfd1de", "672df1eb-7b42-4f75-81ae-41c328be79eb", "cb9db6c6-8167-4546-ad0d-1e247223a41e", "dabeb8b6-9564-4d7d-9f39-b05815a65aa1", "f1f8c1c6-4378-47a5-89d6-4d3f4733d580", "93e1d373-ea98-4925-b79b-8b90ade7b403"],
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "C1AB",
                'usage_limit' => 7443,
                'min_amount' => 851,
                'storage_id' => "f2fbb1e9-177c-49f6-ba63-dfd22adc4e99"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon44()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_percentage' => 6952.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["a7717056-2582-46a7-91c8-f773108663b3", "19843c01-36b4-486f-8ab7-30d41b1c753b", "e876bc9d-6608-4b40-a99c-e60f3c1ad88a", "0adb4e3f-edbb-429b-991c-de24a2f18b04", "3c0754bd-63b7-407d-937e-5dc4a2a4fba6", "b7d374dc-7802-4186-8b95-b2072c6b64d5", "01a115da-358f-4435-92e3-306e0379f9e8", "5a8bf7eb-de2a-486e-8b17-08ab6438cb87"],
                'display_ends_at' => "2021-11-24T02:11:37.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "F80qBh",
                'usage_limit' => 5561,
                'min_amount' => 5125,
                'storage_id' => "9fb14581-62cc-4e2d-8c1f-7c3fd678e858"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon45()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_percentage' => 6133.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["0a31874b-6f25-4964-9e73-a6a57b007d79", "bd732576-5b50-4f14-9fd3-ea1905e851ff", "455b95ba-a7ab-4828-b3c5-90fb7e859a72", "550a8143-809d-4421-9a26-12598e015af2", "ea557d21-0f15-405e-8b28-1a0a789f404c"],
                'display_starts_at' => "2020-04-30T20:11:30.000000+09:00",
                'display_ends_at' => "2022-06-10T06:27:36.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "2lsP",
                'usage_limit' => 8130,
                'min_amount' => 89,
                'storage_id' => "c136dbde-8ed1-43bf-a1e5-0183b64a846f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon46()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_percentage' => 8801.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["19891ae6-12ac-417b-9b14-d2c0163395f5", "72c69490-8767-40c8-af23-f71ce1e41ef5", "542c31b9-ad8a-42f0-8a40-f65067ab0398", "4a5ee2f5-a43d-4153-a0dc-56ca9cde8ec3", "be3d5a8d-6371-4098-93f9-8473d68972c8", "66295568-c663-4486-b4a1-dcc2da9ed953"],
                'discount_upper_limit' => 8906,
                'display_starts_at' => "2020-11-12T21:08:57.000000+09:00",
                'display_ends_at' => "2022-03-09T22:01:09.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "G",
                'usage_limit' => 4209,
                'min_amount' => 1939,
                'storage_id' => "f0c45252-7433-43a4-b6ef-237e531e1719"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon47()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "0462f83f-389a-4f36-828f-8896a68c13b5",
            "EPD7NjLJISwhNhnkrPOGOQrInZEGd8QsmR0rqw6DCpZDbZopjWjZELT5zLISSa",
            "2020-05-25T08:16:42.000000+09:00",
            "2022-07-26T03:58:44.000000+09:00",
            "89f81ae4-ad13-46a8-b7e5-9e87944a2292",
            [
                'discount_percentage' => 2163.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["b131d0a5-11d1-4a40-bbfe-249e32abf695", "52e5f294-4019-42b3-b280-f70cdd8fa6ab", "b6c249da-bf5f-481e-840c-d27ec994ebb4", "0ccd024c-9f18-4f29-817f-8814f90057fa", "62bbc31b-7acc-426c-ac34-8f127dcd38d8", "e5352fdb-5dd3-4e93-b7e4-70619fbd93b3", "56785247-5250-4670-90d6-9f04a618a578", "fde07437-ab43-4e32-b11c-7cb84f535829", "fd9e1308-d777-4217-b783-4fa09c95ed4a"],
                'description' => "pwtyQyCPvCml0ctOfRmNASnaQgmecU0TkNAsIfn7sNBhkAcWCMCiVMooa8qWlnsPD1RzQz7fWijelK3yW5Rieu9W0YzNvtnenvg37ZDH6awM6ayLCU9sxDiUTXNJuThAojUedCT1YEai9pFsEvlvYWHcqOKqrKOFAe8vwRXy71L5wwhSeGizleg25nF3AhOvshpnhjxg9c5xWsARh",
                'discount_upper_limit' => 4023,
                'display_starts_at' => "2023-01-10T01:50:30.000000+09:00",
                'display_ends_at' => "2023-05-01T22:35:59.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "m",
                'usage_limit' => 1598,
                'min_amount' => 764,
                'storage_id' => "deef0905-7a50-4df2-b116-d872354357e3"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
