<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateCoupon extends TestCase
{
    public function testCreateCoupon0()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_amount' => 2308
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon1()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_amount' => 6777,
                'storage_id' => "188f0390-f0ff-4153-8c4c-146c52281e29"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon2()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_amount' => 2355,
                'min_amount' => 1980,
                'storage_id' => "f36dc89e-dd69-4db7-842f-3b1be827a64b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon3()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_amount' => 4890,
                'usage_limit' => 2456,
                'min_amount' => 7618,
                'storage_id' => "d419068e-012a-424e-a332-701b7bc98136"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon4()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_amount' => 8760,
                'code' => "tID4z5OL",
                'usage_limit' => 6368,
                'min_amount' => 2347,
                'storage_id' => "c3318f5d-fd5f-43e9-b7df-810d88021ceb"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon5()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_amount' => 4642,
                'is_public' => FALSE,
                'code' => "zyxVyGuWU1",
                'usage_limit' => 6684,
                'min_amount' => 4103,
                'storage_id' => "593044a8-aac0-49ae-8287-fe2106192e19"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon6()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_amount' => 3395,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "sNcJB2",
                'usage_limit' => 1529,
                'min_amount' => 9391,
                'storage_id' => "4d905711-5b48-4e48-8445-13bf004da3c4"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon7()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_amount' => 9902,
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "4hhRZd",
                'usage_limit' => 7732,
                'min_amount' => 3226,
                'storage_id' => "e74b9ce9-2fa0-40d6-af3b-f78712ac6df5"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon8()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_amount' => 3515,
                'display_ends_at' => "2022-02-05T06:04:28.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "SsH7wTV",
                'usage_limit' => 4363,
                'min_amount' => 5814,
                'storage_id' => "7e463fec-0c1d-477b-91af-66768d026fbb"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon9()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_amount' => 9495,
                'display_starts_at' => "2021-09-30T01:11:41.000000+09:00",
                'display_ends_at' => "2023-10-03T04:19:28.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "XlL8N89",
                'usage_limit' => 5570,
                'min_amount' => 3207,
                'storage_id' => "48647c2f-515a-46d4-a7f2-6ace3715bb82"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon10()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_amount' => 2970,
                'discount_upper_limit' => 7593,
                'display_starts_at' => "2023-09-27T15:05:24.000000+09:00",
                'display_ends_at' => "2020-02-13T14:40:56.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "jlR",
                'usage_limit' => 6433,
                'min_amount' => 9751,
                'storage_id' => "5b75f62f-dbbb-45e1-9de8-a1c2603f5262"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon11()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_amount' => 7719,
                'description' => "AV7T9JjgJdEO3isHjypJcylxYOhjM3mFaXbvZI6iiT0AEYTJZ22nyV4dlUib7PRkE7tSgSNlXVRVvxj6xH1yyIVkS9hU0ECIKFsgh4O8WmhV3r52ICXGIBQTaygxm3I",
                'discount_upper_limit' => 5587,
                'display_starts_at' => "2022-07-10T20:30:46.000000+09:00",
                'display_ends_at' => "2022-08-26T23:03:44.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "TzvLf",
                'usage_limit' => 2745,
                'min_amount' => 9893,
                'storage_id' => "c2121917-24fa-447b-ab82-05254d672358"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon12()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_amount' => 8757,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["6e19a8b3-9c12-4361-b9af-9e637510259f", "513e4bb5-aa3e-4487-8afc-3b0521a11af1", "37d389c2-df7f-4485-aaba-63103d48af8d"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon13()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_amount' => 3869,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["20a55553-d759-4718-98a9-d90dad18998a", "f2c8b603-5eec-4326-87fe-84fb52274fda", "5bf69045-94c0-4ad9-933b-d772b7451fab", "c6a75537-6f73-4463-ad59-ec182a24aad6", "2038221a-4a48-4faa-bdbd-aa8cf858679f", "07e8f6cf-ae54-4a8c-9199-5601157db34f", "816d63a3-6ce3-4d38-b2bd-bcdbd30694ee", "aaa2a356-c1fd-4372-a1f1-cbf50d3f434c"],
                'storage_id' => "52972fed-6c38-4dc2-85b0-92a189bed363"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon14()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_amount' => 5142,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["e6454680-8e70-47ab-a0f1-22a21445be8d"],
                'min_amount' => 4819,
                'storage_id' => "5e700c0e-759c-45ee-ab9f-0fa92886fa4f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon15()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_amount' => 9595,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["d1f30c30-3ac6-487c-a7bd-6b4b18762e18", "1a9f54bd-8580-46af-adee-51f544fd1a89", "4721f57c-1152-4d1e-8225-9c716ba610ba", "27f21433-0892-4ee5-b303-afa68b82f6cb", "59bee14b-1f19-4c88-aff1-f9ad79226a36", "584e96de-f08d-4871-b350-21012ee41c24"],
                'usage_limit' => 196,
                'min_amount' => 664,
                'storage_id' => "0a71d952-cd61-4ea9-8dee-02aea135c5e8"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon16()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_amount' => 4649,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["67f0de10-7bf5-4791-ad82-8f2ea0a722ed", "f085c0ff-245f-4297-969e-730c23a40b30", "005b4aaa-2dab-4afb-aee5-638d62465d19", "0d23690b-6a98-4a81-8c62-410abaf98573", "88d277b1-877f-49c9-b605-4f30ccf4f55e", "b726b7a4-2a41-4053-9eb6-044d7561ea99", "dc6ac52a-c8d1-41e7-8d98-79266c38bbf9"],
                'code' => "UcNdlweVZD",
                'usage_limit' => 5763,
                'min_amount' => 5522,
                'storage_id' => "228fd2f6-539a-4d2f-ad13-b4657814206a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon17()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_amount' => 8936,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["63ad1453-4584-4f97-ae49-cc9906a3ce54", "52db1d30-a77a-4d02-84c3-89f956fd99d2", "13375b15-3175-4926-bca3-2f34ba96e902", "d1727f77-0067-415e-96db-b634d9af7851", "d98aa861-6081-487d-bca1-e1d13266e9d6", "a6eb62d2-435b-4d98-868a-3ca91a5087aa", "e788c42a-4e6b-4f3b-8bb5-4df6a839f58d", "672da083-d1d2-4c21-92af-0523f5eeaff2", "8c4b5627-e816-48bc-8eaf-b78978143a3d", "990697f7-88e2-4652-bc20-417f7954a2d7"],
                'is_public' => FALSE,
                'code' => "oJ",
                'usage_limit' => 6543,
                'min_amount' => 2119,
                'storage_id' => "3c14fbd7-f6b6-4c21-9723-ff237fada119"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon18()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_amount' => 26,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["e2db7931-746b-4dfe-b8e5-2e8dea2c2397"],
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "go",
                'usage_limit' => 5791,
                'min_amount' => 9931,
                'storage_id' => "6e02bbd5-66ce-4e04-984c-6585f0b55b1e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon19()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_amount' => 7966,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["3701b4df-e85c-4353-856f-2bef74ce0206", "0067542e-e086-434a-8274-492d405c26f6", "f5abb63e-c839-4bf3-b60a-0c7dbdd54607", "49efa3ee-fdf0-49b8-923e-3a7781f2c181", "b4a5125b-edb6-4ab9-9ee9-33360237c7c6", "7bfdc153-fe27-49c2-b798-a07006e7275e", "a598bbc1-06cf-4c08-a21a-b0ea92f156b0", "03b547c7-9dd2-411b-9b86-7f924e27040c"],
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "x",
                'usage_limit' => 9400,
                'min_amount' => 1260,
                'storage_id' => "50b18e4f-338b-44bd-a282-05e795928a7b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon20()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_amount' => 5936,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["649cfd9b-eafe-4409-b60b-fe1fc1b767bf"],
                'display_ends_at' => "2020-06-06T21:05:41.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "5OtF6MH",
                'usage_limit' => 1755,
                'min_amount' => 1414,
                'storage_id' => "583c9c16-0280-4647-8708-2640927b2fd3"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon21()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_amount' => 6701,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["0b6cb830-cb5e-4d67-b45a-97b51ebaf1c6", "6982e261-1288-49b9-add5-b40029a53e2e", "07047953-8b3f-4e00-a32c-15ef32c33fa5", "09049a05-f582-4d67-9ada-d96935d2b0f9", "8b2ca867-6d88-4e7c-8534-da3bf32f9742", "e5fa5c0a-47d1-4fb7-a820-a5fa3a671233"],
                'display_starts_at' => "2021-12-04T03:32:17.000000+09:00",
                'display_ends_at' => "2021-09-20T14:24:55.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "9",
                'usage_limit' => 3232,
                'min_amount' => 2627,
                'storage_id' => "7d9ab8fe-8660-444c-a21e-8ad415257424"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon22()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_amount' => 7618,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["fcf274c4-4141-46b3-9d05-62df4dec9ff4", "f1d241c4-4f49-4867-a0ac-503c4db1768b", "318823c6-1f4c-4d30-90d8-ca6e7c913973", "676ff775-ec05-4a8d-884c-a67623975c07", "b41ccaf0-59f3-445d-8e1c-178d78f71951", "93fd947b-97a6-471e-8048-233cdce6854e", "bb825d34-179a-4f56-bdf8-3dc415357315"],
                'discount_upper_limit' => 7131,
                'display_starts_at' => "2023-10-03T09:32:04.000000+09:00",
                'display_ends_at' => "2023-11-14T00:49:31.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "7hK65KlzV",
                'usage_limit' => 4764,
                'min_amount' => 3146,
                'storage_id' => "26413f42-3283-43b4-b0ce-aac2d829dbd3"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon23()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_amount' => 3563,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["2c80d0fa-7657-44de-b81f-988c3b5be966", "26ebce75-a518-4ef8-be01-f087f061236e"],
                'description' => "DXGIXMTUbdupc0D6yEDHiWA1xCGr47KOTYzViv4K7dYiXKMxgm5qcSYFbmx8vCUWJwIJdJtBFcc3YJMnqQsQkhD1fdjDnrY9c9dwoiyLrl7ry0IPpTz4QEtbQN",
                'discount_upper_limit' => 7025,
                'display_starts_at' => "2020-09-27T15:58:18.000000+09:00",
                'display_ends_at' => "2022-09-30T06:33:55.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "WyW",
                'usage_limit' => 6102,
                'min_amount' => 7458,
                'storage_id' => "2da9cf4d-143f-4157-89fb-59a5cf5c7f06"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon24()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_percentage' => 6346.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon25()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_percentage' => 2828.0,
                'storage_id' => "c0c5b319-8fa9-4cb6-afa7-51d7fc2fa684"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon26()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_percentage' => 1687.0,
                'min_amount' => 1046,
                'storage_id' => "107a45d6-0472-4b33-9a9f-7c8e163548ea"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon27()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_percentage' => 8264.0,
                'usage_limit' => 1114,
                'min_amount' => 1046,
                'storage_id' => "ed681d9e-74e1-4c18-bea8-72d54b9a7af9"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon28()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_percentage' => 2131.0,
                'code' => "c29",
                'usage_limit' => 6512,
                'min_amount' => 2857,
                'storage_id' => "56472027-914e-4314-9a68-be45ed1a42d1"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon29()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_percentage' => 726.0,
                'is_public' => FALSE,
                'code' => "R0Rd",
                'usage_limit' => 4130,
                'min_amount' => 3617,
                'storage_id' => "ff828a6c-1f6b-49b3-8408-1fa13394c8c4"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon30()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_percentage' => 6653.0,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "Oy",
                'usage_limit' => 7605,
                'min_amount' => 1152,
                'storage_id' => "9a144bf2-15ee-4ed3-8344-666ff52ca128"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon31()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_percentage' => 1798.0,
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "oCoVlWr",
                'usage_limit' => 9851,
                'min_amount' => 8277,
                'storage_id' => "97e96a2c-d82b-4f72-81e0-8b0ad3f4d318"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon32()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_percentage' => 3094.0,
                'display_ends_at' => "2023-03-22T21:20:47.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "2h6PuZCDM9",
                'usage_limit' => 9850,
                'min_amount' => 1177,
                'storage_id' => "e9158d66-60d8-4694-af7d-ec1ed3bc43c1"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon33()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_percentage' => 205.0,
                'display_starts_at' => "2020-12-04T01:50:27.000000+09:00",
                'display_ends_at' => "2021-11-28T19:52:26.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "mDCsGT",
                'usage_limit' => 7452,
                'min_amount' => 5777,
                'storage_id' => "9f658496-f58b-441d-b87a-a29653ffe232"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon34()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_percentage' => 262.0,
                'discount_upper_limit' => 7972,
                'display_starts_at' => "2023-11-13T15:24:17.000000+09:00",
                'display_ends_at' => "2020-09-07T13:02:47.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "D9T5W8",
                'usage_limit' => 8072,
                'min_amount' => 8554,
                'storage_id' => "d49379bb-eb16-48a7-8a00-626519890875"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon35()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_percentage' => 7940.0,
                'description' => "VOUIyzkM4pY2FQX3maEuyWeZdfjca9JXiZAliPG14AYkcCxkTI9d7Jsn9QccjND7bGvda7aNMhJEC5G4oBiTstX0WiRjOhsNgtq",
                'discount_upper_limit' => 2302,
                'display_starts_at' => "2023-09-19T20:25:12.000000+09:00",
                'display_ends_at' => "2021-09-14T09:53:20.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "Iy",
                'usage_limit' => 3193,
                'min_amount' => 6811,
                'storage_id' => "55b78182-d905-43a0-b8af-e440534f81ac"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon36()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_percentage' => 1234.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["54f445d0-9333-4530-b14a-571ee2c5b700", "d23a8cbb-6bb1-4cc6-bb3c-26c31ff3e1d8"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon37()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_percentage' => 1395.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["2b5d912a-019d-4830-80c2-724989942ceb", "cec4ded8-17cd-4e1e-9061-209fcdf456e9"],
                'storage_id' => "c7491243-336f-493c-a389-87e87b40585f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon38()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_percentage' => 1146.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["cb0e20ce-6ccb-42b5-94fa-2970eb203122", "075dcf27-2771-4290-8ee2-2415b883bd59", "74da500f-3750-48cb-97dc-693478e77367", "a63d2456-e85c-4005-a29c-d919cfbff0d7"],
                'min_amount' => 6638,
                'storage_id' => "406acb81-3779-45de-90db-9eca5442b6b2"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon39()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_percentage' => 6685.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["9e8ed613-2a90-4846-a487-c3ed18a6eeff", "e76a4d51-13d0-472c-b8c0-8642e52b1ffc", "fafd740b-eb46-4f64-9f17-99ea588529b7"],
                'usage_limit' => 4767,
                'min_amount' => 2360,
                'storage_id' => "6b670732-6aec-4c43-9217-497f3c7179fa"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon40()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_percentage' => 8713.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["2bde38cc-9c12-449f-990e-e9d2aed6949e", "c63567a0-6655-4034-8180-67e9e09392d9", "e29cd463-7b81-4478-bf02-c889cb4104bb", "fa0a9eda-c7cb-41f8-abf9-d892a98c70f8", "330d46fd-e0dd-4f9f-b922-5deb8ebbe259"],
                'code' => "c",
                'usage_limit' => 8390,
                'min_amount' => 3448,
                'storage_id' => "70570194-df8c-40a7-bd9d-63e486f8d3c2"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon41()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_percentage' => 8731.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["14eea6bb-373e-4d89-a3c1-2a10abe4e6b6", "061ce449-2f02-4850-91db-4aeefb0477b7", "6d1aaecb-f73a-47fe-96be-609cd73a64d9"],
                'is_public' => TRUE,
                'code' => "AL7B1szB0N",
                'usage_limit' => 9676,
                'min_amount' => 686,
                'storage_id' => "3e1d324e-44e0-48a6-8ca7-f03754bcd055"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon42()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_percentage' => 9776.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["f2766abd-eb9c-4256-9144-ee0c21196671", "a254154f-61e7-4707-a8fd-b18a5558b29b", "effc8450-c055-49d7-90dd-82c8e566536e"],
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "jkFg",
                'usage_limit' => 4749,
                'min_amount' => 1766,
                'storage_id' => "8bac1295-ff8d-419e-a455-5b39f0b990e7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon43()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_percentage' => 4316.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["7f2c4646-1472-48c8-9c5d-858644491fa4", "704506f4-d57d-4d84-a101-da3836dea533", "9474fefa-eac2-4d93-9a17-816c8a2cef17", "ad2b9de4-62b6-4fc5-ba03-85881a7be7c4", "ae18bff1-507a-495b-99b6-e9e2728a0d61", "d15e41d5-cabc-42e2-a309-e2ae9162c2a0"],
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "5TYyZAt",
                'usage_limit' => 1567,
                'min_amount' => 1892,
                'storage_id' => "4a402da6-836b-46b4-bda0-4d34e83b3ccb"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon44()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_percentage' => 955.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["7deb8891-becb-4fde-b713-252671daeaa5", "0869180d-d4cf-4c4a-8988-2621dc2527a6", "8291d9e6-219a-4ca8-bc17-cb7cdb28cb38", "9d03c268-7302-44ec-a180-2c87e27400f6", "24db29d5-d493-4329-b187-f95686e8089f", "5246f594-e89e-41df-bcc0-9c999d4d5332", "6ba9b1a2-6319-4b9d-b475-6f0ae40b166e", "a54f2c02-8438-4d66-9619-b0a0e6f7e739", "8ea382cc-d9c7-42b7-bb49-d3bfabfbc4d8", "d60c9f9c-598b-47e4-8e5c-c80b64560e66"],
                'display_ends_at' => "2020-05-15T21:31:08.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "KHdi",
                'usage_limit' => 7480,
                'min_amount' => 6792,
                'storage_id' => "c4b5c677-b5ac-4218-b968-039a7bf4ffeb"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon45()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_percentage' => 7343.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["e24d1a86-f757-4842-98b1-31d9791a368b", "c0f9b008-1a2a-4fa5-815b-944298406625", "c1a6c29f-fa1f-4b7f-b04c-d2c9a9a2f4bb"],
                'display_starts_at' => "2021-06-27T19:18:18.000000+09:00",
                'display_ends_at' => "2022-02-03T01:28:29.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "PAAOUrW",
                'usage_limit' => 5186,
                'min_amount' => 4019,
                'storage_id' => "2a490a48-9aff-452e-b5d6-fa1870a1879b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon46()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_percentage' => 6488.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["fac32fb3-841d-41fb-89eb-cab3c9dd5558", "c73b28d9-aa61-4c2d-bc1e-1e0004ce87ab", "bf3a6da3-beff-4d04-b56d-7f62c03826ea", "ec4b73db-8f9c-41cf-a43f-0d1727c28325", "c00a814b-5d8d-430c-b0dd-137204f85a69", "0c86ca53-6c26-46c8-9a16-766f55a393c6", "42dc53c9-f9de-4851-8350-3c8dcaf69d60"],
                'discount_upper_limit' => 8722,
                'display_starts_at' => "2023-04-10T04:01:18.000000+09:00",
                'display_ends_at' => "2021-01-18T22:19:51.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "iu61",
                'usage_limit' => 8902,
                'min_amount' => 6043,
                'storage_id' => "8cce71a2-eb93-4b5a-8025-f1379156d28a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon47()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5c6785f3-dced-49ba-82fc-40924f65b7f9",
            "pt5sh4oz7j2zvwSPcSo0iYefIKjo0wRMoVrIBYTVKLlkjt5dVQSfgKXB4v7TZyzO1xxxuZkmHJXBUjMMoA38T1u6",
            "2021-02-23T08:41:03.000000+09:00",
            "2021-12-26T18:49:44.000000+09:00",
            "3acb08b0-95bc-41d8-a889-3b662a5c9a60",
            [
                'discount_percentage' => 7031.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["5e5ea5cb-d675-4237-91b1-77a2fe026272", "8f9eb98a-822f-498b-872d-c7e49f2648c9", "f1fa9b40-7a74-4416-98b6-b69b57ac7efa", "0eab523c-4fe1-4b8a-a75c-a2c292592e74", "c2370ccc-8c77-4307-b570-a6def68e58bc", "50413e14-a5f8-4de5-9ee3-3fb7ee617600", "1122e426-652d-4988-8e7f-d9dac08c9cb8", "c0efd44d-2186-46b6-b856-18f5d3032bbd", "3f363b7e-610f-4a86-b07a-60d2a8cbd9cc", "39885ab6-756d-48b3-af54-cfbec2c6d748"],
                'description' => "wGwox4oIfOwcS2MBjikud277ceaXmS13luXr4C13lSRQ7cPQSNxWc9fx1XXlBW6k9ePgUJFUyrDZOTP2dr1VXZUFZiKwTCHNY3Xh6M8fpZbZOoHcWc2sQ1aV0ZjjZXYCsykwHwQvsyDowYZW1lvZ34J9zhOKLaUzboPSyT2v6UfTm",
                'discount_upper_limit' => 3830,
                'display_starts_at' => "2022-03-08T03:52:56.000000+09:00",
                'display_ends_at' => "2021-09-13T15:03:38.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "PG",
                'usage_limit' => 9921,
                'min_amount' => 8117,
                'storage_id' => "1bccb177-8803-434c-9eef-810fa5eaef47"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
