<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateCoupon extends TestCase
{
    public function testCreateCoupon0()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_amount' => 2032
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon1()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_amount' => 8956,
                'num_recipients_cap' => 2788
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon2()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_amount' => 5522,
                'storage_id' => "b236c257-2512-4c42-a478-dea4e0fea0b1",
                'num_recipients_cap' => 8846
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon3()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_amount' => 4866,
                'min_amount' => 4271,
                'storage_id' => "cfa8d933-ed31-4294-bf9e-4663c97d6a7d",
                'num_recipients_cap' => 5458
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon4()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_amount' => 3232,
                'usage_limit' => 3610,
                'min_amount' => 924,
                'storage_id' => "331dbf66-f362-47ab-957c-1ad05aabb843",
                'num_recipients_cap' => 1690
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon5()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_amount' => 3904,
                'code' => "Tb",
                'usage_limit' => 9873,
                'min_amount' => 9285,
                'storage_id' => "01562754-09df-4367-9f9d-a4dd8afed34d",
                'num_recipients_cap' => 2718
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon6()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_amount' => 3971,
                'is_public' => FALSE,
                'code' => "8KooC",
                'usage_limit' => 4955,
                'min_amount' => 4101,
                'storage_id' => "a44845f4-9625-4353-9e38-edfba229403e",
                'num_recipients_cap' => 2171
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon7()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_amount' => 546,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "1fc4b",
                'usage_limit' => 7953,
                'min_amount' => 7971,
                'storage_id' => "63a0bc70-3264-406a-bb4b-5018e5594943",
                'num_recipients_cap' => 6101
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon8()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_amount' => 6143,
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "j1GK9RS",
                'usage_limit' => 2838,
                'min_amount' => 2288,
                'storage_id' => "c267e281-d983-4738-b08a-b9ca053a30c9",
                'num_recipients_cap' => 72
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon9()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_amount' => 8794,
                'display_ends_at' => "2023-08-09T14:51:14.000000Z",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "z",
                'usage_limit' => 21,
                'min_amount' => 8099,
                'storage_id' => "e567f5d1-0e4a-4a1a-9a3f-50f51d369d09",
                'num_recipients_cap' => 7114
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon10()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_amount' => 984,
                'display_starts_at' => "2023-06-21T12:57:18.000000Z",
                'display_ends_at' => "2021-12-03T07:17:43.000000Z",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "ZEo",
                'usage_limit' => 6348,
                'min_amount' => 7569,
                'storage_id' => "f8c7baf6-fff9-4fdb-b2d9-6552734d9b53",
                'num_recipients_cap' => 5340
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon11()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_amount' => 9680,
                'discount_upper_limit' => 3660,
                'display_starts_at' => "2023-03-29T23:22:07.000000Z",
                'display_ends_at' => "2025-09-30T11:11:17.000000Z",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "W",
                'usage_limit' => 4733,
                'min_amount' => 595,
                'storage_id' => "a61f4b2b-5f87-4b97-b1d6-58e0709324a8",
                'num_recipients_cap' => 9831
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon12()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_amount' => 2457,
                'description' => "e4rF1Hr4pu5zkebHCqAbvDa",
                'discount_upper_limit' => 106,
                'display_starts_at' => "2023-09-26T00:34:52.000000Z",
                'display_ends_at' => "2023-11-27T20:55:20.000000Z",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "qf",
                'usage_limit' => 8338,
                'min_amount' => 2699,
                'storage_id' => "d020b219-7222-45d5-8b39-389e9bebb1d6",
                'num_recipients_cap' => 6340
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon13()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_amount' => 8505,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["700fdfb6-0663-4249-a2ad-091288a73e5c", "b27b3020-0abb-4e49-a545-0372262ae3c9", "945d42fd-083c-45f4-89bd-714e5004dbc0", "bf30bc57-10e9-4621-9f6c-42bd7587573e"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon14()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_amount' => 3125,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["22465104-4fc6-41e4-9e3e-26b5cb4612e6", "d6a6eb14-f277-43c1-9f11-bb83f540c13d", "b03b5e3f-dff8-4b45-8822-d86dbdc5bd7b", "adf9cffb-1d8c-4bc1-98c3-747565bb55a3", "e4126ee1-7444-4f2d-abb4-424f15d180e5"],
                'num_recipients_cap' => 4816
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon15()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_amount' => 1831,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["d543d686-1436-4ae6-9886-69ec5f001c51", "3e52cf6d-064a-418e-980b-ce392280387a", "7314a2b2-9685-4199-ba92-e215b012ad62", "bba9d18b-c0ae-4dab-ae05-b9562b10645d"],
                'storage_id' => "f5cb1e33-6246-4045-893f-9ad6d0a1b47c",
                'num_recipients_cap' => 8417
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon16()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_amount' => 335,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["af8ce44d-7c4d-417c-a0cf-4e60c886cc2b"],
                'min_amount' => 9644,
                'storage_id' => "88a76fe3-7ce7-4ddb-a082-f65307348567",
                'num_recipients_cap' => 2108
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon17()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_amount' => 3184,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["d36558b2-22cb-4a09-bf75-ab5832377df9", "f75cdbd2-d367-4c98-9b92-04c7e9c498ba", "0a7865e6-abd5-40e6-904e-10c5146ce84e", "334fc160-c693-4b81-bcf2-4b099cb3257d"],
                'usage_limit' => 68,
                'min_amount' => 2421,
                'storage_id' => "95f4ebbc-18b8-4cd4-b1ca-9793675aec2b",
                'num_recipients_cap' => 2995
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon18()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_amount' => 4074,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["a0ae79fa-dcea-456d-aefd-458ebb5c4c8f", "3050b29a-44c3-4f2e-9221-d5c27ccfff36", "cf775342-f68e-4f0b-92ad-9ce2a6f81087", "ccd6ace4-1357-4553-9ebc-26b61e0d59a0", "7e88cd3c-de5f-4a4a-83a1-dc1d9f7b9715", "75a26806-89c9-4df5-8ead-b62cb0901895", "e718c1e4-0efc-4b35-8a4f-1a8d06a208c6", "6a417cce-e9f2-49da-8e15-06586b44b7c5"],
                'code' => "72Q",
                'usage_limit' => 5217,
                'min_amount' => 3468,
                'storage_id' => "3e467dce-2072-40da-b07a-54976ae27ea7",
                'num_recipients_cap' => 4570
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon19()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_amount' => 6063,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["093fbd23-3006-4986-a394-ce16b0356fd4", "06bfaa01-cb44-4a78-8d15-168052fd1577", "e3fca495-8a69-41e4-aeef-cb4bb693140b", "6d6bd178-db28-4f3e-a867-8ec86d6b1934", "3644ebde-52c9-4d6c-815e-41607b3dfca9", "55c16bb4-df34-4c84-b0a6-b184a4fc0203", "318eb936-7638-47c0-a9e5-f17607984b2b"],
                'is_public' => FALSE,
                'code' => "tMBS78",
                'usage_limit' => 7321,
                'min_amount' => 4073,
                'storage_id' => "399d52a1-156c-41dd-a0dc-087b5b8ad7ac",
                'num_recipients_cap' => 5678
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon20()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_amount' => 9640,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["48b135c5-7c9f-4b71-937a-514c3498d82f", "4ed2a779-603d-4302-9cb9-a1f876d94fca", "35688bf8-2eca-463b-b134-8e68f41cc17f", "93bff35b-1a48-47ba-80e2-964f669d6841", "874a7bd8-8358-459e-8216-082aa30ccbd9", "f20de460-52d6-44bb-a798-e0d6b37db7ea"],
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "zFhmxuYV64",
                'usage_limit' => 1649,
                'min_amount' => 6679,
                'storage_id' => "fae60ae5-d800-4684-b590-a32fa88eef9d",
                'num_recipients_cap' => 5636
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon21()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_amount' => 6163,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["0af82f42-b8b2-48cf-a020-5a6c5855ae12", "a1f0584c-06ad-4625-9881-f4fc8d03cb64", "fe0eb2ff-8c07-4114-87eb-653de14227a1"],
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "kJbuw4",
                'usage_limit' => 9884,
                'min_amount' => 281,
                'storage_id' => "44865add-d23f-4a4a-a22e-2caf00c567a7",
                'num_recipients_cap' => 3322
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon22()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_amount' => 2276,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["98b9d43a-d68a-40f7-9a2e-08db5b99c3c0", "9f367774-5f2f-4dfe-b77c-05e51f208182", "31caace1-adeb-4c44-b967-56ab0f58a014", "bd52c624-0805-450c-9d30-211b720c8002", "d239da54-8846-4a21-bfa9-d5be33d32cf3"],
                'display_ends_at' => "2023-07-10T01:38:52.000000Z",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "ujDlC",
                'usage_limit' => 9357,
                'min_amount' => 3945,
                'storage_id' => "451039d4-61c1-458c-9bc2-0920974ecd81",
                'num_recipients_cap' => 4205
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon23()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_amount' => 8795,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["d145e966-14c9-4a90-9b5e-bc9a4225cde8", "d9899370-59ff-4668-87c6-467404e728fe", "63d7148c-b9a0-4891-b9fb-7dcd1973c0ae"],
                'display_starts_at' => "2021-12-02T07:25:19.000000Z",
                'display_ends_at' => "2025-07-25T10:18:35.000000Z",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "KK4Bljx7s",
                'usage_limit' => 8756,
                'min_amount' => 690,
                'storage_id' => "d3c973b4-37e0-4040-a644-a046e24e9204",
                'num_recipients_cap' => 2860
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon24()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_amount' => 4919,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["6b0f9f6b-f0e5-4ed0-bb14-a318cbcc3398", "8b8e2311-4ba2-4f07-b0f2-adc17c36891b", "6b1eae4a-7075-4687-b185-c95fcd74960c", "1be02d86-b8d8-464a-8ecc-5bc3ff627824", "71bb5239-f71d-4dc4-ac0e-9e279d105d1e"],
                'discount_upper_limit' => 1095,
                'display_starts_at' => "2022-11-05T08:42:48.000000Z",
                'display_ends_at' => "2021-09-27T23:52:02.000000Z",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "Yc",
                'usage_limit' => 1115,
                'min_amount' => 437,
                'storage_id' => "898a7733-e75b-425c-ab02-a901188a9c05",
                'num_recipients_cap' => 7029
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon25()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_amount' => 2617,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["ac4aa4c4-fe37-447e-a5e2-721313967406"],
                'description' => "pNKlOmIqFEpEzlkb",
                'discount_upper_limit' => 6104,
                'display_starts_at' => "2020-06-11T04:43:48.000000Z",
                'display_ends_at' => "2025-04-03T22:02:06.000000Z",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "eK96R7zZj",
                'usage_limit' => 4847,
                'min_amount' => 7512,
                'storage_id' => "85dffd6f-3119-4b2e-ae8a-1bff0b2e5d25",
                'num_recipients_cap' => 3442
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon26()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_percentage' => 7169.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon27()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_percentage' => 4290.0,
                'num_recipients_cap' => 514
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon28()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_percentage' => 2735.0,
                'storage_id' => "1cc243e6-bd70-4f88-b33b-0902d85782a4",
                'num_recipients_cap' => 9527
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon29()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_percentage' => 4760.0,
                'min_amount' => 257,
                'storage_id' => "0bdaa121-a2aa-4748-983c-2d77fd1d584f",
                'num_recipients_cap' => 1966
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon30()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_percentage' => 5715.0,
                'usage_limit' => 5826,
                'min_amount' => 5911,
                'storage_id' => "46c66717-dc28-4f61-83d3-41153cedbe60",
                'num_recipients_cap' => 2216
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon31()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_percentage' => 9487.0,
                'code' => "M4bPYPan8",
                'usage_limit' => 8277,
                'min_amount' => 2603,
                'storage_id' => "dff1a5a2-fe52-4898-bcc1-b9c96b3161bf",
                'num_recipients_cap' => 3476
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon32()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_percentage' => 7891.0,
                'is_public' => FALSE,
                'code' => "S032nb",
                'usage_limit' => 1791,
                'min_amount' => 1909,
                'storage_id' => "66670e77-cc91-4caf-98f2-1cd418dcf917",
                'num_recipients_cap' => 168
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon33()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_percentage' => 2861.0,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "hKP8S",
                'usage_limit' => 7727,
                'min_amount' => 5671,
                'storage_id' => "7f43669b-9646-4442-a5dd-c23ab397d6b1",
                'num_recipients_cap' => 8678
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon34()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_percentage' => 8560.0,
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "senfTVl",
                'usage_limit' => 9224,
                'min_amount' => 8218,
                'storage_id' => "dab29ef5-cc40-4d4d-a74a-00fca90a6c3c",
                'num_recipients_cap' => 6838
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon35()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_percentage' => 4831.0,
                'display_ends_at' => "2025-04-16T02:03:35.000000Z",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "1cKhV",
                'usage_limit' => 8499,
                'min_amount' => 179,
                'storage_id' => "096b379c-f040-4366-8794-f111d960915c",
                'num_recipients_cap' => 2476
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon36()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_percentage' => 8597.0,
                'display_starts_at' => "2023-08-20T06:44:28.000000Z",
                'display_ends_at' => "2022-11-14T12:32:13.000000Z",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "PLjDOHvT",
                'usage_limit' => 9576,
                'min_amount' => 8733,
                'storage_id' => "0ab05bbd-d83f-42b6-bb3d-a75140c6a00d",
                'num_recipients_cap' => 6672
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon37()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_percentage' => 7493.0,
                'discount_upper_limit' => 8631,
                'display_starts_at' => "2025-06-19T21:16:03.000000Z",
                'display_ends_at' => "2024-11-17T19:02:25.000000Z",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "n",
                'usage_limit' => 8219,
                'min_amount' => 2791,
                'storage_id' => "248c59dc-0171-4326-8a09-55e0c2115b0a",
                'num_recipients_cap' => 38
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon38()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_percentage' => 1544.0,
                'description' => "KtBEhfGR87GnzBbDtq5K3lfoJShMC6uD2oZ5QpD7GXwDffXUtXBf9of2MaByNhkorzLzXS7sax7iYOPlAj5UlMDxo6iDarlMDzJC7wMAkFYNemkzZpvDvog0lglLv2T90aOF7qLZJG6mWFW8mYG8iBpA9wK7FerKmMDJDN9kjnEAtWkM10yTZC3mt5NbCfjtxFXhJHyZxe38yvM1SEczLfO3bcMSuKdq3FslGbkHo1PhxbbT2umORVj1yDfkPq",
                'discount_upper_limit' => 2933,
                'display_starts_at' => "2025-07-30T06:28:34.000000Z",
                'display_ends_at' => "2020-07-04T02:29:30.000000Z",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "VGz",
                'usage_limit' => 519,
                'min_amount' => 9241,
                'storage_id' => "8e9bf5be-cbe8-4c84-9d43-0af8c88b1e7a",
                'num_recipients_cap' => 2401
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon39()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_percentage' => 807.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["5c41ada0-92c5-4250-a64a-f03e560c287f", "c545fd2a-ee73-405c-811d-79f2f6514e27", "d3d658c3-c13f-4b88-96b0-c89aa523c371", "f44896c5-f076-418a-828a-6f4ae04ca1ff", "30a4a404-bd28-4350-b0fc-920d0607d356", "5183c33b-e600-4cc0-af84-df5e892bc916", "b59a29a3-c33d-4c04-b11c-2097bab9ebb7", "8758db37-0896-4850-bcf5-ecd99f230aef"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon40()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_percentage' => 2270.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["70af08e4-3d9a-4f29-84c5-15885c85fefd", "89a07d38-6263-45ff-9429-ba66edd02b93", "703396a9-383e-4309-b3e9-9296172666aa", "f8553d35-ab8b-4b7f-9ef1-1dc6122bb22a"],
                'num_recipients_cap' => 200
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon41()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_percentage' => 962.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["7639b65d-8dd9-4998-b0cc-7fbee89ea638", "e6eca6cf-c2c4-4342-b62b-bff7f987238a", "b155047d-3ce7-4161-8d8e-81c1a25cc416", "0a66c6e3-afb0-4ebd-8ad0-cdd64d15e082", "ee7cc7ba-1ea2-402e-b690-db18d324585f", "a28aaee8-836c-4e07-8097-73313ed75cfd", "a756d814-3d74-43eb-8307-20f25a0be9d9", "39bbe201-2351-4e48-90d1-7f684b857809", "701e2d7f-ad81-4568-9273-910389280d40"],
                'storage_id' => "8633b2b2-d5d0-43c9-8e61-bcfbb2feaea7",
                'num_recipients_cap' => 2071
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon42()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_percentage' => 8107.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["d1114562-3986-4ecd-a8d1-7f312ea88cdf", "6510ebd7-2207-41f9-b87e-20f858556a0a", "66025736-30ac-4769-9058-0cb84c0b3524", "4ec92695-6991-4477-8e56-e11fbb951670", "18404543-ae20-4b4e-9579-a369f318d645", "5cad4505-f7a6-44fa-9d41-fe7016a13ccb", "3d4a15df-9b4d-4a7c-9cbb-3ab6d1d8f836"],
                'min_amount' => 6618,
                'storage_id' => "592a51bd-1dde-4840-a1eb-4ec5389c7c8f",
                'num_recipients_cap' => 2951
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon43()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_percentage' => 2060.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["1c11186f-9991-45a0-81b1-f9ef1d8febd4", "1af7edf0-967a-41e0-a32e-fe5a0dc44379", "328104a7-ebad-49a0-801c-5ec454b47c5c", "46a8182c-afaf-430d-ad11-54cf3db52627", "7b9b65dd-4049-41d7-9e7c-0a5e7b880180"],
                'usage_limit' => 4694,
                'min_amount' => 1015,
                'storage_id' => "9c97d926-b02a-4def-86d1-cc60f30e6263",
                'num_recipients_cap' => 9818
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon44()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_percentage' => 9826.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["23c2364b-2d02-476c-85e9-f386b6ff8d0e", "ceeea476-7b79-499a-b203-89c3693f2d85", "86fbfef2-ffcd-4d0c-b7bf-164097f1d6d3", "00a51bce-d6a4-4317-b384-f64f01cfe44c", "71daac6d-b34b-4a8d-a4f1-65d80ef55943"],
                'code' => "CeTbwp",
                'usage_limit' => 410,
                'min_amount' => 4153,
                'storage_id' => "4ee4956a-d17a-4109-a5e0-804192ac7a6d",
                'num_recipients_cap' => 7788
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon45()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_percentage' => 4325.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["36725779-b03c-4460-96a3-f4e250c3b2a0", "e79cf556-c5f1-4fa2-b031-0a1cb1224fd9"],
                'is_public' => TRUE,
                'code' => "rkqIAw",
                'usage_limit' => 4195,
                'min_amount' => 4918,
                'storage_id' => "01a2b35e-1ab3-4af8-b257-fa70c50dd389",
                'num_recipients_cap' => 9324
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon46()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_percentage' => 9132.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["2b3c38f2-c9af-403f-860d-25137394ee64", "b20c0f6a-ca07-4b84-9e03-e18b0b3410d8"],
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "CETl764",
                'usage_limit' => 9265,
                'min_amount' => 4578,
                'storage_id' => "42c40045-897b-4c55-bc0a-ca75d5f5b6db",
                'num_recipients_cap' => 9104
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon47()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_percentage' => 3630.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["901969f3-5721-4ca5-bcda-402a8dd15ed8", "865eeda4-1345-465b-90e9-88078cece700", "1617bbe7-17f3-4c58-a2c8-fe16e3f8a047", "c80a5186-3571-4532-afe6-ed52488a58be", "94c6211d-ca3f-442b-94ef-3ec01edbc205", "03096659-bf35-4842-98e7-2395dc20d12e", "c2284f81-0643-488f-bc93-c47b627f5d3a", "ada3aeea-b31a-4ec9-b990-4e5a9d1df61f"],
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "zXmOEM",
                'usage_limit' => 5652,
                'min_amount' => 1188,
                'storage_id' => "4ed5daa8-2453-4758-b8fa-6e5af83cf31d",
                'num_recipients_cap' => 8048
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon48()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_percentage' => 3691.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["13006259-8a8b-498c-aba7-b252476446e9", "7a9e66a1-25c1-4c1e-b2e9-378c636dbeeb", "b4fc4696-96d7-468f-aabc-4009d0495107", "800ebd20-18da-4ed3-b615-2d8a06e8f857", "cff76807-9eba-463a-8134-bd5dff00d727", "6b0fd8b9-6385-48bc-826f-12a8a2b9a03d", "a0a38211-0c20-422c-84b8-95c8b4a86ead", "6437c99d-b1d1-41d5-8521-ee035e1d7aa8"],
                'display_ends_at' => "2020-04-07T10:50:31.000000Z",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "tZ",
                'usage_limit' => 272,
                'min_amount' => 7084,
                'storage_id' => "6cc37105-951b-4c2a-b382-980666433ca5",
                'num_recipients_cap' => 511
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon49()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_percentage' => 9948.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["a2199b82-67df-4453-844f-1a3d989549c1", "281ee57f-c4db-4bd3-880b-c1ad7dd51636", "792c8ced-579a-4dde-af7b-6d364854e7be", "075640d7-b32c-438f-8082-4cbe762e1f92", "40231034-bb08-4d08-ac79-569de0a172e3", "ec373f23-6945-4ecb-be81-5c65f2886a2f", "647d8fc8-9472-41ae-bb26-9c349adc3036", "94e7eb33-8305-4217-b629-7491aaad489b"],
                'display_starts_at' => "2020-05-06T19:03:08.000000Z",
                'display_ends_at' => "2022-07-20T09:23:34.000000Z",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "r2iPp",
                'usage_limit' => 8059,
                'min_amount' => 6671,
                'storage_id' => "ae1b4f98-39ad-44a4-a630-aaea100d3ab1",
                'num_recipients_cap' => 4938
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon50()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_percentage' => 9139.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["de7b8d9d-1114-4fca-9410-67b3f9b739b0", "2129d7f1-7dc2-4104-aa9e-312f4e731a0d", "5e917058-82fe-4112-9632-3066dbc36139", "e0c4505b-253b-47b9-a46d-e37edce639d0", "9cb349cf-e5a6-446f-a06c-8d71acdb7731", "8f3eefba-d565-4a5e-a9aa-abd7d7f77139", "61a4d840-b318-4fd2-ad3a-c2754da3cc7e"],
                'discount_upper_limit' => 9166,
                'display_starts_at' => "2021-04-06T17:06:34.000000Z",
                'display_ends_at' => "2020-08-25T09:35:26.000000Z",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "bYmr",
                'usage_limit' => 3770,
                'min_amount' => 200,
                'storage_id' => "a17b3bf7-e9e9-4cba-80a5-eb57374200b6",
                'num_recipients_cap' => 1297
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon51()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "6a104b65-865f-4d15-af1c-6dae4866915a",
            "YdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rp",
            "2023-11-20T09:38:56.000000Z",
            "2021-06-18T16:27:20.000000Z",
            "c3552f3c-52e5-4523-bdc9-2e24df946631",
            [
                'discount_percentage' => 4635.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["2c5c2e1b-8b4b-454c-a8f5-10b9a1df1fea", "07c65ad3-47f9-433e-806b-0a401a1e18ab", "ec349191-65f9-4944-98bf-74cd89fed815", "aa9c5415-9f26-4402-b86a-1bdb9b1bb7d1", "604dc668-64ad-4b2e-9c80-cf864cedfad8", "895ac725-013a-41f6-b173-828350ac1dba", "2d75b027-e44e-4c98-ab55-26f74aaa5af0"],
                'description' => "nxOJb",
                'discount_upper_limit' => 1150,
                'display_starts_at' => "2022-11-06T13:22:02.000000Z",
                'display_ends_at' => "2021-02-16T08:52:36.000000Z",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "5NaDqvIkEg",
                'usage_limit' => 6914,
                'min_amount' => 3797,
                'storage_id' => "298f0d91-6abf-4131-a947-894aa1e2916f",
                'num_recipients_cap' => 421
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
