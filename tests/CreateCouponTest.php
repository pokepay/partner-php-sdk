<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateCoupon extends TestCase
{
    public function testCreateCoupon0()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_amount' => 3705
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon1()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_amount' => 1472,
                'storage_id' => "bafe2e44-ee76-40e1-a51c-fdff75cd2d23"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon2()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_amount' => 1938,
                'min_amount' => 6428,
                'storage_id' => "5f25447b-47e7-46a4-bf18-1bbf0b4a633b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon3()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_amount' => 8625,
                'usage_limit' => 9146,
                'min_amount' => 8147,
                'storage_id' => "44bf4a60-8fd1-4c6f-956d-606099d72b24"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon4()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_amount' => 4936,
                'code' => "GyYgv4s",
                'usage_limit' => 9231,
                'min_amount' => 5621,
                'storage_id' => "4fd625a9-a86e-49ad-8140-faa6d1f2df81"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon5()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_amount' => 850,
                'is_public' => TRUE,
                'code' => "noZLq81R5",
                'usage_limit' => 9008,
                'min_amount' => 7087,
                'storage_id' => "0fb46c5a-7bcd-484b-9138-44163df366e1"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon6()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_amount' => 5297,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "G",
                'usage_limit' => 2692,
                'min_amount' => 3399,
                'storage_id' => "1747c46d-7bc4-4e49-bac4-6e5b50572a14"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon7()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_amount' => 996,
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "6X",
                'usage_limit' => 1366,
                'min_amount' => 5631,
                'storage_id' => "484322d3-0915-4ae5-b689-0b363c907341"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon8()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_amount' => 3134,
                'display_ends_at' => "2020-06-04T16:13:37.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "X5T",
                'usage_limit' => 6288,
                'min_amount' => 8052,
                'storage_id' => "14c0785f-bf72-4b24-aa59-fa65754f14d6"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon9()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_amount' => 9404,
                'display_starts_at' => "2023-05-06T07:06:09.000000+09:00",
                'display_ends_at' => "2021-09-27T10:03:20.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "SSfAP",
                'usage_limit' => 5624,
                'min_amount' => 5890,
                'storage_id' => "80edd3c5-8aed-4006-95cb-c5d1e39a7283"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon10()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_amount' => 9800,
                'discount_upper_limit' => 1781,
                'display_starts_at' => "2021-11-20T15:42:01.000000+09:00",
                'display_ends_at' => "2023-10-30T23:16:56.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "y55vh8rh0",
                'usage_limit' => 3674,
                'min_amount' => 4319,
                'storage_id' => "f50a8c27-48c2-4ad3-8542-d2dea804a8a2"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon11()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_amount' => 1181,
                'description' => "tEosvmDCn6Hpq1H9pvlTNwHdbhSNU3ePNngPVtZr8jmlPbfgT2OHoYf8MqFRQLnv8N5LEAW",
                'discount_upper_limit' => 4967,
                'display_starts_at' => "2022-12-18T07:19:04.000000+09:00",
                'display_ends_at' => "2023-09-15T15:15:13.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "974We2ohMM",
                'usage_limit' => 5086,
                'min_amount' => 9534,
                'storage_id' => "484e302e-1c1c-4ba6-b390-15fb4a65037d"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon12()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_amount' => 800,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["7faac361-abf8-4dc7-bb17-e15fd2b90c80", "65d9e4b2-90e2-4007-82ef-3900c24db43c", "2f97ab8f-605c-4f5e-a7f8-8712a0447e92", "4e300e41-38e0-4ef9-9457-956e6c1dcefa", "19df4558-0382-422a-97a7-1a63bae23730", "f083da3b-a5e7-49ac-ab3f-aeab916f42d9", "07591e3e-cc88-4339-8bcd-e394d984abd1", "9c8d3cb9-368b-453f-8463-451cd6e4d5d9", "b8ba0483-f276-4dfc-81fb-01da5e1b9e88", "5a7a0604-737e-45d6-9049-cb1fc800ba19"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon13()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_amount' => 3011,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["b8cfdf4c-9202-48e2-9019-937b2d0790ed", "4f395fab-fc34-4838-bc57-b9adb60783f5", "eae5ad89-4440-40a2-8758-e51206f3a4d4", "3169bb49-4f0c-4339-8039-4b82b0270126"],
                'storage_id' => "3557fe8f-48c4-435a-908e-59be80392fce"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon14()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_amount' => 2672,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["f94d1f47-312a-4eb5-9708-cae8c396f9de"],
                'min_amount' => 1485,
                'storage_id' => "d8249002-7d58-402a-a0e8-aa5beaf34b41"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon15()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_amount' => 81,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["c94ac9db-8951-4c77-8cfa-6bc5bedc5934", "39a0bc30-1e8a-49ed-8776-f69059c4f557", "98126be2-102a-4cb3-bfc0-fd782decdce1", "416c554e-92f0-4dcd-a1e9-3b554010b25a", "0e7ae99a-9160-48ae-a17d-b5c79aa4ae9a"],
                'usage_limit' => 8440,
                'min_amount' => 4224,
                'storage_id' => "40bb6ad6-e2a3-4c8c-8bc3-46f88caceeec"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon16()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_amount' => 9531,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["42d2f2e5-d043-4a81-90e7-4e0ce6c0ef81", "592d1391-5a14-47fe-a92e-13b9301854f5", "69ac8eea-dbbc-418d-86eb-12d795f9a681", "12456a63-949a-4537-9db5-786df75d8001", "6fc40e8f-6c6f-47b6-8688-5e009f9c189b", "830b1744-27a3-4357-be38-f2569565db86", "397611c9-eade-4d1b-ac0f-6cbb5aa93565", "60f309dc-c71b-4a7b-9d8d-5508aaf3100d", "67fc436b-f281-41b2-9294-a73f424c5390"],
                'code' => "S5dAuuQb7",
                'usage_limit' => 6553,
                'min_amount' => 2329,
                'storage_id' => "cd52b7f7-58a3-4d19-9280-0fbe9b3eae14"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon17()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_amount' => 654,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["c49da7b1-48fd-4c04-97cc-a91f476dfca8", "264599e3-8972-4bdd-8b11-18f815644375", "51a95b0a-2f87-43c0-841b-dc72fc2108cb", "2fd5510f-4fd2-4b53-b413-b0d8626e657e", "e92818b8-5ba0-42df-af21-71abd83b58d2", "41c5abe8-a8c6-44c2-9bb2-9383031a9b86", "b1994c64-2efa-4f94-8f85-185e93003fc7", "48db59aa-9ac1-40ad-9c94-7e5746cb66a2", "a34f7915-d021-4548-98fa-d070b2522e21", "2dd1839c-d894-4c4a-98a8-30771d6c2ed2"],
                'is_public' => FALSE,
                'code' => "EvlzR2IE",
                'usage_limit' => 4685,
                'min_amount' => 1980,
                'storage_id' => "a2c9c03e-2e8a-44d0-b9c8-c395561a67c2"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon18()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_amount' => 2859,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["e2c3bb8c-c517-4b1f-a40b-76b6de46a578", "3f85dfc2-4018-4af4-a428-72226007f2cd", "eb1fca4c-21c4-45cf-bc5f-140e5abf156e"],
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "Ut4",
                'usage_limit' => 8474,
                'min_amount' => 3343,
                'storage_id' => "ea4b4076-c0be-4df6-9cb2-c054b3e36d9b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon19()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_amount' => 8220,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["5ca41c6b-f5cd-4b76-a62e-0656400bcf8b", "8b936e15-b262-435c-82d3-f4c7338f1268", "877fbcbf-5655-4416-89c0-dc36977fa4e5"],
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "4W",
                'usage_limit' => 4874,
                'min_amount' => 3841,
                'storage_id' => "1687360b-03d1-41f1-b5e9-72c31a58f66d"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon20()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_amount' => 4213,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["d2ad71a5-0012-4eb7-860d-90ac6b2acf1a", "8927d310-13ad-4087-9db6-b846eb8ddcec"],
                'display_ends_at' => "2022-08-13T02:36:43.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "MZKjvrtzM1",
                'usage_limit' => 5076,
                'min_amount' => 3978,
                'storage_id' => "5ebf886e-fbde-4aa7-9b48-a04ad330da54"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon21()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_amount' => 6360,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["a53756ec-0fb6-45fb-bec5-9dc013516341", "910db0a6-5faa-4eff-902a-c2876843f5ef"],
                'display_starts_at' => "2020-05-17T14:01:44.000000+09:00",
                'display_ends_at' => "2023-02-08T19:38:12.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "lMNuYbQAq",
                'usage_limit' => 1243,
                'min_amount' => 6800,
                'storage_id' => "46422fdd-d934-45e7-903b-b832459fab03"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon22()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_amount' => 7105,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["6bab2f54-c1e6-46fa-ade9-18e610ed73d2"],
                'discount_upper_limit' => 964,
                'display_starts_at' => "2020-05-07T16:20:00.000000+09:00",
                'display_ends_at' => "2021-07-01T06:01:33.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "tNahWv",
                'usage_limit' => 6233,
                'min_amount' => 4097,
                'storage_id' => "799d6e11-9571-4fbb-b7e3-86e5c48632ee"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon23()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_amount' => 6057,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["dd50b47f-25ef-4df4-9ef4-8c97067c63d8", "4014e239-5d6d-4d59-a7bc-1b3ac083f862", "63deacdf-a6ed-46e2-92e8-a52cdd3b1b16"],
                'description' => "k6qgmA4NFy4OYtQYwmHzqcOnWDPVIjv3ccy2tHE5q4p2WTCkGaXF6ag4bo7g2X2bmfKGFkrbYNGqzSENro2PTPmz64WU9B1mXNphwN74i7IlQapdlen0H8GvhwPQ79afzilHtMxe1DGw9cFxLDgaJhZn7BroB3iq9rHPjXsTWFI3fwdLPffxVYOHzMhoE391Ls5cGFYrXhxvE1nJj0FS",
                'discount_upper_limit' => 6530,
                'display_starts_at' => "2023-09-02T01:46:15.000000+09:00",
                'display_ends_at' => "2020-09-13T14:15:45.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "umyU95S",
                'usage_limit' => 7554,
                'min_amount' => 5507,
                'storage_id' => "227d7df7-c670-4e60-a244-4c1441a577de"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon24()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_percentage' => 7693.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon25()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_percentage' => 2610.0,
                'storage_id' => "143d17c7-68f0-4950-8c9e-f8b6e3b2bdbc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon26()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_percentage' => 4806.0,
                'min_amount' => 2462,
                'storage_id' => "8655f8de-c199-41b3-9e35-82c86889d080"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon27()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_percentage' => 5162.0,
                'usage_limit' => 384,
                'min_amount' => 1815,
                'storage_id' => "1e674b71-9a76-4ef1-a280-e2705a919fba"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon28()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_percentage' => 4088.0,
                'code' => "ItoFAlyK",
                'usage_limit' => 2482,
                'min_amount' => 7839,
                'storage_id' => "a65ed88f-2565-46d0-ab62-3e5f22fc4a3e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon29()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_percentage' => 7458.0,
                'is_public' => FALSE,
                'code' => "tXM71l",
                'usage_limit' => 1187,
                'min_amount' => 5246,
                'storage_id' => "609ce81b-e761-40e3-bbbd-c0bc7b60899e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon30()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_percentage' => 3252.0,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "mW",
                'usage_limit' => 1243,
                'min_amount' => 509,
                'storage_id' => "2a27c6a9-5e2c-4b34-b13d-e458ff9e73ef"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon31()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_percentage' => 8093.0,
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "jB",
                'usage_limit' => 2847,
                'min_amount' => 2444,
                'storage_id' => "cdf08439-b3d9-44af-96fa-0a287cab2c64"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon32()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_percentage' => 3367.0,
                'display_ends_at' => "2022-04-13T22:20:06.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "afnuQFxt",
                'usage_limit' => 2910,
                'min_amount' => 5704,
                'storage_id' => "646f2538-53e9-4995-8298-93a22918b064"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon33()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_percentage' => 391.0,
                'display_starts_at' => "2020-06-06T15:30:18.000000+09:00",
                'display_ends_at' => "2021-05-12T09:47:43.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "hTEz5ptV",
                'usage_limit' => 2127,
                'min_amount' => 2132,
                'storage_id' => "562834e6-d7be-4391-9ada-6c6c591c9b93"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon34()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_percentage' => 4131.0,
                'discount_upper_limit' => 709,
                'display_starts_at' => "2021-09-10T19:42:01.000000+09:00",
                'display_ends_at' => "2022-04-06T03:48:15.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "zpqpnWc",
                'usage_limit' => 5766,
                'min_amount' => 7470,
                'storage_id' => "df7ef6f0-6f9d-48a3-9bed-d88b49229732"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon35()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_percentage' => 4119.0,
                'description' => "RTsW1x6ABD8kKubRfKnFs1AM6E8bpVK3Djs3ESVtdplUS8Q2UrIIIX6KzgtSmKckOHPQhCeF3mFfOybm3h8l9mXG3XJG11cJ3CwPhv21tEm6wYSZ8qLsoKVTTEDpUEIiOoNAcetVv0",
                'discount_upper_limit' => 6836,
                'display_starts_at' => "2023-11-28T01:26:05.000000+09:00",
                'display_ends_at' => "2021-12-07T08:55:10.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "HnCD",
                'usage_limit' => 4928,
                'min_amount' => 7017,
                'storage_id' => "1ba07809-01ec-438d-beec-e8566b0f235b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon36()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_percentage' => 9774.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["81201e56-7975-42be-ba8c-a5ec6b8ea8de", "97d158f9-80ce-4f78-9245-cf47e4981e1c", "1e58117f-bc23-40b7-858c-b6d09a195249", "a5751c64-68c7-4cdf-bea0-412f47a18232", "0c58333b-a520-44a3-8aa3-809271981342", "a33fc2fe-421e-48e7-b153-946ceb0bfde8", "6b4d8722-9f24-4e70-8d8f-8689aae44352"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon37()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_percentage' => 4466.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["517e3ce0-5d4a-4599-9c2e-385632867817", "0659e77b-8109-44bd-823c-0b22cd707af2", "53d0097a-5f6b-4c79-9727-7b9384aedf5e", "a7fec58c-ac0c-4415-8bf3-017fd303ddf8"],
                'storage_id' => "0250d8ff-96fe-461a-944a-9da297295645"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon38()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_percentage' => 2483.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["be05d5f5-31d8-4296-a990-05a4576caf2a", "941f282b-6e8e-45df-b359-304c63d9d068", "1fb9a349-6a5b-4a7b-8b1f-ef610cce4a84", "db7b7d69-b5b1-4f41-a440-a9868c60ff6f", "52e047fd-1111-4b4d-956e-20175951a410", "13faf197-2de8-4424-8d7a-763eb1fc0b51"],
                'min_amount' => 2880,
                'storage_id' => "79db2a99-48e1-4f87-9d7d-36eee8dd6a82"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon39()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_percentage' => 987.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["ebb848c8-29ac-425d-b7a9-4ed9a41c5797", "7d096106-e841-4709-8887-f552738c5ab6", "7f0e5341-d84c-4fa4-807b-2f505a96d95e", "8a34440f-8dd7-4d51-a2e1-b154632a5a78", "e5b30cec-6ef3-4132-9f52-62ff9c93a60e", "7755ce11-9c1a-432d-acdb-af1cbe089ca7", "bed539f7-b91b-4fec-86d2-0ab2a9225920", "3bc9586a-272b-4b3a-91af-097012109bf2"],
                'usage_limit' => 234,
                'min_amount' => 9782,
                'storage_id' => "a249746c-84b7-495d-a34f-378ea1de3ad7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon40()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_percentage' => 66.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["b1658eeb-feff-4d4b-8dc9-2dea426f8578", "10b5b93d-8818-4ca5-a6cd-50ff7754db9d", "56dd889e-e9df-41f6-a4d9-970a186fe4bd", "7ea5a3ba-118a-48e9-87e7-25dd863c8ad2", "4a38857f-47d3-4cb3-8be1-d18339797d4d"],
                'code' => "B3",
                'usage_limit' => 7172,
                'min_amount' => 4581,
                'storage_id' => "d09000a1-568b-42d8-9b66-a3a7fc5ed3e1"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon41()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_percentage' => 9775.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["b28f433a-eded-4394-81d8-c7a819d0c3a3", "9d5dced0-a454-4341-a77c-25bc95a61f13", "20749d80-33e3-4abf-a3f4-2436b73226e1", "9c3acf9e-baef-4bdd-9113-435a08efc40a", "987e785e-0e72-43c4-9229-4d29e9cf7472", "0ad8443a-f804-40ae-a273-26323eb9bad8", "12a1dfb3-0af3-4aca-8794-7355f3fa8b9f", "ec97dac8-88c7-4b69-994e-66f9590857ad", "ef299e47-aba0-4c25-aea6-4411bc4daf75", "78eb2c43-1caf-43a5-964f-69ab644f4a73"],
                'is_public' => TRUE,
                'code' => "lM",
                'usage_limit' => 487,
                'min_amount' => 6028,
                'storage_id' => "874e3818-f7c5-431b-9639-e48e3fe72946"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon42()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_percentage' => 6657.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["178fcf32-0b3d-40f4-b84d-ecad531d3e96", "0c885054-8551-42f6-82d3-ee962a48d64d", "0596a29f-05a2-4209-8dc8-5871bc0544bb", "7e8a414e-db17-4066-aba3-aea8b3bd1887", "1025ecc2-7bce-4010-b005-4d835277450a", "f4091303-3c07-4b15-9b0a-cc8944b3a7b8"],
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "WCb",
                'usage_limit' => 8846,
                'min_amount' => 8577,
                'storage_id' => "b7687fee-8706-4a7e-b3d6-d9dce75e1427"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon43()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_percentage' => 214.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["1d49ad58-be39-4c45-ad90-d459b2095ce6", "08218e3a-e2b5-4f44-a406-bd79a8894156", "ce951da8-df03-43c8-b2f1-6ae21b3f38e2", "06831240-663c-4f01-98fe-9839cd87ea6d", "f9e3e9eb-f925-4a00-a86d-ba396429fe73", "78615fb6-7049-4ac0-9ae8-cd7d05189399"],
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "q2l0",
                'usage_limit' => 5683,
                'min_amount' => 5970,
                'storage_id' => "e2d19372-94f9-4aa8-8faf-e3cf86d22529"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon44()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_percentage' => 4367.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["6d603d7a-e64e-4dde-a7fe-8f7ac3cccff5", "dca699db-4009-4c5f-b9b5-d22f09799c0d", "aab9b165-9a99-425b-a077-cb484bf4cfcf", "abc4b98a-c90a-4b88-8b74-6e904f82131a", "e548e967-651f-4144-bd47-0ed4077e1137"],
                'display_ends_at' => "2023-10-08T02:20:17.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "NicQEA7",
                'usage_limit' => 1655,
                'min_amount' => 8836,
                'storage_id' => "a6715e94-076d-4f28-a117-f56689aead37"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon45()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_percentage' => 5060.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["56fb0f25-8490-474b-9af4-63362b2e17b8", "236cea43-1bd4-42c1-a284-21b2c46afa17"],
                'display_starts_at' => "2023-09-27T12:07:05.000000+09:00",
                'display_ends_at' => "2020-05-14T03:51:29.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "YOPbaFAD5X",
                'usage_limit' => 8592,
                'min_amount' => 3508,
                'storage_id' => "67e40fad-56ff-4d81-8f55-92e02557228e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon46()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_percentage' => 3320.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["b12db428-f5ca-4173-8962-bbc1fa30e841", "31cccd15-ebb9-405d-9cc0-f3c54f3378ca", "2ea2fa2b-1bbd-4fbb-917b-4924366792ad", "dc490a8f-078c-4f5b-a708-b75afdd1a362", "70e9e4c7-295e-486c-87c4-27ac83c712c0"],
                'discount_upper_limit' => 6924,
                'display_starts_at' => "2020-01-29T19:53:20.000000+09:00",
                'display_ends_at' => "2023-02-04T01:26:26.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "m0BCDKClY",
                'usage_limit' => 8503,
                'min_amount' => 1523,
                'storage_id' => "58699378-b628-441c-bd34-2f1b51f0f61b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon47()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1bf7ba4-6a5d-416a-9c79-107737ed1a3f",
            "Q9aokbIrnkNJ8TIyygCnpmoV3SH5hHmgyko5zvvst7wTqfRDdyKvBVeFTeiQs5NX9guZoxp9ZSslCU",
            "2022-04-24T13:07:07.000000+09:00",
            "2020-01-14T13:22:06.000000+09:00",
            "b4c64677-2782-4069-809f-4deda142b4bb",
            [
                'discount_percentage' => 6593.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["7fb1ae1a-1da9-4ced-9465-e0bf9ae2cc28", "9089929b-de27-4b67-ac09-ca195aa99580", "14dca2bd-bf2b-4aa1-9973-6c0bafaaee2f", "5b6516a2-5061-4124-9c37-aaeb5fdd113e", "c82e128d-c72a-41e3-9133-60d50c44ed35", "43084b6e-8ffc-4d59-af64-455232de7716", "6784f955-f548-45c1-88d9-36b3e563f59a", "237a2a2a-1c34-46ae-8b4e-ce8bbb7f49a2", "22b80111-f229-47b5-be1b-e2c4c6f1f624"],
                'description' => "bKVcsdSpGqSwnjqBCplYqFGCSydJBdGQIRCoUGKXQLvpmISysqAvSge0ksdZjMeixjk4Xr2U2mAhXvL3RhDJrSIafRbJT8SF8wUW22cHM6quzFhV6av10cPpYvh8M4GYaOxNpnsfp3Yo32Eoxrm5h7gERxts6Ahc1mLgxHrG9yPSdMn20M1mAt",
                'discount_upper_limit' => 6518,
                'display_starts_at' => "2022-12-06T06:52:06.000000+09:00",
                'display_ends_at' => "2022-11-17T00:38:12.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "95Q6RD8hR",
                'usage_limit' => 5681,
                'min_amount' => 8742,
                'storage_id' => "1ad767f4-f08e-44ad-8b40-38250b90c67f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
