<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateCoupon extends TestCase
{
    public function testCreateCoupon0()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_amount' => 7231
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon1()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_amount' => 2568,
                'storage_id' => "15689f16-6262-420e-a7bd-715df0e3de6a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon2()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_amount' => 3154,
                'min_amount' => 9417,
                'storage_id' => "f5458524-861e-44a9-913f-8b2c6d94872a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon3()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_amount' => 5357,
                'usage_limit' => 9533,
                'min_amount' => 2545,
                'storage_id' => "18ac3fc3-6644-4563-8d53-887f09a9d1bc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon4()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_amount' => 962,
                'code' => "hf6zWY",
                'usage_limit' => 3589,
                'min_amount' => 6346,
                'storage_id' => "0bd519f9-4224-484c-9091-6f27198aba11"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon5()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_amount' => 7573,
                'is_public' => TRUE,
                'code' => "6DDajbOAj",
                'usage_limit' => 2996,
                'min_amount' => 1718,
                'storage_id' => "85a420aa-8682-4c97-a4d8-0b07184f0bf9"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon6()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_amount' => 3959,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "jRwpLlu",
                'usage_limit' => 4407,
                'min_amount' => 5937,
                'storage_id' => "1112a64b-6bad-44d6-8a08-bf685c747d93"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon7()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_amount' => 6641,
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "0uDxp6AAxj",
                'usage_limit' => 104,
                'min_amount' => 2526,
                'storage_id' => "9f67f10b-6842-4354-acae-852a614ff8e4"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon8()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_amount' => 8975,
                'display_ends_at' => "2022-12-15T11:10:21.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "UVfZ",
                'usage_limit' => 9756,
                'min_amount' => 6690,
                'storage_id' => "92d2663d-151c-49b6-a21b-71bcb1283d61"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon9()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_amount' => 5700,
                'display_starts_at' => "2020-09-06T11:44:37.000000+09:00",
                'display_ends_at' => "2021-09-17T20:52:00.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "wGDWAb",
                'usage_limit' => 6269,
                'min_amount' => 1095,
                'storage_id' => "1af61765-1221-4076-ba92-71521d9dc656"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon10()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_amount' => 5966,
                'discount_upper_limit' => 8635,
                'display_starts_at' => "2021-07-02T12:14:29.000000+09:00",
                'display_ends_at' => "2021-05-06T17:24:48.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "djIb2oboXi",
                'usage_limit' => 1265,
                'min_amount' => 8191,
                'storage_id' => "95f56cb5-6e93-4e5b-9cec-4f12bb2a555c"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon11()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_amount' => 6367,
                'description' => "vicmNmmmTS3VPkVRpmw624PrgEMWSoIT6fRV4tW2in2zZMxOQMYDjMKTI",
                'discount_upper_limit' => 8326,
                'display_starts_at' => "2023-03-31T07:47:03.000000+09:00",
                'display_ends_at' => "2023-01-31T23:22:30.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "U",
                'usage_limit' => 2057,
                'min_amount' => 5859,
                'storage_id' => "2bfb39d0-3f6e-4b0f-ac78-69eab97c4370"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon12()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_amount' => 8571,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["64f5b7b8-4618-422c-9f3a-22e585d96b64", "ced04c18-9560-4f13-91b4-b005b7c6ec99", "d77a2a1a-3544-4d60-a1e6-03a9990ec273", "f8a69041-f151-439f-852a-128594b876bd", "11f7f759-0ab9-454c-bc81-335a32c3f1db", "5072e75a-5505-4d28-bbb0-7190b65e2a57", "69923e52-84f8-4d6d-a213-2958de5d054a"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon13()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_amount' => 123,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["0d22d65b-51ef-4ec3-90d0-e65c30ec1fdc", "b2f11862-8a6b-4c17-b7d3-e34950e068fe", "bdc8dc1e-f231-4c68-ba86-415b0361b642", "e5da6a1e-07c6-4afd-9ca8-3cb23686a173", "739b061a-c48f-44cb-9828-21d9c4308b9d", "77cc3eea-4c14-49df-af29-78ed4bb68025"],
                'storage_id' => "2be875c8-3aee-4c42-8a48-d04b2f7daec9"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon14()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_amount' => 5298,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["e3d1183d-5026-43da-85fc-e968b4f74d42", "d1371eab-37d6-4d02-bf42-0eb3ccd698d2", "2409a557-1117-4743-ba8f-3a932b955222", "44a766de-168f-4c56-a9fa-8ee7e86f3e56", "38fb1954-91c5-4857-a170-d0590d136296", "60727668-81f6-49b1-bc8f-ea5cc359e962", "196ea372-1c44-41c0-90df-70fe36b35567", "2339d835-1035-44b9-8795-14073de6ffac"],
                'min_amount' => 1011,
                'storage_id' => "963ea852-b373-4bc4-a5e3-b1d3fc4bc2fb"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon15()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_amount' => 5948,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["743cb342-45a5-4b9c-912c-585c504dc3b7", "1f50bb87-ae5a-4723-bce6-ed6c9f466852", "b5e7efcc-8f7e-4ea4-ad14-b400222b62b1", "2a0887e5-e190-4f56-8c37-b7fe5bb66bf9", "89d70bcc-5348-40f5-b878-314224a0f868", "cf203849-4adb-4632-b4d3-d9e5ca8c76d6", "6909e035-9476-412e-a5bc-91f69cd9f7f3", "36969ba5-c7c8-48fb-b738-ec5e86c05faf", "7323daa3-3182-4dea-8047-2a8e65f88970"],
                'usage_limit' => 8023,
                'min_amount' => 8028,
                'storage_id' => "ce3b7cae-49a9-439b-bd7d-be6d1a489655"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon16()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_amount' => 1222,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["470bff4b-e7ec-4899-97a6-3c4b6dd60907", "35a6df72-9175-4c61-8c52-8d753a304cab", "405a75c6-2617-453c-8074-8daafab5f934", "3e9dbdcc-b66f-4267-a66c-258d37751ac5", "24d1efa2-1db2-4a10-b172-f8acceb6bd76", "bd84be66-c95e-4e47-b0e0-d5351dd3194b", "3b38cdd2-3662-4317-98bc-cb9918912a83", "4d9efd70-2898-42eb-b253-711902894c89"],
                'code' => "oN0f",
                'usage_limit' => 1789,
                'min_amount' => 4074,
                'storage_id' => "36984589-fee7-406b-afc5-dca781bf848a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon17()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_amount' => 7435,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["1548819a-c6ed-460a-915b-8e84ad19a6f8", "e9063f27-3c9d-4ff3-a5d8-3bdc915b1335", "0f3f4baf-f157-4940-bdfb-ce056c4d3598", "f0d8aa17-2629-44fd-9cca-c03c57407c31", "236fd003-e4a2-4e6d-85ee-86fa6f4cdc01"],
                'is_public' => FALSE,
                'code' => "FtRA7xYBR",
                'usage_limit' => 8711,
                'min_amount' => 8163,
                'storage_id' => "1a500caa-4550-4ca8-9904-53a6aad68620"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon18()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_amount' => 3182,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["b8bc719c-8818-45fd-9a80-123264a715bf", "9df17a55-b608-4b09-9508-a48e0efe572a", "46b90e85-814f-477e-8f4a-9061d26e120e", "b2af403b-7a6f-4917-8a5c-c7664c8d40b7", "23b10844-6cbd-4e68-abbe-37eff6cbe1d5", "02b415a2-c66f-4ced-948b-b08348ce94a8", "78f1e14b-62cd-4fb1-a23a-9ebfb7b6cfd9", "ac2a1be8-f76c-46dd-b9c3-9d6be0f1ed55", "e22fa516-0401-4dac-a429-83cbecd2cbac"],
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "2GiN3",
                'usage_limit' => 637,
                'min_amount' => 3738,
                'storage_id' => "a7368307-7f1f-4727-91f7-b155fce7358c"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon19()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_amount' => 164,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["4d7cea4d-7c89-413f-b339-4a13048eb6ad", "8b153c48-dd87-4431-beac-96616b484826", "a8910ace-1e35-484e-b22e-903467e4b7d6", "25a58858-ba0d-4ed3-ba8c-2066cbe641d1", "b470b5ec-b46e-4b0b-a724-e1ecf2cf19f4"],
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "jb",
                'usage_limit' => 7666,
                'min_amount' => 2728,
                'storage_id' => "29758b17-bb4a-4eaf-b983-da57f3dfcf6e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon20()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_amount' => 1166,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["7618c4df-a5c0-4eac-b8c7-f1064e9cb442", "69ec308f-4f7a-4617-b4b8-e0cd17a93805", "38137db4-bef4-4434-bc02-406a20ddef17", "e449b0a3-e61a-4569-b196-37925ea9fcea", "0e077d64-afad-460b-9e59-2fc04b9b2493", "341cf7b5-be90-4f48-9b2a-ff026adccdc4", "1c77ca56-2c95-4ad9-b5a1-8cc1e92be5be"],
                'display_ends_at' => "2022-03-12T01:28:46.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "YiOlm8ZBXs",
                'usage_limit' => 6533,
                'min_amount' => 7256,
                'storage_id' => "361b0ea4-ef37-4341-bd70-1d6c40fbbb3b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon21()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_amount' => 6999,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["ffce1293-5777-4f46-9564-6b5057324e52", "dd2cb486-17e0-48aa-b762-9e433a2bf343"],
                'display_starts_at' => "2021-11-12T05:07:29.000000+09:00",
                'display_ends_at' => "2023-10-11T12:32:34.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "YjYU8dG1",
                'usage_limit' => 1730,
                'min_amount' => 5107,
                'storage_id' => "77518ae4-8a99-426c-8805-61b59cadd348"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon22()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_amount' => 2699,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["816724b5-1554-4ff6-8f7c-d895e8082998", "8ec38289-f702-44ad-a413-461029baac13", "74ba9d8d-b196-4bd8-a107-902d2eda9af5", "f3d148bc-7ab0-45ff-ac55-3282613d7314", "35fed274-b9a5-44ce-a53f-0c4de1c6e46e", "234caacf-7ffc-48c4-aa78-9afba2e9d293", "6ec00072-73be-442d-b077-0894d0689103", "58618039-9e0f-4208-941b-de92a058155c"],
                'discount_upper_limit' => 6262,
                'display_starts_at' => "2023-09-03T01:29:13.000000+09:00",
                'display_ends_at' => "2020-07-29T04:22:17.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "1vaC",
                'usage_limit' => 4011,
                'min_amount' => 7283,
                'storage_id' => "5c31d07d-a16c-41dd-91de-1a59281dfb87"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon23()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_amount' => 209,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["fde5528c-da02-4e7d-932a-5253cb62c84e", "7e9f288b-ef7d-4fbe-b3a7-b06189a88808", "a5b515b9-bc4d-4080-85c5-218afb22c81b", "6d29c544-120a-4f2d-abfd-362b0f4ac093"],
                'description' => "79PhYOLAeTwf5WsN5Jtnl2tELI6R8x64vFG4eDKYnKfThh34jQZM6vZo1p3ki0EwmiwnDqaTm7Ttair2CeybDHwdApk4odlpgvsW3CM84GgtDtcgglFyu9PF565USVRWyJH3sM1xaRaZOcphX35DSei",
                'discount_upper_limit' => 9951,
                'display_starts_at' => "2023-01-27T09:19:44.000000+09:00",
                'display_ends_at' => "2023-10-30T00:39:09.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "8",
                'usage_limit' => 1450,
                'min_amount' => 1274,
                'storage_id' => "050289b9-c87f-441b-8baa-631b6ada09bd"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon24()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_percentage' => 6348.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon25()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_percentage' => 8245.0,
                'storage_id' => "6c3c67a8-08f5-461c-b656-9f2c909926ca"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon26()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_percentage' => 985.0,
                'min_amount' => 1831,
                'storage_id' => "766a7327-f21a-4841-a02f-d06dbcd734c9"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon27()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_percentage' => 4701.0,
                'usage_limit' => 8459,
                'min_amount' => 3030,
                'storage_id' => "20e61169-4dd3-40f6-91e6-ff55e9a99ed1"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon28()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_percentage' => 6705.0,
                'code' => "9K8Ku7",
                'usage_limit' => 6309,
                'min_amount' => 1220,
                'storage_id' => "237c9f67-871b-4204-b225-e774f5467b53"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon29()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_percentage' => 2940.0,
                'is_public' => FALSE,
                'code' => "pHRR",
                'usage_limit' => 1281,
                'min_amount' => 1538,
                'storage_id' => "03f3595b-b984-4898-affb-5c5fcb37fa45"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon30()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_percentage' => 1202.0,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "oZ",
                'usage_limit' => 4020,
                'min_amount' => 2507,
                'storage_id' => "18325531-4d9c-44e8-9eed-54eff133d65e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon31()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_percentage' => 9024.0,
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "IAu3R8t",
                'usage_limit' => 9314,
                'min_amount' => 6104,
                'storage_id' => "06ba0c6b-65cf-4cd2-b1c5-b5c7ac8683c7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon32()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_percentage' => 1310.0,
                'display_ends_at' => "2023-04-23T21:44:59.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "TCks",
                'usage_limit' => 4635,
                'min_amount' => 7219,
                'storage_id' => "cd408ce5-e240-4ccc-91fe-df4e212f9f7f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon33()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_percentage' => 3149.0,
                'display_starts_at' => "2021-07-31T21:01:52.000000+09:00",
                'display_ends_at' => "2020-06-14T23:26:52.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "sk",
                'usage_limit' => 6463,
                'min_amount' => 169,
                'storage_id' => "1ab11fa7-1bef-4847-a5d8-4e3b0136184b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon34()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_percentage' => 3891.0,
                'discount_upper_limit' => 1151,
                'display_starts_at' => "2023-05-16T10:34:42.000000+09:00",
                'display_ends_at' => "2021-06-08T10:42:17.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "81yZa3",
                'usage_limit' => 3190,
                'min_amount' => 2896,
                'storage_id' => "354aee2c-d8e3-4f1d-9a51-05fcbeeefe00"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon35()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_percentage' => 3323.0,
                'description' => "cYxHpB1",
                'discount_upper_limit' => 198,
                'display_starts_at' => "2021-12-16T10:36:00.000000+09:00",
                'display_ends_at' => "2023-09-04T17:15:16.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "tnsTc3v",
                'usage_limit' => 8681,
                'min_amount' => 6939,
                'storage_id' => "3ce65bc2-0eb5-40f2-8c13-32450ee8c3ff"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon36()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_percentage' => 8061.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["9b223db3-c2df-4b42-a9e3-c6b9d62a77f3", "70706690-3c0b-4375-839d-d4277a0b212b"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon37()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_percentage' => 9687.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["008e0be8-9d9d-4829-ae0c-186e5686ca06", "baf6051e-5670-42b4-836d-8e3dc8ff8d20", "24c75be8-eae6-4014-87a3-beddca95750a", "e43733ad-6d24-4321-913c-93836105255c", "193f782f-8aae-4b93-a112-181abc445b6f", "8e1cc2e5-796e-482d-afd7-b2e762c897d7", "67ebb995-ec18-4766-af08-eb3a3b30225b", "f3f2fc0d-92df-46bb-adfc-34278cff7c87", "9cbb19b1-0fcd-41c3-9a4a-141b689f829e"],
                'storage_id' => "7e3f9bc5-66ca-412b-a0b0-56ea3e234ec7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon38()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_percentage' => 3046.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["19a9b023-9c94-43d3-929c-1f78ab2e5190", "e448c757-5a05-428b-863e-fcd8524ef193", "3f02f583-2cbe-4301-9c9c-1942de067c07", "273b3bc1-b3aa-46d6-aad3-7f3f44bf1a88", "ff6af014-cc9a-40af-9c89-8116f1ed96d5"],
                'min_amount' => 2119,
                'storage_id' => "45ab5aad-3590-4109-919f-0182e7bf609e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon39()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_percentage' => 8236.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["437c94e7-eee2-4bd8-a1dc-8fe7b5e5ad05", "e5aaa68d-e20a-422c-946d-305fc0f13dbc", "d9b53f77-2fa1-40b7-b0ef-e725cdd2706a", "de694404-92b9-430e-848b-9c310aeca9fb", "bf878409-c73a-4e73-bd85-e157ac38a341", "09b76f0b-a19e-42e1-9a39-0e1bd35d32c3", "7f76e401-5404-493b-b2d4-6ffcd8107541", "2cde2274-27f5-44b0-b669-b9bc5c4d5d3f", "c1179143-d941-433b-bae1-200eb2f7020e", "6fb1dcf0-14e6-4514-bc9c-2367c52c674d"],
                'usage_limit' => 4767,
                'min_amount' => 1794,
                'storage_id' => "043cb435-a161-4e32-b613-7a4ce97583a8"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon40()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_percentage' => 2476.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["de0fa3f9-a19b-4389-8360-981593b6dca9", "5a930712-94e4-4a03-827c-86233d6b049a", "a02c9e86-680c-4597-b9b4-c38a6869e493"],
                'code' => "ft",
                'usage_limit' => 416,
                'min_amount' => 9698,
                'storage_id' => "4b355730-22bc-4d4b-88ad-a00851981f40"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon41()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_percentage' => 623.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["25a94b1c-fa22-4ce2-9f2f-2c0779b49b64", "3e8aae82-09f5-4ff5-86b6-69e550ec775b", "ac7a3e95-9fdc-4b32-803c-672f6f930503", "2afd1b2d-1d0f-4e8a-af65-4adb4834e825", "41fa9cd2-dab4-47e8-8f47-9154fe5563da"],
                'is_public' => FALSE,
                'code' => "Nc",
                'usage_limit' => 572,
                'min_amount' => 2456,
                'storage_id' => "e570d1f0-abbb-4da0-807f-ff84c53151ce"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon42()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_percentage' => 9459.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["224c76bc-b0b4-43dc-ae16-5535251ba68c", "08926d5e-601e-47be-9b7b-7b938602c96e", "2b0e5e79-76ee-4a1b-8ed3-b23bb23ae9c7", "149010d0-db03-4ec8-a155-b81d7638094d", "46c4325c-736a-4c69-8354-41aaa1cd0f05", "823543e2-2177-4ab5-bb5f-a50ed6e54dbd", "0cb15471-3bfe-4fdc-a51a-900fac42a5c9", "2c6ceede-cbe1-4923-8593-0fd718e6ae82", "2564b1ae-2b44-459e-a776-d8b4137044be", "4eb40506-400f-48a7-85f7-9563434a5012"],
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "wrtn7",
                'usage_limit' => 8720,
                'min_amount' => 7241,
                'storage_id' => "481b9ee5-7e8a-4a36-af52-096715610a72"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon43()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_percentage' => 1527.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["eeabfcb4-2506-4fb5-a848-cf0e65251a5d", "0b11e4f6-9258-49a4-b8e0-6bb5e46d27f6", "f314c0f4-aeac-4d27-9157-d74f8b9af85b", "f9499f3c-44cf-4b55-982b-e1bb5533a915"],
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "6cVz1",
                'usage_limit' => 779,
                'min_amount' => 2149,
                'storage_id' => "40640784-59b8-4752-9dda-68da74ba475c"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon44()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_percentage' => 4772.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["4fa53be7-26b8-4503-af6a-18f32b5cb792", "de72b09d-6f7c-496d-8e44-836e044c5d41", "9c29abe8-3ddc-4483-9bde-0cd3cfb07862", "5174ec52-d7cd-4d38-9566-c42bb373464b", "aee3fdb9-9a33-44bd-9b07-3df8e8bf3225", "fb6f5c05-2a8c-4716-9c0b-0c314c3085c1", "77496cab-d21e-4abd-87e6-eac0b8a8445d"],
                'display_ends_at' => "2022-11-11T07:30:40.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "28sFK1Ad0",
                'usage_limit' => 448,
                'min_amount' => 1356,
                'storage_id' => "d8229439-e02e-4251-a217-912c359ab3b7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon45()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_percentage' => 7579.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["0bc8d309-c3aa-404f-94ee-f96229bce762", "b7577cc3-7bbe-44a6-a5ac-67eb6f63b282", "dd6fbed6-d359-4103-95a1-748bd0a52e43", "979ebe5e-7235-427f-898f-0335dd69b515", "7cf13b93-1504-4666-9d22-915e8c4d8b73", "85d1b9e0-d162-49ce-a2f0-3befcc534ee5", "d8344e28-0e03-42a5-b83d-fe5aca76c9a9", "461c7084-9543-4fad-9cf6-2758bc8dd10b", "e9857c4e-61ed-4da0-a866-a2a1d863bad6", "ffd11d7b-8b14-48bc-8db2-2fa43f3eafab"],
                'display_starts_at' => "2020-09-19T09:29:41.000000+09:00",
                'display_ends_at' => "2021-09-22T16:30:41.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "einuvXZB",
                'usage_limit' => 4258,
                'min_amount' => 282,
                'storage_id' => "e8df46c6-4b0b-4076-8cce-442b652b3ab2"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon46()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_percentage' => 9812.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["6ef0c0b1-f443-4352-9968-c679b98d7dd9", "d4bfee67-f076-441f-accd-07cc5b6ca056", "37eaf678-4b13-4e5d-988d-0777ba0cc746", "64f74e45-7b8d-4fdd-b8e1-fe5a61ca8700", "35958a34-7210-437c-b84b-70d784ad14b4", "82bb0006-81e4-431e-be99-fa2c6ee358a3", "e6e0abac-5142-4673-b50b-84a4b7cce7d4"],
                'discount_upper_limit' => 3889,
                'display_starts_at' => "2021-09-24T14:51:17.000000+09:00",
                'display_ends_at' => "2022-04-21T00:21:48.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "mlc",
                'usage_limit' => 6319,
                'min_amount' => 1980,
                'storage_id' => "49750d3f-1455-412c-bf56-64e6dcad934e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon47()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "e1626c9c-21f4-4c1a-8794-ba68dfcfdb9c",
            "F3qS7LjBzaahyxuSjCeY8XUCVwnkncT5IIScC6hwMcWk14akfxJeOq7WXYzp3T5",
            "2022-05-20T19:37:35.000000+09:00",
            "2022-11-14T14:05:37.000000+09:00",
            "3321502b-070e-4f48-b9e3-bdc34c6f6343",
            [
                'discount_percentage' => 3161.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["e680d936-b368-463b-ab59-afafe34c3448", "7666a51e-2b19-44ea-871b-cf58bc4079b7", "ec013fcf-eae1-465f-aba1-513d8ad6c8a5", "889a5ad3-6840-4ab3-ab3d-df804b055791", "8877a466-7cfb-4791-8680-ba0a43bcedc9", "a9624d78-545a-4d22-aa42-07dbcf3896fe", "d8f2be66-fd7a-481f-8f9e-de3d197b3c08"],
                'description' => "c5HOucSEilNXjQFX3wKmnpLb83HOepJdfn6OM1nT8gTcey70jFNOnlTsnNxlQ3wJwISaSGZKKYrqMU1bsm1WHjvTkX44fjH7TEzTDMmI7lE532raFlOqHJKTXGGDrMtxOO7mIDhT58ysPc7KSzxho2LaJQnSZPCdLERhQt",
                'discount_upper_limit' => 9676,
                'display_starts_at' => "2022-02-16T18:51:21.000000+09:00",
                'display_ends_at' => "2021-04-15T06:25:14.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "ys0jUgfy",
                'usage_limit' => 4126,
                'min_amount' => 6778,
                'storage_id' => "9fd5a0b4-bb1f-4d6c-a580-dac1a06fd143"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
