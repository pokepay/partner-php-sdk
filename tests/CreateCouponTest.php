<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateCoupon extends TestCase
{
    public function testCreateCoupon0()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_amount' => 7357
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon1()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_amount' => 9216,
                'storage_id' => "980727cd-c844-4e89-bd67-9a9679730e08"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon2()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_amount' => 9392,
                'min_amount' => 2436,
                'storage_id' => "b7bc887c-58af-4907-98e9-25c22bc9b844"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon3()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_amount' => 1044,
                'usage_limit' => 4882,
                'min_amount' => 9522,
                'storage_id' => "f77d05e5-1718-4c74-9136-f78c9ca62105"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon4()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_amount' => 1041,
                'code' => "89v",
                'usage_limit' => 2514,
                'min_amount' => 4738,
                'storage_id' => "3d504807-f481-4765-a859-1e493ffa0d5a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon5()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_amount' => 7359,
                'is_public' => TRUE,
                'code' => "6MfShA8D4",
                'usage_limit' => 6464,
                'min_amount' => 9440,
                'storage_id' => "175165c5-7cf6-42b7-8f1a-bf211aca37cf"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon6()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_amount' => 4572,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "GT70L",
                'usage_limit' => 815,
                'min_amount' => 6848,
                'storage_id' => "7a54ee90-750a-4151-9db2-3614f10c6465"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon7()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_amount' => 2800,
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "XvfJ",
                'usage_limit' => 4594,
                'min_amount' => 3039,
                'storage_id' => "02be5ffe-2394-4b71-bf01-93186575231f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon8()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_amount' => 6412,
                'display_ends_at' => "2021-04-02T08:24:07.000000Z",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "wzvGv5",
                'usage_limit' => 4980,
                'min_amount' => 1833,
                'storage_id' => "69d87ffc-5b83-440e-9842-f9399c396eb3"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon9()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_amount' => 2045,
                'display_starts_at' => "2022-03-14T05:45:03.000000Z",
                'display_ends_at' => "2021-12-28T19:08:36.000000Z",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "QSvr2",
                'usage_limit' => 5053,
                'min_amount' => 5610,
                'storage_id' => "a46f64c4-3d32-4e00-9ec3-59d056f6235e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon10()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_amount' => 9488,
                'discount_upper_limit' => 2828,
                'display_starts_at' => "2021-07-09T22:20:53.000000Z",
                'display_ends_at' => "2024-02-07T05:48:18.000000Z",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "qDXhSH8",
                'usage_limit' => 7272,
                'min_amount' => 7265,
                'storage_id' => "f7c3fa5b-2066-47ca-8984-82f9add52405"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon11()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_amount' => 304,
                'description' => "sDTnMPtA7T3E2nC8JZcqIcqZB2nkhw5Vunnh29qWQZz14x",
                'discount_upper_limit' => 8514,
                'display_starts_at' => "2021-02-08T09:28:24.000000Z",
                'display_ends_at' => "2021-08-09T03:36:25.000000Z",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "V",
                'usage_limit' => 8759,
                'min_amount' => 838,
                'storage_id' => "fa1a063e-3263-4064-8721-dd08de992644"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon12()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_amount' => 7013,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["d9b922de-c15b-4ec2-b631-7676b9077163"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon13()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_amount' => 511,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["0fc680a2-e4cf-44da-a09d-84b11ab73dbc", "81d0530a-aa75-45bf-8e20-f41cc7d6be88", "1231e502-dc42-4394-a141-1064011a7372", "ab5c0000-949b-4dba-bc5f-b236e313491a", "dfcadd0b-81fe-45ec-bce6-ee193fe0477a"],
                'storage_id' => "74124162-ace6-41f1-9dcb-06ec07ca066e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon14()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_amount' => 3071,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["6391deb4-e2bf-4c2e-b003-f3ac5dd2ecf7", "0f0145da-64ef-4182-b052-3e02814b8d80", "da94a5db-3e54-4304-b930-702d13e966ed", "4125cdd4-bd76-4e80-bc39-218c3bb01669", "9f641011-3c1f-407c-ad3f-0d6d7d0fe965", "5dffd7ce-f68a-42e9-a63e-8359d9772bb6", "0549d4b2-3a42-4063-b08f-2b6e0e655735", "ec7a2179-1178-435f-aea7-fba70106c378"],
                'min_amount' => 1910,
                'storage_id' => "50ad7ebb-354b-4006-a4df-2144aaba6be1"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon15()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_amount' => 9002,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["704a7f0d-aa5f-4563-97b2-94760e99ed35"],
                'usage_limit' => 1596,
                'min_amount' => 1102,
                'storage_id' => "dcaa7cf6-7bbe-4fc5-92d2-3c1b39de888f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon16()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_amount' => 7601,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["cae95ad5-2d3b-4a6f-9053-9a4debeaa614", "ce9f70f8-2289-4775-abf7-7414776b113c", "91eb071f-46ef-4569-b3b4-3f33614c8f0c", "6cb4933d-8886-4115-a8cb-b0cf4b56778e", "7836c574-d008-4741-af3f-462928db048d", "ce507f58-ca88-49a7-b727-306f1ce20970", "4cde362c-0814-4df5-a1e5-fb237a6c2c37"],
                'code' => "O",
                'usage_limit' => 6702,
                'min_amount' => 2741,
                'storage_id' => "e3c517ad-8e38-43c1-bd22-8a7cebf34ee5"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon17()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_amount' => 8872,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["692e0554-bfee-48a1-bdf2-d029382227c6", "b17c6bd3-a36a-4f62-82fd-91bae229141c", "6380028e-9f97-4eb1-ad0e-99e8d8d0cd69", "93562b52-44ea-4493-9854-9597019950ce", "219a7cd3-5da7-4c15-9528-115516a36881", "b79d84b4-05a8-41dc-b6c4-02cb90f9a9d0", "e84c3aa2-7c07-4d0f-b62d-19f928a54c8b", "660c57ab-e119-450f-aba1-c2f4210b4a9b", "f627d5cb-a51d-4481-a163-c7192f4e9d18"],
                'is_public' => TRUE,
                'code' => "CyKm4tG2",
                'usage_limit' => 4038,
                'min_amount' => 2789,
                'storage_id' => "747a7c03-cdae-4adf-9758-597836eb65d0"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon18()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_amount' => 2894,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["2529f2e9-0ecd-4256-a886-6fdab38969ed", "998e8a1f-9482-4990-ad47-baea293b505e", "d69f3130-d611-4354-8d4d-7c91bcb37a0e"],
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "F",
                'usage_limit' => 6408,
                'min_amount' => 7960,
                'storage_id' => "fe9a95cd-0b2b-4b1e-b05c-168f46148abe"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon19()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_amount' => 8388,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["b433f764-07f7-42c0-9556-6fd87988f124", "09d015a2-2b31-45aa-a41f-923f2b2d4de0", "18cd3bee-e2bf-4866-905a-5b1e0b4dfef4", "24139a88-20fa-4747-b56e-fcd67d093088", "76f6d9ca-1ea8-4ce2-bc74-87c3abbac41f", "d13cc483-a8ee-4773-9a2f-b5e01ab7d7ff", "75bc6ffc-70e4-490d-a52c-924688e7ebbd", "9b0ce214-03d6-478f-addf-ff63443ca883", "27a71bdc-1aea-4fc6-b82e-a720bf8fbdf0"],
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "7nB",
                'usage_limit' => 5865,
                'min_amount' => 6058,
                'storage_id' => "dc9400ae-536a-49e1-a134-4e75f7f1491a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon20()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_amount' => 8154,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["66d53e70-5212-47c8-a2d1-a9c072aaedd4", "4be39234-68fe-4b13-ad8f-2fda5f237151", "8e51fe3b-d25e-4b9e-a728-d89b81dc7144"],
                'display_ends_at' => "2021-06-06T14:05:51.000000Z",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "1kMJt8",
                'usage_limit' => 8180,
                'min_amount' => 8024,
                'storage_id' => "0e0ca2cc-d84d-468d-b7dd-54e0fa6e0c69"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon21()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_amount' => 3402,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["f67037cd-d21f-4e69-b350-19a8573ccdd4", "0695de81-53d8-403b-b6fe-99ca5843f5b9", "013b0a99-f0c1-4450-bebc-59276a539257", "fb6937d6-44fd-4d2c-a6b0-16a592992ac0", "5991d5a1-f95c-4c8d-aeeb-5f4963c3c6b2", "eaf58ae3-5c70-45db-a9da-d2726b4fe55f", "f466ca77-d82f-4ce8-b4e0-198210a8cb90"],
                'display_starts_at' => "2021-05-19T15:51:25.000000Z",
                'display_ends_at' => "2022-03-07T03:21:20.000000Z",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "dhT",
                'usage_limit' => 6259,
                'min_amount' => 4233,
                'storage_id' => "0dd17f90-bf18-4753-bb3a-310cd42e4f78"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon22()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_amount' => 7055,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["275127d8-8784-4ea7-82f5-dcc0c1d07f89", "cd4bf5e8-c04c-491b-81f8-d403dc2586af", "c95875d0-e03b-4df8-824c-bfa677b05288"],
                'discount_upper_limit' => 1426,
                'display_starts_at' => "2023-01-10T01:53:40.000000Z",
                'display_ends_at' => "2023-12-28T16:04:43.000000Z",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "F",
                'usage_limit' => 1079,
                'min_amount' => 976,
                'storage_id' => "f95a6c48-852d-4e39-9bbc-126a8cc8f50f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon23()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_amount' => 8307,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["1b26b3bd-f4ff-42ef-ab29-d7b3c9bab7f1"],
                'description' => "bXC06hH5q5N6rSqlhclxbbI1pwNVNkX1wbtHq7h4XHkBbxR0RnLtirGJS2N5S6EEO5Bp0TaBrmndiCNxXXwjFaRAeTxfe0YQCHzm8OG8zcqkOxIGcWZjjM6j3edDcpZu9iiEwcokneeQ36NR2IjhyB4vKQ7cGlo7SrCjimdlgwn9qvauQ2kDhj5HLJcSNTCm30yK3y8WItCe9VYgMyd",
                'discount_upper_limit' => 9580,
                'display_starts_at' => "2020-12-24T14:18:47.000000Z",
                'display_ends_at' => "2021-11-23T19:34:19.000000Z",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "qE4",
                'usage_limit' => 1281,
                'min_amount' => 2260,
                'storage_id' => "347c6031-7ff6-414f-b20c-b482317519cb"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon24()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_percentage' => 6541.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon25()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_percentage' => 3905.0,
                'storage_id' => "2c2afa1e-4834-4c49-b7a5-01046f5627e7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon26()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_percentage' => 8787.0,
                'min_amount' => 4289,
                'storage_id' => "4521aa01-0767-4121-a909-b38b24913d5b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon27()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_percentage' => 2858.0,
                'usage_limit' => 9687,
                'min_amount' => 2296,
                'storage_id' => "149d8e18-385b-439d-ae65-6f88745a3d65"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon28()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_percentage' => 2667.0,
                'code' => "V8cI",
                'usage_limit' => 477,
                'min_amount' => 5316,
                'storage_id' => "e2cb1bdb-265b-452f-9430-c9a029af4c5e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon29()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_percentage' => 4762.0,
                'is_public' => TRUE,
                'code' => "8h8evW68NK",
                'usage_limit' => 1776,
                'min_amount' => 3221,
                'storage_id' => "a2ee087f-c55e-4c64-ab0b-9471fa211a30"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon30()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_percentage' => 6224.0,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "o6",
                'usage_limit' => 5353,
                'min_amount' => 3410,
                'storage_id' => "72f76b31-5b0a-4b31-94de-a741089e050b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon31()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_percentage' => 7664.0,
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "gNTXOxF",
                'usage_limit' => 8322,
                'min_amount' => 2721,
                'storage_id' => "f287c4bd-7526-4777-b193-d6273bae16e8"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon32()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_percentage' => 5483.0,
                'display_ends_at' => "2023-03-21T06:19:56.000000Z",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "pZV",
                'usage_limit' => 162,
                'min_amount' => 4106,
                'storage_id' => "21e1c3f0-1e46-4c1c-937b-de026597e01b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon33()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_percentage' => 9168.0,
                'display_starts_at' => "2023-07-19T00:14:52.000000Z",
                'display_ends_at' => "2022-03-27T10:37:51.000000Z",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "p5bfKV",
                'usage_limit' => 1158,
                'min_amount' => 9785,
                'storage_id' => "e2b3a15d-b52a-46c4-90d9-b1ca5326759d"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon34()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_percentage' => 2085.0,
                'discount_upper_limit' => 4310,
                'display_starts_at' => "2021-04-29T14:17:30.000000Z",
                'display_ends_at' => "2020-04-13T12:51:34.000000Z",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "vyI6yw",
                'usage_limit' => 5391,
                'min_amount' => 6057,
                'storage_id' => "a2aa4979-3f4b-4c69-a723-36ec32ea14bd"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon35()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_percentage' => 9194.0,
                'description' => "5zg8pn57kF0DYbPLXjuwrpeD0A9IDYP4sAiFNwaac",
                'discount_upper_limit' => 1593,
                'display_starts_at' => "2022-09-20T16:39:04.000000Z",
                'display_ends_at' => "2023-01-28T15:06:04.000000Z",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "Bqh0SVIl",
                'usage_limit' => 7423,
                'min_amount' => 9087,
                'storage_id' => "0239f926-855b-49ba-aa9d-e9212eecd940"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon36()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_percentage' => 7220.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["3ed2b3cb-a4d8-4f55-bfb1-8b72a9ec6188", "d37b6756-03cc-459a-a636-6c55d3ade527", "8d89a530-ac4b-4934-87e0-b990bfcdeb5f", "2c6ff334-cfc2-40ef-a2f6-43112b12a4ab", "ad682780-8848-4a21-bf89-db2aa556904b"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon37()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_percentage' => 2673.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["b0ef9f12-9460-4bbe-a922-37c750bbcd01", "26587642-7e83-4dad-857f-4a96db039b47", "65eec6ba-1a1f-4a26-bdb1-55c46de1cfa1", "176f785a-01fe-44fd-8bea-0eb276bf0274", "8c1fd087-cec2-4752-acc6-35e5242599a0", "ab108388-64a5-4016-a02f-7e72a5a4aee8", "ca541eff-d653-40f5-8cb2-3e9718582200", "c4acf214-7522-44b2-be21-c36792bb9347"],
                'storage_id' => "4d1524bc-2fa2-4de7-bee1-b237640b19f0"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon38()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_percentage' => 2819.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["6b704930-82ee-4fed-8c4d-bd1a0e23a0e6", "73c81adc-16ee-4307-ab49-e3af6fae341c", "cde1e159-42d4-4710-bbd1-f7648f03267e", "3d66de1e-50ba-4c9b-b192-4c837014ccbc", "b58e551d-f0c8-4100-bf24-634a9fb397da", "1094b925-6ab8-45d7-896e-b6c0b19c0844", "abdd9b18-5d48-4a8f-85bc-abd6ff3a35be"],
                'min_amount' => 102,
                'storage_id' => "e68deb01-c827-45dc-b0c9-d628c02dc8be"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon39()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_percentage' => 9282.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["0db33645-0aa1-4bcf-8dfb-19ad163ddad0", "f7b56332-2780-463b-81a6-03d526cebe92", "8f919827-e437-4f2a-896b-a6d99236eef9", "ab37e6dc-302b-489f-a0e7-d60f9c490d01", "dc28b76d-876b-4ea7-ab44-ec9f3a81ac87"],
                'usage_limit' => 6156,
                'min_amount' => 3629,
                'storage_id' => "9b088bf8-5805-481e-9164-0984c5a23833"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon40()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_percentage' => 832.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["cf2be07a-693b-42f0-ab7a-c5f6a39beb9e", "1215befc-0dbe-4650-ba3e-a9f3d0e94ad0", "3cf579ef-5eb2-42f6-abbf-6ce36c4fbcda", "02d413f6-534b-4484-a861-72bb0e196f9c", "4bfe0466-be34-4037-b00d-6c4459f40c77", "ec02ff91-ea86-43b5-99df-cb9e87d0edac"],
                'code' => "I6",
                'usage_limit' => 8677,
                'min_amount' => 8325,
                'storage_id' => "eb47ec15-ed41-4fa6-a2ad-9426485df6a4"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon41()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_percentage' => 8399.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["4705f294-b0c4-4e2b-82e7-01525eb1c595", "1cca2b96-a6fc-4e14-9141-dc671d8693ed", "06f35eea-ef85-44de-b890-d640eb8954bf"],
                'is_public' => TRUE,
                'code' => "GCqaBwJ9",
                'usage_limit' => 8536,
                'min_amount' => 5610,
                'storage_id' => "c7307dd8-6abc-4c53-85e6-016284b2676b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon42()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_percentage' => 5085.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["862a6910-cb88-4d92-b376-02ec46d1e9aa"],
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "1NOUE",
                'usage_limit' => 8157,
                'min_amount' => 6669,
                'storage_id' => "77a128ff-3da3-4c55-a6cf-7b9dc665c8c0"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon43()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_percentage' => 1412.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["85fe33d4-74e5-4f59-b5e1-ccb55bd97244", "902b3ef6-110c-48e5-8af3-a4ee7c4c6e38", "5e129fa7-74a6-4dec-a8c0-053bad574749", "ab264084-1055-49a0-a30d-307e9ab05a67", "29e3dcc9-3908-4f6b-99b0-cfae11f6946f", "6672ea4e-4360-4088-848a-70a8aaa40555", "426d5912-9a34-4e08-bdbb-69247c37a512", "d0480440-cca4-411b-9af4-990ecf02b8da"],
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "Hmd",
                'usage_limit' => 9339,
                'min_amount' => 5494,
                'storage_id' => "48064ff9-31ec-4aa0-891c-927d28cb5c94"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon44()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_percentage' => 3084.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["398df768-72c7-43a1-a4c4-014d8dabcd02", "f3c9e73b-74f8-4703-82aa-86f54c8abfea", "40e3a40f-f417-462f-9c0f-02b814352341"],
                'display_ends_at' => "2021-12-21T15:43:30.000000Z",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "DOA",
                'usage_limit' => 6315,
                'min_amount' => 4099,
                'storage_id' => "c5759a98-b157-4cab-91e5-abaff2a27aef"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon45()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_percentage' => 21.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["47915465-a013-43c6-9fe0-fa0b9c291036"],
                'display_starts_at' => "2020-06-23T10:27:15.000000Z",
                'display_ends_at' => "2022-01-25T23:08:38.000000Z",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "1N9plx7j",
                'usage_limit' => 4121,
                'min_amount' => 5020,
                'storage_id' => "3a1b1b6a-6cc8-46cb-a031-7545636c6696"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon46()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_percentage' => 9979.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["e5f26155-ded1-4869-892b-517522354cd6"],
                'discount_upper_limit' => 3967,
                'display_starts_at' => "2021-01-05T23:06:34.000000Z",
                'display_ends_at' => "2021-11-05T02:04:42.000000Z",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "T2YVV",
                'usage_limit' => 7118,
                'min_amount' => 4769,
                'storage_id' => "79ced667-920b-431d-9d6b-d1687843dec7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon47()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "bd103d21-a16d-4654-931f-6ca445ab6949",
            "s3sss0bSZ",
            "2021-01-14T23:41:37.000000Z",
            "2020-09-06T06:55:56.000000Z",
            "5cb12b63-c3a0-47d2-8735-ba7295336d04",
            [
                'discount_percentage' => 7259.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["83e9307e-f8e9-43cf-a124-494a14fa6f96", "b768a76b-b5b8-4512-a423-3d2753f778c8", "8a472157-2557-4b9f-a2d8-0c4fd4b6461e", "43662892-5c4d-4e73-b91a-a4cd2a1f3e8c", "d8330cde-f2d6-4a90-9802-890beab432a3", "1a395a91-f0a8-451b-91cc-d1313ff0cb08", "6835311d-4489-4159-8f30-31a83c1d095f", "961a639b-2646-4f3e-9326-d989b143b97a", "042db78d-4eaa-4e0b-afd6-57c7d92fb8e0", "71011504-1490-431b-abf1-284ff43bcecb"],
                'description' => "oU3xJNKmuaDr4cMSAgHDAlLlP6Lo5yS1v7L6lCM4yrq4lI3mHyvfAo1Zkwkd2ADoyNq2PW9ePZH1V16DlcE5mr4I9qCPq1klPYIi4fgZzpFf9vCRDU8J59OtcokEMMVhmKz2iBoGU1OxUmIl7jlWxrfEKMQ8FCs062PLb59yfzniw8Z7TrjWh0BQdrr7bOC0AUfJnZn",
                'discount_upper_limit' => 6299,
                'display_starts_at' => "2024-01-27T13:55:31.000000Z",
                'display_ends_at' => "2023-03-28T10:50:23.000000Z",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "CWxbc4",
                'usage_limit' => 6312,
                'min_amount' => 7229,
                'storage_id' => "79e59fbd-ceb0-4e50-b2c4-ee2a4708567f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
