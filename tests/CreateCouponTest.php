<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateCoupon extends TestCase
{
    public function testCreateCoupon0()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_amount' => 317
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon1()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_amount' => 7743,
                'storage_id' => "48c5dff8-ab45-4b08-a26d-bd7badf9cffb"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon2()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_amount' => 7564,
                'min_amount' => 4184,
                'storage_id' => "c0c80dc3-7475-45a3-a144-af2d739892eb"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon3()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_amount' => 8884,
                'usage_limit' => 591,
                'min_amount' => 229,
                'storage_id' => "67cb12cf-3559-4c4d-a427-1f361d7cb5b3"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon4()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_amount' => 5766,
                'code' => "fXlQmJ9",
                'usage_limit' => 8882,
                'min_amount' => 5765,
                'storage_id' => "b7ace199-91ba-4192-9562-d18b8779c0ae"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon5()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_amount' => 3499,
                'is_public' => TRUE,
                'code' => "V3FEVO",
                'usage_limit' => 8256,
                'min_amount' => 9293,
                'storage_id' => "8ab27c4d-f17c-4320-8f60-cc2b26cc7dee"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon6()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_amount' => 9644,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "S",
                'usage_limit' => 1383,
                'min_amount' => 2107,
                'storage_id' => "dc690c70-d36e-4cad-aced-ed43d36558b2"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon7()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_amount' => 8907,
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "yRgGfUfNE",
                'usage_limit' => 352,
                'min_amount' => 1683,
                'storage_id' => "9c144b81-87bc-4bf2-897d-80443a220975"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon8()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_amount' => 6328,
                'display_ends_at' => "2024-07-31T10:11:32.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "YZj",
                'usage_limit' => 3943,
                'min_amount' => 7402,
                'storage_id' => "998d956d-452e-4efd-8e8f-b29a6f0544c3"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon9()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_amount' => 7982,
                'display_starts_at' => "2025-06-12T18:15:46.000000+09:00",
                'display_ends_at' => "2022-10-14T09:04:33.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "bdW",
                'usage_limit' => 1363,
                'min_amount' => 2270,
                'storage_id' => "1b59debc-26b6-49a0-bc5f-7a4a8aa4fec3"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon10()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_amount' => 7197,
                'discount_upper_limit' => 5909,
                'display_starts_at' => "2022-12-30T02:12:22.000000+09:00",
                'display_ends_at' => "2024-09-03T01:47:53.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "d5OFNr",
                'usage_limit' => 2522,
                'min_amount' => 1624,
                'storage_id' => "6b44b7c5-b45d-4d52-ad40-e2862a9fc983"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon11()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_amount' => 434,
                'description' => "aNrZpzYfcTDxwidoKxhgH4IlA44068ievlutMBS788il7UEqSzLy9xJxJq4hHbOAXXYVgVjKzFhmxuYV64qe5o2B2OlLXdk5kJbuw4YuJbyUdwtweakDyg0TFsZujDlCiTABlfIhphFt9MZHKK4Bljx7sJ424DF7dkePprAJuqXJLC9DlGjqYc53kHtf9cD7bpNKlOmIqFEpEzlkbZ",
                'discount_upper_limit' => 6104,
                'display_starts_at' => "2020-06-11T04:43:48.000000+09:00",
                'display_ends_at' => "2025-04-03T22:02:06.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "eK96R7zZj",
                'usage_limit' => 4847,
                'min_amount' => 7512,
                'storage_id' => "85dffd6f-3119-4b2e-ae8a-1bff0b2e5d25"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon12()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_amount' => 3441,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["e36374be-90c2-4201-afe6-bd700db0ff88", "957f5673-fa3b-4902-a436-7cd67dc01298"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon13()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_amount' => 257,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["4c4fb918-393c-4d77-8f3d-bb7d897e47ad", "1e8a33fb-ec0e-4653-8284-d71746c66717", "a786dc28-3f61-4583-9315-be60463ef4d0", "94dab261-48a7-499e-8faa-2b0f46ada3ce", "832f071d-604b-453f-9af8-c8114d4e6f9b", "8df78720-724d-4334-851f-06e2e2202b50", "3e049e83-0386-4396-9993-0c50ec0f3de1", "b7b322ee-4338-4055-9949-4a2bdff1a5a2", "0ad3fe52-b898-46bc-81c9-61bff9e88d93"],
                'storage_id' => "ca299ed3-8f07-49e5-920b-e8d3160f3db0"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon14()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_amount' => 262,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["fca1920d-d5ee-4aa7-a2f7-ecd0eae706ff", "b7956839-0775-4e77-91af-9dd823c2f2f2", "f84e1cd4-f917-4f42-a72d-693cb1d6a257"],
                'min_amount' => 9064,
                'storage_id' => "cbd4074b-68d0-4892-860b-8038b7366f53"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon15()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_amount' => 7727,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["08bf0442-e6a5-4cdd-bab1-61e53cf5e170", "937571df-4ce1-4cc3-86f3-302d45026565", "29d7173e-b43a-4aee-a027-ea669304867b", "5c76ab20-027f-4d0f-9454-25564bd92c6c", "bb1c6dd7-3acd-4f46-ae08-e01adab29ef5", "c6ffcc40-9d4d-4ee7-8afc-6c3cc8f42b49", "35c8dab5-d2df-4ef7-beda-d79b0911afaf"],
                'usage_limit' => 5781,
                'min_amount' => 5129,
                'storage_id' => "ca8e82b1-6f85-4963-8be8-f7d6143a351e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon16()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_amount' => 8499,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["d74780b3-379c-4040-a687-f69481d1f111", "d960915c-09ab-4195-854c-544d6072c282", "b7d953c5-de5c-4827-a3a1-5250f9e5842c", "341974cc-6184-496a-adc4-414fefac9c1a", "9c2edbc8-c876-4054-9968-af4fbe543830", "4fb4221d-5bbd-483f-b6bb-143d9011a751", "40c6a00d-1a0f-4f89-85b7-9d13492e5cc1", "af07bc1a-bbc3-4e58-9b0d-08dc4f389440", "8a5155ee-a01b-471b-b5e7-59dc53410171"],
                'code' => "JAsKtBE",
                'usage_limit' => 8996,
                'min_amount' => 1863,
                'storage_id' => "804e67a5-5352-4d02-92b8-14b75cdd2540"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon17()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_amount' => 7056,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["59a3b1bf-0e24-4f23-bc23-fafa8298cd1f", "83a90942-811d-4de2-84f4-92239659bff1", "0799040e-d2a9-4a80-ac97-8fb5328c0c9f", "f1289d4b-0133-406c-a66f-8b4a713a1713", "09ba1615-9953-4223-a8af-788c0bedb74d", "2786c8c3-5cb6-4375-88c4-911e961ee1bd", "320bc724-6e26-4efe-bb28-8807b850eb32", "a01ea56f-102c-4f8a-9ab5-01512e83d42a"],
                'is_public' => TRUE,
                'code' => "7GXwD",
                'usage_limit' => 8422,
                'min_amount' => 870,
                'storage_id' => "5c21643b-33bc-40d8-951d-e49cff6701db"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon18()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_amount' => 2082,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["57f08c3e-1058-4fc2-bb16-317b8e2ab0e6", "c1784bb9-f2ef-4ae6-8a22-043248fe8bcd", "dc2a3c61-92c2-430f-9294-339aec71ebf9", "ae6defce-21e0-4168-a36b-6c224af34b21", "9dc4d76f-538a-49be-a8de-e62f6c8e8e97", "53525172-1dfa-49cc-a0ab-fbfa027fbb58", "fac19b3c-fc53-4824-8037-87f3ca77110f"],
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "x7iYOPlAj",
                'usage_limit' => 5813,
                'min_amount' => 9892,
                'storage_id' => "86a0ff29-79d5-4799-accd-c9448fbaa5f8"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon19()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_amount' => 3311,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["4914ef36-e9e9-4da7-84e1-4802f899cdf2", "86c5c5dd-ee6c-48aa-9d3f-889ceba0c598", "27f56418-fc4d-4e44-ba8e-9b4ae7477ac3", "82aa7e25-c537-4894-b782-03cde0fdef01"],
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "YNemkzZ",
                'usage_limit' => 6128,
                'min_amount' => 3574,
                'storage_id' => "35cb20ad-cc86-4fc4-8f76-e2ef3d449d5c"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon20()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_amount' => 3084,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["ba44ec6c-ccbb-4f04-a76c-36cc763bbc76", "4c698532-b254-43a0-b930-bd1b52a1f111", "a758e361-de05-4203-8f17-9dc62b572cb7"],
                'display_ends_at' => "2023-09-24T08:48:49.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "JG",
                'usage_limit' => 6999,
                'min_amount' => 4893,
                'storage_id' => "e5e39922-ba10-4846-9c99-03d7afde911c"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon21()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_amount' => 6456,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["25403afc-9047-4721-bf38-05e9e35bcf98", "a1ee9e42-d215-48f0-a52b-0207a4c4c6af", "a6165741-650a-4db9-8ef7-cea63c86e7cb", "45e2f294-01b7-46fc-8ac6-e5e531376306", "0978c7f2-707f-4281-8b6d-459c848d03a6", "a149f34d-e03d-4d44-a8ca-5d1f79d9d189", "3ba8852f-c744-494e-b93e-a222aff5862f", "101e4204-a1be-48eb-bd6a-456eb587a185", "49afdf2a-191f-4504-aa9a-473f3ad883c5", "e7193d2b-c041-4674-af57-79eb6c346d2c"],
                'display_starts_at' => "2024-08-08T14:53:01.000000+09:00",
                'display_ends_at' => "2020-03-15T03:49:47.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "ZC3mt",
                'usage_limit' => 4508,
                'min_amount' => 5038,
                'storage_id' => "ebe44b16-88b5-4aa5-8ee2-b443cdfd21a2"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon22()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_amount' => 4701,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["e5d9cc74-228a-40ae-97f8-43461b9d531f", "32928bfc-b4d8-42e8-8adb-1ca35b73d319", "ee8e2aa3-7f48-44f9-a0da-4e2fb079b69f", "cacacbf8-6d17-41bc-a5b3-88bcf0388f60", "c83f0284-4390-4f60-ad2d-b338e7fc7df9"],
                'discount_upper_limit' => 7798,
                'display_starts_at' => "2022-05-26T09:58:37.000000+09:00",
                'display_ends_at' => "2022-09-28T05:46:59.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "zLfO",
                'usage_limit' => 7859,
                'min_amount' => 5540,
                'storage_id' => "c454532c-3b8e-4227-a50f-71e3d6c31202"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon23()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_amount' => 5197,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["b72e1875-5acb-4ebd-a4f1-2b3381de0046"],
                'description' => "lGbkHo1PhxbbT2umORVj1yDfkPqeu7VGzhCxzDjEPJsArCV0qEvJPpVoq77PuYo1FVSdDE8cTf3i5qFGBCHYpL8ODBvwgaMAc0JPVvhl1tkrYQHQhhRs2PIaofbMQ1Wyxx6iPX8wNVpCNUyiEzApKM66ZkEOto1oTpzcZyDOIWVwoFQcmGYbDKlivyrCrMwSNsOLmKdqXCCeTbwp9jzAmkVeybVqp1YrzurkqIAwcJ63x2Wplkqr",
                'discount_upper_limit' => 2479,
                'display_starts_at' => "2022-12-24T15:56:47.000000+09:00",
                'display_ends_at' => "2022-01-31T17:58:30.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "X6CETl76",
                'usage_limit' => 9901,
                'min_amount' => 2727,
                'storage_id' => "b3f82427-88b4-4775-b100-7d93889451e2"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon24()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_percentage' => 69.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon25()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_percentage' => 2427.0,
                'storage_id' => "0a43ec55-767c-480a-b5db-e38f60f9ce2e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon26()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_percentage' => 3290.0,
                'min_amount' => 5921,
                'storage_id' => "8598cca5-223c-49da-aad8-eda449b31345"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon27()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_percentage' => 9819.0,
                'usage_limit' => 6800,
                'min_amount' => 2055,
                'storage_id' => "8cece700-bbe7-47f3-9822-a0c8ff36fe16"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon28()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_percentage' => 8263.0,
                'code' => "q2ofRTo",
                'usage_limit' => 517,
                'min_amount' => 9817,
                'storage_id' => "ba09bf35-5842-40d8-a795-d12ec2284f81"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon29()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_percentage' => 1603.0,
                'is_public' => FALSE,
                'code' => "jIyZ",
                'usage_limit' => 9754,
                'min_amount' => 1199,
                'storage_id' => "c478a3c9-7cca-49c5-837a-a18ea1501c16"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon30()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_percentage' => 902.0,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "mOEMtSXxz",
                'usage_limit' => 8047,
                'min_amount' => 3691,
                'storage_id' => "facf7e15-e6c7-4259-8b8c-856b94015aa7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon31()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_percentage' => 1769.0,
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "ikW",
                'usage_limit' => 9871,
                'min_amount' => 700,
                'storage_id' => "9ccc4009-5107-4d20-9ad3-bff6b0908515"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon32()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_percentage' => 7866.0,
                'display_ends_at' => "2023-08-09T07:58:50.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "9o8HQUEw",
                'usage_limit' => 1577,
                'min_amount' => 5497,
                'storage_id' => "61bc8670-5a41-4f74-9e5a-411025cc9bac"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon33()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_percentage' => 5403.0,
                'display_starts_at' => "2024-01-19T13:32:35.000000+09:00",
                'display_ends_at' => "2025-08-31T08:57:38.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "gSDOAS6m6",
                'usage_limit' => 215,
                'min_amount' => 3262,
                'storage_id' => "762e1f92-1034-4b08-88ac-ae79a6f1569d"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon34()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_percentage' => 7883.0,
                'discount_upper_limit' => 7870,
                'display_starts_at' => "2020-05-09T23:31:49.000000+09:00",
                'display_ends_at' => "2021-05-06T20:01:51.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "4636lRX",
                'usage_limit' => 9438,
                'min_amount' => 6612,
                'storage_id' => "b606b52e-1df2-47b2-8d1f-4588ca20a469"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon35()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_percentage' => 2957.0,
                'description' => "pZt0j1CI3l6J30qBjXV2f99mPOolq1eiW9RuNHXLsbYmrfHwiW6AehvKLu9jSykyDMxjQhXvqsNkUwpnxOJbMzTMi5NaDqvIkEgkU1iGJo4Veu1nD62pEennAfXO8IbuWWi93UYOzWoEzm8A2AGl9yivXZBxfQ6TXMiAoASOIgsAFMRnA6RqJv3Yoi1HNQ6SUUxfHdkFZrSjoj4E9",
                'discount_upper_limit' => 3869,
                'display_starts_at' => "2024-03-11T07:53:00.000000+09:00",
                'display_ends_at' => "2024-09-12T03:16:43.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "ODS",
                'usage_limit' => 6555,
                'min_amount' => 4584,
                'storage_id' => "9216261f-ee12-4a3f-9c0f-b5a85b2dced2"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon36()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_percentage' => 5608.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["4924d4e6-c4b1-49fc-b22f-530b96bdcffd", "6ae05566-c19f-407e-80c8-a7a7b755a331", "7ed81eb8-2175-4db3-9a1c-5f6c0559a1d7", "2af6c37f-e5dc-4a06-9ec0-69d3d6795308", "aa2df88a-7a72-4636-a2f8-14c2c117a8c0", "bbd54bf8-30ab-41a9-a871-532c0a2879a4", "15afc738-4560-4da6-8a0b-cde8bd22aefa", "4f8f124c-9d04-41ca-93cb-f17c2ea79a47"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon37()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_percentage' => 9354.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["53348d22-896c-4983-b723-b281067718bf", "59518507-47f0-49e5-a5a0-053e06d04e3b", "32f84eac-3c67-478f-b539-6f60956ba593"],
                'storage_id' => "435be8b9-cb69-4b29-8c2c-326b4d5e3594"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon38()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_percentage' => 8076.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["c59ca1dc-49fd-4fe3-9ae5-495237539ac8", "bc443330-b6b9-4ef0-b38d-4ea88ed5bfc4", "3ed4673f-1e02-4dea-bb27-8ba4722622e6", "ccfe7321-81b3-4e55-bd2d-8f588f7a1092", "20556f88-b8c0-46d8-8db3-3354d32ef5fb", "96803410-7397-49dd-b529-b8c67bec2d16", "45fedcc0-d00f-4158-9ff6-374a177dc281", "006086d4-5a72-40eb-99b8-e855a53cc010"],
                'min_amount' => 3826,
                'storage_id' => "f4d8caf3-c878-46b5-98a3-3aab54be95d6"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon39()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_percentage' => 2429.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["5a8369b8-b3f5-4da3-94a8-f361ace03c1c", "6ef4a09f-246b-469d-a345-d0495999ba25", "dfba6179-b2f8-4f51-ba60-11b70be67d44", "7baf9891-157f-450b-bb85-f8349565a101"],
                'usage_limit' => 4918,
                'min_amount' => 3753,
                'storage_id' => "dc10a996-a29f-47bf-bd12-2bd3fc3be5a5"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon40()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_percentage' => 9159.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["8e989502-5f90-4f8a-9f83-a0668a78dc45", "93581364-bd70-420b-8491-dfac6fd4cf30", "008e847d-13d5-45d2-9cd6-e70b636d3e6b", "6ab27a46-c996-4b4c-946d-9183c885476c", "7f58953e-4ef8-4d70-b827-3cdb4e15e5d3", "e2f48f3d-93c9-4ab9-9563-f6581cb1ba0c", "5c009de5-1c73-442d-90e3-67f24e460bed"],
                'code' => "D5nk",
                'usage_limit' => 567,
                'min_amount' => 7441,
                'storage_id' => "127d0b21-20c8-4228-87bf-9fece6e806f9"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon41()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_percentage' => 5299.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["08885fbb-3aa5-4f0d-8932-78488de8d91d", "d5ea4b80-702c-40c2-b4a1-e6f71f570d2e", "b9163fc8-bf46-47e2-bd43-6947410f5978", "a7d94011-76b0-439e-9d2e-d6d8f72ab37a", "9965f540-b9f1-46f8-b2f7-9e132882adde", "23ba3d28-1bad-4187-b4e1-8bc0202b3fcb"],
                'is_public' => FALSE,
                'code' => "u",
                'usage_limit' => 1585,
                'min_amount' => 5873,
                'storage_id' => "4a2fb4e4-1308-42ed-8d69-2acb81ed42db"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon42()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_percentage' => 3054.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["5357d5dd-91b2-4b32-8b46-108f54715db3", "790476e3-570a-4d28-ad13-87f4790072a9", "a51aa449-c273-480d-a7f8-2badaf9be3bb", "61a99690-ce54-46d4-969e-f05d9a80e28b", "93f14e32-f4b4-4557-a32b-fab348d063e9", "d7cdb44d-433a-4713-a3ea-8a0a3f1d0167", "a75f1423-460a-48aa-83bd-836169663de6", "76ea8c34-33f6-4931-8605-52dd662984b7"],
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "zb24TvVYyz",
                'usage_limit' => 656,
                'min_amount' => 7294,
                'storage_id' => "97f93309-802d-4da3-af8f-7d4e1226b183"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon43()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_percentage' => 8665.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["41f7efaf-8221-4958-86f8-25249fd9e78d", "26556ef1-4cef-4f60-ae6b-1b1de742784d", "61f72dbe-4047-4d7d-b158-1aec899824ca", "81a00298-5f70-417b-8ad2-8851ee1b18f7", "cfc24c2b-68db-4e70-b92a-eaee4e9eb96e", "dd12d114-d6b9-4ba5-9f63-bf7648851830", "f8e26c18-5384-46f0-b2f5-8379b1c5feba", "86a65667-a5ed-45c8-a290-3f4bbcf1bdf1", "22bc9547-8f0f-4bee-ae4f-5aa1a3db2aa7", "144b0a81-ede5-49cd-b4a1-dec67fbf579a"],
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "ZtBM",
                'usage_limit' => 5828,
                'min_amount' => 2080,
                'storage_id' => "6a8cdd9b-673b-4bb0-91ca-c2a96be4a0ab"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon44()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_percentage' => 6441.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["895b585b-6e64-40d7-be05-26c62b5a9c45", "b298e523-df25-4e94-b817-fc35ed9b455a", "df316a6a-2427-40e2-95aa-74fdd2e124e1", "5863d2ae-5320-4f1e-94e0-40c5868ffdac", "f646b2ba-e53a-428b-8e03-3d8e97c18968", "dbc9b9ed-36f8-42b5-a043-b2e84054590b", "e5eb904c-b693-4c71-8293-9527089550f6"],
                'display_ends_at' => "2023-07-12T18:45:43.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "g6w",
                'usage_limit' => 7167,
                'min_amount' => 4228,
                'storage_id' => "182fe90b-5194-45a8-a845-565f18cbb09b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon45()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_percentage' => 8770.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["2b4342db-4a38-4438-8b30-f7eca6b96bcd"],
                'display_starts_at' => "2022-01-18T11:40:50.000000+09:00",
                'display_ends_at' => "2023-01-22T18:53:49.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "tofOwuX4D",
                'usage_limit' => 2285,
                'min_amount' => 4651,
                'storage_id' => "5d1c2c58-811e-4298-9073-5efb4b171f84"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon46()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_percentage' => 957.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["00b87e88-ad55-4aef-a512-5ed692c2ee27"],
                'discount_upper_limit' => 1708,
                'display_starts_at' => "2021-01-30T15:28:49.000000+09:00",
                'display_ends_at' => "2023-03-10T17:54:32.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "78h5Guqwm",
                'usage_limit' => 5860,
                'min_amount' => 4606,
                'storage_id' => "54038678-f3af-4939-88a5-9330ab25d64f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon47()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "4f32958d-00ef-4d62-9a96-e6c53ebdf96f",
            "LvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCqAbvDaj08T6AqfU9VC96cIIeErItINWil5tFd",
            "2020-05-06T17:33:18.000000+09:00",
            "2021-03-23T15:22:29.000000+09:00",
            "cb4612e6-eb14-4277-819f-bb1187dbbb83",
            [
                'discount_percentage' => 6352.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["f222d4db-080b-4dd8-b30e-0ea6862c8a03", "a6c690f9-c4ba-469f-9020-62b9fe243670", "fef113b5-550f-47de-b9b2-c9416469e195"],
                'description' => "XdzXIFXZbjsiiNiXZ0lFTg0buQwKeaQ4HWfPuDn8vtLGTKy9baAXpUrNxQgJv2d1RjRDvxxlQFhM2eopmIlmvqzqnGOYbg6rdqjemTbEPE7it6nxw8VlzyCNbz8zcALV0qfahEqSWpbWk8lIjmXf3crokuVBQQlsA8T5nZUMuDqspHuPmGiUoPte",
                'discount_upper_limit' => 280,
                'display_starts_at' => "2024-02-14T05:00:17.000000+09:00",
                'display_ends_at' => "2021-09-05T18:13:26.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "3G",
                'usage_limit' => 1283,
                'min_amount' => 9300,
                'storage_id' => "fa09d9a7-03a9-4c8b-8bca-ac05bab9e0dc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
