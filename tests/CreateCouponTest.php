<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateCoupon extends TestCase
{
    public function testCreateCoupon0()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_amount' => 4231
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon1()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_amount' => 4951,
                'storage_id' => "d84ac553-48de-4ebc-b6a0-cd3c35abde5f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon2()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_amount' => 7197,
                'min_amount' => 5909,
                'storage_id' => "75a26806-89c9-4df5-8ead-b62cb0901895"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon3()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_amount' => 484,
                'usage_limit' => 3836,
                'min_amount' => 2869,
                'storage_id' => "514deb0a-664f-4a8d-86ce-e9f28ea389da"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon4()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_amount' => 1624,
                'code' => "R72QaN",
                'usage_limit' => 8306,
                'min_amount' => 8410,
                'storage_id' => "de0a0ef0-8f7a-4497-a7d9-6f84b17bd7af"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon5()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_amount' => 2218,
                'is_public' => TRUE,
                'code' => "cTDx",
                'usage_limit' => 2189,
                'min_amount' => 5760,
                'storage_id' => "52fd1577-a495-4a69-a4ae-afef2b1fcb4b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon6()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_amount' => 5131,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "gH4IlA440",
                'usage_limit' => 6566,
                'min_amount' => 515,
                'storage_id' => "318eb936-7638-47c0-a9e5-f17607984b2b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon7()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_amount' => 793,
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "tMBS",
                'usage_limit' => 4631,
                'min_amount' => 7095,
                'storage_id' => "2b025638-1c99-4417-b8e9-52a1fed9156c"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon8()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_amount' => 2144,
                'display_ends_at' => "2024-01-11T13:13:31.000000Z",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "UEqSzLy9",
                'usage_limit' => 8696,
                'min_amount' => 4042,
                'storage_id' => "35688bf8-2eca-463b-b134-8e68f41cc17f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon9()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_amount' => 6728,
                'display_starts_at' => "2021-11-30T00:58:55.000000Z",
                'display_ends_at' => "2023-07-08T11:32:17.000000Z",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "YVg",
                'usage_limit' => 6040,
                'min_amount' => 8406,
                'storage_id' => "b37db7ea-54cb-4edd-99fa-3c46d0ef4d68"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon10()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_amount' => 3109,
                'discount_upper_limit' => 8449,
                'display_starts_at' => "2021-08-29T19:05:04.000000Z",
                'display_ends_at' => "2020-11-22T20:28:29.000000Z",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "YV64qe5o2B",
                'usage_limit' => 2303,
                'min_amount' => 7968,
                'storage_id' => "832f5a6c-ae12-484c-ad25-22d822fc2d81"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon11()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_amount' => 2916,
                'description' => "k5kJbuw4YuJbyUdwtweakDyg0TFsZujDlCiTABlfIhphFt9MZHKK4Bljx7sJ424DF7dkePprAJuqXJLC9DlGjqYc53kHtf9cD7bpNKlOmIqFEpEzlkbZXsHeK96R7zZjofXop8q4Bfps6VchHwOSBaSPaNKxM4bPYPan8UYIRAISeS032nbwP9uwXrTBWthKP8SFB1epaCsenfTVlWMFnuMgJI5wZ1cKhV863o3fLMEPLjDOHvTYhO06QE7ACXnu",
                'discount_upper_limit' => 2791,
                'display_starts_at' => "2022-06-02T04:21:48.000000Z",
                'display_ends_at' => "2021-09-23T20:24:17.000000Z",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "A",
                'usage_limit' => 37,
                'min_amount' => 1544,
                'storage_id' => "3d6b48fd-be4b-44a0-bc0f-65f4bd4a72db"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon12()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_amount' => 2882,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["5f137aae-6fe8-4fe6-af24-8747804e67a5", "80fc5352-fd02-4c12-b8b7-2540576f9b90", "993967c7-bcee-4b87-bf24-5f238d5e9bbc", "0ca79f23-fafa-4d1f-821d-5de23e7cac44", "7f2082f4-9223-4ff1-8ea9-ca80e84c03ac", "a0b7d697-8fb5-4c9f-8b33-306c4fc21ee6"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon13()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_amount' => 7535,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["09ba1615-9953-4223-a8af-788c0bedb74d", "2786c8c3-5cb6-4375-88c4-911e961ee1bd", "320bc724-6e26-4efe-bb28-8807b850eb32", "a01ea56f-102c-4f8a-9ab5-01512e83d42a"],
                'storage_id' => "7458c5f0-52fb-4544-b7c7-458b4231f158"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon14()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_amount' => 803,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["fab8e0e6-c366-443b-bcd8-2255185b601d", "dacde49c-01db-4822-b4dc-840657f08c3e", "fb5b1058-6fc2-433b-967b-b0e6c1784bb9", "2980f2ef-4ae6-418a-a232-8bcddc2a3c61", "27d392c2-830f-4792-949a-ebf9ae6defce"],
                'min_amount' => 8672,
                'storage_id' => "fdcc6168-91a3-406b-a221-d76f5e2a538a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon15()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_amount' => 9384,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["53525172-1dfa-49cc-a0ab-fbfa027fbb58", "fac19b3c-fc53-4824-8037-87f3ca77110f", "8dc380bf-67e1-4808-b837-9269fbf85cd9", "2b787224-d14f-4fd0-af99-f63de7a49823", "6dbe566c-97c1-4cea-b5a4-ff29786779d5", "3df40799-b6ec-4ecd-84f8-ccefbde4e85e", "77f61983-ef36-49e9-a744-42e1ab6e4802", "f899cdf2-c5dd-4e6c-aa1d-323fe83c889c"],
                'usage_limit' => 1432,
                'min_amount' => 9240,
                'storage_id' => "4bd9fc4d-0e44-41fa-8e4a-7ac382aa7e25"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon16()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_amount' => 1335,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["74790682-03cd-4f01-80c1-91eb2f03b6c6", "540e12d9-9928-463e-8ea3-de6571e4e06d", "0db1e09b-ca6b-427a-9af0-cdf635cb20ad", "216fcc86-2fc4-4b8f-b6ef-9d5cd9dfffe7", "656a8c0c-c4b0-4b12-acbb-9f047886a867", "29994a6c-36cc-4c76-b254-33a0f354f239", "c9e37030-bd1b-4111-a105-1203b1a37ecf", "bfcd2117-9dc6-4cb7-9c7b-16f1822d1cbe"],
                'code' => "JG",
                'usage_limit' => 6999,
                'min_amount' => 4893,
                'storage_id' => "e5e39922-ba10-4846-9c99-03d7afde911c"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon17()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_amount' => 6456,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["25403afc-9047-4721-bf38-05e9e35bcf98", "a1ee9e42-d215-48f0-a52b-0207a4c4c6af", "a6165741-650a-4db9-8ef7-cea63c86e7cb", "45e2f294-01b7-46fc-8ac6-e5e531376306", "0978c7f2-707f-4281-8b6d-459c848d03a6", "a149f34d-e03d-4d44-a8ca-5d1f79d9d189", "3ba8852f-c744-494e-b93e-a222aff5862f", "101e4204-a1be-48eb-bd6a-456eb587a185", "49afdf2a-191f-4504-aa9a-473f3ad883c5", "e7193d2b-c041-4674-af57-79eb6c346d2c"],
                'is_public' => TRUE,
                'code' => "0y",
                'usage_limit' => 986,
                'min_amount' => 659,
                'storage_id' => "a4cc108c-afc3-4cb3-ad74-119cc76627bd"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon18()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_amount' => 5038,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["afc00aa5-424e-4ee2-83a2-2c663736bcae", "b9d4f3a3-d25d-4cea-8474-228afa3b30ae", "e9785497-c4f8-4346-9ffc-b4d8df5a02e8", "d3ae5c4a-c8db-4ca3-99a3-7f48f488f4f9", "bfbd11a0-1eda-4e2f-9ff8-6d17c13321bc", "2dee5b65-7fb3-48bc-a084-43909e1a0f60"],
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "yvM1SEczL",
                'usage_limit' => 9062,
                'min_amount' => 7859,
                'storage_id' => "2cdaf362-15a4-432c-8e27-a8251a6cb20f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon19()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_amount' => 4610,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["b2b58c20-1875-4acb-bd64-2df1ef482b33", "81de0046-9ff3-4609-8e15-50829ef99f28", "f67f359e-9eec-477d-8762-d18a18c4e7eb", "e047f1c8-5e07-4126-956f-ab31d10d7dff"],
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "hxbb",
                'usage_limit' => 1819,
                'min_amount' => 3122,
                'storage_id' => "5f166e75-1b26-4eab-ad4f-061ab0ae3e98"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon20()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_amount' => 4483,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["ff693f86-3f52-4456-aa1c-e3b183a71a5e", "ad605d79-7599-4844-bc66-de074eaf406b", "154926d0-4aaf-463d-be7b-d2f17f9bf865", "f89b0b75-da92-488a-8a37-9423ee4b1e2a", "6d2a173c-0e92-478e-9614-451f07492c97", "210b4d98-6d1e-41a6-87fa-82075be5a419", "8e9bf5be-cbe8-4c84-9d43-0af8c88b1e7a", "1bbf3cc4-3686-4960-a7ea-1e875c41ada0", "557692c5-1250-4526-8a3e-287fc545fd2a", "22e6ee73-105c-44c1-9df2-4e27d3d658c3"],
                'display_ends_at' => "2023-02-04T18:21:51.000000Z",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "Ev",
                'usage_limit' => 394,
                'min_amount' => 3074,
                'storage_id' => "c93d2d8a-6f4a-41ff-8428-b350f080c270"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon21()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_amount' => 4621,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["e6344cc0-f66f-4484-9e16-29a3bd46c33d"],
                'display_starts_at' => "2020-04-23T22:26:36.000000Z",
                'display_ends_at' => "2023-02-26T06:52:07.000000Z",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "u",
                'usage_limit' => 2799,
                'min_amount' => 2270,
                'storage_id' => "700a99d6-061d-4853-a49a-1f29804aa2c4"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon22()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_amount' => 6597,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["852b6263-c5ff-4b54-a966-2b93703396a9", "32cc383e-6309-46b3-a996-66aaf8553d35", "7a00ab8b-6b7f-45de-b1c6-b22a90e3c0c7", "459103c2-d243-482a-885d-8dd9b9f80998", "a5e48a70-3fcc-4fbe-b8cf-c2c4f8394342", "cca78476-942b-4ff7-8a7d-3ce70ba4c161", "92e66a4d-7c8e-41c1-96e3-afb00de08ebd", "9c421dca-4ed0-4dd6-82ba-1ea20b7de02e", "0744fc76-fd90-4b18-9fe8-836c18afbe07"],
                'discount_upper_limit' => 4032,
                'display_starts_at' => "2024-03-04T04:55:13.000000Z",
                'display_ends_at' => "2023-11-26T03:18:44.000000Z",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "rYQHQhhR",
                'usage_limit' => 4355,
                'min_amount' => 3392,
                'storage_id' => "8633b2b2-d5d0-43c9-8e61-bcfbb2feaea7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon23()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_amount' => 2070,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["ca9bc93d-017f-4f6f-a662-39865ebbbecd", "2cd716a8-69d1-4f31-9fd7-2207321431f9", "b7c70778-f27e-40f8-8a36-30ac9cd35769", "60942c50-8658-4cb8-a495-6991753ac477", "d08e584e-5556-411f-b043-ae20a255ab4e", "a3c74555-b379-4369-8505-f7a6ef9204fa", "9433459d-fe41-4e70-8bdf-9b4d76305a7c", "875ea41c-1dbb-4ab6-b6da-51bd9c9b1dde", "493f4840-28a1-4aeb-858f-8b86cf5bfe4f"],
                'description' => "to1oTpzcZyDOI",
                'discount_upper_limit' => 4567,
                'display_starts_at' => "2021-09-10T19:35:58.000000Z",
                'display_ends_at' => "2024-08-24T06:41:00.000000Z",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "oFQcmGYb",
                'usage_limit' => 6827,
                'min_amount' => 7805,
                'storage_id' => "dd6f1c44-364b-4d02-ac05-23e9d718f386"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon24()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_percentage' => 3342.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon25()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_percentage' => 9334.0,
                'storage_id' => "f1f87b79-f99a-48f2-83c3-2d8586fbfef2"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon26()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_percentage' => 9591.0,
                'min_amount' => 5696,
                'storage_id' => "97f1d6d3-1bce-46a4-97f3-65843f0af64f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon27()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_percentage' => 9292.0,
                'usage_limit' => 2701,
                'min_amount' => 2148,
                'storage_id' => "010ac9f1-65d8-4943-9b9a-8c951ab36b43"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon28()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_percentage' => 7525.0,
                'code' => "bwp9j",
                'usage_limit' => 4474,
                'min_amount' => 65,
                'storage_id' => "92ac7a6d-de6b-49d6-99e5-2419ae00197e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon29()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_percentage' => 5377.0,
                'is_public' => FALSE,
                'code' => "b",
                'usage_limit' => 1521,
                'min_amount' => 8098,
                'storage_id' => "5fb8fb70-6331-4a1c-99f2-15fa6527a7f5"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon30()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_percentage' => 6160.0,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "IA",
                'usage_limit' => 2039,
                'min_amount' => 4195,
                'storage_id' => "564af7ca-5336-435e-b3f8-e8b22e1cf857"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon31()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_percentage' => 5001.0,
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "qrFdjX6",
                'usage_limit' => 9925,
                'min_amount' => 3936,
                'storage_id' => "afda826c-9d18-4637-b6ad-6d833f6a0aa7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon32()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_percentage' => 9255.0,
                'display_ends_at' => "2022-05-28T00:15:48.000000Z",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "bEUu",
                'usage_limit' => 9103,
                'min_amount' => 3630,
                'storage_id' => "cfa24cda-2ea7-49f3-a1a5-223c315959da"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon33()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_percentage' => 42.0,
                'display_starts_at' => "2023-05-22T02:08:36.000000Z",
                'display_ends_at' => "2024-02-14T13:59:55.000000Z",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "g",
                'usage_limit' => 6131,
                'min_amount' => 8392,
                'storage_id' => "ff36fe16-a047-4186-b132-0c6f4e6e6ce6"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon34()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_percentage' => 6334.0,
                'discount_upper_limit' => 8477,
                'display_starts_at' => "2021-09-24T10:41:03.000000Z",
                'display_ends_at' => "2021-01-30T11:38:19.000000Z",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "Y5BXgC",
                'usage_limit' => 2191,
                'min_amount' => 1084,
                'storage_id' => "0cfb2493-c47b-4d3a-aa1a-4ec9a9292679"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon35()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_percentage' => 9104.0,
                'description' => "IJEzXmOEMtSXxzZokGYkRiArikWZSvWA49o8HQUEwypAtZsgSDOAS6m6W4ycEKeHr4636lRXTr2iPpZt0j1CI3l6J30",
                'discount_upper_limit' => 6129,
                'display_starts_at' => "2024-05-19T20:19:14.000000Z",
                'display_ends_at' => "2023-01-27T19:12:04.000000Z",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "V2f99mPOo",
                'usage_limit' => 7020,
                'min_amount' => 3441,
                'storage_id' => "acdb7731-efba-4565-9ee9-99aad0b5abd7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon36()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_percentage' => 6208.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["b3bee5ad-253a-4275-bece-b41a3138fa5e", "66df94c8-e01f-49d8-9ecc-6673ff7ae318", "b5f64f62-52a5-42fd-996d-565d85fc3aac"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon37()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_percentage' => 5874.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["125b4eba-c0c8-4bf7-a9ba-858007b3c3a5", "beeaeb57-00b6-4fa3-9fc1-c51021177765", "28c0921b-2b68-4b9f-b61b-8b4b0955554c", "3975e4a8-33f5-40b9-aad3-47f97d91d33e", "28cbe880-ea6b-4a40-ab91-65f95830d944", "92b0c498-78bf-44cd-9515-9f263a67f402", "010d2778-0a6a-4bdb-9168-64ad3f2b3b2e", "e80ca01c-ae80-4f86-9825-013a8d8931f6", "e291c671-f373-4283-ba27-e44eb196ec98", "3a513d6b-c555-46f7-b004-dfdd8a19749b"],
                'storage_id' => "a73fc16e-efde-4af8-8f4a-97629986f126"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon38()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_percentage' => 1150.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["0c5a7704-f890-47cd-a935-cccecbc11507", "dc6e99e1-3191-45c4-b176-178a7fa22249", "24c0c02f-8c0b-4d8e-ab45-402252eb72e7", "843ebeeb-7c29-4b02-9591-6abf868f0131", "419852e9-6f47-494a-af34-39fcff222e56"],
                'min_amount' => 420,
                'storage_id' => "0a8bb1a6-0b04-410d-9de5-8a752c1727af"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon39()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_percentage' => 6449.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["c25ed2ee-dd44-40a4-b632-df70b9c7b845", "9c0f1865-6dee-446e-812c-942d80e6b5e6", "2af67f58-f2cf-4a82-9eb8-12c9daca3319", "52ab2b62-4c75-49d7-bad7-94924aee40e9", "7d6ad994-2f08-4db9-9e33-5fdd5b3554a6", "de78f7bf-e555-4c02-9981-364fa5a4887a", "7c6194d7-aea9-4f0a-8700-962e114c356f", "a615acc5-3d7a-40ed-b8c1-4432caadb503", "29b489c1-f5c7-4e3c-ac81-58996a5172a1", "43c69b3d-150c-4196-8f1f-542058b0edb9"],
                'usage_limit' => 6307,
                'min_amount' => 5625,
                'storage_id' => "508e0ee9-c68b-4b76-985b-6d0799b36dda"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon40()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_percentage' => 1218.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["3bd876e6-291c-4bde-918f-48367cc50054", "4d06fe09-d8dc-4cd8-acbb-ffcda8f10669", "8a89df5c-a6ff-44c1-9484-271764bbc96f", "3ee0712e-6eac-4a0e-81a2-fa8c91862d25", "159a24d3-924f-417b-89e7-c6f395afaeff", "da236641-7246-41fb-8d03-f152fe5f7d3a", "81493dee-9d41-4617-b6d2-faf128556a1c", "eee33aca-a0a2-4983-b6ba-92b3eb1aef5d", "dbd27c9e-3e83-43a6-840f-e6d97d1b8786"],
                'code' => "1HNQ6SUUxf",
                'usage_limit' => 4757,
                'min_amount' => 510,
                'storage_id' => "34147fc8-188d-47aa-a415-1eeb0973bf46"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon41()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_percentage' => 9946.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["414be753-1c8d-486a-a7ef-f26a23eebab4", "2c0c28ba-b2c5-4c60-99a9-4482b05fc960", "593e3439-4f1d-4fa5-9c30-2b28ff8943b6", "eb0a2f68-7c1b-436a-9d12-a3cf12540202", "371e9ea8-87cf-475d-9d5b-c68452f48798", "90d5433a-99c4-42d3-9bcb-30e685627058"],
                'is_public' => TRUE,
                'code' => "Rhf",
                'usage_limit' => 1201,
                'min_amount' => 6652,
                'storage_id' => "7ecee732-4a2f-430b-bd66-c19f2970d07e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon42()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_percentage' => 9009.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["f2a80db3-b99a-411c-acd7-c37f3c6ee5dc", "3eabba06-fd1e-4ac0-9308-f88a7a407a72", "642c6636-9b62-4cf8-82c0-4bf8a47930ab", "10c2e1a9-9568-4271-aca4-c738c7254560", "47fe8da6-160a-490b-a8fa-124c00b59d04", "9aa011ca-1613-4bcb-bc47-648a74699713"],
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "7peg",
                'usage_limit' => 7285,
                'min_amount' => 57,
                'storage_id' => "2f3a6f60-a593-48b9-a929-984c7218e02c"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon43()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_percentage' => 8076.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["c59ca1dc-49fd-4fe3-9ae5-495237539ac8", "bc443330-b6b9-4ef0-b38d-4ea88ed5bfc4", "3ed4673f-1e02-4dea-bb27-8ba4722622e6", "ccfe7321-81b3-4e55-bd2d-8f588f7a1092", "20556f88-b8c0-46d8-8db3-3354d32ef5fb", "96803410-7397-49dd-b529-b8c67bec2d16", "45fedcc0-d00f-4158-9ff6-374a177dc281", "006086d4-5a72-40eb-99b8-e855a53cc010"],
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "VM8uak",
                'usage_limit' => 9885,
                'min_amount' => 7907,
                'storage_id' => "944fb545-d049-4a25-b9f8-5f51adbc9b7a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon44()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_percentage' => 3424.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["7baf9891-157f-450b-bb85-f8349565a101", "20583709-d336-4ea9-969f-17bf5de5047d", "2990c112-2bd3-45a5-8794-a4168e989502", "d1565f90-ff8a-459f-8366-dc4593581364", "726ebd70-620b-45c4-91ac-cf30008e847d"],
                'display_ends_at' => "2023-04-01T00:36:44.000000Z",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "LTmlxp8",
                'usage_limit' => 9683,
                'min_amount' => 3901,
                'storage_id' => "9f7793c9-aab9-4195-a358-ba0c5c009de5"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon45()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_percentage' => 7283.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["abca8ce3-67f2-4bed-931d-8312a5499d7d"],
                'display_starts_at' => "2024-08-07T05:42:28.000000Z",
                'display_ends_at' => "2021-12-10T23:13:57.000000Z",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "kp7T",
                'usage_limit' => 7441,
                'min_amount' => 2849,
                'storage_id' => "eca520c8-1228-4ec7-bfec-06f9ed787e48"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon46()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_percentage' => 5299.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["08885fbb-3aa5-4f0d-8932-78488de8d91d", "d5ea4b80-702c-40c2-b4a1-e6f71f570d2e", "b9163fc8-bf46-47e2-bd43-6947410f5978", "a7d94011-76b0-439e-9d2e-d6d8f72ab37a", "9965f540-b9f1-46f8-b2f7-9e132882adde", "23ba3d28-1bad-4187-b4e1-8bc0202b3fcb"],
                'discount_upper_limit' => 2416,
                'display_starts_at' => "2023-08-04T22:34:29.000000Z",
                'display_ends_at' => "2024-05-23T11:23:29.000000Z",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "miKn22F3c",
                'usage_limit' => 5898,
                'min_amount' => 7464,
                'storage_id' => "758c0fad-ab13-47f4-a949-c2731c76f80d"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon47()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3e52cf6d-064a-418e-980b-ce392280387a",
            "bnV3FEVOMMOncgSgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmC",
            "2022-10-14T09:04:33.000000Z",
            "2024-09-29T02:09:06.000000Z",
            "7ccfff36-5342-468e-8b12-a2ad5b329ce2",
            [
                'discount_percentage' => 7207.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["5670ce54-36d4-43d6-9e5d-e28b93f14e32"],
                'description' => "W3iMjgCaf4v1F7zb24TvVYyzGoNYLIXxqonkMGqXlJpJRQwp9nn9cv0p2uygmHKqGnnOeMtFto3ZtBMyDD0JldWFE85ZjbUaTENhmx5ChLqBvfWnrg6wEB880lMBDEtofOwuX4DmXscPUoeV1XH78h5Guqwmdx9H0OP7RXsy9p5y2A7XdzXIF",
                'discount_upper_limit' => 3239,
                'display_starts_at' => "2023-08-16T23:59:57.000000Z",
                'display_ends_at' => "2021-05-18T04:29:23.000000Z",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "bjsii",
                'usage_limit' => 9615,
                'min_amount' => 974,
                'storage_id' => "496f5f3d-e02d-4d3e-a98f-d59809ef2907"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
