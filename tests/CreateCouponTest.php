<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateCoupon extends TestCase
{
    public function testCreateCoupon0()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_amount' => 4436
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon1()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_amount' => 66,
                'storage_id' => "6d5b2fb4-449c-4ef0-9c68-9bf04ce7836a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon2()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_amount' => 5748,
                'min_amount' => 3074,
                'storage_id' => "af17e701-51b6-4517-9dab-d91da208b5d1"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon3()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_amount' => 5508,
                'usage_limit' => 2303,
                'min_amount' => 6679,
                'storage_id' => "ba55870e-6365-44af-842e-9da851d52b4b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon4()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_amount' => 7340,
                'code' => "xXdE",
                'usage_limit' => 9254,
                'min_amount' => 3978,
                'storage_id' => "56518360-3db3-474f-9778-4efb9cc9c928"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon5()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_amount' => 2271,
                'is_public' => FALSE,
                'code' => "ZaVS",
                'usage_limit' => 3647,
                'min_amount' => 5744,
                'storage_id' => "a71eadaf-4805-4f88-9d5d-3b8f66ce191b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon6()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_amount' => 4122,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "Q6ffYAe6",
                'usage_limit' => 7445,
                'min_amount' => 2308,
                'storage_id' => "d647966b-8dbb-4e70-ae1a-6dd8c180197c"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon7()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_amount' => 6462,
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "iSBUI",
                'usage_limit' => 2149,
                'min_amount' => 1589,
                'storage_id' => "d7705f2d-b269-44db-b1c9-bb061b5ba49a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon8()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_amount' => 4429,
                'display_ends_at' => "2022-02-05T07:59:11.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "BK",
                'usage_limit' => 9811,
                'min_amount' => 9286,
                'storage_id' => "a89b11c7-de7c-4360-8a4c-6e208d76b3f5"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon9()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_amount' => 4029,
                'display_starts_at' => "2021-02-15T12:55:08.000000+09:00",
                'display_ends_at' => "2021-07-07T14:09:28.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "n2oMY",
                'usage_limit' => 722,
                'min_amount' => 2468,
                'storage_id' => "283c529d-98c6-4685-a8aa-feb83841fdfe"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon10()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_amount' => 7073,
                'discount_upper_limit' => 4267,
                'display_starts_at' => "2023-09-30T02:26:43.000000+09:00",
                'display_ends_at' => "2022-06-10T11:39:29.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "pFoK",
                'usage_limit' => 5418,
                'min_amount' => 8887,
                'storage_id' => "a51d3260-0821-456a-9967-c3788176e191"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon11()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_amount' => 4787,
                'description' => "gTJKy6dBb3ykYYVRZ4jdyfDGYQa0QPCC60HT399N8hkxoS",
                'discount_upper_limit' => 9374,
                'display_starts_at' => "2022-11-26T10:58:25.000000+09:00",
                'display_ends_at' => "2023-03-28T04:16:35.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "U0HuG3",
                'usage_limit' => 1074,
                'min_amount' => 1753,
                'storage_id' => "387983e4-8281-4ed2-85d1-6d9fa860b625"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon12()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_amount' => 9626,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["b919d8dd-80b9-4f01-a0a2-ae97dfd8438c", "74834abb-cf6e-40da-8442-d2550a12ce76", "15adc634-3e15-4f07-862c-71388aa40edf", "665deede-d003-4a0b-8add-b92285395937"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon13()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_amount' => 9903,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["6ccd7806-9192-46bc-8fdb-6fc43cec1b9e", "0028b33b-8907-497b-9945-4a76fcbb40dc", "222afb27-9329-4ab7-a263-1690f2a6ebf4", "dddd63af-fde3-486d-90c9-4571c3cdcfe4", "c95b2ba7-3998-43ed-8076-001fc0eaa9a0", "67fa75ba-82d4-473c-9638-899ef669e4d2", "ffbbc042-f8fa-4aa3-991a-425ffa6bdd70", "25556a15-a6de-4e08-b080-46e7eb6c87aa", "0f144269-b178-4bf3-8482-8b99385cb24b", "d12b845a-9510-43d7-af55-afabd0e15793"],
                'storage_id' => "15cd34e5-d44f-4152-bacc-b1b95358abff"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon14()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_amount' => 1812,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["1ed476ad-c4d1-419f-be44-947667d3e939", "14dd405b-8e54-400e-97b3-d8df002e5c04", "3da5762f-a6f4-4aff-af97-f56eecab59f2", "0c10f216-bbf5-44b5-843d-ac0159bd5f2e"],
                'min_amount' => 7800,
                'storage_id' => "35ffbf9b-bf52-47a7-8d97-c19d5d9e9522"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon15()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_amount' => 3804,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["d4d3d22e-566b-4d96-a27d-e008cc0409e9", "7547aa52-99b4-4564-a1d4-00d3c1393304"],
                'usage_limit' => 3508,
                'min_amount' => 2096,
                'storage_id' => "9cb50631-61fb-4893-9e80-15fa1e1861d9"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon16()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_amount' => 3770,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["f9f45339-cfad-4d05-9f4f-02b5ca3f3f3b", "31843821-c0e2-49ed-b8bd-648bcfd0c625", "fe2e52a6-aaef-4889-8435-d60360d1169c", "e226f420-cffc-4a52-b825-5a9478792c92", "aef5f4c8-2d5b-4c2b-8465-c7219e5c1549", "582c3172-8be7-4d33-88b8-2a3b82d6df14"],
                'code' => "UDixRQOsOx",
                'usage_limit' => 7182,
                'min_amount' => 7464,
                'storage_id' => "a9dba53a-8a69-4c75-8a91-e3a15ce9d506"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon17()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_amount' => 1843,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["b212bab0-b36f-445f-8852-bc069cf917a8", "09bf05f3-5107-4453-8c23-8611cbeedb5f", "89d60c60-2fe9-4d26-a834-4f0a98cd0e46", "d4789816-8514-44c1-97de-24eac1f86476", "944f2b9a-63a3-4bce-af22-1b7f000d4946"],
                'is_public' => TRUE,
                'code' => "MGh",
                'usage_limit' => 1819,
                'min_amount' => 3072,
                'storage_id' => "58b02637-b0cd-476a-8a05-0fef731e5e0d"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon18()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_amount' => 2207,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["cc5754a9-a046-48e9-884c-6ca252efadf4", "0a61a44e-620d-4739-99bb-43f1a5f9db79", "fbc3dfb7-0fa0-418d-92de-2ab5ad53f953", "090a782d-dbe5-4c98-ae7b-b36c936e8fb4", "10f9b122-ff7c-4df2-b1ea-e4714663db44"],
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "B2gz0",
                'usage_limit' => 5190,
                'min_amount' => 1481,
                'storage_id' => "94583ee4-0dce-4453-a980-2ce2a4b2f47c"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon19()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_amount' => 2460,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["bd5a0a9d-bc40-47f2-acd8-3e4fe356ef42", "0cfa3b2c-1e1e-4e04-9def-afb12ed3c65e", "914750c9-ca89-4533-a0a8-291846d3fa72", "414d35a2-bdbe-4484-a4c0-526b79f486cc", "976ff242-ba84-4093-b599-43f60a85af75", "20ee3f55-3851-416c-88c8-4ed70d9f61bd", "e20bf32c-a801-419d-a848-95e4d432ef8b", "901c577b-007e-4ce6-8a07-e07c4e8de54b", "a04921ca-0d0c-461f-87ca-09cfcb35e45b", "f951b312-9165-4034-afb3-5e417367bca1"],
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "t7GZ",
                'usage_limit' => 5216,
                'min_amount' => 2819,
                'storage_id' => "e7decd7d-64cb-487d-ae86-c865a9d5b496"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon20()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_amount' => 5756,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["05f13f99-184d-45d1-a25e-a7f089204903", "b4deb376-a1d7-4f64-8c52-d618a003e0db"],
                'display_ends_at' => "2020-06-01T23:07:01.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "j",
                'usage_limit' => 8596,
                'min_amount' => 8626,
                'storage_id' => "c6ff9025-3d2d-414e-a347-9789832241f0"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon21()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_amount' => 1892,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["7ee46b3c-1b99-4567-b766-9408f638723a", "046e6a7c-2f62-4722-ba81-b9d734c144f5", "3742069a-c681-4724-876a-4b15c1416b32", "8a03eb07-581e-408d-bedb-372624655338", "4a42f20d-59e2-4611-bf03-dafcb8d0486a"],
                'display_starts_at' => "2022-02-15T06:19:59.000000+09:00",
                'display_ends_at' => "2021-03-01T07:17:14.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "fQZyG6",
                'usage_limit' => 3770,
                'min_amount' => 5905,
                'storage_id' => "0a5247f1-c2ec-4339-ab76-0f49a7c6517e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon22()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_amount' => 2490,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["dc79c4b3-6d75-423b-8ae7-a1d117faa682", "8dc73088-9515-472f-a6d6-a50389018e63", "14d82977-f4cb-4fc5-953f-324f789c5c41", "1140a26c-1986-4e4d-9515-ebacac40a895"],
                'discount_upper_limit' => 916,
                'display_starts_at' => "2020-06-13T06:17:00.000000+09:00",
                'display_ends_at' => "2020-08-18T19:22:01.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "nO",
                'usage_limit' => 3864,
                'min_amount' => 4810,
                'storage_id' => "db2af155-fd5d-47ff-a0f7-767cfaf400a3"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon23()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_amount' => 5276,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["aad24795-af85-43ba-8f3a-8f126b481d5e", "fca952a4-9159-46de-a7cc-0a55041478ea", "0dd7833a-e095-4aac-8d32-5824adac31cc", "91ca1b5b-ef28-4457-8fc9-c4ad69d414fc", "f8db04c8-cfe3-41da-a97f-b0b5e8afea5f", "0c1551a9-8990-4e4b-879a-6e2665ae6a86"],
                'description' => "7Upt9fM2ThdFR4ZGmC3lYSdkRdIHlBo7iMGslQeLzTg9FCP6boJkANEWZ0xko5rtXdkjCZ6KXkiMx1kHTVbpRx79qoFTViWGk7rsKgu2ihoMxDsfU3TC1A8fV5nkzyaMo6HNFjN16Mt1NNT0LSnWyLCIiaSmxOiabyCFBUZkKwMvzRhZdC9PIbxRIokrSMcAe6DLpfhwjho9qAj035em2B0e1zQxL4LWrEkUrKUAD",
                'discount_upper_limit' => 2009,
                'display_starts_at' => "2022-02-16T08:30:28.000000+09:00",
                'display_ends_at' => "2023-12-22T02:41:37.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "S",
                'usage_limit' => 3722,
                'min_amount' => 1787,
                'storage_id' => "02c3efd6-f60b-4f31-afdb-e7f88998f859"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon24()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_percentage' => 2563.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon25()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_percentage' => 6659.0,
                'storage_id' => "7434137a-3eb6-4df1-8ab9-4e524483acbc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon26()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_percentage' => 2047.0,
                'min_amount' => 4725,
                'storage_id' => "a172db71-20cf-4642-a97f-1449c6326dce"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon27()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_percentage' => 365.0,
                'usage_limit' => 1617,
                'min_amount' => 34,
                'storage_id' => "c1d9c737-8737-4d5b-afc2-148a4f5cf60d"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon28()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_percentage' => 4731.0,
                'code' => "VQoe2X9",
                'usage_limit' => 298,
                'min_amount' => 3841,
                'storage_id' => "2f95706d-2a2b-4ed1-9e0a-214ad1ed4069"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon29()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_percentage' => 4037.0,
                'is_public' => FALSE,
                'code' => "Vlycf",
                'usage_limit' => 484,
                'min_amount' => 7036,
                'storage_id' => "54d5587e-f724-4491-a428-65ae3cdf2e88"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon30()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_percentage' => 3137.0,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "Jp",
                'usage_limit' => 4980,
                'min_amount' => 630,
                'storage_id' => "5eb4e058-13f2-495f-b8ea-777307269e70"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon31()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_percentage' => 3541.0,
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "bfd8lI7",
                'usage_limit' => 4579,
                'min_amount' => 5811,
                'storage_id' => "c861742f-a9ef-4379-919f-cd5154ec41c9"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon32()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_percentage' => 6144.0,
                'display_ends_at' => "2021-08-06T08:30:10.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "rCM2",
                'usage_limit' => 4880,
                'min_amount' => 3546,
                'storage_id' => "d443162b-e80e-4c4d-b0c5-3a3414e4cd18"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon33()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_percentage' => 8469.0,
                'display_starts_at' => "2020-12-09T18:20:07.000000+09:00",
                'display_ends_at' => "2021-06-09T04:42:44.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "4IA",
                'usage_limit' => 3668,
                'min_amount' => 72,
                'storage_id' => "6eb08096-d58b-435f-a454-3ed0f92c5073"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon34()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_percentage' => 8976.0,
                'discount_upper_limit' => 2026,
                'display_starts_at' => "2021-07-23T12:51:52.000000+09:00",
                'display_ends_at' => "2023-12-11T07:19:41.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "Wbuh",
                'usage_limit' => 3847,
                'min_amount' => 5439,
                'storage_id' => "5f995649-a955-4746-bb6c-90ff1cfebb28"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon35()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_percentage' => 7104.0,
                'description' => "obOclFXKfvdQivs3hjtD1VYnThEQOLtlkRPIAeI3C1kLwoSJ0t0xwzgZ3SAsjpAuPQwOMExC1w6ifl9ZUstqj7jJ1Xazd0M0QE8si7WktomTSIs3sss0bSZ",
                'discount_upper_limit' => 9980,
                'display_starts_at' => "2022-06-30T02:37:23.000000+09:00",
                'display_ends_at' => "2022-08-24T04:10:08.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "MDg",
                'usage_limit' => 6806,
                'min_amount' => 3592,
                'storage_id' => "3789bc85-64b0-4984-bcaf-d90752e18d18"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon36()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_percentage' => 9666.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["c6245312-6532-45e5-9874-cb119eea6e36", "9b22f78c-2105-4411-9238-9339386401f6", "eb6ac9d2-d282-4807-8165-a4e8e06f4559", "33bc1e49-0d5a-4ae2-bf7c-b9cd36ba6268", "89e1ee36-cf25-45cd-902f-49e6cff4f7bf"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon37()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_percentage' => 955.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["3f825c68-8941-4db8-84b4-d940f7bde4e0", "175165c5-7cf6-42b7-8f1a-bf211aca37cf", "67d8d1dc-63b7-4680-bed4-cd149885c747", "33f70754-0b37-4730-8c2f-67a181201ac0"],
                'storage_id' => "7a54ee90-750a-4151-9db2-3614f10c6465"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon38()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_percentage' => 2800.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["faab7968-148e-4713-9894-af76bd351dae", "3ce8bd08-ad13-4366-8af2-cbdf02be5ffe", "ae632394-fb71-4d7f-8118-231f157f190c", "6a5af3a7-4ff7-43bc-83aa-a5854df2778b", "4b94cdf7-032b-417a-9d76-4f1f172162c7", "9e128976-b31b-4203-b574-472969d87ffc", "c4095b83-840e-4558-8239-6eb3dcf807fd", "0422f55f-7fb4-4eb1-81e4-47abf004a41b", "8553ad04-955d-41d1-a11c-aee08c443ba6"],
                'min_amount' => 7763,
                'storage_id' => "b4ba968e-9076-4a72-b2bd-6e00177555ea"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon39()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_percentage' => 9412.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["91e6bede-ffc3-49d0-9e42-6510c8d08b0c"],
                'usage_limit' => 785,
                'min_amount' => 4292,
                'storage_id' => "c42f00d8-aa68-41d3-88b8-ed1c71ce9c68"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon40()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_percentage' => 7265.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["7dc477ca-2e09-4084-b905-f93ba16e4130", "bc346f2d-c21d-450d-8073-a3440764d589", "be5aa228-893e-4182-ae54-186e0ef9f44d", "2b5db9d0-befc-457c-90f4-f241a80b205e", "1d34e9b7-5a26-4e54-901a-b62500981533", "c6829584-c4c5-4aae-b2ee-4025038ae224", "5c201e11-7ec3-4ba4-809b-b9b83ff61aca"],
                'code' => "Z",
                'usage_limit' => 2075,
                'min_amount' => 7665,
                'storage_id' => "690d0316-b3c9-4163-9971-615a87d6d629"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon41()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_percentage' => 9666.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["4492bd68-41ad-4777-b5d6-c2f5a680676e", "91621e6e-e6a4-4ee8-b239-6b1ac96133ac", "9cf0bc98-7071-49fd-97d1-bb5a2fe54dfa"],
                'is_public' => TRUE,
                'code' => "4x",
                'usage_limit' => 8514,
                'min_amount' => 9016,
                'storage_id' => "0b04c1b9-00b1-4cf2-90e0-5cd6ca36e237"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon42()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_percentage' => 838.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["330fe064-7b87-4b21-8844-6a809ff31b65", "130e4012-1e10-42de-9bc2-feb651572531", "70117676-7163-41ff-ba24-80a231d2e4cf", "a9d764da-5e60-4e9d-b1bc-530a17feaa75"],
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "B",
                'usage_limit' => 5012,
                'min_amount' => 3393,
                'storage_id' => "0a9c1064-7372-4000-9bba-1a7ca937775f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon43()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_percentage' => 2330.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["1d24ee19-477a-4162-a6f1-389da60ac0cb", "993506ec-066e-4bff-b31e-fd476391deb4", "d0b6e2bf-8c2e-4e30-83ac-ecf70f0145da", "401764ef-f182-4230-9202-8d80da94a5db", "2bca3e54-2304-4639-b02d-66ed4125cdd4", "0bf3bd76-be80-4e7c-b98c-16699f641011", "34ab3c1f-f07c-4f2d-bf6d-e9655dffd7ce"],
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "62Bc0n5yxx",
                'usage_limit' => 1910,
                'min_amount' => 6,
                'storage_id' => "fdf63b24-cddf-4144-a12a-e3181842ef30"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon44()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_percentage' => 1379.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["cf339476-ed35-463c-8ef6-7bbe396c6fc5", "ed8cf352-efff-40d2-9b8f-5db1d5c2afef", "d45bfd0b-c4f6-4ad5-bb6f-421024b42053"],
                'display_ends_at' => "2020-09-16T20:53:33.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "wois43",
                'usage_limit' => 3852,
                'min_amount' => 4925,
                'storage_id' => "fec78886-c115-4168-8bcf-778e7836c574"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon45()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_percentage' => 4104.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["28db048d-7f58-4a88-a737-7d271935306f", "1ce20970-362c-4814-b561-44e59e8bfb23", "7a6c2c37-a86c-479a-90cf-1a2e9c7b8ab5", "e3c517ad-8e38-43c1-bd22-8a7cebf34ee5", "25e031b6-e2a8-4a3b-a854-bfeec78298a1", "0fd6c17d-55f2-4029-86d3-a36ac47eff62", "ead15dc2-d7fd-41ba-9c8e-9f97f161eeb1", "8d14362d-ca0e-49e8-a952-44ea487b2493", "e9a2c518-7754-4597-8ed3-5da746c40c15", "d5ea4095-5f28-4155-81b4-05a831fc71dc"],
                'display_starts_at' => "2021-11-11T08:09:26.000000+09:00",
                'display_ends_at' => "2020-10-30T10:15:32.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "vyktKcWC",
                'usage_limit' => 3518,
                'min_amount' => 4159,
                'storage_id' => "17a17f7d-30cb-4c6d-b4f4-42471a1137dd"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon46()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_percentage' => 5170.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["38657c7a-8ae5-4c03-aedf-76d7ec36fb58", "62325978-65d0-4b4e-b652-f2e9c81e0ecd", "44c21256-7668-4286-9aed-8a1fdd0d9482", "9086e990-4d6d-4f47-aa5e-313085f9d611", "08add354-8d8d-4d4d-910e-c5a34566b3ea", "ef1475d0-2e06-4f17-a692-b7ac3b07f1a8", "3e64c546-2fcc-4da7-8818-95cd02720b2b"],
                'discount_upper_limit' => 8880,
                'display_starts_at' => "2022-09-15T23:21:00.000000+09:00",
                'display_ends_at' => "2023-10-17T02:55:11.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "dwVX1nfPZ",
                'usage_limit' => 6942,
                'min_amount' => 6792,
                'storage_id' => "bf6620fa-9747-47f5-aed6-308876f6d9ca"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon47()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "3cc612d9-c7a6-42df-b10c-85965d1f8032",
            "mxjIub5W9d4fa79SnOHSfjKkp3QkI11kPUOWIOCC9XRXSkWvgwMdC6YsQVBM6",
            "2022-04-30T14:45:22.000000+09:00",
            "2023-08-31T14:31:13.000000+09:00",
            "86778905-25b5-4842-9382-caccce27ae52",
            [
                'discount_percentage' => 7848.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["885887c3-c41f-4483-ae73-429a09fdb62f", "7feeb5e0-d7ff-4ffc-a40d-a125b725312c", "1f1c9246-ebbd-4214-968f-4a2d5c4ffddf", "0985ff63-a883-4bdc-aac6-ed784180cc2e", "aca3a720-bdf0-4ee0-ab8b-21ae16d4350b"],
                'description' => "r7nBijaa4uqZKlbpHQT4mZQDB6u1kMJt8otXLMwiqJK6Mis",
                'discount_upper_limit' => 6568,
                'display_starts_at' => "2023-11-06T09:16:04.000000+09:00",
                'display_ends_at' => "2023-07-02T18:18:41.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "APWVf0nkI2",
                'usage_limit' => 2787,
                'min_amount' => 7280,
                'storage_id' => "c2de15db-aae9-48da-b25f-ca772f49d82f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
