<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateCoupon extends TestCase
{
    public function testCreateCoupon0()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_amount' => 2109
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon1()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_amount' => 7982,
                'storage_id' => "0cd2aef8-9e78-4f9b-92a7-f78d8c1b9d97"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon2()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_amount' => 413,
                'min_amount' => 5410,
                'storage_id' => "66c1cedc-ef07-4e31-ae6b-9d960b12ef22"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon3()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_amount' => 8200,
                'usage_limit' => 2537,
                'min_amount' => 6580,
                'storage_id' => "cd651564-4b61-44d4-9304-ed5456fd4db4"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon4()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_amount' => 2096,
                'code' => "zY",
                'usage_limit' => 3770,
                'min_amount' => 4921,
                'storage_id' => "66fdcfad-fd05-44df-8fb5-3f3b31843821"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon5()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_amount' => 226,
                'is_public' => FALSE,
                'code' => "o5R8HDeIr",
                'usage_limit' => 3047,
                'min_amount' => 3379,
                'storage_id' => "d973ea08-2cb8-4a3b-9429-df556027307b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon6()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_amount' => 1500,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "RQ",
                'usage_limit' => 2719,
                'min_amount' => 5523,
                'storage_id' => "d5af36a1-d14f-4819-a0f3-ce1f7bcee882"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon7()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_amount' => 8952,
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "iut30oRsS",
                'usage_limit' => 204,
                'min_amount' => 1553,
                'storage_id' => "cbeedb5f-0c60-4fe9-a6a8-db3410b24f0a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon8()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_amount' => 3654,
                'display_ends_at' => "2022-05-18T04:41:58.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "NFlMGhO",
                'usage_limit' => 3072,
                'min_amount' => 9783,
                'storage_id' => "83bbb0cd-776a-4f0a-85ef-5e0d14f2c89f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon9()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_amount' => 1454,
                'display_starts_at' => "2023-06-25T01:25:24.000000+09:00",
                'display_ends_at' => "2022-04-22T23:09:29.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "tN9",
                'usage_limit' => 5593,
                'min_amount' => 1009,
                'storage_id' => "a5f9db79-dfb7-4fa0-8d52-05de64e12ab5"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon10()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_amount' => 7141,
                'discount_upper_limit' => 7320,
                'display_starts_at' => "2021-05-11T15:27:55.000000+09:00",
                'display_ends_at' => "2022-10-11T16:06:04.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "qjq",
                'usage_limit' => 6980,
                'min_amount' => 3053,
                'storage_id' => "e7a67824-d91d-4742-b267-36be8188d3ab"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon11()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_amount' => 5033,
                'description' => "0FIdNSbIrXOBo1I3rdkLB5vuUQlHHWHdfJKJGJOe4o3A7Ast7GZKKewMQbpvWdRIf0j2NcGpd9kTg7fbzWuGj28bjzoMkUfQZyG6ql9kvIc3ugQfVcwKEOAlMUY",
                'discount_upper_limit' => 5090,
                'display_starts_at' => "2022-06-13T21:55:56.000000+09:00",
                'display_ends_at' => "2020-08-30T17:32:19.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "JUw5uYgLU",
                'usage_limit' => 826,
                'min_amount' => 8341,
                'storage_id' => "f9385aac-ba8d-4132-a4cc-1b5bb077ef28"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon12()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_amount' => 5903,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["8b01cfe3-51da-4b29-bfb5-ea5f0c1551a9", "baf18990-fe4b-4207-9a26-6a861374e7e8", "b4f3fbb7-ab93-4655-812d-26f05b22f3de", "0e0840f4-adb9-493e-a6cd-c4df93b234a7", "4799467f-8c8e-4e32-94e8-ea642c57b6fd", "3e93a12c-0980-4397-861b-c6d2adad19ff", "deea532f-a234-4cdc-9a82-8eae337654c7", "bee6e6ed-b31d-49c3-b39c-fb6c375ec5d9", "bfd7fa9a-5453-46dc-a46b-a27e07ce50d2"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon13()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_amount' => 1213,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["19422e6c-a3c2-496f-b790-1ce9574d465c", "fba0884d-2dc7-4ff3-a897-95ec55e66d2e", "b7db4191-3a51-45e5-8cfa-89d43ce2a9e7", "363e2139-8846-468e-bdbe-99fda9328a43", "b31c69d0-dc36-4ee2-afca-703fa9e9afa3", "ad6ccbbd-0c2c-4518-93bc-d05f6be860e0", "bb84d1eb-9cc1-4ea4-8dbb-19cee0da1545", "da925f89-d2bc-4586-975a-33b08fcedff8", "426f05bc-a087-47bd-8322-1a0146d4ce6b"],
                'storage_id' => "442aa16f-3f9b-4735-ac9f-e7a4be4482f2"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon14()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_amount' => 6568,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["b36db3d8-21e4-41df-a8eb-756aa2aaba43", "619bcd0b-3c5a-4ab6-864b-c6de4440448f", "d2a73794-8e15-4d10-9814-66ada42426eb", "d47cf6e9-3e4d-46f8-b1eb-137f6d912f3d", "07e56a48-f496-4f14-9456-ce3d7c629b86"],
                'min_amount' => 9328,
                'storage_id' => "5cd70b21-2eaf-4212-9285-bca164d68188"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon15()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_amount' => 2296,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["99be6a09-0f87-4d9f-ae71-97ef18671f81", "646ecec6-5ad4-4d2f-aa28-11d67e47d0e9", "761e3dd7-22de-4cc7-ab0d-e93b549f6722", "7819733f-6637-4b23-b202-c3f3a88ac14b", "2331f511-631b-4ee7-b540-9fb297fdd469", "78c51de8-f280-48ef-8d29-43a05e9b00f8", "af381428-78c4-42aa-9b73-ffe647f00055", "e75c87b3-029b-4c80-94aa-de145589f5c3", "bebb788c-d7b1-4bc1-bc38-3b66647da3d6", "d74e45b5-badc-4c03-aeeb-368326b1907a"],
                'usage_limit' => 5601,
                'min_amount' => 6989,
                'storage_id' => "85a6316f-f81c-4c36-ac10-b948fec823ce"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon16()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_amount' => 255,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["98adc9ea-51ce-4f31-b64d-71f40990e131", "5c75ea4e-ca17-4707-8e2e-9988e4fd84de", "3f45a5fc-eaa4-4bfb-86d4-f33041f38692", "3737bf97-ffcc-495b-8996-a9d3ac8b75ee", "0b3b8dd7-ee9b-48f9-a0cc-cc431d291549", "7e5859e9-a5e1-4053-adf8-c30295648da1", "b68446cf-1e19-48e9-a1e2-d2f9d113df81"],
                'code' => "FBUZ",
                'usage_limit' => 3198,
                'min_amount' => 1259,
                'storage_id' => "1a524a8d-e34b-42aa-891c-e2771c2bf5cd"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon17()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_amount' => 8566,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["cf7582d2-f468-40a8-8f2a-02aed1412ffc"],
                'is_public' => FALSE,
                'code' => "Z",
                'usage_limit' => 1279,
                'min_amount' => 6723,
                'storage_id' => "976d8a9e-02b9-470c-90c9-7b8bd03331e2"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon18()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_amount' => 5112,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["df126949-1e6f-49eb-893d-82ae609f5772", "25e73815-85d3-48cd-be04-b8ab73050e63", "cb304cc1-a8ae-4c24-a5b6-3e19b74f60c4"],
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "Lpfhwjho9",
                'usage_limit' => 8604,
                'min_amount' => 4977,
                'storage_id' => "c8a63f41-b6ea-4901-bdb0-230354ad141b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon19()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_amount' => 7589,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["a5421265-4eab-4e6d-a132-c3a7688d8bba", "c9bd8887-5f06-4b3c-828b-f4ddfbfecdb0", "05bf7365-f90f-40be-b1bb-77bb4162a0fa", "674df37f-6399-4c0a-91dc-21be442b90f8", "d04f971b-d75d-4482-8c34-7a3be3edea25", "cb93003d-10cc-44d7-a517-b42e3a00c2f2"],
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "KUA",
                'usage_limit' => 324,
                'min_amount' => 2009,
                'storage_id' => "8400d524-1661-4ed5-8d40-1dd30d4ffd34"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon20()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_amount' => 3722,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["0014f60b-bf31-48af-9bf8-f8594e81ae30", "e53f8a03-5a03-437a-b6f1-610a60381ab9", "01574e52-acbc-4c6c-aae9-5275a172db71", "5c5220cf-a642-4529-bf49-6dce0556416d", "1508f3b4-0651-4022-b737-9d5b2511702f", "bcc88cc2-148a-460d-a879-72712500afe9", "e382d27b-702a-43fa-ab86-03561620cfd1"],
                'display_ends_at' => "2023-12-19T08:34:13.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "2X9mQJ",
                'usage_limit' => 105,
                'min_amount' => 4037,
                'storage_id' => "a255d145-1a4c-432c-94d6-96fdac0a94ba"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon21()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_amount' => 4601,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["f4fc265b-e98f-448e-a65b-01e4c4419b7c", "54d5587e-f724-4491-a428-65ae3cdf2e88", "83f44c41-02b0-4a73-aeaa-6f3153530eca", "9bb30add-f970-468b-9039-ab63ccb21374"],
                'display_starts_at' => "2020-10-15T05:12:34.000000+09:00",
                'display_ends_at' => "2022-01-15T18:44:25.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "jspmUg2Jo",
                'usage_limit' => 7782,
                'min_amount' => 7572,
                'storage_id' => "677441e2-b8ad-42a5-91e6-ed6403d70405"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon22()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_amount' => 952,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["44102ec9-f437-41e3-a1b3-742f18e5a9ef", "8b86a379-be51-499f-91c9-ba7347ccd800", "7b011212-ac9c-47d5-acb3-ccba639f38f2", "901290c3-c5cd-421f-9f04-f0b2afdb1310", "19fb3020-bd05-4dda-ab0e-ac4d55c2b9f0", "5af66ac5-3a34-4d18-9557-65c4e5aedc00", "ea75f9a5-2313-4cdb-af72-c9fbb6a3a834", "8f6b21a2-70c9-4041-8454-00486eb08096", "a6a9d58b-235f-4c64-94d0-50739dbb2310", "d8cd47ea-da68-470d-ad55-4c24280e130e"],
                'discount_upper_limit' => 2007,
                'display_starts_at' => "2021-05-07T02:07:30.000000+09:00",
                'display_ends_at' => "2022-07-01T22:17:25.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "nbIUFlfvo",
                'usage_limit' => 932,
                'min_amount' => 4640,
                'storage_id' => "f27dd5df-3d9b-4b94-a33a-4e5d4fe6c4ec"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon23()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_amount' => 984,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["7a769276-caa7-4111-9fe4-40d157c4cc05", "f94a3369-fef6-4aaf-bc73-6e9604e232b3", "2914b17b-f068-45ea-a19d-c374df4b4a1f", "ee35db22-5544-4104-b18c-0a564d0d7ea5", "1fb24f59-a4fb-45fd-ae3a-bbd48b92295d", "6e468868-43c5-41e0-8a9d-68d1af0a78fe", "cba543cf-9acc-45f4-ac0a-16eb11dc2fde"],
                'description' => "RPIAeI3C1kLwoSJ0t0xwzgZ3SAsjpAuPQwOMExC1w6ifl9ZUstqj7jJ1Xaz",
                'discount_upper_limit' => 3300,
                'display_starts_at' => "2023-02-23T10:23:44.000000+09:00",
                'display_ends_at' => "2024-01-07T02:48:37.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "0QE8si7W",
                'usage_limit' => 2182,
                'min_amount' => 7919,
                'storage_id' => "bd103d21-a16d-4654-931f-6ca445ab6949"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon24()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_percentage' => 3069.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon25()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_percentage' => 7859.0,
                'storage_id' => "2aa99c00-e773-4b06-b33d-66f3163a513a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon26()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_percentage' => 5040.0,
                'min_amount' => 5090,
                'storage_id' => "23458dd3-755a-45b1-bc63-c3a066e0c7d2"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon27()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_percentage' => 391.0,
                'usage_limit' => 7357,
                'min_amount' => 9216,
                'storage_id' => "980727cd-c844-4e89-bd67-9a9679730e08"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon28()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_percentage' => 9392.0,
                'code' => "iBD2e",
                'usage_limit' => 5912,
                'min_amount' => 7284,
                'storage_id' => "b6dccb11-6e36-478c-8511-dad23193dd38"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon29()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_percentage' => 4921.0,
                'is_public' => TRUE,
                'code' => "ehY",
                'usage_limit' => 7753,
                'min_amount' => 3418,
                'storage_id' => "11327ae2-dcbf-427c-8d68-ee363a41cf25"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon30()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_percentage' => 9677.0,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "ShA8D4E",
                'usage_limit' => 15,
                'min_amount' => 7706,
                'storage_id' => "035bbf21-37cf-41dc-b780-9ebe1714b4d4"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon31()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_percentage' => 3348.0,
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "L",
                'usage_limit' => 815,
                'min_amount' => 6848,
                'storage_id' => "7a54ee90-750a-4151-9db2-3614f10c6465"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon32()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_percentage' => 2800.0,
                'display_ends_at' => "2022-08-13T15:41:05.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "XvfJ",
                'usage_limit' => 4594,
                'min_amount' => 3039,
                'storage_id' => "02be5ffe-2394-4b71-bf01-93186575231f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon33()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_percentage' => 6412.0,
                'display_starts_at' => "2021-04-02T08:24:07.000000+09:00",
                'display_ends_at' => "2020-06-25T23:19:19.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "wzvGv5",
                'usage_limit' => 4980,
                'min_amount' => 1833,
                'storage_id' => "69d87ffc-5b83-440e-9842-f9399c396eb3"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon34()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_percentage' => 2045.0,
                'discount_upper_limit' => 5057,
                'display_starts_at' => "2021-04-02T13:19:32.000000+09:00",
                'display_ends_at' => "2023-08-15T07:26:35.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "Sv",
                'usage_limit' => 6770,
                'min_amount' => 5053,
                'storage_id' => "2d2d6e00-55ea-44c4-b200-beded602ffc3"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon35()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_percentage' => 6608.0,
                'description' => "BEg6qDXhSH8hafJy0sDTnMPtA7T3E2nC8JZcqIcqZB2nkhw5Vunnh29qWQZz14xB891rPV7FcdDeB61vcOZ1uNBAdr6lfzb",
                'discount_upper_limit' => 497,
                'display_starts_at' => "2020-05-06T01:57:49.000000+09:00",
                'display_ends_at' => "2023-03-19T05:46:51.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "G40w",
                'usage_limit' => 1498,
                'min_amount' => 9455,
                'storage_id' => "e0fef182-8230-4552-8280-a5db2bca3e54"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon36()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_percentage' => 8964.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["152b702d-66ed-4dd4-b680-fe7c47425f39"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon37()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_percentage' => 8588.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["34ab3c1f-f07c-4f2d-bf6d-e9655dffd7ce", "9671f68a-22e9-45a6-be59-2bb60549d4b2"],
                'storage_id' => "79373a42-4063-48b0-8f6e-5735ec7a2179"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon38()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_percentage' => 4472.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["ad5efba7-c378-4258-b6bb-354b73ccc006", "fdf63b24-cddf-4144-a12a-e3181842ef30", "704a7f0d-aa5f-4563-97b2-94760e99ed35", "def3c63c-c44e-4cf6-bec5-f352aff7efff", "edd3e0d2-3c1b-488f-b1ef-fd0b839dc4f6", "cae95ad5-2d3b-4a6f-9053-9a4debeaa614", "ce9f70f8-2289-4775-abf7-7414776b113c", "91eb071f-46ef-4569-b3b4-3f33614c8f0c"],
                'min_amount' => 4925,
                'storage_id' => "fec78886-c115-4168-8bcf-778e7836c574"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon39()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_percentage' => 4104.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["28db048d-7f58-4a88-a737-7d271935306f", "1ce20970-362c-4814-b561-44e59e8bfb23", "7a6c2c37-a86c-479a-90cf-1a2e9c7b8ab5", "e3c517ad-8e38-43c1-bd22-8a7cebf34ee5", "25e031b6-e2a8-4a3b-a854-bfeec78298a1", "0fd6c17d-55f2-4029-86d3-a36ac47eff62", "ead15dc2-d7fd-41ba-9c8e-9f97f161eeb1", "8d14362d-ca0e-49e8-a952-44ea487b2493", "e9a2c518-7754-4597-8ed3-5da746c40c15", "d5ea4095-5f28-4155-81b4-05a831fc71dc"],
                'usage_limit' => 1732,
                'min_amount' => 715,
                'storage_id' => "90f9a9d0-3aa2-4c07-8f76-132d0e6819f9"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon40()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_percentage' => 3211.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["79af150f-106b-46a1-b49b-d5cb889fa51d", "f9e3f481-1021-4f63-9918-fcba262743d7", "1b157b5d-77c3-4ff9-8107-0dbe6ad6f5fd", "7423d03f-7f7d-40cb-ad34-1df41a774247", "1a1137dd-1432-481b-867a-8ae5747a7c03", "a596cdae-6adf-46d7-9878-65d0cb368b4e", "707ed936-aa52-42e9-8d56-7668e94d4286", "41c76fda-69ed-4a1f-8290-4d6d5abdff47", "2f0abaea-505e-4130-9154-8d8d53f76d4d", "e7b17c91-7a0e-45a3-aad0-2e0686b77f17"],
                'code' => "FLM0DLd",
                'usage_limit' => 2039,
                'min_amount' => 704,
                'storage_id' => "1657df15-8d56-4fd8-a4a2-2b314b3a25aa"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon41()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_percentage' => 9764.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["18cd3bee-e2bf-4866-905a-5b1e0b4dfef4"],
                'is_public' => TRUE,
                'code' => "unVJbtCn",
                'usage_limit' => 6003,
                'min_amount' => 666,
                'storage_id' => "09fdb62f-b5e0-47ff-bce4-390d8b71a125"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon42()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_percentage' => 4678.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["415103d6-778f-4a2d-9f63-a88327a71bdc", "e3901aea-8fc6-4d78-ae20-bdf052e59ee0", "80ee48eb-068b-41ae-8b2e-1e7289377305", "8035730f-915b-49b7-ae7f-b0426898b9db", "4ef516e9-d7aa-40ae-aae1-316160710034"],
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "ZK",
                'usage_limit' => 1634,
                'min_amount' => 4626,
                'storage_id' => "a35f97c8-1a22-48d1-80d4-9234467568fe"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon43()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_percentage' => 6931.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["8e51fe3b-d25e-4b9e-a728-d89b81dc7144", "eab0f53f-8025-40c2-b675-af31675c0299"],
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "M",
                'usage_limit' => 7626,
                'min_amount' => 8180,
                'storage_id' => "8828df58-a2cc-484d-8df7-e3dd65d054e0"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon44()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_percentage' => 3177.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["f67037cd-d21f-4e69-b350-19a8573ccdd4", "0695de81-53d8-403b-b6fe-99ca5843f5b9", "013b0a99-f0c1-4450-bebc-59276a539257", "fb6937d6-44fd-4d2c-a6b0-16a592992ac0", "5991d5a1-f95c-4c8d-aeeb-5f4963c3c6b2", "eaf58ae3-5c70-45db-a9da-d2726b4fe55f", "f466ca77-d82f-4ce8-b4e0-198210a8cb90"],
                'display_ends_at' => "2021-05-19T15:51:25.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "2dhT",
                'usage_limit' => 6259,
                'min_amount' => 4233,
                'storage_id' => "0dd17f90-bf18-4753-bb3a-310cd42e4f78"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon45()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_percentage' => 7055.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["275127d8-8784-4ea7-82f5-dcc0c1d07f89", "cd4bf5e8-c04c-491b-81f8-d403dc2586af", "c95875d0-e03b-4df8-824c-bfa677b05288"],
                'display_starts_at' => "2022-04-23T10:41:03.000000+09:00",
                'display_ends_at' => "2022-09-09T11:42:10.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "gP",
                'usage_limit' => 2596,
                'min_amount' => 414,
                'storage_id' => "29e84346-b00d-4437-a7d0-6c4894f5852d"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon46()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_percentage' => 7737.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["9a1df2fb-ae50-43bd-af2b-71292058d7b3", "c9bab7f1-36d2-48e2-9dd8-0cc35caa7a12", "f6195382-82b0-460e-bb21-e62bcc1a47b6", "c0fa9da8-76e8-4bc8-b5f1-632bfabf3eb5"],
                'discount_upper_limit' => 10000,
                'display_starts_at' => "2022-11-06T05:23:39.000000+09:00",
                'display_ends_at' => "2023-04-13T06:58:10.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "Sql",
                'usage_limit' => 9691,
                'min_amount' => 5649,
                'storage_id' => "c05931e8-8318-4fe3-bc01-50a70d7bc36c"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon47()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "837e0a0b-3bff-42ca-9d22-59372920f655",
            "zyDYEv7bctcmIqdmvTV8RBzp0gixsKZWoUeORL98QDv9TW3t",
            "2020-08-05T03:48:15.000000+09:00",
            "2023-09-14T00:16:47.000000+09:00",
            "11549297-f56e-49f2-96f5-94b5a2446fc4",
            [
                'discount_percentage' => 1373.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["b9a4b27d-72f8-4762-a293-219fed97e0c9", "d1daa531-9a8c-4170-84bb-863c6f5f165d", "3ad77a77-4323-4218-8e56-1a1fb32d127f", "ea928f4e-12eb-4f58-b177-059449f08a62"],
                'description' => "tHq7h4XHkBbxR0RnLtirGJS2N5S6EEO5Bp0TaBrmndiCNxXXwjFaRAeTxfe0YQCHzm8OG8zcqkOxIGcWZjjM6j3edDcpZu9iiEwcokneeQ36NR2IjhyB4vKQ7cGl",
                'discount_upper_limit' => 1169,
                'display_starts_at' => "2020-01-04T13:55:59.000000+09:00",
                'display_ends_at' => "2021-11-26T14:44:07.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "Cji",
                'usage_limit' => 1252,
                'min_amount' => 3820,
                'storage_id' => "9d59d767-b7ad-48bf-b76e-f4393ef8ba21"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
