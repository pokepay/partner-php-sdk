<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateCoupon extends TestCase
{
    public function testCreateCoupon0()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_amount' => 6982
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon1()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_amount' => 1829,
                'storage_id' => "2d31234a-2e85-40af-b4e9-6b310afa5524"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon2()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_amount' => 2834,
                'min_amount' => 6220,
                'storage_id' => "097e179a-4267-42ba-b82e-d9e8c40a0f69"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon3()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_amount' => 2458,
                'usage_limit' => 8210,
                'min_amount' => 7545,
                'storage_id' => "82a6f065-509f-4850-a897-d031145a7b0c"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon4()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_amount' => 1550,
                'code' => "bueg0sV",
                'usage_limit' => 2459,
                'min_amount' => 5500,
                'storage_id' => "71cc4ba8-21d9-42b6-ad49-f7959f2e7cb7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon5()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_amount' => 5951,
                'is_public' => TRUE,
                'code' => "Kgs3r",
                'usage_limit' => 3454,
                'min_amount' => 5001,
                'storage_id' => "bd33a859-d5f4-42da-9fec-3ff9383382f1"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon6()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_amount' => 3079,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "Nm2ay",
                'usage_limit' => 9912,
                'min_amount' => 8005,
                'storage_id' => "405d99ec-2c8a-49e6-bea8-cb4e97da7630"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon7()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_amount' => 3961,
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "z3pjN9i",
                'usage_limit' => 4184,
                'min_amount' => 5922,
                'storage_id' => "1054a0be-ab1e-4756-b407-860351b75bf0"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon8()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_amount' => 957,
                'display_ends_at' => "2021-03-21T00:57:01.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "qWje",
                'usage_limit' => 6516,
                'min_amount' => 2868,
                'storage_id' => "86e442b6-1c58-4096-9d97-bc5a26eeef60"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon9()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_amount' => 9588,
                'display_starts_at' => "2020-05-31T16:34:00.000000+09:00",
                'display_ends_at' => "2020-01-04T23:06:10.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "JI",
                'usage_limit' => 4835,
                'min_amount' => 6975,
                'storage_id' => "6add0bb1-2b6a-4b17-9ff4-a3a6bbf7e4b5"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon10()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_amount' => 4938,
                'discount_upper_limit' => 609,
                'display_starts_at' => "2022-02-25T14:05:20.000000+09:00",
                'display_ends_at' => "2020-03-30T19:26:09.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "7nB",
                'usage_limit' => 5195,
                'min_amount' => 2353,
                'storage_id' => "ab73a3a5-9c9c-4af2-9fd6-539058ba44c5"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon11()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_amount' => 7488,
                'description' => "Hlj8QhVWQXCsgaHRCjxzY6UWdJKsSMOITGExEWJuJyRzx9ks8sH88nwjaFijGOUot5qxId48pWNI4egtPM0TVQ3JEkLhe0h4eJaZ6xcnFyIpCRn57BOXr3n1mVjYWnPmJaf5ZAY1k6isXbqUCYyGqvUjAhFmQ4CR9Vh4njuNvDW0e3RtI7yJM6zdrw2C2DScGwXZt41uUwaVjwHVUjY5vQblKRjINCa2fhy2HfSkavC",
                'discount_upper_limit' => 928,
                'display_starts_at' => "2021-03-18T05:16:11.000000+09:00",
                'display_ends_at' => "2020-07-06T21:02:24.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "giGSxE",
                'usage_limit' => 7137,
                'min_amount' => 6192,
                'storage_id' => "3d955cd8-0348-437e-8c5b-411a5240d67e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon12()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_amount' => 1968,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["50914af9-5e38-4a57-9c15-3ede5bec6c8c", "afdbe3c3-fa93-4444-80a0-9900c2e04841", "669bf800-6ef7-4eef-9663-a6f9ca37c378", "dbf9fa22-e004-4164-86dc-0d5b274be67f", "9cc017e1-1513-45ce-8a4a-d2dca7afe5ad", "59848f56-b6aa-4b77-8865-f486f8c84bb9", "a8ea2771-8363-400a-8b39-53b9299504ab"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon13()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_amount' => 69,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["3593c957-1aef-4721-a1d3-2e48b61fd5f4", "aef9bd82-6265-4ec0-850e-1c297c8622be", "0491b6c8-6cd7-483f-816f-9de18a9b7219", "318a81c2-7403-4900-8438-b45b9346bfbb", "949bcec8-e4ec-4158-ac7c-aff496bc78a0", "a7b51311-b837-468e-8812-5c865e6847d2"],
                'storage_id' => "e7805ec5-63b9-46d0-b1bf-4ad7ce82f319"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon14()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_amount' => 1587,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["580a236c-beac-4c36-a0ec-0b736b5bd87a", "ddc91658-eaab-4cfd-9fbe-765e91ec6041", "a467fce0-b73a-422f-8f68-cee823bf5827", "399d396e-7e74-4bb3-8a9b-01e2d24afd70", "a24b4036-ad8f-4789-adf1-b7a35a001dd1"],
                'min_amount' => 9289,
                'storage_id' => "20322550-c063-4107-9590-bfa00671082f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon15()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_amount' => 1188,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["800f0047-6f27-4e24-b2e3-624cb5d6cea1", "4ee3b539-f314-4082-8fc0-8db9bc975d0c"],
                'usage_limit' => 8439,
                'min_amount' => 2740,
                'storage_id' => "018bef7c-3e17-40a9-a199-1ed18d2f415a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon16()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_amount' => 9738,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["c0f2dabc-8e44-4af4-871b-79376d065efe", "6f760c85-5ead-4f6f-bbf8-f674fd6daa5e"],
                'code' => "lorkmZd2",
                'usage_limit' => 3843,
                'min_amount' => 7516,
                'storage_id' => "56a3555c-0612-4658-8951-2661f645adad"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon17()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_amount' => 8164,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["32f8eca7-aba0-44b4-87d2-b3d49a992d06", "70db1b8b-5a62-44e4-8347-d5b271d87fbd", "90db0ee0-7a7b-402a-bf12-df30dd640991", "e7b1813d-b315-4bd6-ab5b-e90e142acd7c", "a9b8c3fb-3695-4f7d-bb95-42bcbe88c0d7", "e745bde6-c841-4495-99ae-cbd27a1c9be9", "269ebfaf-1aec-4e3e-826f-3197c18f7889", "1043532d-752a-486e-8015-8c9cea49fe1a"],
                'is_public' => FALSE,
                'code' => "7",
                'usage_limit' => 6136,
                'min_amount' => 2275,
                'storage_id' => "fd81b877-24f6-4c42-8401-1694e1919721"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon18()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_amount' => 4841,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["42890937-b55f-4f1a-9617-1f65ff679bd6", "bd02260c-a33b-4097-a2a5-2bb7146061d5", "2b26faa9-1b13-47f5-bc86-0ebf44c4bd04", "04ca005d-8521-4049-89fa-4487856f3296", "3f185e39-2e26-409c-a5e6-52c78823fd6e", "3fb9bb85-bc7d-4807-ae30-6667c2ab1277", "3a04e07a-bd39-477f-a3fa-09b8cb0969e5"],
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "2qNWN",
                'usage_limit' => 4532,
                'min_amount' => 2728,
                'storage_id' => "9cbc781a-f33f-4d7e-be96-d154264ed7b4"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon19()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_amount' => 8687,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["d1ead6cb-aa01-4a75-a3b5-555455da8901", "49d29c5d-f7ce-4302-ad42-4b0dc4bb711f", "d6fb5fd5-d365-4d28-a317-5f35709495b8", "bab385d7-11d8-418f-b8ef-8a656de96378", "c46d2f8e-3d9d-47aa-b764-8f9a9c92d82a", "625bbf34-9195-47d5-91ef-4bc74ae85767", "17b88c69-f2a7-45eb-baf9-9be319fb0446", "344a12d7-55f7-4177-8cd6-467f25bbcdca"],
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "zFAZQM",
                'usage_limit' => 4382,
                'min_amount' => 9181,
                'storage_id' => "42b83138-0201-4253-a06e-b060793c5cab"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon20()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_amount' => 7943,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["2ed776f6-c4f4-4aaa-8c01-5fd816b6592a"],
                'display_ends_at' => "2022-11-26T18:29:56.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "MI7tjmlc",
                'usage_limit' => 564,
                'min_amount' => 9707,
                'storage_id' => "1349d3ae-e8f6-4f4c-a52c-582e93501f2d"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon21()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_amount' => 7567,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["0f1b02e6-18ae-4ce8-bc66-6667cf3be999", "db51254d-d47d-41d1-86d7-48d64265a1a2", "471f97db-3392-436d-ad28-d1b26f843db4", "a0d3bfcb-8ed1-4598-88f8-8139e78df496", "202b0b8e-0967-447d-80ca-7d97b78b8687", "1369d71e-b8b9-4d21-b14c-84a4e0eb0d9f"],
                'display_starts_at' => "2021-05-29T20:29:21.000000+09:00",
                'display_ends_at' => "2024-01-16T10:31:53.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "tAi",
                'usage_limit' => 5681,
                'min_amount' => 1509,
                'storage_id' => "a8fb2ab5-e942-42bd-9a28-962de801e4b1"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon22()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_amount' => 9770,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["61f89458-8470-4cef-9bc3-8de2d13a296b", "d56a1f0a-593b-4f65-9097-1559b3e18a45", "323a22ed-63a9-495b-a385-accaa1644166", "9b46df20-e0c3-4431-9b6d-e1e7b4a5384d", "357ebf94-8dbd-4831-abcc-4316e4dce55b", "94526abf-5053-4790-9482-c0ed6b5f6545", "415653f0-ed80-4d24-b07c-8921ce4ad2e5", "12c23154-dcc8-45a9-b41c-d54e2988ed72", "0f6f24cf-ac43-4747-87e9-d0065be65c58"],
                'discount_upper_limit' => 216,
                'display_starts_at' => "2021-03-30T17:45:50.000000+09:00",
                'display_ends_at' => "2021-06-24T05:58:05.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "2Sys8a7qg",
                'usage_limit' => 3775,
                'min_amount' => 4689,
                'storage_id' => "50860e61-bf9f-48f0-9aa5-cc7194296014"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon23()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_amount' => 3901,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["bd2eddd5-1464-4f2d-8d61-51cd40620f7c", "d1a90207-d95e-4698-bbfe-0e6689e4df8f", "8fc9151a-5641-493b-b7fd-305322ef1f39"],
                'description' => "t1houf9boYaL0eoAt3nEiuFgr8RWxxpw8SMeQS",
                'discount_upper_limit' => 3606,
                'display_starts_at' => "2022-01-09T08:40:38.000000+09:00",
                'display_ends_at' => "2020-04-05T15:14:58.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "WBO",
                'usage_limit' => 4703,
                'min_amount' => 9617,
                'storage_id' => "37d8bd9b-9af5-4705-97be-6e74884a970d"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon24()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_percentage' => 7251.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon25()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_percentage' => 5760.0,
                'storage_id' => "a5808437-4c3b-456a-a2a6-5552241c541b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon26()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_percentage' => 8323.0,
                'min_amount' => 5173,
                'storage_id' => "8656ccc1-4c3d-4352-9ebb-bcc8f901b881"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon27()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_percentage' => 9233.0,
                'usage_limit' => 1606,
                'min_amount' => 8398,
                'storage_id' => "2ca24ebd-8289-4439-9218-1126ffcd8b58"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon28()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_percentage' => 6205.0,
                'code' => "Ivdp",
                'usage_limit' => 559,
                'min_amount' => 8681,
                'storage_id' => "3de9b46d-fe4f-4ff1-b312-e0e01a663aa9"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon29()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_percentage' => 1611.0,
                'is_public' => FALSE,
                'code' => "hMuvplo",
                'usage_limit' => 8635,
                'min_amount' => 4665,
                'storage_id' => "93682a9e-3a9f-4aa8-b1fa-73fb49ae026b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon30()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_percentage' => 7460.0,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "9DpKVTeDW",
                'usage_limit' => 3761,
                'min_amount' => 9062,
                'storage_id' => "2f947a92-4909-4fd3-95cb-0a81db0a0618"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon31()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_percentage' => 4771.0,
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "rZxAG40",
                'usage_limit' => 5294,
                'min_amount' => 5163,
                'storage_id' => "46feb8c8-5704-4107-9bfd-e1f39c5fab90"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon32()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_percentage' => 1975.0,
                'display_ends_at' => "2020-07-05T02:20:29.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "VX7vUJ",
                'usage_limit' => 3827,
                'min_amount' => 3951,
                'storage_id' => "19b1fd6d-1ae1-432b-b316-f1976451d90b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon33()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_percentage' => 529.0,
                'display_starts_at' => "2024-01-04T01:07:25.000000+09:00",
                'display_ends_at' => "2020-12-14T21:41:00.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "hG5",
                'usage_limit' => 6386,
                'min_amount' => 4228,
                'storage_id' => "3f18960a-3559-430f-afe9-75bb8a78b0ec"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon34()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_percentage' => 8510.0,
                'discount_upper_limit' => 7962,
                'display_starts_at' => "2020-06-20T11:27:10.000000+09:00",
                'display_ends_at' => "2022-02-28T04:41:22.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "hMT9",
                'usage_limit' => 655,
                'min_amount' => 1472,
                'storage_id' => "5178013c-9236-4868-9544-8c6b46a45f6d"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon35()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_percentage' => 773.0,
                'description' => "XNjyk0rntKuJNRikDwhfpNaKruWCltntnyoxblKZxBbacRHaz8Jrfgm3SZwW2xkVwsFpOXctwh6ZR19LmcxR1lT36XYVw9fGvIws4HPnAyuw21QOcmDPhcsui8QLbZnd3mAtIqRlt0Ev2ZF4ZDgPHKji0Zm26UG7Bb9JWygO774r6JIegIzo4JM2124HD6dCqYqyvwYR0",
                'discount_upper_limit' => 6984,
                'display_starts_at' => "2020-11-29T20:22:32.000000+09:00",
                'display_ends_at' => "2020-04-29T19:14:06.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "Ua1L3",
                'usage_limit' => 1290,
                'min_amount' => 2796,
                'storage_id' => "ed6f55dc-801a-4171-a9f9-e75ecd06c07e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon36()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_percentage' => 8994.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["d512b870-a157-42bf-8ac0-5f802a13435d", "5d0a3325-e11f-4dcc-acee-ba8c8cd2d839", "f99685ef-a3a5-4638-81e1-b444b7697ed3", "e537b596-9326-4bc1-bba8-5a2669268ec8", "b9d77982-7cb9-49b4-a0bb-88b490dd37e0"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon37()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_percentage' => 501.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["5e6b10e5-5cd5-4d25-9095-29f20555a45e", "9b31842c-73e1-4071-a8f6-d258ab13d4ae", "6801b4c8-7887-4b59-b326-dec56629a384"],
                'storage_id' => "17641e90-442f-4d10-8244-6ccf93fe76f9"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon38()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_percentage' => 2997.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["818b1e7c-b851-4387-981d-c0e162177d93", "1ef49465-36f2-4333-81c8-49ed6fbc4bfc", "0685f5ca-2e66-443c-be52-e8f911d71d37", "09de391d-6dc8-4b6e-a434-875b2d22ce1f"],
                'min_amount' => 4461,
                'storage_id' => "da81c710-ef7d-4974-84b9-1afc20d5b2ea"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon39()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_percentage' => 3015.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["50d564db-735c-4924-903d-6d98814a4744", "3495271e-cd46-4e75-997f-88234c8e2798", "95b3d6e7-fe7b-4f25-be74-ed300787e224", "6ad321c9-c52d-46ee-8e2a-e1760c8e3e87"],
                'usage_limit' => 6518,
                'min_amount' => 1832,
                'storage_id' => "29915b9d-7d28-428f-8287-508030e452e1"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon40()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_percentage' => 5516.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["cefe3964-8980-41df-b902-666d0852995f", "7d227f93-04e5-411c-b88d-a0fc57a12b0c", "25d453ef-022a-4f30-9591-452508ecdbca", "787a7b89-8451-481c-a723-54bd0a508fc7", "8fb19a5b-5abe-442d-b223-9effb9c57031", "0c16e233-bcea-448c-96da-307614760433", "187cfb29-df35-40a7-9bb0-f55342951528", "0c245859-051f-4113-be90-fd7db67a1bba"],
                'code' => "nRftxf",
                'usage_limit' => 579,
                'min_amount' => 7144,
                'storage_id' => "72cf7820-10e7-4c85-8ce7-032c8e939a38"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon41()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_percentage' => 5228.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["86664102-6696-41cb-9f40-4ac9f9a798c1", "b8b49dcc-382a-4323-8126-f443ffd163d3", "525b285d-a100-40cb-90fe-ee64c9a5d27a", "6e9a2164-99c8-4851-ab8b-d5dac6bde5b3"],
                'is_public' => TRUE,
                'code' => "9kM",
                'usage_limit' => 7725,
                'min_amount' => 3185,
                'storage_id' => "49cff19e-76d5-4d03-91f0-c28b8d597f7f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon42()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_percentage' => 5364.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["86aa7f5f-3f91-489a-bd0f-7699b5725e88", "98d9d16a-00b0-45c0-8729-0fe56daf40f7", "b282e6ad-0223-4f36-8663-fd88b425f8a5"],
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "0CfrRH4o",
                'usage_limit' => 2682,
                'min_amount' => 747,
                'storage_id' => "f4d95e07-9429-4171-a178-e4c0c9e2a94e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon43()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_percentage' => 3671.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["c29b9b03-6316-4ae1-94aa-9e1f98349e9f", "7032c0d5-8820-4e90-9143-9f29e207daed", "03a46270-21d1-463c-98b4-0935722f824e", "1b779962-f428-4b0c-aa6e-fcd6821e88de", "967bc511-0c39-4592-a49d-523bf2244550", "62f926ad-cb79-4113-9f1e-0063231e99d7", "e4b330c5-2226-4d88-9b03-2d013f765558"],
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "p",
                'usage_limit' => 2365,
                'min_amount' => 5817,
                'storage_id' => "69ffe37c-6de5-4e24-9ebb-24a7127c796f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon44()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_percentage' => 4380.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["ebe62eec-6483-494c-9e12-554ffb94291f", "8ebfbb43-1e67-412c-a6b0-4371e09034e6", "90a0322c-ffca-4278-bc62-d9c8ac38b931", "37e41c07-e326-4f5b-a5fe-86c29be6d51d", "83584689-2ded-45f0-97c6-16eb398775b7", "d1c382d8-562e-49ed-8862-32ea25b46286", "c14b1a49-08f9-4429-b387-80fd16c5ca4e", "44a228b8-b865-472a-92b4-38010dfd69c4", "21257c3c-1a50-4ee4-819f-18e0772774be", "9fe7feb1-a26b-4889-aea3-266efda7bd38"],
                'display_ends_at' => "2023-01-01T18:08:38.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "M80qmLJy",
                'usage_limit' => 4004,
                'min_amount' => 6197,
                'storage_id' => "ad2ba90f-5f82-47bd-b85f-da8293300baf"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon45()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_percentage' => 2244.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["62e9547d-e49e-4220-bb51-186380c2d13c", "582d8b2c-09f7-4a83-844f-c79457519563", "5152f916-2d9a-4c8e-8ed4-35bde9c76751", "25d0bfb2-b3b2-4598-ada0-66e9d0973046", "c373b5a5-691b-4618-b843-aa0ca15a4181", "3336c38f-e6c8-4e4d-8486-95b7924c704f", "a44c8c3a-1948-45cd-b259-08241df69eb8", "5f4f551a-32b7-4433-830d-bf9e3c8cf111", "d71bea24-bcbd-4ca9-881a-7d25b167de63", "e9fe39e1-a816-4a1a-a324-7655f5b27021"],
                'display_starts_at' => "2020-11-22T12:37:29.000000+09:00",
                'display_ends_at' => "2022-06-12T07:47:01.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "dnwlj5H",
                'usage_limit' => 2551,
                'min_amount' => 246,
                'storage_id' => "d87785f5-eb14-42f7-bfe4-a855b7c78dc2"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon46()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_percentage' => 532.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["d1321e29-2a9c-42da-b550-905dec751195", "3fdb2ab0-10c0-4f05-8795-29555dea560e", "3f0f5e69-1ba6-44fc-8577-d5a3c9de9b54", "a6b3bbd5-beb9-4a79-a929-d74c65cce9fc", "85a23a27-bb20-4a1b-b277-6a9653889e14", "58e43282-7bca-4961-be01-704b3a8c7d52"],
                'discount_upper_limit' => 3238,
                'display_starts_at' => "2022-07-17T02:35:24.000000+09:00",
                'display_ends_at' => "2021-11-01T18:46:19.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "e",
                'usage_limit' => 3434,
                'min_amount' => 512,
                'storage_id' => "79657d3b-eb86-4f03-8650-b1e729a5360d"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon47()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "7bd9df8e-d67d-4805-a8f6-1f4e89498cc1",
            "PPgIosSf9xRnzsWvXgMuYIN0sCivtYGZ6uKpB816KUAFmLhqtmBUQ8rATtVQEIxhnktZk6D6suS85UmI",
            "2021-11-19T10:26:38.000000+09:00",
            "2020-05-15T11:23:45.000000+09:00",
            "c7f5a1ca-e84a-4a8f-a505-7ca9f5008d2f",
            [
                'discount_percentage' => 2434.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["d9acfd0e-30b0-4fb8-a668-b2758d73561c", "a6b673ac-1b8d-4a63-ab70-43420f867169", "9c766f14-ced7-499e-94e5-4fe05a0ffd79"],
                'description' => "aIU5rwAENb9",
                'discount_upper_limit' => 1818,
                'display_starts_at' => "2020-12-31T09:03:02.000000+09:00",
                'display_ends_at' => "2021-06-07T13:24:01.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "Hcipw4",
                'usage_limit' => 1041,
                'min_amount' => 833,
                'storage_id' => "a1c67267-369c-4622-afe2-943b9ebbcd56"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
