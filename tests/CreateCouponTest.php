<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateCoupon extends TestCase
{
    public function testCreateCoupon0()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_amount' => 5995
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon1()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_amount' => 2565,
                'storage_id' => "cf6c333f-b7ee-4818-843f-ed39c093cebd"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon2()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_amount' => 1216,
                'min_amount' => 3803,
                'storage_id' => "a0146410-b09d-4159-b1ed-6e9bc8a14c5e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon3()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_amount' => 9455,
                'usage_limit' => 1940,
                'min_amount' => 5311,
                'storage_id' => "e7a266e2-50cf-4dbe-8141-39578d4eb10b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon4()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_amount' => 7582,
                'code' => "i5yU",
                'usage_limit' => 3890,
                'min_amount' => 9740,
                'storage_id' => "baaed5a7-cae7-45e5-9d06-00d0d3bd38d7"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon5()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_amount' => 6316,
                'is_public' => TRUE,
                'code' => "MII",
                'usage_limit' => 4308,
                'min_amount' => 9849,
                'storage_id' => "15080058-e2e2-4bc1-923f-335ced1be350"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon6()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_amount' => 6868,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "P3",
                'usage_limit' => 3979,
                'min_amount' => 8822,
                'storage_id' => "17c4a8d9-3e79-4a87-a431-531edd4bdf9c"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon7()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_amount' => 2966,
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "QaKLE9k",
                'usage_limit' => 2566,
                'min_amount' => 5465,
                'storage_id' => "bde8c554-8d4b-4f59-86cb-7d4f01bd89ad"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon8()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_amount' => 9151,
                'display_ends_at' => "2020-10-04T14:57:21.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "Zv",
                'usage_limit' => 2607,
                'min_amount' => 162,
                'storage_id' => "6206c845-3582-45f5-9c33-fa72db7bed39"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon9()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_amount' => 4670,
                'display_starts_at' => "2020-10-03T21:58:11.000000+09:00",
                'display_ends_at' => "2020-09-03T05:25:29.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "mi",
                'usage_limit' => 9606,
                'min_amount' => 2473,
                'storage_id' => "3e80e9fb-0f1d-41d2-b995-7a395cfd71a0"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon10()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_amount' => 4891,
                'discount_upper_limit' => 8404,
                'display_starts_at' => "2023-09-26T08:47:11.000000+09:00",
                'display_ends_at' => "2023-10-05T04:14:01.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "Z2hCr9g",
                'usage_limit' => 6188,
                'min_amount' => 1658,
                'storage_id' => "03a50729-b40e-4d52-8c92-6fc33804d459"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon11()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_amount' => 3126,
                'description' => "175Hf9xcwlDD8ZKzFOIU37",
                'discount_upper_limit' => 8545,
                'display_starts_at' => "2022-10-14T20:28:33.000000+09:00",
                'display_ends_at' => "2022-12-25T02:57:21.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "hF1",
                'usage_limit' => 7219,
                'min_amount' => 6392,
                'storage_id' => "ecfff3cf-b668-427a-8a21-f07c243c0e32"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon12()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_amount' => 5308,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["89a3955b-94dd-4b05-be3e-229ebdca287f", "028424a7-e760-4681-90ad-201e000390dd", "b5c26e0e-59e3-4592-8d96-aafde75dca89", "d3af5920-fa3c-4f6a-9324-245ad3fbf297", "cfe0930b-6298-4499-a0a1-38bcb86d1bd3", "a9e6e494-ed44-4595-b0c0-5d86b7cc2d20", "900b8253-64f4-459b-8961-4ba7b4d5d7bd", "42395379-b757-4f95-953d-5dddd26d5eeb", "30742716-28f8-41f9-8781-5b432b0374b3", "acbb16a1-fe05-4747-bfce-f3e34108ceef"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon13()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_amount' => 7506,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["dfe91454-29d0-4823-8154-f076e7f95dbd", "fc2e9102-58ab-4a0c-8773-eb181be4d413", "d5c9821a-8932-42e4-be8a-ed24f0935bc0", "bada37da-1c2c-4cfb-8988-c883ca0c4d16", "32724441-c1f0-4ab8-b58c-9430fab1410d", "b66e85c9-4a6d-46e9-97e4-cbee92923845", "d32e8b11-255f-41c7-ae7e-9650e9ada915"],
                'storage_id' => "1971538b-164a-45ba-8cc9-1f2083f0f87c"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon14()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_amount' => 6495,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["99706b09-2a51-4ad7-8f86-3c51eb8141d8", "529b2230-b2a9-4ef0-b823-44de076e1245", "d75477d1-8a06-49ef-8aec-6783a0ed057d", "51032718-405a-44b7-9a0d-5a97a21eb78b", "3e043673-345e-4758-a3d9-75e6582e1a0c", "4960e46b-6290-4777-b804-1652b1710fd7", "10c8eb3e-69fa-43a6-ba7e-9884bc6ac182", "2935535b-33b7-49c0-833e-f97c139d7907", "082f738b-46fc-4ccd-ad19-0b1025f5687a"],
                'min_amount' => 7609,
                'storage_id' => "3f97450e-b1e4-4442-9ec4-9a945b083655"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon15()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_amount' => 2713,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["df149979-8c70-47f2-bc01-ca9f5e52e354"],
                'usage_limit' => 3725,
                'min_amount' => 7287,
                'storage_id' => "e72ae12a-4455-429c-96aa-15629c66c97e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon16()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_amount' => 6713,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["c037607f-e6f5-45f4-b9bd-bd3b40068e22", "84c70638-6ba2-47e9-933d-8bd0a6b0f0b7", "320cec65-61ab-45b1-8c89-a10efeb476a0", "e9f184a2-0508-41e7-914d-b07d61d9262d", "5c8b6573-de93-468b-abfc-43e0a9ba9c27", "637f5f32-c25b-4072-acd0-d3b3e3747f2e"],
                'code' => "Dhx8WGem",
                'usage_limit' => 5963,
                'min_amount' => 2463,
                'storage_id' => "af2103f9-115d-4cca-b195-bf52de506328"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon17()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_amount' => 3298,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["20cf8c3e-edab-4c8d-9f8a-664034a40a57", "eb1da4c3-f862-4149-bf78-8a340f0c1526", "2c3b2ffa-1c2a-4a65-8237-9c7e51a3f515", "a870931c-31b6-4586-a11d-748ade1ecb96", "a787f731-9019-46ed-ad20-a9aeb2f94291", "84968491-e7f8-4c9b-b618-35b0bb1cd22d", "5b2a53e1-6c90-4f72-a09f-18690e092e89"],
                'is_public' => FALSE,
                'code' => "40oVcr",
                'usage_limit' => 9904,
                'min_amount' => 860,
                'storage_id' => "387279b5-57d3-4ca3-9045-4f22664b05bb"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon18()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_amount' => 554,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["052f1177-be13-46cf-a5f0-d81377051bcc", "bc1e7f77-fa36-460d-9df9-fe5a3e84d45e", "3f2d93df-d5eb-4e6d-9ca0-bb55440e7030", "016bf8e0-63b7-4e8c-9e39-59428e56f22f"],
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "LvLDih",
                'usage_limit' => 3965,
                'min_amount' => 1494,
                'storage_id' => "3d813d0d-7e68-41e9-9ca7-2de460741726"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon19()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_amount' => 7239,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["807affe7-7b8d-4a13-816b-2a47b506556c", "8e5ecb64-8bee-4722-8273-ae7cfa0eccf4", "478aa70b-beeb-4579-91cf-0ae7ef8044d0", "c57b4973-39ce-4665-a900-a26d458c6c41"],
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "MG",
                'usage_limit' => 8903,
                'min_amount' => 5354,
                'storage_id' => "69d88dbf-e3fa-4acc-ae53-1ff46a71712b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon20()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_amount' => 2398,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["2c646556-e0bf-46fe-9f70-eabf62f40134", "a100ee76-6495-49de-95fa-b6d4c2e8bbe2", "b94670af-a078-4498-9ced-46e2c91043ec", "10ce545c-1e73-4022-8b2a-b2feabcd3fb3", "4612df87-fc80-470a-846a-e4bfc1bda835", "a2ddbba2-056b-47d4-83a6-80d07a23a8b4"],
                'display_ends_at' => "2021-11-24T16:10:29.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "8F",
                'usage_limit' => 2321,
                'min_amount' => 4791,
                'storage_id' => "ab7706a3-86a9-42c0-ae41-d54090850c71"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon21()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_amount' => 4599,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["3bca692c-84d1-45f3-a234-e576b6701880", "fccb2a6f-ad37-486c-bbeb-75d5005599d1", "20c4124b-fe73-40ca-85c1-22cbeffa7720", "c03fe151-69f3-4db8-be33-e6aed8d8f3b6", "9c78c1dd-3ed9-45b4-ad74-69358ab866aa", "3f0f3ae6-33ab-46a9-ac2c-3a8d9a838d17", "8ae74f43-d8b3-4e32-81e6-21f4ba3e235b", "bf62505a-e970-4165-85d6-4714c1455ec9", "82041f67-b516-44e8-9f17-e350127e7306", "c731a638-5863-44df-a432-846fbfb653b7"],
                'display_starts_at' => "2021-12-20T18:10:40.000000+09:00",
                'display_ends_at' => "2020-06-04T01:46:59.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "v2qDjeGEI1",
                'usage_limit' => 5000,
                'min_amount' => 2188,
                'storage_id' => "7bdfccc5-ae5b-4933-9ab6-7dc38f130006"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon22()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_amount' => 7918,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["e4e6a09c-a18d-40a6-b4b4-7f9e57aba94d", "9c7933cd-4ce1-4658-94eb-c08d69f99dc6", "f98546dc-34d2-4794-b66d-346c15f58280", "300bdb21-8d6f-462d-a2ea-cb0f97499e63", "100f3aa4-314b-4761-a780-1958c081dec5", "6526d6cf-ede5-4eb2-98f9-673491647faf"],
                'discount_upper_limit' => 2327,
                'display_starts_at' => "2022-11-23T09:08:11.000000+09:00",
                'display_ends_at' => "2021-02-17T19:22:30.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "Lru",
                'usage_limit' => 7940,
                'min_amount' => 3603,
                'storage_id' => "eb7ed139-67b4-49d6-a128-00ed61972747"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon23()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_amount' => 206,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["24af3870-024d-4155-aa56-f7327c994cb3", "86e01db5-ea43-4507-989c-0f842fc140de"],
                'description' => "pjo4mbowLYPHoTbOD8dwNIdnKVWKhIqDCV2Lfoan7uMSmq3hx55swVGTwJp17PqRfoKKCnxAnlXxUS19kq9qfBRLQlETSEzz7zrlAYcJcrRgAqfhHGH9KwU3quQpv6xkIMahy1K1sZywzwnxcoULu7bA",
                'discount_upper_limit' => 4333,
                'display_starts_at' => "2020-09-15T00:10:13.000000+09:00",
                'display_ends_at' => "2021-08-08T13:31:35.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => TRUE,
                'code' => "4V",
                'usage_limit' => 4711,
                'min_amount' => 7324,
                'storage_id' => "0bc82ee8-565f-47fe-b5a5-bf043af68fbe"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon24()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_percentage' => 4079.0
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon25()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_percentage' => 5832.0,
                'storage_id' => "9bccadc4-0bcf-410e-af24-b006bec8dbb2"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon26()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_percentage' => 6421.0,
                'min_amount' => 8782,
                'storage_id' => "0e4da74d-e826-4d40-8e71-4062667699ca"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon27()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_percentage' => 6796.0,
                'usage_limit' => 8917,
                'min_amount' => 8054,
                'storage_id' => "75c63bc2-aa02-4d79-aa14-5d73a44f1176"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon28()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_percentage' => 7292.0,
                'code' => "WdXH2wo0",
                'usage_limit' => 4763,
                'min_amount' => 2170,
                'storage_id' => "ae9c342c-9a05-4d2a-ad46-92f8bcb1320d"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon29()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_percentage' => 2722.0,
                'is_public' => FALSE,
                'code' => "Gq96yG",
                'usage_limit' => 5510,
                'min_amount' => 6995,
                'storage_id' => "4406784b-0d0d-47a2-8a4c-4f9b1c6ef4dc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon30()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_percentage' => 2453.0,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "2lhTsu8B0",
                'usage_limit' => 8623,
                'min_amount' => 1912,
                'storage_id' => "0be9e54c-72eb-46a6-bba1-df78a6d75827"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon31()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_percentage' => 7251.0,
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "H0",
                'usage_limit' => 3172,
                'min_amount' => 8370,
                'storage_id' => "d7a84ed7-8df2-4a16-bf76-4b0a7378d453"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon32()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_percentage' => 1465.0,
                'display_ends_at' => "2021-10-14T16:15:58.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "tCBZ",
                'usage_limit' => 1135,
                'min_amount' => 2545,
                'storage_id' => "874d9e8e-9bca-49bd-9c80-409d640603bc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon33()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_percentage' => 8233.0,
                'display_starts_at' => "2022-05-09T18:27:39.000000+09:00",
                'display_ends_at' => "2020-12-08T09:03:20.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "uzeRYP",
                'usage_limit' => 9166,
                'min_amount' => 5343,
                'storage_id' => "36750ba6-0e5f-4524-a763-b31dff063773"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon34()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_percentage' => 6710.0,
                'discount_upper_limit' => 4198,
                'display_starts_at' => "2022-11-15T23:58:20.000000+09:00",
                'display_ends_at' => "2023-03-01T22:07:21.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "1",
                'usage_limit' => 4465,
                'min_amount' => 1895,
                'storage_id' => "8fc30643-041b-446a-ac76-cc7bb84d41f1"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon35()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_percentage' => 1321.0,
                'description' => "9BdQqGqz5l4EwdNzOpfiTOrmHLQHkWulkfsOGpd5nvSGBpyC9kR8AAFg6U6d2hKbZLL96cSxYNQUHxL2S67u150O6XBQwcGg7cY9sG1bAYPjdQnx2Mz9nF9EmHjXEamqf9fQNLTD1fu3sRzZYIWeJQt7EJEpBAVfxX6IbQjdKV2i8qD",
                'discount_upper_limit' => 8056,
                'display_starts_at' => "2022-03-01T09:59:13.000000+09:00",
                'display_ends_at' => "2021-06-01T20:13:54.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "qHyLPA",
                'usage_limit' => 9193,
                'min_amount' => 5567,
                'storage_id' => "11ee69b9-b383-4635-b6ee-537c6dbfa08a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon36()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_percentage' => 2609.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["18916267-6b82-4142-9cf6-f896aeaf6c71", "d9a92499-aafe-4f28-8627-c76c68b9b2a6", "e5d1dba9-9b38-48c0-9d28-c10406772107", "6dd9a939-77fe-4529-a853-7d8905cb4aaf", "8642cfbb-3b43-4f7c-9c9a-0a208cca096c"]
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon37()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_percentage' => 3793.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["2b183429-71cd-44e5-be02-7ab2adfeb18e", "0875eff8-ec9e-42c9-b1ce-021a1d001c53", "ea5972b8-5903-482f-b0b0-7dd2d8a29786", "2a5b937d-2a02-4bfd-b3a5-2b82b7184d40"],
                'storage_id' => "edc52a7c-0d65-4f5d-9159-907e1d33f068"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon38()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_percentage' => 5260.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["fcebf7e6-487c-4f8b-a791-c6cd995c226e", "a87c2146-9ab4-4ba5-a7b0-65cc1258ea8c", "03097a40-8bd3-42aa-a410-fbd6953bbf26", "9213530a-843f-44a8-9078-d49d7949a47a", "139a33e6-5645-46f3-9c7d-588b8d1725b9"],
                'min_amount' => 1116,
                'storage_id' => "ab36a902-baa3-4bae-b1b1-a36fa98c7953"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon39()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_percentage' => 1953.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["6d759d0e-fd6c-4c9e-a18c-823032549f97", "c53170fa-d9bc-4b4a-9244-ca23f2c8e545"],
                'usage_limit' => 9913,
                'min_amount' => 8240,
                'storage_id' => "5fd1a268-db13-4055-b37f-4ab35dbd97e6"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon40()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_percentage' => 852.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["c063f6de-063d-48aa-9749-70bef90aca83", "2765f146-4da5-47e8-bb03-5e3d30a4f2dd", "b9923ef6-d68b-47a6-9837-f405ea669482", "3a4753c6-e0db-4b72-b940-4cd4afb13825"],
                'code' => "EB28",
                'usage_limit' => 4400,
                'min_amount' => 6580,
                'storage_id' => "0efb5a48-bd8c-450b-8bef-2db16b019baf"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon41()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_percentage' => 3774.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["4e502e9b-219b-4fad-81f2-94cb681ef5b8", "d4ff15f0-c0db-4150-9a96-0a08a05a8e33", "4b025da2-9365-40c0-9451-3e62c3ac9dc5"],
                'is_public' => FALSE,
                'code' => "blFFnLvV1",
                'usage_limit' => 797,
                'min_amount' => 1306,
                'storage_id' => "70bfc0e5-2c9f-43c3-ac56-da77e8579b65"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon42()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_percentage' => 3373.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["4b1ba93c-48df-4595-800c-73f4848ccbd1", "fc175c85-5126-47de-bffc-b5accf648d71", "af1c5b53-8f1f-4a5d-b3ef-44e477676427", "82ab9317-743c-4eff-9a33-906622fabe7e", "3757f61a-ab5d-4fc7-b220-12e99bca9a92", "fcbda781-5e0c-4d2b-90fe-b538782f5407", "d0b90c4b-2df8-401e-a51b-971c1490233b", "08066c57-4ad8-495c-80d8-6bcd63952b1d", "d9c507c4-a153-4bb3-b403-e5d27927576f"],
                'is_hidden' => TRUE,
                'is_public' => TRUE,
                'code' => "Dq3UYB7",
                'usage_limit' => 7465,
                'min_amount' => 5179,
                'storage_id' => "9d118b02-b580-4595-8c9d-41fe89d66bdc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon43()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_percentage' => 8272.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["df0eddf4-fa42-4b4b-9c83-6bb2a6b6abc0", "53ef9b4b-c5e9-41b5-9746-6ee77381a1d6", "00ecad78-6911-4be2-ae2b-ce7ef7613ac4", "270a2bf8-4902-415c-ae7f-4351c41b5746", "f9489661-d8bc-4c02-9693-3a54881e9fb2"],
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "Sbb",
                'usage_limit' => 8265,
                'min_amount' => 8212,
                'storage_id' => "3a88058c-74ff-4a98-b109-4c1b8a7d705c"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon44()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_percentage' => 446.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["3b11d52b-d30d-4a5f-9ae0-8c1fcaf3d8c3", "92687ae0-b3e2-4084-a386-0fdc4d5909eb", "c9650d8a-9f28-4fa6-aa2a-0bb50b4f42a8", "dfb3dd89-ce8b-4531-9021-378780542c3f"],
                'display_ends_at' => "2020-04-28T23:07:04.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "6vLXr9FkF",
                'usage_limit' => 7321,
                'min_amount' => 9110,
                'storage_id' => "d138ae92-5460-440b-93d0-e755fa57bebf"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon45()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_percentage' => 6655.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["e40f8cfd-6fd3-4ff4-8f64-2666a399a179", "28f029ff-a417-4b08-9881-7007424afb11"],
                'display_starts_at' => "2020-10-10T10:54:46.000000+09:00",
                'display_ends_at' => "2021-08-16T09:18:36.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => FALSE,
                'is_public' => FALSE,
                'code' => "6JeW",
                'usage_limit' => 2184,
                'min_amount' => 1275,
                'storage_id' => "d129609d-4be5-4182-9b18-7dedbbafacf8"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon46()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_percentage' => 8267.0,
                'is_shop_specified' => TRUE,
                'available_shop_ids' => ["67a52f04-3bcc-454f-aeab-7084749eb0a9", "d3ab3a74-b4e5-449f-9dea-fba8d99afff3", "338ba2e7-c2a9-44b9-a587-09fd1e2e65e5", "23b49dfc-5055-4885-a245-227b8bb4440f", "212bc5a7-c84a-47e3-9fa9-8eb61efa480f", "982f2474-b2f0-4605-aa0b-fe26a3ad2d23", "27d93e18-c6f9-4969-a938-5b8978b7f806", "c1f1ed02-14ea-4e54-a938-bf76579e07bc", "d1f9cd88-e563-462f-847d-c294746ef445", "c8ee6dc4-1059-4a8d-bce0-53f065cc4f95"],
                'discount_upper_limit' => 3469,
                'display_starts_at' => "2020-01-28T23:02:28.000000+09:00",
                'display_ends_at' => "2021-11-10T16:04:41.000000+09:00",
                'is_disabled' => FALSE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "KEk9Z",
                'usage_limit' => 941,
                'min_amount' => 4146,
                'storage_id' => "9574b745-7840-4f77-ac0f-4b314e03010a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateCoupon47()
    {
        $client = $this->newClient();
        $request = new Request\CreateCoupon(
            "5b33aa29-8f75-4baf-98ac-9ba545a59ac5",
            "GzoOr14g0RwkF1hav8gpmP3iqg8jMLStWjUnQW8f7KKJEnFiOZbcXU72gecE2ChYy3jxCMBBpfImyYu0MTmP1OI5YLgpFdCg48cQkwTbI",
            "2021-10-25T18:41:08.000000+09:00",
            "2021-01-16T01:13:50.000000+09:00",
            "a2951abb-e85f-48b7-b66c-8f39f3bb57e7",
            [
                'discount_percentage' => 9503.0,
                'is_shop_specified' => FALSE,
                'available_shop_ids' => ["d1535b9d-f55f-4e34-b6a6-8ac5d86fdcd3", "e6d93681-f37f-46ed-b4fe-5a3400ed989e", "1da53df2-7505-47ff-8daa-4ec1fb45124a", "c6f9a618-c444-43be-9dab-f94c8173d62b", "dddb973e-fd94-4f6c-bd24-a8e7b4458c3e"],
                'description' => "RqhMcx3xlspHOhhGjlsYE5keGtiInIfz4dvKg7001V5vPsAB3OuNmITxnNOWyrkM3s2arctob1wlxPxSEfcMwmNcPR6MjWtczB",
                'discount_upper_limit' => 9168,
                'display_starts_at' => "2020-05-11T05:01:57.000000+09:00",
                'display_ends_at' => "2021-07-24T19:05:14.000000+09:00",
                'is_disabled' => TRUE,
                'is_hidden' => TRUE,
                'is_public' => FALSE,
                'code' => "GP",
                'usage_limit' => 2577,
                'min_amount' => 1098,
                'storage_id' => "47fbbefc-7ea8-4722-b35c-342fd86de0cb"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
