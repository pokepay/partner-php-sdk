<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTransferTransaction extends TestCase
{
    public function testCreateTransferTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "3a769fe5-ee23-42bf-947c-a065feae4e58",
            "25fadf3a-fb31-4d02-ab0e-d173863896c8",
            "01bf5cb4-a152-4eb2-8d09-9367e182b608",
            9687.0
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "3a769fe5-ee23-42bf-947c-a065feae4e58",
            "25fadf3a-fb31-4d02-ab0e-d173863896c8",
            "01bf5cb4-a152-4eb2-8d09-9367e182b608",
            9687.0,
            [
                'request_id' => "37d4c4a4-dabf-4ab6-ba31-5fb48e82ab0b"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "3a769fe5-ee23-42bf-947c-a065feae4e58",
            "25fadf3a-fb31-4d02-ab0e-d173863896c8",
            "01bf5cb4-a152-4eb2-8d09-9367e182b608",
            9687.0,
            [
                'description' => "JBRZmQUgzecqWdDVSstoEtPVoykbtA6l7WDayqQLAKXyhWYdlIHfSBBKI1",
                'request_id' => "832b55cb-dc90-46d1-ac8d-0fb44328a863"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "3a769fe5-ee23-42bf-947c-a065feae4e58",
            "25fadf3a-fb31-4d02-ab0e-d173863896c8",
            "01bf5cb4-a152-4eb2-8d09-9367e182b608",
            9687.0,
            [
                'metadata' => "{\"key\":\"value\"}",
                'description' => "6HLesoN7AsxjaX4bkzoW5SSzFCKjOEE829PJZq44v95w5OTBAsM3ixdWcd35lzGg9k8zX5Zx6rdz",
                'request_id' => "d7a5de29-8fda-47c0-ba8e-5e36d9e5fbff"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
