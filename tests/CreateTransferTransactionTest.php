<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTransferTransaction extends TestCase
{
    public function testCreateTransferTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "538d4639-add9-4b74-ad82-56fea7e32a19",
            "1237d799-6618-41a9-ae88-d9ce27d95ce9",
            "e04c6ccf-5384-4728-9a79-81d65b073e00",
            8889
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "538d4639-add9-4b74-ad82-56fea7e32a19",
            "1237d799-6618-41a9-ae88-d9ce27d95ce9",
            "e04c6ccf-5384-4728-9a79-81d65b073e00",
            8889,
            [
                'request_id' => "fc75c23e-60c1-45cf-b344-84872b67e3ee"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "538d4639-add9-4b74-ad82-56fea7e32a19",
            "1237d799-6618-41a9-ae88-d9ce27d95ce9",
            "e04c6ccf-5384-4728-9a79-81d65b073e00",
            8889,
            [
                'description' => "B1YRES4xlc6449ibwy8gDnWqdIP3eIh1PycrJFKeR",
                'request_id' => "f9c9d34b-917d-4115-a10b-4f1032385611"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "538d4639-add9-4b74-ad82-56fea7e32a19",
            "1237d799-6618-41a9-ae88-d9ce27d95ce9",
            "e04c6ccf-5384-4728-9a79-81d65b073e00",
            8889,
            [
                'metadata' => "{\"key\":\"value\"}",
                'description' => "6Oogw",
                'request_id' => "6b643199-6da4-49eb-9f3e-137928d9d4a0"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
