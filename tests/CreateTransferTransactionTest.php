<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTransferTransaction extends TestCase
{
    public function testCreateTransferTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "5d46b0e9-6e35-44ce-a749-829ba63c5ff3",
            "9db57a62-6fec-4355-a2aa-3ae59cababac",
            "f5671a2f-b644-42f1-be24-bcf51949d3e9",
            6160.0
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "5d46b0e9-6e35-44ce-a749-829ba63c5ff3",
            "9db57a62-6fec-4355-a2aa-3ae59cababac",
            "f5671a2f-b644-42f1-be24-bcf51949d3e9",
            6160.0,
            [
                'request_id' => "7bad9951-84ab-43dd-8a0f-c84c2183bc38"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "5d46b0e9-6e35-44ce-a749-829ba63c5ff3",
            "9db57a62-6fec-4355-a2aa-3ae59cababac",
            "f5671a2f-b644-42f1-be24-bcf51949d3e9",
            6160.0,
            [
                'description' => "RreNoLAWMJdywYSICtYcbHl2ktF16gpa54attROZcBbejZS9wdnnNKINI7vj8qEDPsdJ8JkL6K4fbUtzmymsdzvhUX",
                'request_id' => "b08eea04-dd6d-4f72-a3b2-bedf1700c79f"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "5d46b0e9-6e35-44ce-a749-829ba63c5ff3",
            "9db57a62-6fec-4355-a2aa-3ae59cababac",
            "f5671a2f-b644-42f1-be24-bcf51949d3e9",
            6160.0,
            [
                'metadata' => "{\"key\":\"value\"}",
                'description' => "0VozYCz4wR9Gfv1ooHMcqzJF0zVNZ8zHF5mnetJol0g7uhhZVw",
                'request_id' => "9a8c6942-c0c2-4753-aec2-2bb9dba4b5ce"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
