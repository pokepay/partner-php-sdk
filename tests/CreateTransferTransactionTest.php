<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTransferTransaction extends TestCase
{
    public function testCreateTransferTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "0e45ff1e-39d2-4f5c-8385-d41f53e917ab",
            "8013a725-4b4d-458c-96bf-ae19402967d9",
            "60908aa5-88a3-487e-9d4d-d95602faa57e",
            2680.0
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "0e45ff1e-39d2-4f5c-8385-d41f53e917ab",
            "8013a725-4b4d-458c-96bf-ae19402967d9",
            "60908aa5-88a3-487e-9d4d-d95602faa57e",
            2680.0,
            [
                'request_id' => "38c1bbee-3409-4e1a-80e9-4a5ee03d38c1"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "0e45ff1e-39d2-4f5c-8385-d41f53e917ab",
            "8013a725-4b4d-458c-96bf-ae19402967d9",
            "60908aa5-88a3-487e-9d4d-d95602faa57e",
            2680.0,
            [
                'description' => "NdM0yy6srRZNC9bYJUFWp4SJDd9Vw0ghvUwHY4GPMgqa4p3NBV6jnDEmNinmBAkCQlWqd4VgtaT7nx9nCCSGOYqsqY3PQB7j8S1LcJM99jV6h5DQ4TL9sXbFiutZ4wFjGxBLsRpox6uX",
                'request_id' => "0bbd101f-7e4c-4663-8836-878cc1210ebe"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "0e45ff1e-39d2-4f5c-8385-d41f53e917ab",
            "8013a725-4b4d-458c-96bf-ae19402967d9",
            "60908aa5-88a3-487e-9d4d-d95602faa57e",
            2680.0,
            [
                'metadata' => "{\"key\":\"value\"}",
                'description' => "e8Kxv6FPaZ8I6AxiybIUdjn2JlMSQ6V8dRYSFDiggsas4Nm4Pbqn0MLycuAIyd8Tc91YrDumA0BEPaxu5hz8quH88gYqQC45YQseyms9Q",
                'request_id' => "e1aa7179-7408-40a0-88d6-48feedf376aa"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
