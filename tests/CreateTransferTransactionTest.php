<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTransferTransaction extends TestCase
{
    public function testCreateTransferTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "edc943b8-41f7-4c97-8a19-5b54c88acbeb",
            "642a62d5-5444-4456-8e78-4bc34aa5cea4",
            "bc06f4ec-9b86-450a-a391-1a686eb85e7e",
            4259.0
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "edc943b8-41f7-4c97-8a19-5b54c88acbeb",
            "642a62d5-5444-4456-8e78-4bc34aa5cea4",
            "bc06f4ec-9b86-450a-a391-1a686eb85e7e",
            4259.0,
            [
                'request_id' => "fad409a0-0df9-46d9-b737-37b4c541098a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "edc943b8-41f7-4c97-8a19-5b54c88acbeb",
            "642a62d5-5444-4456-8e78-4bc34aa5cea4",
            "bc06f4ec-9b86-450a-a391-1a686eb85e7e",
            4259.0,
            [
                'description' => "1CgJuJQcGoLKIKWc0267KkuMk517YRCmiH6yukRFVVBsMxgFVvX32oHtbwH9fTLEuvpzRuAHzKqqGhmU0KOTrGhEDcuEk0RAEQ7aQQj5YeghmnE6cSeJ6f10bjI2WpsR84GO9BuGsAlZTaaZzQemwjJV0b9NDwP3qr1Befitd124K",
                'request_id' => "5626c4f3-63db-44e8-b5ca-fb8398e30988"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "edc943b8-41f7-4c97-8a19-5b54c88acbeb",
            "642a62d5-5444-4456-8e78-4bc34aa5cea4",
            "bc06f4ec-9b86-450a-a391-1a686eb85e7e",
            4259.0,
            [
                'metadata' => "{\"key\":\"value\"}",
                'description' => "ihfV2ApY3fmEAUeP1r6MMJ3Lk3rzEFke4aqO1dvIidFSKVRy8VEW83BHTsvCk3UkR3uTEetWrKPQxTikwrhmMjl2",
                'request_id' => "705c7ff8-11ce-408a-98c7-88173ffd66e9"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
