<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTransferTransaction extends TestCase
{
    public function testCreateTransferTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "a56b6dab-d823-45bf-85aa-2f9b60bfa46c",
            "7de8e707-5592-4c16-bbe7-0ccba9056f41",
            "566b69b3-b424-4f74-9db5-ea1e3a5e6227",
            3854
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "a56b6dab-d823-45bf-85aa-2f9b60bfa46c",
            "7de8e707-5592-4c16-bbe7-0ccba9056f41",
            "566b69b3-b424-4f74-9db5-ea1e3a5e6227",
            3854,
            [
                'request_id' => "ac494f84-dc35-4ab1-98a6-8ac19fa83d57"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "a56b6dab-d823-45bf-85aa-2f9b60bfa46c",
            "7de8e707-5592-4c16-bbe7-0ccba9056f41",
            "566b69b3-b424-4f74-9db5-ea1e3a5e6227",
            3854,
            [
                'description' => "2EKxgIvudVQKM3ivlyVYA6fe68jtm2G7nC3SW8MPeFKTYT7eEYLwvHQFKDImV0W8uMWRziTXMumFeaEHdh8PePoMZwnAEmuUL6pb761IWS7zT3jmF3XMzgKDKO",
                'request_id' => "b714262c-5bb5-4b6f-9b36-1819f129de21"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "a56b6dab-d823-45bf-85aa-2f9b60bfa46c",
            "7de8e707-5592-4c16-bbe7-0ccba9056f41",
            "566b69b3-b424-4f74-9db5-ea1e3a5e6227",
            3854,
            [
                'metadata' => "{\"key\":\"value\"}",
                'description' => "qQsbMF41dYUnemzRdROKbGph7rDrumGN6tQ3vZwFKRF7w7plclcWB9bNRwQ0LABzLS5AginlSJbgCOpN21EzYv",
                'request_id' => "5df47a85-9597-4598-b592-b9126f64cbb3"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
