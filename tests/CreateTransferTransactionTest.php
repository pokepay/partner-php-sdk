<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTransferTransaction extends TestCase
{
    public function testCreateTransferTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "81545536-e76f-4801-8846-e273070af7da",
            "edbcd2a3-931e-488c-a839-19ac559a0dbe",
            "4e5dc0eb-2bad-4bbd-af86-d5148cdec5ac",
            7027.0
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "81545536-e76f-4801-8846-e273070af7da",
            "edbcd2a3-931e-488c-a839-19ac559a0dbe",
            "4e5dc0eb-2bad-4bbd-af86-d5148cdec5ac",
            7027.0,
            [
                'request_id' => "4bce89ee-8920-4e96-8d01-54f1cde92354"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "81545536-e76f-4801-8846-e273070af7da",
            "edbcd2a3-931e-488c-a839-19ac559a0dbe",
            "4e5dc0eb-2bad-4bbd-af86-d5148cdec5ac",
            7027.0,
            [
                'description' => "QYaLtgBF21Mao0iMx72McbAtuQfbwPK5Ol2Udeu5ClBnNsqGtwvAjO8SQrjpTlUKU7ix6vD3BTnN",
                'request_id' => "22c761e3-fc61-4dc9-b6b4-468bdb26513a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "81545536-e76f-4801-8846-e273070af7da",
            "edbcd2a3-931e-488c-a839-19ac559a0dbe",
            "4e5dc0eb-2bad-4bbd-af86-d5148cdec5ac",
            7027.0,
            [
                'metadata' => "{\"key\":\"value\"}",
                'description' => "Cy2qiGNeSDJueWNAF2iLhkB08mWoSEw4Yfnz5e3bjXKldANGzSZe49qKV1rholLnfHAgpNJKDDEjuzSmETPUL6TDRxNmjKWPDEzen9VEh9JKwUlzsxb9tQKSZdMATJHlP3s2aiyvcn732KUYpvpwWJ",
                'request_id' => "781f9ad4-bdf6-491f-b244-06a7b533eedc"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
