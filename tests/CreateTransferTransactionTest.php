<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTransferTransaction extends TestCase
{
    public function testCreateTransferTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "703acf06-3542-4696-a9fd-ae3de7319e18",
            "df908a93-1d6a-4189-9ed2-f3d644ee8b1b",
            "c391fab0-3103-4093-a0f2-b30a65a2e571",
            6765.0
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "703acf06-3542-4696-a9fd-ae3de7319e18",
            "df908a93-1d6a-4189-9ed2-f3d644ee8b1b",
            "c391fab0-3103-4093-a0f2-b30a65a2e571",
            6765.0,
            [
                'request_id' => "b3a497d4-7fa9-4fe1-9040-b73358c25f3d"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "703acf06-3542-4696-a9fd-ae3de7319e18",
            "df908a93-1d6a-4189-9ed2-f3d644ee8b1b",
            "c391fab0-3103-4093-a0f2-b30a65a2e571",
            6765.0,
            [
                'description' => "vAOpGHfYh9PjEQsOl9V30KaNUBYxbOQFm3nmKB7WcVYXplm0TBm9OmcX8G1EEN3K674DaLcjOth",
                'request_id' => "f9797499-a23b-4d68-8601-ceb0d7a5e682"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "703acf06-3542-4696-a9fd-ae3de7319e18",
            "df908a93-1d6a-4189-9ed2-f3d644ee8b1b",
            "c391fab0-3103-4093-a0f2-b30a65a2e571",
            6765.0,
            [
                'metadata' => "{\"key\":\"value\"}",
                'description' => "af9Wfn8oLPruVzxhn1btA5JfS4GHjOdTb1VCqnDzFGDuW8R6YQBRL4P9Vy4mWYvpYTxkGS",
                'request_id' => "d1ea9766-7d91-4556-ba63-8bd196ac2eb8"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
