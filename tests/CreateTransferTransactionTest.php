<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTransferTransaction extends TestCase
{
    public function testCreateTransferTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "716d5a6d-f4f9-4b34-83b2-58df9dd2b302",
            "4afec0a0-1187-4a9a-8638-1c8939bf743b",
            "aba150a8-d640-42d7-8d09-96eee3965eff",
            7066.0
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "716d5a6d-f4f9-4b34-83b2-58df9dd2b302",
            "4afec0a0-1187-4a9a-8638-1c8939bf743b",
            "aba150a8-d640-42d7-8d09-96eee3965eff",
            7066.0,
            [
                'request_id' => "30e946d2-b47c-49e6-a78c-eafadeb25a32"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "716d5a6d-f4f9-4b34-83b2-58df9dd2b302",
            "4afec0a0-1187-4a9a-8638-1c8939bf743b",
            "aba150a8-d640-42d7-8d09-96eee3965eff",
            7066.0,
            [
                'description' => "eovb1R7O6QOgboW2zpcaLxa2QZma6CRo8nyJO9Y3f9djMgk8QSZwJ1udEIb7zDJ6KZTEk0mDRGqd8jGihF2zo2GN3QYDG6CZS1PVe5LZzi2NmWBluHrzflOytNd3ROmH9nMfAHnX3LOs6P3dxLhDjrt4CFESWJnPCLUxGLtrgogh",
                'request_id' => "3790ff07-84d3-40b3-b050-703c0b800fa3"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "716d5a6d-f4f9-4b34-83b2-58df9dd2b302",
            "4afec0a0-1187-4a9a-8638-1c8939bf743b",
            "aba150a8-d640-42d7-8d09-96eee3965eff",
            7066.0,
            [
                'metadata' => "{\"key\":\"value\"}",
                'description' => "HE574eeX1ksH4R2MgyW6z149JBRZmQUgzecqWdDVSstoEtPVoykbtA6l7WDayq",
                'request_id' => "f2bf20d1-4acc-4841-bb87-0e0cd984f6cb"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
