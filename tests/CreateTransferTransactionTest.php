<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTransferTransaction extends TestCase
{
    public function testCreateTransferTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "0061bf8e-8139-4922-886d-683038b86c00",
            "417f0453-6d11-4d06-88a7-59a61d5062c2",
            "5d31e195-f43c-4dcb-839a-64d5eb1b8dac",
            9344.0
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "0061bf8e-8139-4922-886d-683038b86c00",
            "417f0453-6d11-4d06-88a7-59a61d5062c2",
            "5d31e195-f43c-4dcb-839a-64d5eb1b8dac",
            9344.0,
            [
                'request_id' => "7a33a772-8f1c-42f5-8abd-37f8d44cf869"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "0061bf8e-8139-4922-886d-683038b86c00",
            "417f0453-6d11-4d06-88a7-59a61d5062c2",
            "5d31e195-f43c-4dcb-839a-64d5eb1b8dac",
            9344.0,
            [
                'description' => "1ST1WXtfeKSzrq1Zc5Ju53UYOCwl5C8rEq5yNfh8NoRe5rX0rVCmpqdlLHNNlbdnW1ooZFRDSiyltrhPzNi7jenj4X3xdXKxR7POl5XLEB6rdcoyFq3Dy2RXyPUAe3PgOIxNaz33MDlMm45c417Cl",
                'request_id' => "3e315e07-a019-449f-9650-985a776cdb5c"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "0061bf8e-8139-4922-886d-683038b86c00",
            "417f0453-6d11-4d06-88a7-59a61d5062c2",
            "5d31e195-f43c-4dcb-839a-64d5eb1b8dac",
            9344.0,
            [
                'metadata' => "{\"key\":\"value\"}",
                'description' => "adC",
                'request_id' => "81793493-d4fa-4d83-b297-8dfb230a3eb1"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
