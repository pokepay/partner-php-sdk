<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTransferTransaction extends TestCase
{
    public function testCreateTransferTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "6154dce3-609a-4c75-a365-21fd04a25b79",
            "e8f62a9c-b153-4201-8329-ac22ac1e99de",
            "2986f329-4061-4422-a278-a3f2742ec81a",
            8807.0
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "6154dce3-609a-4c75-a365-21fd04a25b79",
            "e8f62a9c-b153-4201-8329-ac22ac1e99de",
            "2986f329-4061-4422-a278-a3f2742ec81a",
            8807.0,
            [
                'request_id' => "0c2d43d4-c00f-4e7c-9853-a4f856c173da"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "6154dce3-609a-4c75-a365-21fd04a25b79",
            "e8f62a9c-b153-4201-8329-ac22ac1e99de",
            "2986f329-4061-4422-a278-a3f2742ec81a",
            8807.0,
            [
                'description' => "g1Ud9jBS9C",
                'request_id' => "276861d1-333d-4d5f-9f2a-9206b00ae910"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "6154dce3-609a-4c75-a365-21fd04a25b79",
            "e8f62a9c-b153-4201-8329-ac22ac1e99de",
            "2986f329-4061-4422-a278-a3f2742ec81a",
            8807.0,
            [
                'metadata' => "{\"key\":\"value\"}",
                'description' => "qv6T7eIQXHJd8SnpNPnO39WNWvjXlHUhCIHkbLQ7KL6y3Sdoxdn1tpYM1z5XMrmRY7bQCW9sPYWAKIaPAnlgG8mho7qKjeP1Vs1el3tVDmtz0qcHqLIsXtLIzc5kRp3WnRoU2x23XKfAMBShU6I6",
                'request_id' => "c0a7c0f1-a262-44d2-92a2-e1ef20f24617"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
