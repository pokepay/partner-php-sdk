<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTransferTransaction extends TestCase
{
    public function testCreateTransferTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "f094630d-5a47-4711-8dfa-a70b39185053",
            "74b20796-7482-4386-ad7c-25ed73d7de1f",
            "c486df51-3f3c-45f7-ba93-d7cbee4a0a72",
            9950.0
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "f094630d-5a47-4711-8dfa-a70b39185053",
            "74b20796-7482-4386-ad7c-25ed73d7de1f",
            "c486df51-3f3c-45f7-ba93-d7cbee4a0a72",
            9950.0,
            [
                'request_id' => "9194c51c-bced-4353-8d5e-ff0264712e3c"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "f094630d-5a47-4711-8dfa-a70b39185053",
            "74b20796-7482-4386-ad7c-25ed73d7de1f",
            "c486df51-3f3c-45f7-ba93-d7cbee4a0a72",
            9950.0,
            [
                'description' => "UiFQQOxySw1I2AWluYi8nhdkLWndinFlUcvUcyxZgU6Lj00XBU5xLPHsafZc3KtqGXo6mp2B163otqJK5qRREkipX7JmyMddU6j8C5gKCmHXncMmj2VRjiLQowm0Lf3PFohyPd2C7",
                'request_id' => "1ff18652-3a7d-4b65-a4e9-b34b1a06ec9e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "f094630d-5a47-4711-8dfa-a70b39185053",
            "74b20796-7482-4386-ad7c-25ed73d7de1f",
            "c486df51-3f3c-45f7-ba93-d7cbee4a0a72",
            9950.0,
            [
                'metadata' => "{\"key\":\"value\"}",
                'description' => "CKybZ6bg2hSdEmN67Y52lVzTwna52QlYfY2NzRc0jmFyuNfVzI",
                'request_id' => "16ed5c0d-a17e-445b-856e-aa05ea79d4a0"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
