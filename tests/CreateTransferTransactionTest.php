<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTransferTransaction extends TestCase
{
    public function testCreateTransferTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "b42c93ba-8b73-4ff3-a2b8-cf0c05f6ad36",
            "a069e5c4-b57f-4ea4-b996-25d8c6009908",
            "d2c64b5a-850d-4ca3-a6ef-26051c2be98c",
            904
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "b42c93ba-8b73-4ff3-a2b8-cf0c05f6ad36",
            "a069e5c4-b57f-4ea4-b996-25d8c6009908",
            "d2c64b5a-850d-4ca3-a6ef-26051c2be98c",
            904,
            [
                'request_id' => "346e7a0e-e088-4838-aaa4-20974051ed32"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "b42c93ba-8b73-4ff3-a2b8-cf0c05f6ad36",
            "a069e5c4-b57f-4ea4-b996-25d8c6009908",
            "d2c64b5a-850d-4ca3-a6ef-26051c2be98c",
            904,
            [
                'description' => "fPJCGzVYdohDRxcepsSsdecspEcH6zAIM8ju98Xf3eDqYA5vYg7TRPpd99WNI7yrXSKnnTIb76zTEtm8AaIiuGx9L9HalOMU5vigXX7Icn5jXA5QxJPbbGkUILhTXtRtmknLVk7hQOvzRC9zFhAU2LnJOGL09rrRBaBOdWWGJsxArgIuumMVdl31leH5Dl7",
                'request_id' => "f3d839da-f521-4cfe-ada2-3f5563a170c8"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "b42c93ba-8b73-4ff3-a2b8-cf0c05f6ad36",
            "a069e5c4-b57f-4ea4-b996-25d8c6009908",
            "d2c64b5a-850d-4ca3-a6ef-26051c2be98c",
            904,
            [
                'metadata' => "{\"key\":\"value\"}",
                'description' => "zS51rJLdw2n2tQfnXr078yWrpzKRIJrBD5D7CpKje",
                'request_id' => "21f96217-c247-4dae-b500-67b3bead0d81"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
