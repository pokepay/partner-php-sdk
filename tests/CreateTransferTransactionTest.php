<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTransferTransaction extends TestCase
{
    public function testCreateTransferTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "a118da3c-2d18-4bc8-ae9f-982890da19bc",
            "41e8918a-8303-41ba-8924-8c66f8401693",
            "3e0970ac-1ee4-4e46-beda-0fd1240bb7b6",
            2771.0
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "a118da3c-2d18-4bc8-ae9f-982890da19bc",
            "41e8918a-8303-41ba-8924-8c66f8401693",
            "3e0970ac-1ee4-4e46-beda-0fd1240bb7b6",
            2771.0,
            [
                'request_id' => "8bb8fb88-136d-488e-967c-ddb08b83c64a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "a118da3c-2d18-4bc8-ae9f-982890da19bc",
            "41e8918a-8303-41ba-8924-8c66f8401693",
            "3e0970ac-1ee4-4e46-beda-0fd1240bb7b6",
            2771.0,
            [
                'description' => "RV9WDu3IRtQKFEsJU8jpLIbXdDMWnjeozlwTqbP90o6aS7UdYw1hm3NDykhWwEKCFgbJkB6E8r5Xq6e1l9FHERhtLEiWDDOy0bzoJodu2iVi8iPxxoqnsKjO9cWFmJUcqOGxKcDvgoDmJ5NzEBqCjJKBopKaQ63yeL3zL4ByO7gZUBXDtFnwoP8Ss",
                'request_id' => "60f5c0ea-6aba-4791-8275-f7c8e844160c"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "a118da3c-2d18-4bc8-ae9f-982890da19bc",
            "41e8918a-8303-41ba-8924-8c66f8401693",
            "3e0970ac-1ee4-4e46-beda-0fd1240bb7b6",
            2771.0,
            [
                'metadata' => "{\"key\":\"value\"}",
                'description' => "hn1QiSZjhA0THZqYmllGe0HdQdqvhNHlW4CaCjiwASChzMjuScK906YHs1QjBK22HODldTUgLFIdqpm1jLY0l5r9Xbs3u9go6VoPsBiweRpBjBkToVaaqxeVoq53YLgbGUQgXk2EP82Q1s0Lwx7nkH1IULt8mL",
                'request_id' => "d020021f-2d7f-4918-b86e-4f8cb56e8d9e"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
