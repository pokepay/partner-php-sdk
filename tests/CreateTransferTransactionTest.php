<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateTransferTransaction extends TestCase
{
    public function testCreateTransferTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "16a0c0b8-491f-4696-a9aa-c03e65ca6846",
            "40058244-f77c-4a4b-998d-af33debf8b64",
            "aa46134f-6e74-452d-b0a6-cc607957833d",
            5002.0
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "16a0c0b8-491f-4696-a9aa-c03e65ca6846",
            "40058244-f77c-4a4b-998d-af33debf8b64",
            "aa46134f-6e74-452d-b0a6-cc607957833d",
            5002.0,
            [
                'request_id' => "bcd6b249-a08e-4c4b-b1ea-7f30f3e657e1"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "16a0c0b8-491f-4696-a9aa-c03e65ca6846",
            "40058244-f77c-4a4b-998d-af33debf8b64",
            "aa46134f-6e74-452d-b0a6-cc607957833d",
            5002.0,
            [
                'description' => "tj5IE8OtyLejHxzmskBv5sCGJVI5vigrnBOvsvNbTMAapoK9cesWNuBTobNIUTM2MqFf1wXtcs0hGfv7Mj342OhHjs52XI9OKxIYAe1odvgMkIbgg9tQV2tX5VlEtOvgXAi1JoyvlinmF8qXh1StBlo1wt46B",
                'request_id' => "7c957c26-5bf2-4999-9ab3-c1ddd76f6f3c"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateTransferTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\CreateTransferTransaction(
            "16a0c0b8-491f-4696-a9aa-c03e65ca6846",
            "40058244-f77c-4a4b-998d-af33debf8b64",
            "aa46134f-6e74-452d-b0a6-cc607957833d",
            5002.0,
            [
                'metadata' => "{\"key\":\"value\"}",
                'description' => "tmDW6hhlQ60VUv8fOvf2GQHunE5twUvAcxT1hjIB3fppTw7PI6djkQm8QO1knSl3QgsavXpLvUzXwfBc2NAmqBiiUjxGuutIttifWQdg1mtC4VYuGN7COPHcRjPzJyNNlPvzxg",
                'request_id' => "4b9b6212-cb4e-4bc2-811b-75f84c143998"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
