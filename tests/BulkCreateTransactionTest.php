<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class BulkCreateTransaction extends TestCase
{
    public function testBulkCreateTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\BulkCreateTransaction(
            "eP1Vs1el3tVDmtz0qcHqLIsXtLIzc5",
            "p3W",
            "nRoU2x23XKfAMBShU6I6qbRRo0KsKQjbIFpD"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testBulkCreateTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\BulkCreateTransaction(
            "eP1Vs1el3tVDmtz0qcHqLIsXtLIzc5",
            "p3W",
            "nRoU2x23XKfAMBShU6I6qbRRo0KsKQjbIFpD",
            [
                'private_money_id' => "6dc01260-2ccc-4e5f-a0d9-d0e2fd3feccd"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testBulkCreateTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\BulkCreateTransaction(
            "eP1Vs1el3tVDmtz0qcHqLIsXtLIzc5",
            "p3W",
            "nRoU2x23XKfAMBShU6I6qbRRo0KsKQjbIFpD",
            [
                'description' => "Mvlh9JCT1xGcQLRIyKzcfWhCzi1Z89pSvPCqCpyLyZq50fssjoNHBAUn0qZz",
                'private_money_id' => "98ec2843-92d5-4a9e-bb7d-8e8096d87421"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
