<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class BulkCreateTransaction extends TestCase
{
    public function testBulkCreateTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\BulkCreateTransaction(
            "opqI6bCrDgQTiBz8hople",
            "Wuv10dzqD",
            "mxXKufPIjjJpzSXKPSRMVYMVxniANdM0yy6s"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testBulkCreateTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\BulkCreateTransaction(
            "opqI6bCrDgQTiBz8hople",
            "Wuv10dzqD",
            "mxXKufPIjjJpzSXKPSRMVYMVxniANdM0yy6s",
            [
                'private_money_id' => "6f99d372-eb1f-4c52-bc15-d67bf2975a97"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testBulkCreateTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\BulkCreateTransaction(
            "opqI6bCrDgQTiBz8hople",
            "Wuv10dzqD",
            "mxXKufPIjjJpzSXKPSRMVYMVxniANdM0yy6s",
            [
                'description' => "NC9bYJUFWp4SJDd9Vw0ghvUwHY4GPMgqa4p3NBV6jnDEmNinmBAkCQlWqd4VgtaT7nx9nCCSGOYqsqY3PQB7j8S1LcJ",
                'private_money_id' => "66371e9e-b8cd-47b9-bbdd-88b9d568deac"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
