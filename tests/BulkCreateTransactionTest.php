<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class BulkCreateTransaction extends TestCase
{
    public function testBulkCreateTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\BulkCreateTransaction(
            "3IQKQQHb6fikVg8U3XBig",
            "3jy",
            "a01cL7edhmrVi5NIsblUeDquiQL8YRreNoLA"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testBulkCreateTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\BulkCreateTransaction(
            "3IQKQQHb6fikVg8U3XBig",
            "3jy",
            "a01cL7edhmrVi5NIsblUeDquiQL8YRreNoLA",
            [
                'private_money_id' => "3f9c8b57-5a04-4720-8dca-b43bfd63efab"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testBulkCreateTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\BulkCreateTransaction(
            "3IQKQQHb6fikVg8U3XBig",
            "3jy",
            "a01cL7edhmrVi5NIsblUeDquiQL8YRreNoLA",
            [
                'description' => "ywYSICtYcbHl2ktF16gpa54attROZcBbejZS9wdnnNKINI7vj8qEDPsdJ8JkL6K4fbUtzmymsdzvhUXmrc210VozYCz4wR9Gfv1oo",
                'private_money_id' => "3f9435bc-90a5-4fc8-8d63-5caf42ee6cf1"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
