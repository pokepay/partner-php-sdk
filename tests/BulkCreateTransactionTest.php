<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class BulkCreateTransaction extends TestCase
{
    public function testBulkCreateTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\BulkCreateTransaction(
            "bCrDgQTiBz8hopleWuv10dz",
            "Dm",
            "xXKufPIjjJpzSXKPSRMVYMVxniANdM0yy6sr"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testBulkCreateTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\BulkCreateTransaction(
            "bCrDgQTiBz8hopleWuv10dz",
            "Dm",
            "xXKufPIjjJpzSXKPSRMVYMVxniANdM0yy6sr",
            [
                'private_money_id' => "da75eb1f-bc52-423c-957b-5a974c72e05a"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testBulkCreateTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\BulkCreateTransaction(
            "bCrDgQTiBz8hopleWuv10dz",
            "Dm",
            "xXKufPIjjJpzSXKPSRMVYMVxniANdM0yy6sr",
            [
                'description' => "C9bYJUFWp4SJDd9Vw0ghvUwHY4GPMgqa4p3NBV6jnDEmNinmBAkCQlWqd4VgtaT7nx9nCCSGOYqsqY3",
                'private_money_id' => "a5258802-a1a5-41a5-84d0-40d1007639c2"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
