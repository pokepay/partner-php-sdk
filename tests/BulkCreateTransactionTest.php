<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class BulkCreateTransaction extends TestCase
{
    public function testBulkCreateTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\BulkCreateTransaction(
            "9OiO5HzbUqYATbbhamDlnzUnNKs",
            "rC",
            "isMnF2ITi5oylXgSytgaMmkMR5DPlgYGqB38"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testBulkCreateTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\BulkCreateTransaction(
            "9OiO5HzbUqYATbbhamDlnzUnNKs",
            "rC",
            "isMnF2ITi5oylXgSytgaMmkMR5DPlgYGqB38",
            [
                'private_money_id' => "51ae5091-2452-4faf-90aa-6f088f8779b3"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testBulkCreateTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\BulkCreateTransaction(
            "9OiO5HzbUqYATbbhamDlnzUnNKs",
            "rC",
            "isMnF2ITi5oylXgSytgaMmkMR5DPlgYGqB38",
            [
                'description' => "Fi3q6x7ch1eeWNBHLMDgMPVb0ElUYqtAN2vFQAwq3kVratbkAc3T1tnkfh78yCq5HLPnSxi2xTaSRuyZQKLXahFziawr",
                'private_money_id' => "a04ff69e-d082-4301-a70d-4e7165e316ab"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
