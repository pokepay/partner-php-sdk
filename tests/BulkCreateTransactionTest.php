<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class BulkCreateTransaction extends TestCase
{
    public function testBulkCreateTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\BulkCreateTransaction(
            "joNHBAUn0qZzCUWIZlu3",
            "CPUHg3H",
            "pQOkzK7LlGZ5l2cQL9XINJ3Yd9vs5R5vReMb"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testBulkCreateTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\BulkCreateTransaction(
            "joNHBAUn0qZzCUWIZlu3",
            "CPUHg3H",
            "pQOkzK7LlGZ5l2cQL9XINJ3Yd9vs5R5vReMb",
            [
                'callback_url' => "bVX8HS4Jw"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testBulkCreateTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\BulkCreateTransaction(
            "joNHBAUn0qZzCUWIZlu3",
            "CPUHg3H",
            "pQOkzK7LlGZ5l2cQL9XINJ3Yd9vs5R5vReMb",
            [
                'private_money_id' => "b02ab713-2319-4e11-9f07-3f4b303addf6",
                'callback_url' => "fQ"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testBulkCreateTransaction3()
    {
        $client = $this->newClient();
        $request = new Request\BulkCreateTransaction(
            "joNHBAUn0qZzCUWIZlu3",
            "CPUHg3H",
            "pQOkzK7LlGZ5l2cQL9XINJ3Yd9vs5R5vReMb",
            [
                'description' => "BXbw",
                'private_money_id' => "aae97d03-4ea3-49c7-bd90-b1b5fb15781f",
                'callback_url' => "fObbKUS"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
