<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class BulkCreateTransaction extends TestCase
{
    public function testBulkCreateTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\BulkCreateTransaction(
            "dg8Zu7xozJ03tKoqXhbdkHRWvlCHb",
            "6U",
            "XHHNPTxl20KuFZHJqVvmIH18Mg5mKbxLvTVa"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testBulkCreateTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\BulkCreateTransaction(
            "dg8Zu7xozJ03tKoqXhbdkHRWvlCHb",
            "6U",
            "XHHNPTxl20KuFZHJqVvmIH18Mg5mKbxLvTVa",
            [
                'private_money_id' => "cf3f01cd-d4a3-45d4-8ad7-c82ab108f5c0"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testBulkCreateTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\BulkCreateTransaction(
            "dg8Zu7xozJ03tKoqXhbdkHRWvlCHb",
            "6U",
            "XHHNPTxl20KuFZHJqVvmIH18Mg5mKbxLvTVa",
            [
                'description' => "75BSJGVQhx22CmtQuFDmF70gBR0Izk9ATcevIEPcIYP68q0C3u9ElTYSSSia",
                'private_money_id' => "8f893e60-62cd-4025-9a49-ba46a8f1ed6d"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
