<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class ListOrganizations extends TestCase
{
    public function testListOrganizations0()
    {
        $client = $this->newClient();
        $request = new Request\ListOrganizations(
            "fb66ff47-57a3-40a1-9961-20f013711956"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListOrganizations1()
    {
        $client = $this->newClient();
        $request = new Request\ListOrganizations(
            "fb66ff47-57a3-40a1-9961-20f013711956",
            [
                'code' => "yu0AtoOYT3"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListOrganizations2()
    {
        $client = $this->newClient();
        $request = new Request\ListOrganizations(
            "fb66ff47-57a3-40a1-9961-20f013711956",
            [
                'name' => "8xXDG",
                'code' => "31wijg"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListOrganizations3()
    {
        $client = $this->newClient();
        $request = new Request\ListOrganizations(
            "fb66ff47-57a3-40a1-9961-20f013711956",
            [
                'per_page' => 7926,
                'name' => "WSuuP7",
                'code' => "XI"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListOrganizations4()
    {
        $client = $this->newClient();
        $request = new Request\ListOrganizations(
            "fb66ff47-57a3-40a1-9961-20f013711956",
            [
                'page' => 9105,
                'per_page' => 6871,
                'name' => "zNjNiLWADY",
                'code' => "WxDRpy"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
