<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class ListOrganizations extends TestCase
{
    public function testListOrganizations0()
    {
        $client = $this->newClient();
        $request = new Request\ListOrganizations(
            "dbd84a67-5b8f-4b5d-a5eb-9a7ed9d5a358"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListOrganizations1()
    {
        $client = $this->newClient();
        $request = new Request\ListOrganizations(
            "dbd84a67-5b8f-4b5d-a5eb-9a7ed9d5a358",
            [
                'code' => "v8"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListOrganizations2()
    {
        $client = $this->newClient();
        $request = new Request\ListOrganizations(
            "dbd84a67-5b8f-4b5d-a5eb-9a7ed9d5a358",
            [
                'name' => "dvD0ApeDN",
                'code' => "XLZhDHm"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListOrganizations3()
    {
        $client = $this->newClient();
        $request = new Request\ListOrganizations(
            "dbd84a67-5b8f-4b5d-a5eb-9a7ed9d5a358",
            [
                'per_page' => 678,
                'name' => "o",
                'code' => "Pl8jvZE0k"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListOrganizations4()
    {
        $client = $this->newClient();
        $request = new Request\ListOrganizations(
            "dbd84a67-5b8f-4b5d-a5eb-9a7ed9d5a358",
            [
                'page' => 5102,
                'per_page' => 9183,
                'name' => "WyBRnvt",
                'code' => "RhoA"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
