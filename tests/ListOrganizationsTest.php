<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class ListOrganizations extends TestCase
{
    public function testListOrganizations0()
    {
        $client = $this->newClient();
        $request = new Request\ListOrganizations(
            "e1599cce-b9e4-4591-9897-41a2f8e5d1df"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListOrganizations1()
    {
        $client = $this->newClient();
        $request = new Request\ListOrganizations(
            "e1599cce-b9e4-4591-9897-41a2f8e5d1df",
            [
                'code' => "e1s"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListOrganizations2()
    {
        $client = $this->newClient();
        $request = new Request\ListOrganizations(
            "e1599cce-b9e4-4591-9897-41a2f8e5d1df",
            [
                'name' => "jLSVztCspd",
                'code' => "pKcD"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListOrganizations3()
    {
        $client = $this->newClient();
        $request = new Request\ListOrganizations(
            "e1599cce-b9e4-4591-9897-41a2f8e5d1df",
            [
                'per_page' => 2262,
                'name' => "5LATApzQ2",
                'code' => "dQG1"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListOrganizations4()
    {
        $client = $this->newClient();
        $request = new Request\ListOrganizations(
            "e1599cce-b9e4-4591-9897-41a2f8e5d1df",
            [
                'page' => 3197,
                'per_page' => 8929,
                'name' => "XtK0",
                'code' => "fX1fzm"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
