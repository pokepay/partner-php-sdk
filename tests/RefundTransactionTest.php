<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class RefundTransaction extends TestCase
{
    public function testRefundTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\RefundTransaction(
            "3bda7e3f-84de-4a37-9113-71d524ecefeb"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testRefundTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\RefundTransaction(
            "3bda7e3f-84de-4a37-9113-71d524ecefeb",
            [
                'returning_point_expires_at' => "2023-01-24T05:27:51.000000+09:00"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testRefundTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\RefundTransaction(
            "3bda7e3f-84de-4a37-9113-71d524ecefeb",
            [
                'description' => "FKvKYapnFSQVr1jopTD3ZqUVbiTpgxqPmYiBhyNGmNf2APWLCYreiAKUUX9Kw6DsRuIDDnBcz3n7s3gX0z9hPU8AtGYj5jCX5riKB0Ezot6OoldeqMznB9TAShdCAFf2H1rXP4h2dEgz8AqtmZ7lwkWM",
                'returning_point_expires_at' => "2022-04-16T07:05:34.000000+09:00"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
