<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class RefundTransaction extends TestCase
{
    public function testRefundTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\RefundTransaction(
            "9843cf57-b113-4188-956f-d0c5325345f0"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testRefundTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\RefundTransaction(
            "9843cf57-b113-4188-956f-d0c5325345f0",
            [
                'returning_point_expires_at' => "2021-07-16T11:08:04.000000+09:00"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testRefundTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\RefundTransaction(
            "9843cf57-b113-4188-956f-d0c5325345f0",
            [
                'description' => "Rj5wQpddLaw8WK6lt6FCuPHmlTzhcnw65iYKfWX4lUVIidt17tv9NOkPujU6IzAiivYafUtdR8s2",
                'returning_point_expires_at' => "2022-05-29T02:58:09.000000+09:00"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
