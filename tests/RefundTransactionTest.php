<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class RefundTransaction extends TestCase
{
    public function testRefundTransaction0()
    {
        $client = $this->newClient();
        $request = new Request\RefundTransaction(
            "868c4e87-fd30-4c1c-b2c6-9851399851d4"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testRefundTransaction1()
    {
        $client = $this->newClient();
        $request = new Request\RefundTransaction(
            "868c4e87-fd30-4c1c-b2c6-9851399851d4",
            [
                'returning_point_expires_at' => "2023-10-21T03:34:57.000000+09:00"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testRefundTransaction2()
    {
        $client = $this->newClient();
        $request = new Request\RefundTransaction(
            "868c4e87-fd30-4c1c-b2c6-9851399851d4",
            [
                'description' => "vTjBaAs9gqNl7eVJnOyvLU8XrC8pQpZhssVJuHQPptjeGZrRQKQzyRrv0XSAWoRK4yENKtx35UD3luawgqe49mjRVMws6Ob2lKUuD7mZn9W33I0d1BW2wOmUGlBp4l8BxiWm730QhLnVw4w2CA45TcIbENUd2WVHJaDl1DCQTw7UFsvL9Vvc5Q",
                'returning_point_expires_at' => "2023-05-11T19:33:00.000000+09:00"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
