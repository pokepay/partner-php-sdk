<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class WebhookTests extends TestCase
{
    public function test0()
    {
        $client = $this->newClient();
        $list = $client->send(new Request\ListWebhooks());
        foreach ($list->rows as &$row) {
            $client->send(new Request\DeleteWebhook(
                $row->id,
            ));
        }
        $webhook1 = $client->send(new Request\CreateWebhook(
            "bulk_shops",
            "http://localhost/bulk_shops",
        ));
        $this->assertEquals("coilinc", $webhook1->organizationCode);
        $this->assertEquals("bulk_shops", $webhook1->task);
        $this->assertEquals("http://localhost/bulk_shops", $webhook1->url);
        $this->assertEquals(TRUE, $webhook1->isActive);
        $this->assertEquals("application/json", $webhook1->contentType);
        $webhook2 = $client->send(new Request\CreateWebhook(
            "process_user_stats_operation",
            "http://localhost/process_user_stats_operation",
        ));
        $this->assertEquals("coilinc", $webhook2->organizationCode);
        $this->assertEquals("process_user_stats_operation", $webhook2->task);
        $this->assertEquals("http://localhost/process_user_stats_operation", $webhook2->url);
        $this->assertEquals(TRUE, $webhook2->isActive);
        $this->assertEquals("application/json", $webhook2->contentType);
        $list2 = $client->send(new Request\ListWebhooks());
        $this->assertEquals(2, $list2->count);
        $this->assertEquals($webhook2->id, $list2->rows[0]->id);
        $this->assertEquals($webhook1->id, $list2->rows[1]->id);
        $updateResponse = $client->send(new Request\UpdateWebhook(
            $webhook1->id,
            [
                "is_active" => FALSE,
            ]
        ));
        $this->assertEquals($webhook1->id, $updateResponse->id);
        $this->assertEquals($webhook1->organizationCode, $updateResponse->organizationCode);
        $this->assertEquals($webhook1->task, $updateResponse->task);
        $this->assertEquals($webhook1->url, $updateResponse->url);
        $this->assertEquals($webhook1->contentType, $updateResponse->contentType);
        $this->assertEquals(FALSE, $updateResponse->isActive);
    }
}
