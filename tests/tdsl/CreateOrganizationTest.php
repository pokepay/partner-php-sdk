<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateOrganizationTest extends TestCase
{
    public function testCreateOrganization()
    {
        $client = $this->newClient();
        $code = "test-org" . $this->randomString(6);
        $name = "テスト組織" . $this->randomString(4);
        $privateMoneyIds = ["4b138a4c-8944-4f98-a5c4-96d3c1c415eb"];
        $issuerAdminUserEmail = $this->randomString(6) . "@pokepay-tests.jp";
        $memberAdminUserEmail = $this->randomString(6) . "@pokepay-tests.jp";
        $response = $client->send(new Request\CreateOrganization(
            $code,
            $name,
            $privateMoneyIds,
            $issuerAdminUserEmail,
            $memberAdminUserEmail,
        ));
        $this->assertEquals($code, $response->code);
        $this->assertEquals($name, $response->name);
    }
    public function testCreateOrganizationWithMetadata()
    {
        $client = $this->newClient();
        $code = "test-org" . $this->randomString(6);
        $name = "テスト組織" . $this->randomString(4);
        $privateMoneyIds = ["4b138a4c-8944-4f98-a5c4-96d3c1c415eb"];
        $issuerAdminUserEmail = $this->randomString(6) . "@pokepay-tests.jp";
        $memberAdminUserEmail = $this->randomString(6) . "@pokepay-tests.jp";
        $bankCode = "1234";
        $bankName = $this->randomString(4) . "銀行";
        $bankBranchCode = "123";
        $bankBranchName = $this->randomString(4) . "支店";
        $bankAccountType = "saving";
        $bankAccount = "1234567";
        $bankAccountHolderName = "ﾌｸｻﾞﾜﾕｷﾁ";
        $contactName = "佐藤清";
        $response = $client->send(new Request\CreateOrganization(
            $code,
            $name,
            $privateMoneyIds,
            $issuerAdminUserEmail,
            $memberAdminUserEmail,
            [
                "bank_code" => $bankCode,
                "bank_name" => $bankName,
                "bank_branch_code" => $bankBranchCode,
                "bank_branch_name" => $bankBranchName,
                "bank_account_type" => $bankAccountType,
                "bank_account" => $bankAccount,
                "bank_account_holder_name" => $bankAccountHolderName,
                "contact_name" => $contactName,
            ]
        ));
        $this->assertEquals($code, $response->code);
        $this->assertEquals($name, $response->name);
    }
}
